Using selector: EpollSelector
Loaded module: aries_cloudagent.protocols.out_of_band
Loaded module: aries_cloudagent.protocols.discovery
Loaded module: aries_cloudagent.protocols.basicmessage
Loaded module: aries_cloudagent.protocols.trustping
Loaded module: aries_cloudagent.protocols.connections
Loaded module: aries_cloudagent.protocols.problem_report
Loaded module: aries_cloudagent.protocols.coordinate_mediation
Loaded module: aries_cloudagent.protocols.didexchange
Loaded module: aries_cloudagent.protocols.present_proof
Loaded module: aries_cloudagent.protocols.issue_credential
Loaded module: aries_cloudagent.protocols.routing
Loaded module: aries_cloudagent.protocols.actionmenu
Loaded module: aries_cloudagent.protocols.introduction
Loaded module: aries_cloudagent.holder
Loaded module: aries_cloudagent.ledger
Loaded module: aries_cloudagent.messaging.credential_definitions
Loaded module: aries_cloudagent.messaging.schemas
Loaded module: aries_cloudagent.revocation
Loaded module: aries_cloudagent.wallet
Reading ledger genesis transactions from: /home/indy/genesis-txns
Create profile manager: indy
Checking input postgres storage_config and storage_creds arguments
Initializing postgres wallet
Success, loaded postgres wallet storage
open_wallet: >>> config: '{"id": "Medic", "freshness_time": false, "storage_type": "postgres_storage", "storage_config": {"url": "medic-wallet-db:5432", "wallet_scheme": "MultiWalletSingleTable"}}', credentials: '{"key": "MyMedicalWalletKey", "key_derivation_method": "ARGON2I_MOD", "storage_credentials": {"account": "postgres", "password": "dbpass", "admin_account": "postgres", "admin_password": "dbpass"}}'
open_wallet: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd9c8bff1d8>
do_call: >>> name: indy_open_wallet, args: (c_char_p(140573310394448), c_char_p(140573352732328), <CFunctionType object at 0x7fd9c8bff1d8>)
_load_cdll: >>>
_load_cdll: Detected OS name: linux
_load_cdll: Resolved libindy name is: libindy.so
_load_cdll: <<< res: <CDLL 'libindy.so', handle 559459df87f0 at 0x7fd9c8bfdc50>
set_logger: >>>
do_call_sync: >>> name: indy_set_logger, args: (None, None, <CFunctionType object at 0x7fd9c8bff2a0>, None)
do_call_sync: <<< 0
set_logger: <<<
do_call: Function indy_open_wallet returned err: 0
do_call: <<< <Future pending>
	src/postgres_storage.rs:897 | wallet_db_name: "wallets"
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT value FROM metadata WHERE wallet_id = $1
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: ["Medic"]
_get_error_details: >>>
_get_error_details: <<< error_details: {'backtrace': '', 'message': 'Error: Wallet not found\n  Caused by: Plugin returned error\n'}
_indy_callback: >>> command_handle: 0, err , args: (0,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 0, err , args: (0,)
_indy_loop_callback: Function returned error 
_indy_loop_callback <<<
create_wallet: >>> config: '{"id": "Medic", "freshness_time": false, "storage_type": "postgres_storage", "storage_config": {"url": "medic-wallet-db:5432", "wallet_scheme": "MultiWalletSingleTable"}}', credentials: '{"key": "MyMedicalWalletKey", "key_derivation_method": "ARGON2I_MOD", "storage_credentials": {"account": "postgres", "password": "dbpass", "admin_account": "postgres", "admin_password": "dbpass"}}'
create_wallet: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd9c8bff4f8>
do_call: >>> name: indy_create_wallet, args: (c_char_p(140573310394864), c_char_p(140573352732096), <CFunctionType object at 0x7fd9c8bff4f8>)
do_call: Function indy_create_wallet returned err: 0
do_call: <<< <Future pending>
	src/postgres_storage.rs:867 | wallet_db_name: "wallets"
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: INSERT INTO metadata(wallet_id, value) VALUES($1, $2)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: ["Medic", [101, 121, 74, 114, 90, 88, 108, 122, 73, 106, 112, 98, 77, 106, 65, 121, 76, 68, 69, 120, 76, 68, 69, 122, 77, 83, 119, 52, 77, 105, 119, 120, 78, 84, 73, 115, 77, 106, 81, 122, 76, 68, 73, 48, 77, 121, 119, 122, 77, 67, 119, 51, 78, 105, 119, 121, 77, 121, 119, 120, 78, 106, 89, 115, 77, 106, 85, 115, 78, 68, 99, 115, 77, 84, 107, 121, 76, 68, 89, 49, 76, 68, 73, 121, 77, 105, 119, 53, 78, 83, 119, 120, 79, 68, 85, 115, 77, 106, 77, 51, 76, 68, 73, 122, 79, 67, 119, 121, 77, 84, 89, 115, 77, 106, 107, 115, 77, 106, 65, 115, 79, 68, 73, 115, 77, 84, 85, 122, 76, 68, 73, 115, 78, 84, 99, 115, 78, 106, 77, 115, 77, 122, 73, 115, 77, 84, 65, 49, 76, 68, 69, 48, 77, 67, 119, 48, 78, 67, 119, 121, 77, 68, 73, 115, 77, 84, 103, 50, 76, 68, 107, 50, 76, 68, 69, 119, 79, 83, 119, 121, 77, 122, 81, 115, 78, 121, 119, 121, 77, 83, 119, 50, 78, 105, 119, 120, 78, 122, 65, 115, 77, 84, 85, 53, 76, 68, 69, 120, 77, 121, 119, 120, 77, 122, 103, 115, 77, 84, 85, 49, 76, 68, 69, 51, 77, 67, 119, 120, 79, 83, 119, 120, 78, 122, 103, 115, 77, 84, 73, 49, 76, 68, 69, 119, 78, 121, 119, 120, 79, 68, 107, 115, 77, 84, 103, 52, 76, 68, 73, 121, 77, 121, 119, 120, 78, 68, 85, 115, 78, 68, 85, 115, 78, 105, 119, 121, 77, 122, 107, 115, 78, 68, 99, 115, 77, 106, 65, 115, 77, 106, 77, 122, 76, 68, 69, 50, 77, 121, 119, 53, 78, 67, 119, 121, 78, 84, 65, 115, 77, 84, 73, 119, 76, 68, 69, 52, 77, 105, 119, 48, 79, 83, 119, 121, 78, 68, 103, 115, 78, 106, 73, 115, 77, 84, 99, 121, 76, 68, 89, 48, 76, 68, 69, 122, 77, 83, 119, 122, 79, 67, 119, 121, 77, 84, 73, 115, 77, 106, 85, 121, 76, 68, 73, 122, 76, 68, 69, 51, 77, 121, 119, 120, 78, 68, 81, 115, 77, 84, 99, 49, 76, 68, 69, 51, 77, 83, 119, 120, 78, 68, 89, 115, 77, 106, 73, 48, 76, 68, 69, 51, 77, 121, 119, 121, 77, 84, 77, 115, 78, 122, 77, 115, 78, 68, 107, 115, 77, 84, 89, 48, 76, 68, 69, 121, 78, 83, 119, 51, 78, 105, 119, 120, 79, 84, 85, 115, 77, 84, 99, 51, 76, 68, 107, 115, 77, 84, 107, 52, 76, 68, 73, 121, 78, 105, 119, 121, 78, 68, 89, 115, 78, 106, 73, 115, 77, 84, 81, 49, 76, 68, 73, 120, 78, 83, 119, 121, 77, 121, 119, 52, 79, 67, 119, 53, 78, 83, 119, 120, 79, 68, 99, 115, 77, 106, 69, 121, 76, 68, 103, 121, 76, 68, 69, 121, 77, 121, 119, 120, 79, 84, 107, 115, 77, 84, 103, 121, 76, 68, 81, 119, 76, 68, 107, 119, 76, 68, 81, 50, 76, 68, 73, 48, 79, 83, 119, 121, 77, 68, 65, 115, 77, 84, 77, 53, 76, 68, 73, 53, 76, 68, 69, 48, 77, 83, 119, 120, 77, 68, 99, 115, 77, 84, 65, 122, 76, 68, 69, 120, 79, 83, 119, 121, 78, 68, 107, 115, 79, 68, 81, 115, 78, 84, 107, 115, 77, 67, 119, 120, 77, 68, 69, 115, 77, 84, 77, 53, 76, 68, 89, 121, 76, 68, 73, 119, 78, 105, 119, 120, 77, 106, 81, 115, 78, 84, 85, 115, 77, 106, 99, 115, 77, 84, 99, 120, 76, 68, 107, 53, 76, 68, 73, 119, 77, 83, 119, 120, 77, 83, 119, 121, 77, 122, 89, 115, 77, 84, 89, 119, 76, 68, 69, 122, 77, 83, 119, 49, 78, 121, 119, 120, 78, 84, 69, 115, 77, 84, 73, 51, 76, 68, 81, 49, 76, 68, 73, 121, 77, 105, 119, 51, 77, 83, 119, 48, 78, 121, 119, 120, 77, 83, 119, 121, 78, 68, 103, 115, 78, 68, 99, 115, 77, 84, 85, 121, 76, 68, 69, 48, 77, 121, 119, 120, 77, 106, 77, 115, 79, 84, 103, 115, 77, 84, 69, 115, 77, 84, 99, 119, 76, 68, 69, 48, 76, 68, 69, 49, 77, 83, 119, 120, 79, 84, 103, 115, 77, 106, 85, 115, 77, 84, 107, 48, 76, 68, 99, 53, 76, 68, 73, 48, 76, 68, 69, 120, 78, 105, 119, 48, 79, 67, 119, 121, 77, 106, 81, 115, 78, 84, 73, 115, 77, 84, 103, 119, 76, 68, 69, 52, 78, 83, 119, 120, 79, 68, 73, 115, 77, 84, 77, 122, 76, 68, 69, 52, 79, 67, 119, 50, 77, 67, 119, 121, 78, 84, 65, 115, 77, 122, 85, 115, 77, 84, 85, 120, 76, 68, 73, 48, 78, 105, 119, 120, 78, 84, 103, 115, 79, 84, 73, 115, 77, 106, 77, 52, 76, 68, 69, 52, 77, 83, 119, 120, 78, 106, 89, 115, 77, 84, 81, 48, 76, 68, 69, 119, 79, 83, 119, 50, 76, 68, 99, 122, 76, 68, 73, 122, 79, 67, 119, 121, 78, 68, 85, 115, 78, 122, 103, 115, 78, 84, 103, 115, 77, 84, 99, 122, 76, 68, 73, 122, 78, 83, 119, 53, 79, 83, 119, 53, 76, 68, 69, 122, 78, 83, 119, 120, 78, 105, 119, 121, 77, 106, 81, 115, 77, 106, 65, 115, 77, 84, 69, 115, 78, 84, 99, 115, 78, 68, 65, 115, 77, 106, 69, 51, 76, 68, 69, 121, 77, 83, 119, 120, 79, 84, 85, 115, 79, 68, 81, 115, 77, 84, 81, 115, 77, 84, 81, 52, 76, 68, 69, 52, 78, 67, 119, 53, 79, 83, 119, 122, 78, 67, 119, 120, 79, 68, 99, 115, 77, 84, 85, 120, 76, 68, 77, 122, 76, 68, 69, 52, 78, 121, 119, 48, 77, 67, 119, 121, 77, 84, 89, 115, 77, 106, 81, 122, 76, 68, 69, 50, 78, 105, 119, 121, 79, 67, 119, 120, 78, 122, 65, 115, 77, 84, 107, 122, 76, 68, 69, 49, 78, 105, 119, 120, 78, 84, 81, 115, 78, 68, 73, 115, 77, 106, 77, 120, 76, 68, 103, 49, 76, 68, 81, 122, 76, 68, 81, 115, 78, 68, 65, 115, 79, 68, 103, 115, 78, 106, 73, 115, 77, 122, 69, 115, 77, 106, 77, 53, 76, 68, 73, 120, 76, 68, 73, 120, 79, 67, 119, 120, 78, 68, 77, 115, 77, 106, 77, 119, 76, 68, 89, 121, 76, 68, 69, 52, 77, 121, 119, 120, 77, 122, 89, 115, 77, 106, 65, 115, 78, 106, 69, 115, 77, 84, 69, 50, 76, 68, 85, 119, 76, 68, 81, 53, 76, 68, 73, 115, 77, 106, 85, 122, 76, 68, 69, 53, 78, 121, 119, 53, 79, 67, 119, 121, 77, 84, 81, 115, 77, 84, 73, 49, 76, 68, 69, 121, 77, 121, 119, 121, 78, 84, 73, 115, 77, 106, 69, 50, 76, 68, 73, 50, 76, 68, 69, 50, 76, 68, 69, 53, 79, 83, 119, 120, 77, 122, 65, 115, 77, 106, 73, 49, 76, 68, 69, 50, 77, 105, 119, 120, 77, 106, 65, 115, 78, 122, 73, 115, 77, 106, 65, 119, 76, 68, 69, 120, 76, 68, 73, 119, 78, 105, 119, 53, 78, 105, 119, 121, 77, 106, 81, 115, 77, 106, 85, 121, 76, 68, 73, 120, 78, 105, 119, 53, 79, 83, 119, 51, 78, 83, 119, 120, 79, 68, 100, 100, 76, 67, 74, 116, 89, 88, 78, 48, 90, 88, 74, 102, 97, 50, 86, 53, 88, 51, 78, 104, 98, 72, 81, 105, 79, 108, 115, 120, 77, 83, 119, 122, 78, 83, 119, 121, 77, 84, 73, 115, 77, 84, 89, 120, 76, 68, 73, 119, 78, 83, 119, 120, 77, 106, 73, 115, 78, 106, 103, 115, 78, 106, 77, 115, 78, 122, 99, 115, 77, 84, 99, 115, 77, 106, 85, 121, 76, 68, 107, 48, 76, 68, 73, 120, 77, 105, 119, 120, 77, 68, 69, 115, 78, 84, 99, 115, 77, 84, 89, 48, 76, 68, 69, 122, 77, 105, 119, 120, 79, 84, 107, 115, 77, 84, 85, 49, 76, 68, 69, 120, 77, 105, 119, 53, 77, 83, 119, 119, 76, 68, 73, 120, 76, 68, 85, 119, 76, 68, 77, 52, 76, 68, 69, 120, 78, 105, 119, 120, 78, 84, 85, 115, 77, 106, 73, 53, 76, 68, 73, 48, 77, 105, 119, 51, 78, 83, 119, 121, 78, 68, 69, 115, 77, 49, 49, 57]]
_indy_callback: >>> command_handle: 1, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 1, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
create_wallet: <<<
open_wallet: >>> config: '{"id": "Medic", "freshness_time": false, "storage_type": "postgres_storage", "storage_config": {"url": "medic-wallet-db:5432", "wallet_scheme": "MultiWalletSingleTable"}}', credentials: '{"key": "MyMedicalWalletKey", "key_derivation_method": "ARGON2I_MOD", "storage_credentials": {"account": "postgres", "password": "dbpass", "admin_account": "postgres", "admin_password": "dbpass"}}'
do_call: >>> name: indy_open_wallet, args: (c_char_p(140573310394864), c_char_p(140573352732096), <CFunctionType object at 0x7fd9c8bff1d8>)
	src/postgres_storage.rs:897 | wallet_db_name: "wallets"
do_call: Function indy_open_wallet returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT value FROM metadata WHERE wallet_id = $1
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: ["Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT value FROM metadata WHERE wallet_id = $1
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: ["Medic"]
_indy_callback: >>> command_handle: 2, err , args: (3,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 2, err , args: (3,)
_indy_loop_callback: Function returned 3
_indy_loop_callback <<<
open_wallet: <<< res: 3
Creating master secret...
prover_create_master_secret: >>> wallet_handle: 3, master_secret_name: 'Medic'
prover_create_master_secret: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd9c8bff688>
do_call: >>> name: indy_prover_create_master_secret, args: (c_int(3), c_char_p(140573352753264), <CFunctionType object at 0x7fd9c8bff688>)
do_call: Function indy_prover_create_master_secret returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[100, 113, 48, 53, 106, 66, 78, 103, 108, 69, 82, 51, 67, 111, 114, 107, 116, 119, 90, 113, 113, 68, 104, 113, 122, 47, 100, 82, 122, 119, 104, 83, 88, 52, 78, 51, 98, 69, 48, 106, 72, 115, 71, 114, 77, 98, 100, 122, 101, 97, 54, 113, 49, 114, 110, 79, 72, 72, 87, 69, 110, 103, 61, 61], [47, 100, 108, 54, 104, 47, 82, 105, 102, 83, 78, 84, 105, 75, 105, 111, 113, 68, 107, 119, 87, 51, 47, 65, 53, 69, 74, 72, 86, 50, 71, 114, 85, 79, 81, 87, 55, 111, 112, 98, 69, 104, 57, 72], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: INSERT INTO items (type, name, value, key, wallet_id) VALUES ($1, $2, $3, $4, $5) RETURNING id
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[100, 113, 48, 53, 106, 66, 78, 103, 108, 69, 82, 51, 67, 111, 114, 107, 116, 119, 90, 113, 113, 68, 104, 113, 122, 47, 100, 82, 122, 119, 104, 83, 88, 52, 78, 51, 98, 69, 48, 106, 72, 115, 71, 114, 77, 98, 100, 122, 101, 97, 54, 113, 49, 114, 110, 79, 72, 72, 87, 69, 110, 103, 61, 61], [47, 100, 108, 54, 104, 47, 82, 105, 102, 83, 78, 84, 105, 75, 105, 111, 113, 68, 107, 119, 87, 51, 47, 65, 53, 69, 74, 72, 86, 50, 71, 114, 85, 79, 81, 87, 55, 111, 112, 98, 69, 104, 57, 72], [142, 138, 49, 11, 210, 82, 240, 89, 253, 171, 61, 251, 235, 138, 191, 24, 111, 3, 235, 217, 135, 189, 38, 150, 205, 203, 53, 167, 244, 1, 41, 138, 191, 140, 202, 35, 139, 90, 123, 39, 50, 28, 68, 17, 155, 82, 235, 77, 115, 102, 150, 135, 0, 251, 109, 36, 198, 170, 158, 180, 72, 53, 67, 50, 143, 42, 249, 134, 197, 90, 65, 34, 88, 89, 186, 243, 59, 77, 101, 150, 88, 246, 34, 125, 180, 6, 242, 133, 106, 172, 203, 155, 202, 140, 239, 161, 41, 146, 211, 199, 12, 235, 109, 211, 84, 7, 202, 205, 160, 186, 92, 8, 154, 36, 105, 78, 109, 204, 19, 243, 32, 62, 115, 8], [118, 193, 184, 95, 229, 46, 72, 45, 185, 117, 209, 216, 239, 179, 155, 78, 12, 20, 80, 36, 215, 206, 101, 65, 114, 80, 90, 30, 212, 41, 9, 19, 174, 113, 104, 72, 222, 185, 187, 126, 129, 86, 67, 84, 158, 149, 207, 216, 71, 167, 25, 218, 133, 28, 161, 58, 93, 138, 214, 48], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 3, err , args: (b'Medic',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 3, err , args: (b'Medic',)
_indy_loop_callback: Function returned b'Medic'
_indy_loop_callback <<<
prover_create_master_secret: <<< res: 'Medic'
list_my_dids_with_meta: >>> wallet_handle: 3
list_my_dids_with_meta: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd9c8bff818>
do_call: >>> name: indy_list_my_dids_with_meta, args: (c_int(3), <CFunctionType object at 0x7fd9c8bff818>)
do_call: Function indy_list_my_dids_with_meta returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 4, err , args: (b'[]',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 4, err , args: (b'[]',)
_indy_loop_callback: Function returned b'[]'
_indy_loop_callback <<<
list_my_dids_with_meta: <<< res: '[]'
Opening the pool ledger
list_pools: >>> 
list_pools: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd9c8bff9a8>
do_call: >>> name: indy_list_pools, args: (<CFunctionType object at 0x7fd9c8bff9a8>,)
do_call: Function indy_list_pools returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 5, err , args: (b'[]',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 5, err , args: (b'[]',)
_indy_loop_callback: Function returned b'[]'
_indy_loop_callback <<<
list_pools: <<< res: []
Creating pool ledger config
create_pool_ledger_config: >>> config_name: 'default', config: '{"genesis_txn": "/tmp/default_indy_genesis_transactions.txt"}'
create_pool_ledger_config: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd9c8bffc00>
do_call: >>> name: indy_create_pool_ledger_config, args: (c_char_p(140573352754304), c_char_p(140573352762832), <CFunctionType object at 0x7fd9c8bffc00>)
do_call: Function indy_create_pool_ledger_config returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 6, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 6, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
create_pool_ledger_config: <<< res: None
set_protocol_version: >>> protocol_version: 2
set_protocol_version: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd9c8bffe58>
do_call: >>> name: indy_set_protocol_version, args: (2, <CFunctionType object at 0x7fd9c8bffe58>)
do_call: Function indy_set_protocol_version returned err: 0
_indy_callback: >>> command_handle: 7, err , args: ()
do_call: <<< <Future pending>
_indy_loop_callback: >>> command_handle: 7, err , args: ()
_indy_callback: <<<
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
set_protocol_version: <<< res: None
open_pool_ledger: >>> config_name: 'default', config: '{}'
open_pool_ledger: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd9c63d4048>
do_call: >>> name: indy_open_pool_ledger, args: (c_char_p(140573352754264), c_char_p(140573352754304), <CFunctionType object at 0x7fd9c63d4048>)
do_call: Function indy_open_pool_ledger returned err: 0
do_call: <<< <Future pending>
	src/commands/pool.rs:75 | OpenAck handle 4, pool_id 4, result Ok(())
_indy_callback: >>> command_handle: 8, err , args: (4,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 8, err , args: (4,)
_indy_loop_callback: Function returned 4
_indy_loop_callback <<<
open_pool_ledger: <<< res: 4
list_my_dids_with_meta: >>> wallet_handle: 3
do_call: >>> name: indy_list_my_dids_with_meta, args: (c_int(3), <CFunctionType object at 0x7fd9c8bff818>)
do_call: Function indy_list_my_dids_with_meta returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s2`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s2 with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s2`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s2 with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s3`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s3 with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 9, err , args: (b'[]',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 9, err , args: (b'[]',)
_indy_loop_callback: Function returned b'[]'
_indy_loop_callback <<<
list_my_dids_with_meta: <<< res: '[]'
build_get_acceptance_mechanisms_request: >>> submitter_did: None, timestamp: None, version: None
build_get_acceptance_mechanisms_request: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd9c63d41d8>
do_call: >>> name: indy_build_get_acceptance_mechanisms_request, args: (None, c_long(-1), None, <CFunctionType object at 0x7fd9c63d41d8>)
do_call: Function indy_build_get_acceptance_mechanisms_request returned err: 0
	src/services/ledger/mod.rs:449 | build_get_acceptance_mechanisms_request() => Ok("{\"reqId\":1621254930475802880,\"identifier\":\"LibindyDid111111111111\",\"operation\":{\"type\":\"7\"},\"protocolVersion\":2}")
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 10, err , args: (b'{"reqId":1621254930475802880,"identifier":"LibindyDid111111111111","operation":{"type":"7"},"protocolVersion":2}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 10, err , args: (b'{"reqId":1621254930475802880,"identifier":"LibindyDid111111111111","operation":{"type":"7"},"protocolVersion":2}',)
_indy_loop_callback: Function returned b'{"reqId":1621254930475802880,"identifier":"LibindyDid111111111111","operation":{"type":"7"},"protocolVersion":2}'
_indy_loop_callback <<<
build_get_acceptance_mechanisms_request: <<< res: '{"reqId":1621254930475802880,"identifier":"LibindyDid111111111111","operation":{"type":"7"},"protocolVersion":2}'
submit_request: >>> pool_handle: 4, request_json: '{"reqId":1621254930475802880,"identifier":"LibindyDid111111111111","operation":{"type":"7"},"protocolVersion":2}'
submit_request: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd9c63d4368>
do_call: >>> name: indy_submit_request, args: (c_int(4), c_char_p(140573352720240), <CFunctionType object at 0x7fd9c63d4368>)
do_call: Function indy_submit_request returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 11, err , args: (b'{"op":"REPLY","result":{"type":"7","data":null,"identifier":"LibindyDid111111111111","reqId":1621254930475802880,"seqNo":null,"txnTime":null}}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 11, err , args: (b'{"op":"REPLY","result":{"type":"7","data":null,"identifier":"LibindyDid111111111111","reqId":1621254930475802880,"seqNo":null,"txnTime":null}}',)
_indy_loop_callback: Function returned b'{"op":"REPLY","result":{"type":"7","data":null,"identifier":"LibindyDid111111111111","reqId":1621254930475802880,"seqNo":null,"txnTime":null}}'
_indy_loop_callback <<<
submit_request: <<< res: '{"op":"REPLY","result":{"type":"7","data":null,"identifier":"LibindyDid111111111111","reqId":1621254930475802880,"seqNo":null,"txnTime":null}}'
build_get_txn_author_agreement_request: >>> submitter_did: None, data: None
build_get_txn_author_agreement_request: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd9c63d44f8>
do_call: >>> name: indy_build_get_txn_author_agreement_request, args: (None, None, <CFunctionType object at 0x7fd9c63d44f8>)
do_call: Function indy_build_get_txn_author_agreement_request returned err: 0
	src/services/ledger/mod.rs:439 | build_get_txn_author_agreement_request() => Ok("{\"reqId\":1621254930487288020,\"identifier\":\"LibindyDid111111111111\",\"operation\":{\"type\":\"6\"},\"protocolVersion\":2}")
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 12, err , args: (b'{"reqId":1621254930487288020,"identifier":"LibindyDid111111111111","operation":{"type":"6"},"protocolVersion":2}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 12, err , args: (b'{"reqId":1621254930487288020,"identifier":"LibindyDid111111111111","operation":{"type":"6"},"protocolVersion":2}',)
_indy_loop_callback: Function returned b'{"reqId":1621254930487288020,"identifier":"LibindyDid111111111111","operation":{"type":"6"},"protocolVersion":2}'
_indy_loop_callback <<<
build_get_txn_author_agreement_request: <<< res: '{"reqId":1621254930487288020,"identifier":"LibindyDid111111111111","operation":{"type":"6"},"protocolVersion":2}'
submit_request: >>> pool_handle: 4, request_json: '{"reqId":1621254930487288020,"identifier":"LibindyDid111111111111","operation":{"type":"6"},"protocolVersion":2}'
do_call: >>> name: indy_submit_request, args: (c_int(4), c_char_p(140573352720544), <CFunctionType object at 0x7fd9c63d4368>)
do_call: Function indy_submit_request returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 13, err , args: (b'{"op":"REPLY","result":{"type":"6","data":null,"identifier":"LibindyDid111111111111","reqId":1621254930487288020,"seqNo":null,"txnTime":null}}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 13, err , args: (b'{"op":"REPLY","result":{"type":"6","data":null,"identifier":"LibindyDid111111111111","reqId":1621254930487288020,"seqNo":null,"txnTime":null}}',)
_indy_loop_callback: Function returned b'{"op":"REPLY","result":{"type":"6","data":null,"identifier":"LibindyDid111111111111","reqId":1621254930487288020,"seqNo":null,"txnTime":null}}'
_indy_loop_callback <<<
submit_request: <<< res: '{"op":"REPLY","result":{"type":"6","data":null,"identifier":"LibindyDid111111111111","reqId":1621254930487288020,"seqNo":null,"txnTime":null}}'
Closing pool ledger after timeout
close_pool_ledger: >>> config_name: 4
close_pool_ledger: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd9c421b8e0>
do_call: >>> name: indy_close_pool_ledger, args: (c_int(4), <CFunctionType object at 0x7fd9c421b8e0>)
do_call: Function indy_close_pool_ledger returned err: 0
do_call: <<< <Future pending>
	src/services/pool/pool.rs:749 | Drop started
	src/services/pool/pool.rs:757 | Drop wait worker
	src/services/pool/pool.rs:760 | Drop finished
_indy_callback: >>> command_handle: 14, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 14, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_pool_ledger: <<< res: None
Incoming request: POST /connections/receive-invitation
Match info: <MatchInfo {}: <ResourceRoute [POST] <PlainResource  /connections/receive-invitation> -> <function connections_receive_invitation at 0x7fd9c433b7b8>>
Body: {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation", "@id": "bdaaa3af-7f43-4439-b64c-7c843284bb08", "recipientKeys": ["5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP"], "label": "Edinburgh Medical School", "serviceEndpoint": "http://22d18366b61a.ngrok.io"}
add_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'f56b18ea-92e1-4f6d-a094-80da3fad398d', value: '{"invitation_key": "5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP", "created_at": "2021-05-17 12:41:06.885367Z", "updated_at": "2021-05-17 12:41:06.885367Z", "their_role": "inviter", "inbound_connection_id": null, "routing_state": "none", "accept": "auto", "invitation_mode": "once", "invitation_msg_id": null, "alias": null, "error_msg": null, "their_label": "Edinburgh Medical School", "state": "invitation", "their_public_did": null}', tags_json: '{"invitation_key": "5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP"}'
add_wallet_record: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd9c421ba70>
do_call: >>> name: indy_add_wallet_record, args: (c_int(3), c_char_p(140573273867232), c_char_p(140573273196880), c_char_p(140573273187800), c_char_p(140573273511528), <CFunctionType object at 0x7fd9c421ba70>)
do_call: Function indy_add_wallet_record returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: INSERT INTO items (type, name, value, key, wallet_id) VALUES ($1, $2, $3, $4, $5) RETURNING id
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [120, 99, 101, 86, 104, 116, 110, 103, 56, 75, 112, 113, 55, 105, 55, 47, 101, 106, 66, 77, 104, 76, 90, 102, 98, 69, 80, 98, 116, 98, 69, 114, 78, 67, 114, 109, 116, 118, 104, 85, 108, 65, 71, 107, 71, 78, 105, 52, 67, 54, 116, 117, 88, 105, 74, 47, 50, 108, 116, 118, 83, 102, 74, 77, 116, 106, 72, 119, 105, 51, 72, 105, 55, 82, 112, 79, 114, 67, 69, 70, 85, 84, 72, 122, 122, 81, 61, 61], [191, 206, 176, 135, 136, 44, 23, 90, 228, 145, 182, 247, 43, 13, 92, 51, 85, 148, 91, 2, 10, 214, 143, 96, 106, 89, 147, 209, 1, 172, 193, 8, 223, 5, 112, 159, 85, 192, 211, 6, 85, 96, 24, 106, 166, 119, 185, 71, 1, 188, 173, 142, 221, 182, 41, 101, 137, 10, 52, 160, 173, 60, 188, 18, 233, 225, 84, 44, 135, 99, 203, 184, 64, 27, 106, 3, 251, 217, 235, 232, 44, 100, 88, 37, 72, 35, 96, 80, 171, 32, 49, 164, 250, 3, 145, 114, 227, 71, 136, 140, 206, 48, 161, 126, 80, 190, 16, 155, 55, 138, 90, 243, 84, 49, 159, 229, 127, 123, 216, 24, 192, 45, 17, 206, 120, 28, 240, 129, 112, 109, 240, 244, 88, 97, 22, 110, 79, 61, 13, 123, 167, 7, 86, 155, 231, 62, 26, 7, 51, 28, 219, 200, 238, 54, 188, 11, 239, 222, 144, 22, 230, 37, 154, 105, 59, 144, 29, 224, 251, 202, 246, 203, 153, 69, 86, 114, 232, 35, 117, 166, 182, 205, 210, 223, 186, 232, 172, 112, 51, 116, 188, 65, 196, 191, 220, 117, 247, 129, 69, 140, 155, 151, 246, 129, 113, 254, 192, 253, 208, 10, 39, 45, 78, 58, 211, 74, 33, 98, 90, 205, 219, 211, 180, 238, 37, 138, 51, 110, 143, 64, 89, 97, 120, 32, 33, 103, 166, 174, 196, 158, 91, 129, 233, 175, 190, 63, 167, 57, 173, 121, 18, 40, 189, 9, 76, 157, 173, 142, 71, 8, 153, 127, 65, 211, 51, 104, 203, 228, 159, 3, 42, 237, 209, 99, 154, 169, 62, 232, 239, 54, 77, 220, 169, 254, 30, 251, 144, 245, 233, 118, 203, 182, 40, 91, 78, 183, 159, 52, 238, 173, 104, 213, 208, 114, 103, 239, 145, 205, 164, 47, 72, 233, 217, 144, 45, 186, 238, 221, 12, 91, 127, 143, 18, 195, 79, 198, 98, 194, 1, 203, 188, 124, 170, 130, 154, 127, 69, 156, 56, 55, 84, 45, 102, 61, 48, 31, 80, 42, 95, 15, 101, 3, 66, 63, 45, 132, 213, 17, 125, 239, 45, 33, 5, 58, 13, 21, 24, 30, 57, 121, 255, 75, 14, 111, 121, 93, 246, 213, 150, 73, 151, 42, 182, 126, 8, 131, 167, 107, 145, 209, 143, 172, 196, 139, 252, 39, 109, 1, 130, 6, 144, 156, 36, 124, 82, 139, 59, 186, 146, 230, 38, 113, 124, 184, 103, 97, 147, 48, 254, 162, 14, 228, 113, 92, 235, 200, 54, 2, 125, 61, 151, 181, 18, 14, 72, 229, 67, 236, 243, 147, 226, 24, 78, 13, 198, 117, 129, 246, 168, 130, 188, 130, 220, 52, 193, 254, 178, 129, 154, 119, 2, 180, 117], [193, 229, 200, 231, 196, 153, 155, 12, 128, 48, 2, 236, 24, 145, 252, 252, 179, 43, 85, 107, 71, 206, 220, 160, 64, 116, 212, 163, 95, 12, 117, 227, 229, 94, 253, 251, 153, 179, 53, 125, 157, 221, 127, 160, 52, 137, 148, 153, 8, 254, 219, 224, 98, 115, 5, 80, 76, 14, 87, 250], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: INSERT INTO tags_encrypted (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s2`: INSERT INTO tags_plaintext (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [2, [167, 23, 192, 116, 15, 80, 7, 17, 243, 99, 244, 59, 154, 126, 107, 57, 135, 84, 159, 190, 13, 172, 65, 255, 177, 138, 12, 161, 20, 85, 206, 120, 152, 242, 71, 250, 30, 185, 163, 95, 53, 127], [131, 141, 215, 250, 166, 168, 163, 168, 204, 135, 210, 132, 146, 230, 231, 83, 195, 242, 119, 20, 244, 195, 237, 65, 142, 148, 81, 206, 67, 32, 10, 183, 232, 247, 238, 86, 118, 122, 176, 219, 152, 223, 211, 54, 30, 227, 29, 41, 187, 18, 37, 109, 50, 55, 121, 109, 62, 90, 246, 52, 27, 115, 180, 163, 171, 146, 39, 247, 57, 171, 206, 56], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 15, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 15, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
add_wallet_record: <<< res: None
add_wallet_record: >>> wallet_handle: 3, type_: 'connection_invitation', id: 'd46df07b366a4f4d99ac1b487f68121a', value: '{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation", "@id": "bdaaa3af-7f43-4439-b64c-7c843284bb08", "serviceEndpoint": "http://22d18366b61a.ngrok.io", "recipientKeys": ["5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP"], "label": "Edinburgh Medical School"}', tags_json: '{"connection_id": "f56b18ea-92e1-4f6d-a094-80da3fad398d"}'
do_call: >>> name: indy_add_wallet_record, args: (c_int(3), c_char_p(140573273241480), c_char_p(140573273264208), c_char_p(140573275123792), c_char_p(140573274107056), <CFunctionType object at 0x7fd9c421ba70>)
do_call: Function indy_add_wallet_record returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
  {"msg_id": "N/A", "thread_id": "N/A", "traced_type": "dict", "timestamp": 1621255266.9012568, "str_time": "2021-05-17 12:41:06.901257", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://medic-business-logic:3010/topic/connections/"}
  {"msg_id": "N/A", "thread_id": "N/A", "traced_type": "dict", "timestamp": 1621255266.9016144, "str_time": "2021-05-17 12:41:06.901614", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.END.http://medic-business-logic:3010/topic/connections/"}
Posting to http://medic-business-logic:3010/topic/connections/; Data: {"accept": "auto", "their_role": "inviter", "rfc23_state": "invitation-received", "created_at": "2021-05-17 12:41:06.885367Z", "invitation_key": "5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP", "routing_state": "none", "invitation_mode": "once", "their_label": "Edinburgh Medical School", "connection_id": "f56b18ea-92e1-4f6d-a094-80da3fad398d", "state": "invitation", "updated_at": "2021-05-17 12:41:06.885367Z"}; Headers: {'Content-Type': 'application/json'}
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[54, 74, 105, 122, 120, 105, 83, 52, 104, 103, 98, 115, 50, 117, 118, 80, 107, 70, 89, 51, 85, 49, 88, 78, 52, 84, 107, 113, 120, 104, 83, 56, 78, 82, 111, 105, 52, 83, 53, 103, 107, 77, 82, 51, 51, 90, 54, 54, 57, 108, 121, 78, 121, 67, 55, 82, 105, 82, 122, 50, 57, 53, 117, 87, 57, 81, 61, 61], [122, 57, 69, 101, 100, 114, 100, 84, 113, 108, 52, 68, 65, 72, 98, 76, 104, 65, 80, 88, 85, 109, 73, 80, 107, 110, 107, 90, 99, 84, 102, 111, 69, 79, 102, 90, 50, 76, 87, 54, 48, 69, 66, 113, 73, 55, 71, 75, 55, 87, 53, 105, 115, 111, 111, 116, 55, 115, 80, 109, 117, 114, 49, 70, 115, 107, 78, 50, 98, 100, 53, 57, 56, 78, 56, 82, 100, 114, 51, 65], [123, 127, 223, 177, 188, 157, 122, 140, 218, 187, 118, 191, 25, 187, 74, 17, 201, 152, 42, 7, 87, 3, 102, 30, 148, 176, 78, 7, 160, 8, 70, 245, 237, 153, 150, 48, 108, 32, 201, 122, 153, 198, 68, 182, 131, 216, 86, 2, 220, 235, 233, 108, 160, 77, 136, 3, 232, 53, 169, 202, 59, 57, 136, 9, 163, 63, 92, 170, 235, 224, 252, 55, 226, 34, 252, 249, 207, 205, 237, 19, 102, 170, 40, 217, 235, 108, 225, 120, 144, 114, 178, 215, 132, 187, 192, 158, 92, 167, 91, 241, 3, 191, 72, 106, 102, 138, 13, 7, 25, 242, 133, 39, 25, 6, 200, 165, 172, 103, 84, 1, 155, 17, 247, 131, 180, 182, 51, 172, 17, 228, 32, 4, 51, 193, 108, 251, 105, 121, 248, 184, 115, 46, 135, 212, 253, 195, 63, 26, 148, 241, 182, 94, 77, 158, 202, 253, 25, 82, 121, 78, 179, 247, 136, 100, 12, 67, 3, 30, 253, 184, 144, 206, 202, 162, 101, 123, 150, 187, 245, 83, 251, 0, 242, 239, 22, 66, 190, 43, 254, 31, 44, 130, 228, 128, 199, 118, 163, 41, 79, 151, 225, 218, 26, 22, 18, 136, 206, 112, 178, 29, 214, 206, 40, 70, 205, 131, 78, 5, 73, 215, 159, 74, 45, 61, 37, 105, 238, 37, 168, 156, 135, 1, 213, 85, 87, 178, 205, 222, 72, 109, 147, 156, 35, 120, 78, 114, 43, 156, 77, 103, 228, 14, 211, 250, 233, 237, 22, 194, 143, 171, 148, 244, 98, 85, 220, 241, 134, 78, 152, 159, 130, 142, 0, 166, 20, 163, 81, 100, 89, 150, 172, 120, 209, 151, 123, 166, 82, 218, 25, 228, 115, 211, 139, 34, 227, 227, 175, 224, 72, 251, 217, 151, 132, 15, 106], [126, 133, 173, 217, 111, 231, 143, 9, 3, 89, 99, 61, 200, 205, 14, 145, 118, 232, 164, 172, 87, 2, 166, 179, 193, 204, 200, 216, 150, 161, 236, 206, 91, 193, 23, 222, 80, 180, 190, 38, 173, 116, 88, 95, 190, 162, 242, 179, 6, 190, 70, 11, 173, 205, 89, 224, 149, 73, 11, 239], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [3, [128, 44, 37, 101, 162, 29, 239, 218, 239, 135, 73, 229, 99, 65, 201, 55, 101, 9, 38, 46, 195, 245, 150, 56, 78, 77, 221, 254, 77, 76, 130, 82, 151, 7, 46, 97, 64, 6, 192, 66, 200], [142, 51, 102, 59, 108, 105, 86, 82, 207, 249, 224, 238, 123, 28, 211, 142, 85, 229, 191, 110, 30, 227, 146, 186, 89, 236, 170, 86, 99, 14, 64, 113, 122, 168, 167, 191, 142, 214, 107, 228, 240, 146, 253, 117, 41, 20, 132, 28, 52, 168, 168, 50, 15, 212, 152, 105, 174, 90, 197, 98, 251, 107, 126, 193], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 16, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 16, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
add_wallet_record: <<< res: None
get_wallet_record: >>> wallet_handle: 3, type_: 'default_mediator', id: 'default_mediator', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": true}'
get_wallet_record: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd9c421bcc8>
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573273243384), c_char_p(140573273243440), c_char_p(140573273512360), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[113, 109, 56, 90, 100, 97, 70, 102, 49, 73, 104, 109, 74, 89, 77, 102, 81, 66, 88, 103, 84, 56, 111, 100, 43, 66, 67, 79, 68, 56, 56, 116, 107, 97, 111, 114, 43, 105, 109, 73, 71, 72, 106, 56, 120, 112, 107, 69, 65, 122, 85, 120, 65, 102, 117, 55, 77, 110, 56, 61], [113, 109, 56, 90, 100, 97, 70, 102, 49, 73, 104, 109, 74, 89, 77, 102, 88, 83, 82, 87, 118, 120, 87, 98, 81, 77, 108, 71, 73, 83, 50, 113, 75, 106, 52, 117, 57, 68, 80, 109, 75, 53, 103, 49, 54, 56, 79, 51, 121, 43, 50, 107, 54, 114, 69, 78, 76, 50, 73, 61], "Medic"]
_get_error_details: >>>
_get_error_details: <<< error_details: {'backtrace': '', 'message': 'Error: Wallet item not found\n  Caused by: Wallet item not found with type: default_mediator, id: default_mediator\n'}
_indy_callback: >>> command_handle: 17, err , args: (b'',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 17, err , args: (b'',)
_indy_loop_callback: Function returned error 
_indy_loop_callback <<<
create_and_store_my_did: >>> wallet_handle: 3, did_json: '{}'
create_wallet: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd9c421be58>
do_call: >>> name: indy_create_and_store_my_did, args: (c_int(3), c_char_p(140573273219472), <CFunctionType object at 0x7fd9c421be58>)
do_call: Function indy_create_and_store_my_did returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], [88, 89, 85, 105, 72, 49, 70, 85, 113, 67, 72, 76, 117, 65, 55, 114, 71, 52, 50, 82, 51, 78, 107, 86, 79, 69, 67, 72, 86, 48, 49, 83, 67, 100, 98, 89, 74, 71, 80, 70, 48, 98, 119, 100, 47, 48, 73, 49, 72, 106, 69, 87, 100, 54, 111, 71, 84, 43, 109, 72, 114, 83, 73, 105, 48, 65, 103, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], [88, 89, 85, 105, 72, 49, 70, 85, 113, 67, 72, 76, 117, 65, 55, 114, 71, 52, 50, 82, 51, 78, 107, 86, 79, 69, 67, 72, 86, 48, 49, 83, 67, 100, 98, 89, 74, 71, 80, 70, 48, 98, 119, 100, 47, 48, 73, 49, 72, 106, 69, 87, 100, 54, 111, 71, 84, 43, 109, 72, 114, 83, 73, 105, 48, 65, 103, 61], [183, 36, 165, 100, 102, 141, 102, 109, 229, 5, 31, 135, 104, 237, 99, 10, 155, 118, 29, 204, 154, 176, 238, 251, 116, 162, 184, 190, 139, 36, 164, 29, 35, 229, 201, 74, 175, 59, 141, 67, 135, 155, 153, 213, 207, 31, 166, 202, 74, 87, 169, 0, 246, 96, 157, 143, 211, 226, 170, 151, 34, 218, 3, 48, 44, 241, 37, 177, 152, 53, 172, 217, 213, 233, 86, 33, 215, 53, 4, 176, 148, 194, 113, 22, 181, 154, 108, 33, 206, 204, 164, 135, 216, 157, 54, 39, 29, 98, 87, 237, 102, 108, 129, 38, 222, 164, 30, 0, 26, 1, 169, 117, 25, 228, 37, 82], [79, 96, 50, 140, 9, 142, 239, 41, 254, 214, 204, 248, 222, 91, 200, 52, 115, 173, 83, 23, 25, 103, 114, 148, 74, 160, 26, 154, 119, 203, 245, 74, 23, 138, 151, 150, 239, 214, 119, 198, 138, 224, 108, 130, 125, 248, 118, 63, 60, 140, 243, 118, 30, 255, 110, 254, 15, 19, 11, 69], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [97, 50, 75, 52, 116, 48, 101, 118, 65, 65, 104, 120, 49, 89, 87, 57, 53, 111, 118, 53, 55, 69, 87, 51, 50, 53, 50, 120, 50, 112, 114, 121, 122, 119, 122, 49, 78, 68, 106, 114, 78, 43, 71, 57, 56, 121, 120, 90, 65, 88, 114, 72, 110, 116, 114, 97, 101, 75, 99, 57, 87, 114, 84, 106, 56, 49, 77, 48, 72, 77, 98, 67, 66, 97, 77, 70, 43, 73, 98, 43, 51, 116, 112, 82, 116, 56, 52, 97, 115, 121, 83, 98, 113, 71, 52, 65], [204, 250, 139, 70, 183, 20, 220, 133, 72, 107, 217, 42, 21, 59, 156, 207, 60, 115, 41, 177, 88, 102, 254, 85, 91, 210, 76, 151, 90, 239, 82, 3, 156, 144, 88, 221, 253, 223, 44, 60, 211, 236, 88, 2, 181, 23, 103, 240, 134, 56, 196, 198, 1, 177, 164, 136, 139, 136, 139, 79, 127, 70, 238, 196, 54, 63, 212, 215, 229, 132, 68, 64, 4, 126, 57, 159, 200, 150, 130, 151, 15, 217, 193, 41, 36, 54, 251, 75, 50, 126, 186, 42, 51, 57, 179, 210, 233, 52, 255, 230, 83, 36, 23, 56, 100, 198, 115, 126, 195, 147, 197, 127, 230, 185, 67, 133, 212, 55, 242, 235, 63, 248, 215, 125, 10, 46, 182, 91, 195, 108, 197, 236, 6, 245, 226, 65, 2, 108, 199, 75, 19, 242, 126, 231, 46, 17, 180, 178, 48, 75, 81, 118, 68, 13, 74, 36, 75, 69, 179, 241, 216, 180, 42, 16, 226, 23, 69, 254, 130, 147, 204, 142, 198, 103, 177, 124, 254, 227, 36, 165, 226, 152, 9, 54, 100], [127, 180, 170, 163, 139, 34, 139, 143, 220, 221, 234, 230, 4, 17, 29, 25, 43, 81, 176, 68, 1, 100, 171, 232, 235, 37, 207, 49, 16, 13, 134, 229, 115, 178, 76, 231, 212, 156, 124, 21, 194, 159, 13, 182, 75, 71, 64, 224, 60, 253, 130, 48, 24, 230, 155, 196, 164, 136, 235, 149], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 18, err , args: (b'Ss9L55FVLDVAE9wH9QUaLm', b'F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq')
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 18, err , args: (b'Ss9L55FVLDVAE9wH9QUaLm', b'F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq')
_indy_loop_callback: Function returned (b'Ss9L55FVLDVAE9wH9QUaLm', b'F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq')
_indy_loop_callback <<<
create_and_store_my_did: <<< res: ('Ss9L55FVLDVAE9wH9QUaLm', 'F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq')
update_wallet_record_value: >>> wallet_handle: 3, type_: 'connection', id: 'f56b18ea-92e1-4f6d-a094-80da3fad398d', value: '{"invitation_key": "5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP", "my_did": "Ss9L55FVLDVAE9wH9QUaLm", "request_id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "created_at": "2021-05-17 12:41:06.885367Z", "updated_at": "2021-05-17 12:41:06.929474Z", "their_role": "inviter", "inbound_connection_id": null, "routing_state": "none", "accept": "auto", "invitation_mode": "once", "invitation_msg_id": null, "alias": null, "error_msg": null, "their_label": "Edinburgh Medical School", "state": "request", "their_public_did": null}'
update_wallet_record_value: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99efcf110>
do_call: >>> name: indy_update_wallet_record_value, args: (c_int(3), c_char_p(140573273867520), c_char_p(140573273264280), c_char_p(94095652427744), <CFunctionType object at 0x7fd99efcf110>)
do_call: Function indy_update_wallet_record_value returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s3`: UPDATE items SET value = $1, key = $2 WHERE type = $3 AND name = $4 AND wallet_id = $5
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s3 with parameters: [[6, 4, 179, 237, 240, 118, 70, 133, 26, 184, 51, 233, 116, 50, 50, 246, 121, 95, 101, 231, 43, 212, 90, 131, 187, 178, 173, 135, 148, 198, 152, 237, 201, 166, 135, 208, 93, 231, 17, 150, 238, 221, 102, 252, 88, 158, 111, 49, 134, 5, 159, 205, 40, 26, 140, 64, 51, 107, 202, 198, 146, 75, 186, 245, 247, 133, 184, 141, 32, 148, 244, 133, 139, 58, 169, 242, 35, 48, 90, 47, 138, 130, 142, 40, 162, 221, 83, 60, 159, 170, 76, 12, 127, 17, 70, 135, 68, 33, 205, 229, 26, 226, 20, 156, 0, 44, 110, 103, 186, 204, 118, 199, 174, 124, 77, 31, 140, 33, 242, 244, 106, 167, 208, 219, 212, 25, 145, 63, 95, 190, 79, 94, 234, 193, 4, 205, 222, 0, 58, 84, 112, 98, 176, 240, 90, 255, 60, 229, 250, 241, 176, 49, 103, 191, 221, 110, 133, 187, 246, 89, 93, 58, 148, 6, 150, 238, 166, 34, 112, 85, 62, 96, 140, 0, 235, 103, 81, 236, 249, 140, 224, 160, 15, 137, 24, 115, 244, 102, 51, 133, 11, 110, 163, 56, 45, 202, 57, 102, 220, 195, 137, 45, 248, 235, 114, 8, 51, 127, 37, 76, 165, 23, 127, 152, 173, 162, 87, 185, 136, 245, 126, 97, 226, 9, 170, 52, 223, 3, 187, 45, 205, 128, 92, 58, 5, 140, 181, 149, 194, 46, 220, 34, 89, 189, 255, 67, 230, 251, 151, 17, 169, 32, 18, 88, 58, 147, 141, 50, 79, 193, 33, 85, 20, 101, 149, 95, 47, 17, 215, 167, 197, 81, 45, 28, 3, 114, 145, 82, 63, 250, 139, 182, 208, 215, 30, 122, 73, 116, 73, 185, 237, 59, 219, 245, 191, 41, 101, 254, 61, 9, 240, 148, 127, 58, 83, 71, 102, 233, 103, 93, 232, 160, 193, 27, 11, 77, 89, 157, 220, 201, 62, 173, 4, 238, 102, 85, 98, 255, 157, 82, 198, 7, 59, 157, 132, 210, 202, 234, 223, 187, 28, 64, 197, 249, 207, 219, 1, 36, 101, 250, 189, 225, 192, 65, 75, 191, 182, 32, 63, 196, 231, 25, 253, 122, 14, 63, 115, 129, 144, 83, 182, 43, 228, 204, 191, 7, 173, 151, 115, 3, 213, 172, 124, 52, 138, 201, 17, 210, 235, 104, 141, 21, 24, 186, 37, 210, 109, 156, 98, 232, 230, 177, 48, 8, 182, 61, 18, 190, 199, 99, 178, 28, 109, 185, 96, 184, 112, 8, 205, 155, 165, 129, 71, 37, 167, 123, 24, 196, 227, 246, 199, 21, 195, 6, 34, 3, 230, 160, 197, 35, 98, 29, 20, 125, 48, 81, 81, 47, 57, 178, 185, 83, 23, 105, 134, 81, 232, 205, 100, 44, 201, 223, 114, 145, 237, 91, 249, 220, 39, 121, 85, 229, 137, 8, 44, 41, 59, 244, 58, 186, 157, 40, 191, 241, 45, 60, 100, 151, 23, 39, 86, 231, 50, 17, 59, 24, 145, 250, 146, 63, 235, 67, 121, 14, 7, 213, 62, 111, 218, 235, 76, 103, 227, 104, 210, 254, 62, 2, 44, 179, 208, 233, 228, 178, 39, 154, 117, 35, 130, 166, 241, 140, 67, 109, 30, 2, 208, 53, 37, 163, 102, 168, 198, 98, 97, 53, 255, 88, 123, 76], [166, 133, 238, 236, 128, 123, 187, 190, 207, 232, 33, 191, 188, 231, 192, 202, 33, 253, 87, 127, 158, 138, 230, 25, 122, 109, 7, 85, 20, 220, 151, 61, 6, 216, 239, 85, 46, 15, 113, 222, 111, 21, 50, 17, 60, 180, 169, 97, 208, 170, 237, 209, 66, 48, 199, 192, 124, 35, 1, 129], [73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [120, 99, 101, 86, 104, 116, 110, 103, 56, 75, 112, 113, 55, 105, 55, 47, 101, 106, 66, 77, 104, 76, 90, 102, 98, 69, 80, 98, 116, 98, 69, 114, 78, 67, 114, 109, 116, 118, 104, 85, 108, 65, 71, 107, 71, 78, 105, 52, 67, 54, 116, 117, 88, 105, 74, 47, 50, 108, 116, 118, 83, 102, 74, 77, 116, 106, 72, 119, 105, 51, 72, 105, 55, 82, 112, 79, 114, 67, 69, 70, 85, 84, 72, 122, 122, 81, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 19, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 19, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_value: <<< res: None
update_wallet_record_tags: >>> wallet_handle: 3, type_: 'connection', id: 'f56b18ea-92e1-4f6d-a094-80da3fad398d', tags_json: '{"invitation_key": "5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP", "my_did": "Ss9L55FVLDVAE9wH9QUaLm", "request_id": "5c86d714-9808-4bc8-a653-6abb4c381dab"}'
update_wallet_record_tags: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99efcf368>
do_call: >>> name: indy_update_wallet_record_tags, args: (c_int(3), c_char_p(140573273867760), c_char_p(140573273264280), c_char_p(140572651966544), <CFunctionType object at 0x7fd99efcf368>)
do_call: Function indy_update_wallet_record_tags returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s4`: SELECT id FROM items WHERE type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s4 with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [120, 99, 101, 86, 104, 116, 110, 103, 56, 75, 112, 113, 55, 105, 55, 47, 101, 106, 66, 77, 104, 76, 90, 102, 98, 69, 80, 98, 116, 98, 69, 114, 78, 67, 114, 109, 116, 118, 104, 85, 108, 65, 71, 107, 71, 78, 105, 52, 67, 54, 116, 117, 88, 105, 74, 47, 50, 108, 116, 118, 83, 102, 74, 77, 116, 106, 72, 119, 105, 51, 72, 105, 55, 82, 112, 79, 114, 67, 69, 70, 85, 84, 72, 122, 122, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_encrypted WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [2, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_plaintext WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [2, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [2, [27, 226, 221, 240, 203, 243, 82, 65, 0, 81, 190, 180, 210, 22, 123, 46, 87, 60, 91, 123, 197, 182, 67, 89, 146, 121, 217, 236, 110, 174, 137, 104, 108, 127, 139, 128, 29, 20], [143, 43, 198, 179, 161, 47, 232, 33, 222, 197, 245, 31, 246, 64, 19, 225, 53, 3, 42, 201, 233, 247, 50, 253, 69, 91, 84, 45, 91, 200, 78, 27, 134, 48, 125, 244, 161, 51, 206, 22, 135, 15, 68, 220, 166, 35, 46, 31, 176, 30, 197, 155, 41, 185, 129, 233, 2, 229, 3, 63, 255, 4, 91, 224], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [2, [167, 23, 192, 116, 15, 80, 7, 17, 243, 99, 244, 59, 154, 126, 107, 57, 135, 84, 159, 190, 13, 172, 65, 255, 177, 138, 12, 161, 20, 85, 206, 120, 152, 242, 71, 250, 30, 185, 163, 95, 53, 127], [131, 141, 215, 250, 166, 168, 163, 168, 204, 135, 210, 132, 146, 230, 231, 83, 195, 242, 119, 20, 244, 195, 237, 65, 142, 148, 81, 206, 67, 32, 10, 183, 232, 247, 238, 86, 118, 122, 176, 219, 152, 223, 211, 54, 30, 227, 29, 41, 187, 18, 37, 109, 50, 55, 121, 109, 62, 90, 246, 52, 27, 115, 180, 163, 171, 146, 39, 247, 57, 171, 206, 56], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [2, [124, 188, 227, 212, 249, 145, 68, 148, 206, 221, 218, 202, 197, 44, 202, 175, 68, 115, 188, 201, 151, 19, 118, 100, 161, 169, 36, 131, 17, 142, 122, 97, 175, 70], [236, 191, 102, 187, 94, 110, 184, 122, 235, 240, 161, 75, 93, 40, 18, 107, 101, 226, 171, 123, 40, 218, 247, 162, 121, 226, 129, 52, 123, 164, 39, 105, 119, 174, 251, 19, 142, 10, 4, 252, 72, 192, 34, 202, 191, 198, 20, 251, 75, 185], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 20, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 20, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_tags: <<< res: None
  {"msg_id": "N/A", "thread_id": "N/A", "traced_type": "dict", "timestamp": 1621255266.953256, "str_time": "2021-05-17 12:41:06.953256", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://medic-business-logic:3010/topic/connections/"}
  {"msg_id": "N/A", "thread_id": "N/A", "traced_type": "dict", "timestamp": 1621255266.9536455, "str_time": "2021-05-17 12:41:06.953645", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.END.http://medic-business-logic:3010/topic/connections/"}
get_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'f56b18ea-92e1-4f6d-a094-80da3fad398d', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573273866704), c_char_p(140572652051200), c_char_p(140573273512672), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
do_call: <<< <Future pending>
Posting to http://medic-business-logic:3010/topic/connections/; Data: {"accept": "auto", "their_role": "inviter", "rfc23_state": "request-sent", "created_at": "2021-05-17 12:41:06.885367Z", "invitation_key": "5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP", "request_id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "routing_state": "none", "invitation_mode": "once", "my_did": "Ss9L55FVLDVAE9wH9QUaLm", "their_label": "Edinburgh Medical School", "connection_id": "f56b18ea-92e1-4f6d-a094-80da3fad398d", "state": "request", "updated_at": "2021-05-17 12:41:06.929474Z"}; Headers: {'Content-Type': 'application/json'}
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [120, 99, 101, 86, 104, 116, 110, 103, 56, 75, 112, 113, 55, 105, 55, 47, 101, 106, 66, 77, 104, 76, 90, 102, 98, 69, 80, 98, 116, 98, 69, 114, 78, 67, 114, 109, 116, 118, 104, 85, 108, 65, 71, 107, 71, 78, 105, 52, 67, 54, 116, 117, 88, 105, 74, 47, 50, 108, 116, 118, 83, 102, 74, 77, 116, 106, 72, 119, 105, 51, 72, 105, 55, 82, 112, 79, 114, 67, 69, 70, 85, 84, 72, 122, 122, 81, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 21, err , args: (b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:06.929474Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 21, err , args: (b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:06.929474Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:06.929474Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:06.929474Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}'
get_my_did_with_meta: >>> wallet_handle: 3, did: 'Ss9L55FVLDVAE9wH9QUaLm'
get_my_did_with_meta: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99efcf4f8>
do_call: >>> name: indy_get_my_did_with_meta, args: (c_int(3), c_char_p(140573376878416), <CFunctionType object at 0x7fd99efcf4f8>)
do_call: Function indy_get_my_did_with_meta returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], [88, 89, 85, 105, 72, 49, 70, 85, 113, 67, 72, 76, 117, 65, 55, 114, 71, 52, 50, 82, 51, 78, 107, 86, 79, 69, 67, 72, 86, 48, 49, 83, 67, 100, 98, 89, 74, 71, 80, 70, 48, 98, 119, 100, 47, 48, 73, 49, 72, 106, 69, 87, 100, 54, 111, 71, 84, 43, 109, 72, 114, 83, 73, 105, 48, 65, 103, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], [88, 89, 85, 105, 72, 49, 70, 85, 113, 67, 72, 76, 117, 65, 55, 114, 71, 52, 50, 82, 51, 78, 107, 86, 79, 69, 67, 72, 86, 48, 49, 83, 67, 100, 98, 89, 74, 71, 80, 70, 48, 98, 119, 100, 47, 48, 73, 49, 72, 106, 69, 87, 100, 54, 111, 71, 84, 43, 109, 72, 114, 83, 73, 105, 48, 65, 103, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], [88, 89, 85, 105, 72, 49, 70, 85, 113, 67, 72, 76, 117, 65, 55, 114, 71, 52, 50, 82, 51, 78, 107, 86, 79, 69, 67, 72, 86, 48, 49, 83, 67, 100, 98, 89, 74, 71, 80, 70, 48, 98, 119, 100, 47, 48, 73, 49, 72, 106, 69, 87, 100, 54, 111, 71, 84, 43, 109, 72, 114, 83, 73, 105, 48, 65, 103, 61], "Medic"]
_indy_callback: >>> command_handle: 22, err , args: (b'{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 22, err , args: (b'{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}',)
_indy_loop_callback: Function returned b'{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}'
_indy_loop_callback <<<
get_my_did_with_meta: <<< res: '{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}'
open_wallet_search: >>> wallet_handle: 3, type_: 'connection_invitation', query_json: '{"connection_id": "f56b18ea-92e1-4f6d-a094-80da3fad398d"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": true}'
open_wallet_search: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99efcf750>
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140573273242656), c_char_p(140572652081424), c_char_p(140573275298224), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: SELECT name, value from tags_plaintext where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: SELECT name, value from tags_encrypted where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[54, 74, 105, 122, 120, 105, 83, 52, 104, 103, 98, 115, 50, 117, 118, 80, 107, 70, 89, 51, 85, 49, 88, 78, 52, 84, 107, 113, 120, 104, 83, 56, 78, 82, 111, 105, 52, 83, 53, 103, 107, 77, 82, 51, 51, 90, 54, 54, 57, 108, 121, 78, 121, 67, 55, 82, 105, 82, 122, 50, 57, 53, 117, 87, 57, 81, 61, 61], [128, 44, 37, 101, 162, 29, 239, 218, 239, 135, 73, 229, 99, 65, 201, 55, 101, 9, 38, 46, 195, 245, 150, 56, 78, 77, 221, 254, 77, 76, 130, 82, 151, 7, 46, 97, 64, 6, 192, 66, 200], [142, 51, 102, 59, 108, 105, 86, 82, 207, 249, 224, 238, 123, 28, 211, 142, 85, 229, 191, 110, 30, 227, 146, 186, 89, 236, 170, 86, 99, 14, 64, 113, 122, 168, 167, 191, 142, 214, 107, 228, 240, 146, 253, 117, 41, 20, 132, 28, 52, 168, 168, 50, 15, 212, 152, 105, 174, 90, 197, 98, 251, 107, 126, 193], "Medic", "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [3, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [3, "Medic"]
_indy_callback: >>> command_handle: 23, err , args: (9,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 23, err , args: (9,)
_indy_loop_callback: Function returned 9
_indy_loop_callback <<<
open_wallet_search: <<< res: 9
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 9, count: 2
fetch_wallet_search_next_records: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99efcf818>
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(9), c_uint(2), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
_indy_callback: >>> command_handle: 24, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"d46df07b366a4f4d99ac1b487f68121a","value":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation\\", \\"@id\\": \\"bdaaa3af-7f43-4439-b64c-7c843284bb08\\", \\"serviceEndpoint\\": \\"http://22d18366b61a.ngrok.io\\", \\"recipientKeys\\": [\\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\"], \\"label\\": \\"Edinburgh Medical School\\"}","tags":{"connection_id":"f56b18ea-92e1-4f6d-a094-80da3fad398d"}}]}',)
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 24, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"d46df07b366a4f4d99ac1b487f68121a","value":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation\\", \\"@id\\": \\"bdaaa3af-7f43-4439-b64c-7c843284bb08\\", \\"serviceEndpoint\\": \\"http://22d18366b61a.ngrok.io\\", \\"recipientKeys\\": [\\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\"], \\"label\\": \\"Edinburgh Medical School\\"}","tags":{"connection_id":"f56b18ea-92e1-4f6d-a094-80da3fad398d"}}]}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":[{"type":null,"id":"d46df07b366a4f4d99ac1b487f68121a","value":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation\\", \\"@id\\": \\"bdaaa3af-7f43-4439-b64c-7c843284bb08\\", \\"serviceEndpoint\\": \\"http://22d18366b61a.ngrok.io\\", \\"recipientKeys\\": [\\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\"], \\"label\\": \\"Edinburgh Medical School\\"}","tags":{"connection_id":"f56b18ea-92e1-4f6d-a094-80da3fad398d"}}]}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":[{"type":null,"id":"d46df07b366a4f4d99ac1b487f68121a","value":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation\\", \\"@id\\": \\"bdaaa3af-7f43-4439-b64c-7c843284bb08\\", \\"serviceEndpoint\\": \\"http://22d18366b61a.ngrok.io\\", \\"recipientKeys\\": [\\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\"], \\"label\\": \\"Edinburgh Medical School\\"}","tags":{"connection_id":"f56b18ea-92e1-4f6d-a094-80da3fad398d"}}]}'
close_wallet_search: >>> wallet_search_handle: 9
close_wallet_search: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99efcfa70>
do_call: >>> name: indy_close_wallet_search, args: (c_int(9), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
_indy_callback: >>> command_handle: 25, err , args: ()
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 25, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
get_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'f56b18ea-92e1-4f6d-a094-80da3fad398d', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573273866608), c_char_p(140572652050768), c_char_p(140573273512360), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
  {"msg_id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "thread_id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/request", "timestamp": 1621255266.9979289, "str_time": "2021-05-17 12:41:06.997929", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.ENCODE.START"}
  {"msg_id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "thread_id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/request", "timestamp": 1621255266.9984007, "str_time": "2021-05-17 12:41:06.998401", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.ENCODE.END"}
pack_message: >>> wallet_handle: 3, message: '{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/request", "@id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "connection": {"DID": "Ss9L55FVLDVAE9wH9QUaLm", "DIDDoc": {"@context": "https://w3id.org/did/v1", "id": "did:sov:Ss9L55FVLDVAE9wH9QUaLm", "publicKey": [{"id": "did:sov:Ss9L55FVLDVAE9wH9QUaLm#1", "type": "Ed25519VerificationKey2018", "controller": "did:sov:Ss9L55FVLDVAE9wH9QUaLm", "publicKeyBase58": "F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq"}], "authentication": [{"type": "Ed25519SignatureAuthentication2018", "publicKey": "did:sov:Ss9L55FVLDVAE9wH9QUaLm#1"}], "service": [{"id": "did:sov:Ss9L55FVLDVAE9wH9QUaLm;indy", "type": "IndyAgent", "priority": 0, "recipientKeys": ["F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq"], "serviceEndpoint": "http://ab05c659dac0.ngrok.io"}, {"id": "did:sov:Ss9L55FVLDVAE9wH9QUaLm;indy1", "type": "IndyAgent", "priority": 0, "recipientKeys": ["F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq"], "serviceEndpoint": "ws://ab05c659dac0.ngrok.io"}]}}, "label": "Medical Student"}', recipient_verkeys: ['5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP'], sender_verkey: 'F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq'
pack_message: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99efcfc00>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
do_call: >>> name: indy_pack_message, args: (c_int(3), b'{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/request", "@id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "connection": {"DID": "Ss9L55FVLDVAE9wH9QUaLm", "DIDDoc": {"@context": "https://w3id.org/did/v1", "id": "did:sov:Ss9L55FVLDVAE9wH9QUaLm", "publicKey": [{"id": "did:sov:Ss9L55FVLDVAE9wH9QUaLm#1", "type": "Ed25519VerificationKey2018", "controller": "did:sov:Ss9L55FVLDVAE9wH9QUaLm", "publicKeyBase58": "F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq"}], "authentication": [{"type": "Ed25519SignatureAuthentication2018", "publicKey": "did:sov:Ss9L55FVLDVAE9wH9QUaLm#1"}], "service": [{"id": "did:sov:Ss9L55FVLDVAE9wH9QUaLm;indy", "type": "IndyAgent", "priority": 0, "recipientKeys": ["F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq"], "serviceEndpoint": "http://ab05c659dac0.ngrok.io"}, {"id": "did:sov:Ss9L55FVLDVAE9wH9QUaLm;indy1", "type": "IndyAgent", "priority": 0, "recipientKeys": ["F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq"], "serviceEndpoint": "ws://ab05c659dac0.ngrok.io"}]}}, "label": "Medical Student"}', c_uint(1030), c_char_p(140573273286624), c_char_p(140572652025728), <CFunctionType object at 0x7fd99efcfc00>)
do_call: Function indy_pack_message returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [120, 99, 101, 86, 104, 116, 110, 103, 56, 75, 112, 113, 55, 105, 55, 47, 101, 106, 66, 77, 104, 76, 90, 102, 98, 69, 80, 98, 116, 98, 69, 114, 78, 67, 114, 109, 116, 118, 104, 85, 108, 65, 71, 107, 71, 78, 105, 52, 67, 54, 116, 117, 88, 105, 74, 47, 50, 108, 116, 118, 83, 102, 74, 77, 116, 106, 72, 119, 105, 51, 72, 105, 55, 82, 112, 79, 114, 67, 69, 70, 85, 84, 72, 122, 122, 81, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 26, err , args: (b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:06.929474Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 26, err , args: (b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:06.929474Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:06.929474Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}'
_indy_loop_callback <<<
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
get_wallet_record: <<< res: '{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:06.929474Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}'
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
192.168.208.6 [17/May/2021:12:41:06 +0000] "POST /connections/receive-invitation HTTP/1.1" 200 650 "-" "Python/3.7 aiohttp/3.7.4.post0"
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [97, 50, 75, 52, 116, 48, 101, 118, 65, 65, 104, 120, 49, 89, 87, 57, 53, 111, 118, 53, 55, 69, 87, 51, 50, 53, 50, 120, 50, 112, 114, 121, 122, 119, 122, 49, 78, 68, 106, 114, 78, 43, 71, 57, 56, 121, 120, 90, 65, 88, 114, 72, 110, 116, 114, 97, 101, 75, 99, 57, 87, 114, 84, 106, 56, 49, 77, 48, 72, 77, 98, 67, 66, 97, 77, 70, 43, 73, 98, 43, 51, 116, 112, 82, 116, 56, 52, 97, 115, 121, 83, 98, 113, 71, 52, 65], "Medic"]
_indy_callback: >>> command_handle: 27, err , args: (b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJvYWRkdUFNajZuMmJnUmRpY1BaRnBmSVdhTDRIajBYcmp2dG5BMG93a1EtRlJvaTBKbEpJZUpENUhkYjhMRFJYIiwiaGVhZGVyIjp7ImtpZCI6IjVCZzg5cUZDaHVxa0QyVzRyUmpMMktpZUNnaWE1ZGlwUjRvd25DU2pVYVpQIiwiaXYiOiIwaVN2Rmp1MnprRUdEWDJzYVpobHlXX2pmWldRQ0c2NSIsInNlbmRlciI6ImpTRVU0WUF5eE10eTMzSkdoWHVtc0lTQzNqUS1GcGR3dldsV1lTaGZ6aUFDNUlHRnVqWnRxS1VoNTBTTl9Jd3pzX05fZS1BeXJoQVNzRnR0Z3J6aF9raWxPRjQ2ZUFDb1JkYm5tNUx0NnlJMXdXYkh1YW9tNlhXSjhYRT0ifX1dfQ==","iv":"1q9S3J2A7MZE-0VX","ciphertext":"D7l3RTkiJjfGInIUv2IghsZ9zMVUAfhlovz4tFp64QOwH1vWl1C7bpYM02hfptWEXwqfrnwglymqG-vZEfHyRXblfs6hYVvWkbuny8g6WNMU4LWdXZCmt3omFqXa0KX8ZqDknYgWF9pdKw8zMfPwz-cTxG2I4CEVHOWAGrrE5SDGJcHS_tqFb-XCIrGoKt-oIjDeZzVB6gOVtWqt7iWWAHp6LA_ZgLgADz6fOmhgrq-b3dY3SBFqf5OtipFkabuRpX_mHauxz8yg1e4bgKOgO3jTKhqaN8vGRNMlJ-qL5jIfAWd83kG2mHXur8gu3CQRiyHQxeT7fVkyJaSYRJ06Xiwi9X6ejo3P89t7Rc_PuzhD621DM40QhQGNMTejEx0wftyh7ubdAPHy2j7QpzDc0Hkv-1GH2fqLdKUJhVd8iT4Ab0401HQ0akZ_qn0ilev6v5ria4OfVara5Twh0gx5XP_t2fvywU9WQtHpiZSuMxWkShLb4jGeMtlFJt_-6HTNfRAVNvfCItIt1yV43hBTikaS9xycMgbRSvbaw8w_nvPwMC47BkVOWHS4Qn4PzL63T5r7YbHoiCcyZnfweuE92Hw4ptqvnZHwCOFfYpx5B3AhbwDAkTzjWnBldyGJL8-IT_kTOIaJUucI-GBtIvCzQjdXLVr0g-YKEJQ-op-Diq7maew7d41s3QOQ7LQ7QYpdWsI-b4fe-JepLZ6V-ZpOEOvJ-ImPiHq618cX2CWSqUkOE8jKyLsetnrEd0eheT8cwGS7343gfV7Q39FEAVucFBf6VKIh34xQOJ3rrwF9ZUX264zEROJ-cnNkoGDg3-VfvGK0w1XpvUaOXKxnDal9LpqMgUXnBVxGIjxRwuoYc8msq9ROxSQWLEgmR52TUDkZ4qRW6Rg6aRFG-H4ai8xdopGB7kkPP_9eqLqxpuzVbRy-8j8K9cxeeJ4nzsoigN65gp_MDRhO2Rq9l_n3uo5E-hnMOnFXL5-SZi9JcYKC0h1DAXiqCVHOvkchbmiSnhrcgFQALEOfA9QfZps0rzAeSkondFTMOxUtyBJRWIjc_TRW8qvK-ZSeFLYSHmNvS35FeAZXeYRCel0Macz9EY_TRa2pde467IlXKQCpzZRl0Px0_ruWREdwkecxng1KlluNg0iZdY8hxOLNDLY9jq5DOxkwQP6LvklaH-Sm4GRnEfCxy6ZHQOs_gPVr8avwDCarJRbTeqp5WgYVUZC9BqDXu_IijKK6CHSys34YWZAqj7n1_efIlZ1FBQkv2hDGkZicJeJHqlHy3XkOm-cClj53qFviwWB7oH_n58-FreEmiFYy1398Rp7Vs8o_U3wFSQJ3yW43bx7cxWdWSrP-GmJWiT_OlWiDYQ==","tag":"xXnlH2P_kqWokb1v-noT0A=="}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 27, err , args: (b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJvYWRkdUFNajZuMmJnUmRpY1BaRnBmSVdhTDRIajBYcmp2dG5BMG93a1EtRlJvaTBKbEpJZUpENUhkYjhMRFJYIiwiaGVhZGVyIjp7ImtpZCI6IjVCZzg5cUZDaHVxa0QyVzRyUmpMMktpZUNnaWE1ZGlwUjRvd25DU2pVYVpQIiwiaXYiOiIwaVN2Rmp1MnprRUdEWDJzYVpobHlXX2pmWldRQ0c2NSIsInNlbmRlciI6ImpTRVU0WUF5eE10eTMzSkdoWHVtc0lTQzNqUS1GcGR3dldsV1lTaGZ6aUFDNUlHRnVqWnRxS1VoNTBTTl9Jd3pzX05fZS1BeXJoQVNzRnR0Z3J6aF9raWxPRjQ2ZUFDb1JkYm5tNUx0NnlJMXdXYkh1YW9tNlhXSjhYRT0ifX1dfQ==","iv":"1q9S3J2A7MZE-0VX","ciphertext":"D7l3RTkiJjfGInIUv2IghsZ9zMVUAfhlovz4tFp64QOwH1vWl1C7bpYM02hfptWEXwqfrnwglymqG-vZEfHyRXblfs6hYVvWkbuny8g6WNMU4LWdXZCmt3omFqXa0KX8ZqDknYgWF9pdKw8zMfPwz-cTxG2I4CEVHOWAGrrE5SDGJcHS_tqFb-XCIrGoKt-oIjDeZzVB6gOVtWqt7iWWAHp6LA_ZgLgADz6fOmhgrq-b3dY3SBFqf5OtipFkabuRpX_mHauxz8yg1e4bgKOgO3jTKhqaN8vGRNMlJ-qL5jIfAWd83kG2mHXur8gu3CQRiyHQxeT7fVkyJaSYRJ06Xiwi9X6ejo3P89t7Rc_PuzhD621DM40QhQGNMTejEx0wftyh7ubdAPHy2j7QpzDc0Hkv-1GH2fqLdKUJhVd8iT4Ab0401HQ0akZ_qn0ilev6v5ria4OfVara5Twh0gx5XP_t2fvywU9WQtHpiZSuMxWkShLb4jGeMtlFJt_-6HTNfRAVNvfCItIt1yV43hBTikaS9xycMgbRSvbaw8w_nvPwMC47BkVOWHS4Qn4PzL63T5r7YbHoiCcyZnfweuE92Hw4ptqvnZHwCOFfYpx5B3AhbwDAkTzjWnBldyGJL8-IT_kTOIaJUucI-GBtIvCzQjdXLVr0g-YKEJQ-op-Diq7maew7d41s3QOQ7LQ7QYpdWsI-b4fe-JepLZ6V-ZpOEOvJ-ImPiHq618cX2CWSqUkOE8jKyLsetnrEd0eheT8cwGS7343gfV7Q39FEAVucFBf6VKIh34xQOJ3rrwF9ZUX264zEROJ-cnNkoGDg3-VfvGK0w1XpvUaOXKxnDal9LpqMgUXnBVxGIjxRwuoYc8msq9ROxSQWLEgmR52TUDkZ4qRW6Rg6aRFG-H4ai8xdopGB7kkPP_9eqLqxpuzVbRy-8j8K9cxeeJ4nzsoigN65gp_MDRhO2Rq9l_n3uo5E-hnMOnFXL5-SZi9JcYKC0h1DAXiqCVHOvkchbmiSnhrcgFQALEOfA9QfZps0rzAeSkondFTMOxUtyBJRWIjc_TRW8qvK-ZSeFLYSHmNvS35FeAZXeYRCel0Macz9EY_TRa2pde467IlXKQCpzZRl0Px0_ruWREdwkecxng1KlluNg0iZdY8hxOLNDLY9jq5DOxkwQP6LvklaH-Sm4GRnEfCxy6ZHQOs_gPVr8avwDCarJRbTeqp5WgYVUZC9BqDXu_IijKK6CHSys34YWZAqj7n1_efIlZ1FBQkv2hDGkZicJeJHqlHy3XkOm-cClj53qFviwWB7oH_n58-FreEmiFYy1398Rp7Vs8o_U3wFSQJ3yW43bx7cxWdWSrP-GmJWiT_OlWiDYQ==","tag":"xXnlH2P_kqWokb1v-noT0A=="}',)
_indy_loop_callback: Function returned b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJvYWRkdUFNajZuMmJnUmRpY1BaRnBmSVdhTDRIajBYcmp2dG5BMG93a1EtRlJvaTBKbEpJZUpENUhkYjhMRFJYIiwiaGVhZGVyIjp7ImtpZCI6IjVCZzg5cUZDaHVxa0QyVzRyUmpMMktpZUNnaWE1ZGlwUjRvd25DU2pVYVpQIiwiaXYiOiIwaVN2Rmp1MnprRUdEWDJzYVpobHlXX2pmWldRQ0c2NSIsInNlbmRlciI6ImpTRVU0WUF5eE10eTMzSkdoWHVtc0lTQzNqUS1GcGR3dldsV1lTaGZ6aUFDNUlHRnVqWnRxS1VoNTBTTl9Jd3pzX05fZS1BeXJoQVNzRnR0Z3J6aF9raWxPRjQ2ZUFDb1JkYm5tNUx0NnlJMXdXYkh1YW9tNlhXSjhYRT0ifX1dfQ==","iv":"1q9S3J2A7MZE-0VX","ciphertext":"D7l3RTkiJjfGInIUv2IghsZ9zMVUAfhlovz4tFp64QOwH1vWl1C7bpYM02hfptWEXwqfrnwglymqG-vZEfHyRXblfs6hYVvWkbuny8g6WNMU4LWdXZCmt3omFqXa0KX8ZqDknYgWF9pdKw8zMfPwz-cTxG2I4CEVHOWAGrrE5SDGJcHS_tqFb-XCIrGoKt-oIjDeZzVB6gOVtWqt7iWWAHp6LA_ZgLgADz6fOmhgrq-b3dY3SBFqf5OtipFkabuRpX_mHauxz8yg1e4bgKOgO3jTKhqaN8vGRNMlJ-qL5jIfAWd83kG2mHXur8gu3CQRiyHQxeT7fVkyJaSYRJ06Xiwi9X6ejo3P89t7Rc_PuzhD621DM40QhQGNMTejEx0wftyh7ubdAPHy2j7QpzDc0Hkv-1GH2fqLdKUJhVd8iT4Ab0401HQ0akZ_qn0ilev6v5ria4OfVara5Twh0gx5XP_t2fvywU9WQtHpiZSuMxWkShLb4jGeMtlFJt_-6HTNfRAVNvfCItIt1yV43hBTikaS9xycMgbRSvbaw8w_nvPwMC47BkVOWHS4Qn4PzL63T5r7YbHoiCcyZnfweuE92Hw4ptqvnZHwCOFfYpx5B3AhbwDAkTzjWnBldyGJL8-IT_kTOIaJUucI-GBtIvCzQjdXLVr0g-YKEJQ-op-Diq7maew7d41s3QOQ7LQ7QYpdWsI-b4fe-JepLZ6V-ZpOEOvJ-ImPiHq618cX2CWSqUkOE8jKyLsetnrEd0eheT8cwGS7343gfV7Q39FEAVucFBf6VKIh34xQOJ3rrwF9ZUX264zEROJ-cnNkoGDg3-VfvGK0w1XpvUaOXKxnDal9LpqMgUXnBVxGIjxRwuoYc8msq9ROxSQWLEgmR52TUDkZ4qRW6Rg6aRFG-H4ai8xdopGB7kkPP_9eqLqxpuzVbRy-8j8K9cxeeJ4nzsoigN65gp_MDRhO2Rq9l_n3uo5E-hnMOnFXL5-SZi9JcYKC0h1DAXiqCVHOvkchbmiSnhrcgFQALEOfA9QfZps0rzAeSkondFTMOxUtyBJRWIjc_TRW8qvK-ZSeFLYSHmNvS35FeAZXeYRCel0Macz9EY_TRa2pde467IlXKQCpzZRl0Px0_ruWREdwkecxng1KlluNg0iZdY8hxOLNDLY9jq5DOxkwQP6LvklaH-Sm4GRnEfCxy6ZHQOs_gPVr8avwDCarJRbTeqp5WgYVUZC9BqDXu_IijKK6CHSys34YWZAqj7n1_efIlZ1FBQkv2hDGkZicJeJHqlHy3XkOm-cClj53qFviwWB7oH_n58-FreEmiFYy1398Rp7Vs8o_U3wFSQJ3yW43bx7cxWdWSrP-GmJWiT_OlWiDYQ==","tag":"xXnlH2P_kqWokb1v-noT0A=="}'
_indy_loop_callback <<<
pack_message: <<< res: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJvYWRkdUFNajZuMmJnUmRpY1BaRnBmSVdhTDRIajBYcmp2dG5BMG93a1EtRlJvaTBKbEpJZUpENUhkYjhMRFJYIiwiaGVhZGVyIjp7ImtpZCI6IjVCZzg5cUZDaHVxa0QyVzRyUmpMMktpZUNnaWE1ZGlwUjRvd25DU2pVYVpQIiwiaXYiOiIwaVN2Rmp1MnprRUdEWDJzYVpobHlXX2pmWldRQ0c2NSIsInNlbmRlciI6ImpTRVU0WUF5eE10eTMzSkdoWHVtc0lTQzNqUS1GcGR3dldsV1lTaGZ6aUFDNUlHRnVqWnRxS1VoNTBTTl9Jd3pzX05fZS1BeXJoQVNzRnR0Z3J6aF9raWxPRjQ2ZUFDb1JkYm5tNUx0NnlJMXdXYkh1YW9tNlhXSjhYRT0ifX1dfQ==","iv":"1q9S3J2A7MZE-0VX","ciphertext":"D7l3RTkiJjfGInIUv2IghsZ9zMVUAfhlovz4tFp64QOwH1vWl1C7bpYM02hfptWEXwqfrnwglymqG-vZEfHyRXblfs6hYVvWkbuny8g6WNMU4LWdXZCmt3omFqXa0KX8ZqDknYgWF9pdKw8zMfPwz-cTxG2I4CEVHOWAGrrE5SDGJcHS_tqFb-XCIrGoKt-oIjDeZzVB6gOVtWqt7iWWAHp6LA_ZgLgADz6fOmhgrq-b3dY3SBFqf5OtipFkabuRpX_mHauxz8yg1e4bgKOgO3jTKhqaN8vGRNMlJ-qL5jIfAWd83kG2mHXur8gu3CQRiyHQxeT7fVkyJaSYRJ06Xiwi9X6ejo3P89t7Rc_PuzhD621DM40QhQGNMTejEx0wftyh7ubdAPHy2j7QpzDc0Hkv-1GH2fqLdKUJhVd8iT4Ab0401HQ0akZ_qn0ilev6v5ria4OfVara5Twh0gx5XP_t2fvywU9WQtHpiZSuMxWkShLb4jGeMtlFJt_-6HTNfRAVNvfCItIt1yV43hBTikaS9xycMgbRSvbaw8w_nvPwMC47BkVOWHS4Qn4PzL63T5r7YbHoiCcyZnfweuE92Hw4ptqvnZHwCOFfYpx5B3AhbwDAkTzjWnBldyGJL8-IT_kTOIaJUucI-GBtIvCzQjdXLVr0g-YKEJQ-op-Diq7maew7d41s3QOQ7LQ7QYpdWsI-b4fe-JepLZ6V-ZpOEOvJ-ImPiHq618cX2CWSqUkOE8jKyLsetnrEd0eheT8cwGS7343gfV7Q39FEAVucFBf6VKIh34xQOJ3rrwF9ZUX264zEROJ-cnNkoGDg3-VfvGK0w1XpvUaOXKxnDal9LpqMgUXnBVxGIjxRwuoYc8msq9ROxSQWLEgmR52TUDkZ4qRW6Rg6aRFG-H4ai8xdopGB7kkPP_9eqLqxpuzVbRy-8j8K9cxeeJ4nzsoigN65gp_MDRhO2Rq9l_n3uo5E-hnMOnFXL5-SZi9JcYKC0h1DAXiqCVHOvkchbmiSnhrcgFQALEOfA9QfZps0rzAeSkondFTMOxUtyBJRWIjc_TRW8qvK-ZSeFLYSHmNvS35FeAZXeYRCel0Macz9EY_TRa2pde467IlXKQCpzZRl0Px0_ruWREdwkecxng1KlluNg0iZdY8hxOLNDLY9jq5DOxkwQP6LvklaH-Sm4GRnEfCxy6ZHQOs_gPVr8avwDCarJRbTeqp5WgYVUZC9BqDXu_IijKK6CHSys34YWZAqj7n1_efIlZ1FBQkv2hDGkZicJeJHqlHy3XkOm-cClj53qFviwWB7oH_n58-FreEmiFYy1398Rp7Vs8o_U3wFSQJ3yW43bx7cxWdWSrP-GmJWiT_OlWiDYQ==","tag":"xXnlH2P_kqWokb1v-noT0A=="}'
  {"msg_id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "thread_id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/request", "timestamp": 1621255267.0119865, "str_time": "2021-05-17 12:41:07.011986", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://22d18366b61a.ngrok.io"}
  {"msg_id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "thread_id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/request", "timestamp": 1621255267.0124533, "str_time": "2021-05-17 12:41:07.012453", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.END.http://22d18366b61a.ngrok.io"}
Posting to http://22d18366b61a.ngrok.io; Data: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJvYWRkdUFNajZuMmJnUmRpY1BaRnBmSVdhTDRIajBYcmp2dG5BMG93a1EtRlJvaTBKbEpJZUpENUhkYjhMRFJYIiwiaGVhZGVyIjp7ImtpZCI6IjVCZzg5cUZDaHVxa0QyVzRyUmpMMktpZUNnaWE1ZGlwUjRvd25DU2pVYVpQIiwiaXYiOiIwaVN2Rmp1MnprRUdEWDJzYVpobHlXX2pmWldRQ0c2NSIsInNlbmRlciI6ImpTRVU0WUF5eE10eTMzSkdoWHVtc0lTQzNqUS1GcGR3dldsV1lTaGZ6aUFDNUlHRnVqWnRxS1VoNTBTTl9Jd3pzX05fZS1BeXJoQVNzRnR0Z3J6aF9raWxPRjQ2ZUFDb1JkYm5tNUx0NnlJMXdXYkh1YW9tNlhXSjhYRT0ifX1dfQ==","iv":"1q9S3J2A7MZE-0VX","ciphertext":"D7l3RTkiJjfGInIUv2IghsZ9zMVUAfhlovz4tFp64QOwH1vWl1C7bpYM02hfptWEXwqfrnwglymqG-vZEfHyRXblfs6hYVvWkbuny8g6WNMU4LWdXZCmt3omFqXa0KX8ZqDknYgWF9pdKw8zMfPwz-cTxG2I4CEVHOWAGrrE5SDGJcHS_tqFb-XCIrGoKt-oIjDeZzVB6gOVtWqt7iWWAHp6LA_ZgLgADz6fOmhgrq-b3dY3SBFqf5OtipFkabuRpX_mHauxz8yg1e4bgKOgO3jTKhqaN8vGRNMlJ-qL5jIfAWd83kG2mHXur8gu3CQRiyHQxeT7fVkyJaSYRJ06Xiwi9X6ejo3P89t7Rc_PuzhD621DM40QhQGNMTejEx0wftyh7ubdAPHy2j7QpzDc0Hkv-1GH2fqLdKUJhVd8iT4Ab0401HQ0akZ_qn0ilev6v5ria4OfVara5Twh0gx5XP_t2fvywU9WQtHpiZSuMxWkShLb4jGeMtlFJt_-6HTNfRAVNvfCItIt1yV43hBTikaS9xycMgbRSvbaw8w_nvPwMC47BkVOWHS4Qn4PzL63T5r7YbHoiCcyZnfweuE92Hw4ptqvnZHwCOFfYpx5B3AhbwDAkTzjWnBldyGJL8-IT_kTOIaJUucI-GBtIvCzQjdXLVr0g-YKEJQ-op-Diq7maew7d41s3QOQ7LQ7QYpdWsI-b4fe-JepLZ6V-ZpOEOvJ-ImPiHq618cX2CWSqUkOE8jKyLsetnrEd0eheT8cwGS7343gfV7Q39FEAVucFBf6VKIh34xQOJ3rrwF9ZUX264zEROJ-cnNkoGDg3-VfvGK0w1XpvUaOXKxnDal9LpqMgUXnBVxGIjxRwuoYc8msq9ROxSQWLEgmR52TUDkZ4qRW6Rg6aRFG-H4ai8xdopGB7kkPP_9eqLqxpuzVbRy-8j8K9cxeeJ4nzsoigN65gp_MDRhO2Rq9l_n3uo5E-hnMOnFXL5-SZi9JcYKC0h1DAXiqCVHOvkchbmiSnhrcgFQALEOfA9QfZps0rzAeSkondFTMOxUtyBJRWIjc_TRW8qvK-ZSeFLYSHmNvS35FeAZXeYRCel0Macz9EY_TRa2pde467IlXKQCpzZRl0Px0_ruWREdwkecxng1KlluNg0iZdY8hxOLNDLY9jq5DOxkwQP6LvklaH-Sm4GRnEfCxy6ZHQOs_gPVr8avwDCarJRbTeqp5WgYVUZC9BqDXu_IijKK6CHSys34YWZAqj7n1_efIlZ1FBQkv2hDGkZicJeJHqlHy3XkOm-cClj53qFviwWB7oH_n58-FreEmiFYy1398Rp7Vs8o_U3wFSQJ3yW43bx7cxWdWSrP-GmJWiT_OlWiDYQ==","tag":"xXnlH2P_kqWokb1v-noT0A=="}'; Headers: {'Content-Type': 'application/ssi-agent-wire'}
unpack_message: >>> wallet_handle: 3, jwe: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJweGxiSFdYY0FzekpZemRUME5RaVY0MzN5bG9kREZVLV85LW5iR3h1WGlXNXNVZWRJbFlwWDV0QTh0SnlXRHhxIiwiaGVhZGVyIjp7ImtpZCI6IkY2ZFZvUkpNeEQyZnJFbjZKazFWNGE4TGNYaGNTTExhbU5DZXZacHBVMVBxIiwiaXYiOiJZbmZ6Z1ExNnRBU0NEUHRDVWdDblkzRC1xYkhMS3VMdyIsInNlbmRlciI6Im5MN2N2aUNqOGZIU3piOGkxSmRWclZ3bnhJR1NKS2JIekxxcERPV0c0VmtYa043Y2l5ZU5wVG43QTV0SG5lU1d3TXZYc3lBZG53WG5iZVJTVjl3cG5BN1dTOWVBOVJHOTV6YzlaTm9teUZGdjFrb1JIMmd6S2tQNGpSbz0ifX1dfQ==","iv":"_Cg2NIPGwe2uMHTG","ciphertext":"bVsZ1sh2ReoKVOzCKEbvXbzG78ct_YncFNXiLnNGsSYB9pOkhrZd4HgeAPsHDsmmpIMHywiry5HA2vDuDgJto5kzdISBZtMLkDU4IOyjVIghQvCqnmkAU5n_3qnE0mUsa2S3DBRNkx3fvK0K7NO3ilPSRp6hsiz476Zh-U2Z5c5l8ZjVLx07PP9_V3xfqJr8ddqp3ZblPP7qrvQmH9yCJV23uaO_GG7pfqaS_sAyfi3099JI1r0TbwkPxlnM79CArYF5k4_rUU2uKFUl728f9dRE0yl4hvz2qfzOjtaN11KPMpN5V9XKM1-VC7qayn0kLmwSpZBPbedtxT6g4dju2CLfBJ8n_USvRG7z43bJjKBujz9g0DxTRhNRZ82cx6Zik4lDmMwhVs9VmyCIHzbWPSlMkUwHMPqqu_EdcRl-AaeZAKLENFKQM4PDeXwYcbzgngJElt-H9No_P9zmhKHokXyoY78onpgTfyiJZlEJkSGsojVCgkLVuARQvRDYP7hTlsmExQsEVNDqWnv_PaiLm_-kTgqw0L2f3hfvC5OY4NDGvArGh1aWEV4aS27n8SlSPANZ7AXQmIVaBQjw9ZGln8i4JOlTQrujm4llB2cnjsIKAhSIY_YA3587xra31Qxz_pEIgYD5hp55BKrxmKW4tmFBFGaxj0-ks9yaSeZXA0YN5O-7fXJn-AzkoZJqQS73XR1OtWlPxcjXyKuftYui5YQrGLKY3Vok6kftgw4eysKszKm-kukh0_uTynk1TtZx5swXrbLT0nhlWFI81LzRLqimIYQxMgdO3aKtHSX-ASSqCYuQhval-QqBZDq4cXGd97LampTqLrcvWlg9wp63SeFCpuCEzwWxTJzeUdOBoy_N7wDmuWaL6fE3Ln8Yni_LC2Wa3Q7O9pzmi3F75eTvjJYqrsalUUc-LStfBWOBwhjIsamxIGBaT_Js9qAwuJn9CnDmD-oeiPIdyDswvF1BfXgIzRDHua5qy1EjAEh0_a378rxWOVLNL9chevOAmp4BeHJ-eTw_N4lfIflM-XTqdi4DroN-qYQNSwQ9lBTTWsu5pFvzSMajDeBA2rrupVkX8nqQeUuZV3PFnroJmbajd-Sen5rwPyZcuDIJdSFGdwsKoq3FfI0vLm2OFzcSJONLrjgoShY32AS-9OwSA3XSWZAeNiqz4gwViXAmi1o5g6h1fYk6JPXWXMohAcx3lYNIV6stgvqi6lFIId2j8xzVsQduu9r7yjpy0nk1eAXWNYArczVN-IuFtiubmHjWcYHoRgZvqV6DFF0qM7YmQM7SH4SFX1UE0ZYCdWUfUdVeLYyZA6rMXGw7TxHlYTA5sFc_U57eFylBGbJljfEzV5WYcqigyQvWkw--U5AKxTybx8O-38zQAPykyoQ6JidDi7hYETUBt_02nZbd0PbH10i4bL3C-RHz3UIJhQ7yUGH3OeBiTL4t6qjEKEOxGSTvX3TNIpxK8_3k_PdWdpC3WlzNIV35GovtakjDePaJgZjM2lnHU95nn2LgpaQ7MHZsyeIdZp0p9caky7XSNohicxkS3Ahn3xIBnSlPv31tw8Wyh1gseg49B-3rd4SPQjGOfAInlONIKHguuVJikUesqeOLE_k1i_Oq6srtiJTJP62KfZ-GnVnTxV7Txj3DFsKKNTvA-gn9jolp5xc2w1NA_-N-ZMdl7rLwwLDgtQ9fJnBzTe6vStVRJesKPRwemG7gg1K3qYAzP1wsNDhtrZwYllB6gJrEfqJMuYEtDly8txPYr8P2MCwyE-6i02Kuel0VqqxZqQNErc0uPhPERNXYG9LdjRPEAZ1hGfRmq9FMadCFgG9TnGmjNM_EinMjozSXERFxBBkuxqLCRRtWHdHhBYfQu9pzJNCzV4A11xzreFQN3ptcpAZLrSoIskIS-lzvohSf9M2CcFrg1vwzTl3THDD89Oj62svcn8GoOgIU-IE82FGHyHrEEY3PsAuHRMFbSGtda5NrR0FALhj2l8STMydcMVqVBfBdYJj6eYtjo_pJgPj-pXE40pmraa2PgNiXr9VtOxdeZSty9URU0cvrdVD9_kN2WpD1nFnWfhzovu3cZiE7h35kM2gjr1XpcGGyH5AwVVjzB1lM2dkAOCI5K-4K4B6Nwe7dqEAVxd9zWYL2STPUG87uh1Lfc2wZ6Lvyh95AgdKmS3AJ4S0hUpLiDp48UeO5gcDO741Fw9cSy66LgcaPEZAnq3H3uUXJDuu0p1ChHOvvF6isC0Y0wDIbUrZxgFHwqwRjcgGso9nSo3mkj-fCCOjSHxS2z2Ls5yJl_KuK3Q==","tag":"o8ZgQ-oxLhm_mxw367TV-w=="}'
unpack_message: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99efcfe58>
do_call: >>> name: indy_unpack_message, args: (c_int(3), b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJweGxiSFdYY0FzekpZemRUME5RaVY0MzN5bG9kREZVLV85LW5iR3h1WGlXNXNVZWRJbFlwWDV0QTh0SnlXRHhxIiwiaGVhZGVyIjp7ImtpZCI6IkY2ZFZvUkpNeEQyZnJFbjZKazFWNGE4TGNYaGNTTExhbU5DZXZacHBVMVBxIiwiaXYiOiJZbmZ6Z1ExNnRBU0NEUHRDVWdDblkzRC1xYkhMS3VMdyIsInNlbmRlciI6Im5MN2N2aUNqOGZIU3piOGkxSmRWclZ3bnhJR1NKS2JIekxxcERPV0c0VmtYa043Y2l5ZU5wVG43QTV0SG5lU1d3TXZYc3lBZG53WG5iZVJTVjl3cG5BN1dTOWVBOVJHOTV6YzlaTm9teUZGdjFrb1JIMmd6S2tQNGpSbz0ifX1dfQ==","iv":"_Cg2NIPGwe2uMHTG","ciphertext":"bVsZ1sh2ReoKVOzCKEbvXbzG78ct_YncFNXiLnNGsSYB9pOkhrZd4HgeAPsHDsmmpIMHywiry5HA2vDuDgJto5kzdISBZtMLkDU4IOyjVIghQvCqnmkAU5n_3qnE0mUsa2S3DBRNkx3fvK0K7NO3ilPSRp6hsiz476Zh-U2Z5c5l8ZjVLx07PP9_V3xfqJr8ddqp3ZblPP7qrvQmH9yCJV23uaO_GG7pfqaS_sAyfi3099JI1r0TbwkPxlnM79CArYF5k4_rUU2uKFUl728f9dRE0yl4hvz2qfzOjtaN11KPMpN5V9XKM1-VC7qayn0kLmwSpZBPbedtxT6g4dju2CLfBJ8n_USvRG7z43bJjKBujz9g0DxTRhNRZ82cx6Zik4lDmMwhVs9VmyCIHzbWPSlMkUwHMPqqu_EdcRl-AaeZAKLENFKQM4PDeXwYcbzgngJElt-H9No_P9zmhKHokXyoY78onpgTfyiJZlEJkSGsojVCgkLVuARQvRDYP7hTlsmExQsEVNDqWnv_PaiLm_-kTgqw0L2f3hfvC5OY4NDGvArGh1aWEV4aS27n8SlSPANZ7AXQmIVaBQjw9ZGln8i4JOlTQrujm4llB2cnjsIKAhSIY_YA3587xra31Qxz_pEIgYD5hp55BKrxmKW4tmFBFGaxj0-ks9yaSeZXA0YN5O-7fXJn-AzkoZJqQS73XR1OtWlPxcjXyKuftYui5YQrGLKY3Vok6kftgw4eysKszKm-kukh0_uTynk1TtZx5swXrbLT0nhlWFI81LzRLqimIYQxMgdO3aKtHSX-ASSqCYuQhval-QqBZDq4cXGd97LampTqLrcvWlg9wp63SeFCpuCEzwWxTJzeUdOBoy_N7wDmuWaL6fE3Ln8Yni_LC2Wa3Q7O9pzmi3F75eTvjJYqrsalUUc-LStfBWOBwhjIsamxIGBaT_Js9qAwuJn9CnDmD-oeiPIdyDswvF1BfXgIzRDHua5qy1EjAEh0_a378rxWOVLNL9chevOAmp4BeHJ-eTw_N4lfIflM-XTqdi4DroN-qYQNSwQ9lBTTWsu5pFvzSMajDeBA2rrupVkX8nqQeUuZV3PFnroJmbajd-Sen5rwPyZcuDIJdSFGdwsKoq3FfI0vLm2OFzcSJONLrjgoShY32AS-9OwSA3XSWZAeNiqz4gwViXAmi1o5g6h1fYk6JPXWXMohAcx3lYNIV6stgvqi6lFIId2j8xzVsQduu9r7yjpy0nk1eAXWNYArczVN-IuFtiubmHjWcYHoRgZvqV6DFF0qM7YmQM7SH4SFX1UE0ZYCdWUfUdVeLYyZA6rMXGw7TxHlYTA5sFc_U57eFylBGbJljfEzV5WYcqigyQvWkw--U5AKxTybx8O-38zQAPykyoQ6JidDi7hYETUBt_02nZbd0PbH10i4bL3C-RHz3UIJhQ7yUGH3OeBiTL4t6qjEKEOxGSTvX3TNIpxK8_3k_PdWdpC3WlzNIV35GovtakjDePaJgZjM2lnHU95nn2LgpaQ7MHZsyeIdZp0p9caky7XSNohicxkS3Ahn3xIBnSlPv31tw8Wyh1gseg49B-3rd4SPQjGOfAInlONIKHguuVJikUesqeOLE_k1i_Oq6srtiJTJP62KfZ-GnVnTxV7Txj3DFsKKNTvA-gn9jolp5xc2w1NA_-N-ZMdl7rLwwLDgtQ9fJnBzTe6vStVRJesKPRwemG7gg1K3qYAzP1wsNDhtrZwYllB6gJrEfqJMuYEtDly8txPYr8P2MCwyE-6i02Kuel0VqqxZqQNErc0uPhPERNXYG9LdjRPEAZ1hGfRmq9FMadCFgG9TnGmjNM_EinMjozSXERFxBBkuxqLCRRtWHdHhBYfQu9pzJNCzV4A11xzreFQN3ptcpAZLrSoIskIS-lzvohSf9M2CcFrg1vwzTl3THDD89Oj62svcn8GoOgIU-IE82FGHyHrEEY3PsAuHRMFbSGtda5NrR0FALhj2l8STMydcMVqVBfBdYJj6eYtjo_pJgPj-pXE40pmraa2PgNiXr9VtOxdeZSty9URU0cvrdVD9_kN2WpD1nFnWfhzovu3cZiE7h35kM2gjr1XpcGGyH5AwVVjzB1lM2dkAOCI5K-4K4B6Nwe7dqEAVxd9zWYL2STPUG87uh1Lfc2wZ6Lvyh95AgdKmS3AJ4S0hUpLiDp48UeO5gcDO741Fw9cSy66LgcaPEZAnq3H3uUXJDuu0p1ChHOvvF6isC0Y0wDIbUrZxgFHwqwRjcgGso9nSo3mkj-fCCOjSHxS2z2Ls5yJl_KuK3Q==","tag":"o8ZgQ-oxLhm_mxw367TV-w=="}', c_uint(2941), <CFunctionType object at 0x7fd99efcfe58>)
do_call: Function indy_unpack_message returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [97, 50, 75, 52, 116, 48, 101, 118, 65, 65, 104, 120, 49, 89, 87, 57, 53, 111, 118, 53, 55, 69, 87, 51, 50, 53, 50, 120, 50, 112, 114, 121, 122, 119, 122, 49, 78, 68, 106, 114, 78, 43, 71, 57, 56, 121, 120, 90, 65, 88, 114, 72, 110, 116, 114, 97, 101, 75, 99, 57, 87, 114, 84, 106, 56, 49, 77, 48, 72, 77, 98, 67, 66, 97, 77, 70, 43, 73, 98, 43, 51, 116, 112, 82, 116, 56, 52, 97, 115, 121, 83, 98, 113, 71, 52, 65], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [97, 50, 75, 52, 116, 48, 101, 118, 65, 65, 104, 120, 49, 89, 87, 57, 53, 111, 118, 53, 55, 69, 87, 51, 50, 53, 50, 120, 50, 112, 114, 121, 122, 119, 122, 49, 78, 68, 106, 114, 78, 43, 71, 57, 56, 121, 120, 90, 65, 88, 114, 72, 110, 116, 114, 97, 101, 75, 99, 57, 87, 114, 84, 106, 56, 49, 77, 48, 72, 77, 98, 67, 66, 97, 77, 70, 43, 73, 98, 43, 51, 116, 112, 82, 116, 56, 52, 97, 115, 121, 83, 98, 113, 71, 52, 65], "Medic"]
_indy_callback: >>> command_handle: 28, err , args: (b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response\\", \\"@id\\": \\"10db6d48-dd2e-43df-b01e-b5cf02bf9d1b\\", \\"~thread\\": {\\"thid\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\"}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:41:07.369640Z\\", \\"out_time\\": \\"2021-05-17 12:41:07.517054Z\\"}, \\"connection~sig\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/signature/1.0/ed25519Sha512_single\\", \\"signature\\": \\"itwtM5YR6DfhtkzZ3Veob09wxCDuAM-WGb3q58sFxuS1Foab5QoZvIU5Ki8SeAuac_TJPuXT874gp7vT88J3Ag==\\", \\"sig_data\\": \\"AAAAAGCiZGN7IkRJRCI6ICJReGtGblV4TXFiU1piQzkxb240czR4IiwgIkRJRERvYyI6IHsiQGNvbnRleHQiOiAiaHR0cHM6Ly93M2lkLm9yZy9kaWQvdjEiLCAiaWQiOiAiZGlkOnNvdjpReGtGblV4TXFiU1piQzkxb240czR4IiwgInB1YmxpY0tleSI6IFt7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eCMxIiwgInR5cGUiOiAiRWQyNTUxOVZlcmlmaWNhdGlvbktleTIwMTgiLCAiY29udHJvbGxlciI6ICJkaWQ6c292OlF4a0ZuVXhNcWJTWmJDOTFvbjRzNHgiLCAicHVibGljS2V5QmFzZTU4IjogIkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIn1dLCAiYXV0aGVudGljYXRpb24iOiBbeyJ0eXBlIjogIkVkMjU1MTlTaWduYXR1cmVBdXRoZW50aWNhdGlvbjIwMTgiLCAicHVibGljS2V5IjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eCMxIn1dLCAic2VydmljZSI6IFt7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eDtpbmR5IiwgInR5cGUiOiAiSW5keUFnZW50IiwgInByaW9yaXR5IjogMCwgInJlY2lwaWVudEtleXMiOiBbIkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIl0sICJzZXJ2aWNlRW5kcG9pbnQiOiAiaHR0cDovLzIyZDE4MzY2YjYxYS5uZ3Jvay5pbyJ9LCB7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eDtpbmR5MSIsICJ0eXBlIjogIkluZHlBZ2VudCIsICJwcmlvcml0eSI6IDAsICJyZWNpcGllbnRLZXlzIjogWyJFNFRjMWZmQzdoV3Ntbm1YTHhDMzRDTldYWFBqTHZwU0M2aGRqYUtnUkdabSJdLCAic2VydmljZUVuZHBvaW50IjogIndzOi8vMjJkMTgzNjZiNjFhLm5ncm9rLmlvIn1dfX0=\\", \\"signer\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\"}}","recipient_verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","sender_verkey":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 28, err , args: (b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response\\", \\"@id\\": \\"10db6d48-dd2e-43df-b01e-b5cf02bf9d1b\\", \\"~thread\\": {\\"thid\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\"}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:41:07.369640Z\\", \\"out_time\\": \\"2021-05-17 12:41:07.517054Z\\"}, \\"connection~sig\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/signature/1.0/ed25519Sha512_single\\", \\"signature\\": \\"itwtM5YR6DfhtkzZ3Veob09wxCDuAM-WGb3q58sFxuS1Foab5QoZvIU5Ki8SeAuac_TJPuXT874gp7vT88J3Ag==\\", \\"sig_data\\": \\"AAAAAGCiZGN7IkRJRCI6ICJReGtGblV4TXFiU1piQzkxb240czR4IiwgIkRJRERvYyI6IHsiQGNvbnRleHQiOiAiaHR0cHM6Ly93M2lkLm9yZy9kaWQvdjEiLCAiaWQiOiAiZGlkOnNvdjpReGtGblV4TXFiU1piQzkxb240czR4IiwgInB1YmxpY0tleSI6IFt7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eCMxIiwgInR5cGUiOiAiRWQyNTUxOVZlcmlmaWNhdGlvbktleTIwMTgiLCAiY29udHJvbGxlciI6ICJkaWQ6c292OlF4a0ZuVXhNcWJTWmJDOTFvbjRzNHgiLCAicHVibGljS2V5QmFzZTU4IjogIkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIn1dLCAiYXV0aGVudGljYXRpb24iOiBbeyJ0eXBlIjogIkVkMjU1MTlTaWduYXR1cmVBdXRoZW50aWNhdGlvbjIwMTgiLCAicHVibGljS2V5IjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eCMxIn1dLCAic2VydmljZSI6IFt7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eDtpbmR5IiwgInR5cGUiOiAiSW5keUFnZW50IiwgInByaW9yaXR5IjogMCwgInJlY2lwaWVudEtleXMiOiBbIkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIl0sICJzZXJ2aWNlRW5kcG9pbnQiOiAiaHR0cDovLzIyZDE4MzY2YjYxYS5uZ3Jvay5pbyJ9LCB7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eDtpbmR5MSIsICJ0eXBlIjogIkluZHlBZ2VudCIsICJwcmlvcml0eSI6IDAsICJyZWNpcGllbnRLZXlzIjogWyJFNFRjMWZmQzdoV3Ntbm1YTHhDMzRDTldYWFBqTHZwU0M2aGRqYUtnUkdabSJdLCAic2VydmljZUVuZHBvaW50IjogIndzOi8vMjJkMTgzNjZiNjFhLm5ncm9rLmlvIn1dfX0=\\", \\"signer\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\"}}","recipient_verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","sender_verkey":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}',)
_indy_loop_callback: Function returned b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response\\", \\"@id\\": \\"10db6d48-dd2e-43df-b01e-b5cf02bf9d1b\\", \\"~thread\\": {\\"thid\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\"}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:41:07.369640Z\\", \\"out_time\\": \\"2021-05-17 12:41:07.517054Z\\"}, \\"connection~sig\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/signature/1.0/ed25519Sha512_single\\", \\"signature\\": \\"itwtM5YR6DfhtkzZ3Veob09wxCDuAM-WGb3q58sFxuS1Foab5QoZvIU5Ki8SeAuac_TJPuXT874gp7vT88J3Ag==\\", \\"sig_data\\": \\"AAAAAGCiZGN7IkRJRCI6ICJReGtGblV4TXFiU1piQzkxb240czR4IiwgIkRJRERvYyI6IHsiQGNvbnRleHQiOiAiaHR0cHM6Ly93M2lkLm9yZy9kaWQvdjEiLCAiaWQiOiAiZGlkOnNvdjpReGtGblV4TXFiU1piQzkxb240czR4IiwgInB1YmxpY0tleSI6IFt7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eCMxIiwgInR5cGUiOiAiRWQyNTUxOVZlcmlmaWNhdGlvbktleTIwMTgiLCAiY29udHJvbGxlciI6ICJkaWQ6c292OlF4a0ZuVXhNcWJTWmJDOTFvbjRzNHgiLCAicHVibGljS2V5QmFzZTU4IjogIkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIn1dLCAiYXV0aGVudGljYXRpb24iOiBbeyJ0eXBlIjogIkVkMjU1MTlTaWduYXR1cmVBdXRoZW50aWNhdGlvbjIwMTgiLCAicHVibGljS2V5IjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eCMxIn1dLCAic2VydmljZSI6IFt7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eDtpbmR5IiwgInR5cGUiOiAiSW5keUFnZW50IiwgInByaW9yaXR5IjogMCwgInJlY2lwaWVudEtleXMiOiBbIkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIl0sICJzZXJ2aWNlRW5kcG9pbnQiOiAiaHR0cDovLzIyZDE4MzY2YjYxYS5uZ3Jvay5pbyJ9LCB7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eDtpbmR5MSIsICJ0eXBlIjogIkluZHlBZ2VudCIsICJwcmlvcml0eSI6IDAsICJyZWNpcGllbnRLZXlzIjogWyJFNFRjMWZmQzdoV3Ntbm1YTHhDMzRDTldYWFBqTHZwU0M2aGRqYUtnUkdabSJdLCAic2VydmljZUVuZHBvaW50IjogIndzOi8vMjJkMTgzNjZiNjFhLm5ncm9rLmlvIn1dfX0=\\", \\"signer\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\"}}","recipient_verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","sender_verkey":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}'
_indy_loop_callback <<<
unpack_message: <<< res: b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response\\", \\"@id\\": \\"10db6d48-dd2e-43df-b01e-b5cf02bf9d1b\\", \\"~thread\\": {\\"thid\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\"}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:41:07.369640Z\\", \\"out_time\\": \\"2021-05-17 12:41:07.517054Z\\"}, \\"connection~sig\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/signature/1.0/ed25519Sha512_single\\", \\"signature\\": \\"itwtM5YR6DfhtkzZ3Veob09wxCDuAM-WGb3q58sFxuS1Foab5QoZvIU5Ki8SeAuac_TJPuXT874gp7vT88J3Ag==\\", \\"sig_data\\": \\"AAAAAGCiZGN7IkRJRCI6ICJReGtGblV4TXFiU1piQzkxb240czR4IiwgIkRJRERvYyI6IHsiQGNvbnRleHQiOiAiaHR0cHM6Ly93M2lkLm9yZy9kaWQvdjEiLCAiaWQiOiAiZGlkOnNvdjpReGtGblV4TXFiU1piQzkxb240czR4IiwgInB1YmxpY0tleSI6IFt7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eCMxIiwgInR5cGUiOiAiRWQyNTUxOVZlcmlmaWNhdGlvbktleTIwMTgiLCAiY29udHJvbGxlciI6ICJkaWQ6c292OlF4a0ZuVXhNcWJTWmJDOTFvbjRzNHgiLCAicHVibGljS2V5QmFzZTU4IjogIkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIn1dLCAiYXV0aGVudGljYXRpb24iOiBbeyJ0eXBlIjogIkVkMjU1MTlTaWduYXR1cmVBdXRoZW50aWNhdGlvbjIwMTgiLCAicHVibGljS2V5IjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eCMxIn1dLCAic2VydmljZSI6IFt7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eDtpbmR5IiwgInR5cGUiOiAiSW5keUFnZW50IiwgInByaW9yaXR5IjogMCwgInJlY2lwaWVudEtleXMiOiBbIkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIl0sICJzZXJ2aWNlRW5kcG9pbnQiOiAiaHR0cDovLzIyZDE4MzY2YjYxYS5uZ3Jvay5pbyJ9LCB7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eDtpbmR5MSIsICJ0eXBlIjogIkluZHlBZ2VudCIsICJwcmlvcml0eSI6IDAsICJyZWNpcGllbnRLZXlzIjogWyJFNFRjMWZmQzdoV3Ntbm1YTHhDMzRDTldYWFBqTHZwU0M2aGRqYUtnUkdabSJdLCAic2VydmljZUVuZHBvaW50IjogIndzOi8vMjJkMTgzNjZiNjFhLm5ncm9rLmlvIn1dfX0=\\", \\"signer\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\"}}","recipient_verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","sender_verkey":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}'
Expanded message: {'@type': 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response', '@id': '10db6d48-dd2e-43df-b01e-b5cf02bf9d1b', '~thread': {'thid': '5c86d714-9808-4bc8-a653-6abb4c381dab'}, '~timing': {'in_time': '2021-05-17 12:41:07.369640Z', 'out_time': '2021-05-17 12:41:07.517054Z'}, 'connection~sig': {'@type': 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/signature/1.0/ed25519Sha512_single', 'signature': 'itwtM5YR6DfhtkzZ3Veob09wxCDuAM-WGb3q58sFxuS1Foab5QoZvIU5Ki8SeAuac_TJPuXT874gp7vT88J3Ag==', 'sig_data': 'AAAAAGCiZGN7IkRJRCI6ICJReGtGblV4TXFiU1piQzkxb240czR4IiwgIkRJRERvYyI6IHsiQGNvbnRleHQiOiAiaHR0cHM6Ly93M2lkLm9yZy9kaWQvdjEiLCAiaWQiOiAiZGlkOnNvdjpReGtGblV4TXFiU1piQzkxb240czR4IiwgInB1YmxpY0tleSI6IFt7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eCMxIiwgInR5cGUiOiAiRWQyNTUxOVZlcmlmaWNhdGlvbktleTIwMTgiLCAiY29udHJvbGxlciI6ICJkaWQ6c292OlF4a0ZuVXhNcWJTWmJDOTFvbjRzNHgiLCAicHVibGljS2V5QmFzZTU4IjogIkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIn1dLCAiYXV0aGVudGljYXRpb24iOiBbeyJ0eXBlIjogIkVkMjU1MTlTaWduYXR1cmVBdXRoZW50aWNhdGlvbjIwMTgiLCAicHVibGljS2V5IjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eCMxIn1dLCAic2VydmljZSI6IFt7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eDtpbmR5IiwgInR5cGUiOiAiSW5keUFnZW50IiwgInByaW9yaXR5IjogMCwgInJlY2lwaWVudEtleXMiOiBbIkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIl0sICJzZXJ2aWNlRW5kcG9pbnQiOiAiaHR0cDovLzIyZDE4MzY2YjYxYS5uZ3Jvay5pbyJ9LCB7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eDtpbmR5MSIsICJ0eXBlIjogIkluZHlBZ2VudCIsICJwcmlvcml0eSI6IDAsICJyZWNpcGllbnRLZXlzIjogWyJFNFRjMWZmQzdoV3Ntbm1YTHhDMzRDTldYWFBqTHZwU0M2aGRqYUtnUkdabSJdLCAic2VydmljZUVuZHBvaW50IjogIndzOi8vMjJkMTgzNjZiNjFhLm5ncm9rLmlvIn1dfX0=', 'signer': '5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP'}}
  {"msg_id": "10db6d48-dd2e-43df-b01e-b5cf02bf9d1b", "thread_id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response", "timestamp": 1621255267.8993764, "str_time": "2021-05-17 12:41:07.899376", "handler": "Medic", "ellapsed_milli": 0, "outcome": "Dispatcher.handle_message.START"}
open_wallet_search: >>> wallet_handle: 3, type_: 'did_key', query_json: '{"key": "E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": true}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140573273221392), c_char_p(140573273286624), c_char_p(140573275298224), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
192.168.208.2 [17/May/2021:12:41:07 +0000] "POST / HTTP/1.1" 200 149 "-" "Python/3.6 aiohttp/3.6.3"
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s5`: SELECT name, value from tags_plaintext where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s6`: SELECT name, value from tags_encrypted where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [[69, 104, 65, 48, 66, 67, 100, 89, 99, 115, 89, 78, 116, 108, 102, 109, 47, 81, 54, 66, 110, 65, 84, 83, 83, 56, 113, 43, 70, 54, 121, 122, 103, 106, 53, 101, 73, 53, 49, 49, 81, 88, 89, 69, 106, 114, 52, 61], [83, 152, 196, 253, 34, 233, 87, 108, 237, 20, 191, 58, 226, 16, 57, 168, 83, 202, 171, 251, 133, 250, 174, 19, 56, 23, 89, 51, 13, 68, 156], [61, 137, 155, 5, 97, 18, 79, 204, 240, 150, 171, 52, 20, 97, 250, 6, 230, 169, 179, 157, 128, 5, 136, 25, 253, 155, 132, 144, 129, 221, 105, 196, 184, 42, 207, 126, 141, 97, 119, 196, 91, 173, 75, 5, 180, 14, 71, 208, 23, 170, 255, 111, 74, 254, 82, 170, 241, 16, 232, 67, 197, 197, 15, 208, 140, 55, 87, 91, 66, 147, 127, 196], "Medic", "Medic"]
_indy_callback: >>> command_handle: 29, err , args: (10,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 29, err , args: (10,)
_indy_loop_callback: Function returned 10
_indy_loop_callback <<<
open_wallet_search: <<< res: 10
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 10, count: 2
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(10), c_uint(2), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
_indy_callback: >>> command_handle: 30, err , args: (b'{"totalCount":null,"records":null}',)
do_call: <<< <Future pending>
_indy_loop_callback: >>> command_handle: 30, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
_indy_callback: <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 10
do_call: >>> name: indy_close_wallet_search, args: (c_int(10), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
_indy_callback: >>> command_handle: 31, err , args: ()
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 31, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
No corresponding DID found for sender verkey: E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm
list_my_dids_with_meta: >>> wallet_handle: 3
do_call: >>> name: indy_list_my_dids_with_meta, args: (c_int(3), <CFunctionType object at 0x7fd9c8bff818>)
do_call: Function indy_list_my_dids_with_meta returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s2`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s2 with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s7`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s7 with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s3`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s3 with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 32, err , args: (b'[{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 32, err , args: (b'[{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]',)
_indy_loop_callback: Function returned b'[{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]'
_indy_loop_callback <<<
list_my_dids_with_meta: <<< res: '[{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]'
open_wallet_search: >>> wallet_handle: 3, type_: 'connection', query_json: '{"invitation_key": "F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140573352774448), c_char_p(140573273513192), c_char_p(140573275297904), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s8`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s8 with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [167, 23, 192, 116, 15, 80, 7, 17, 243, 99, 244, 59, 154, 126, 107, 57, 135, 84, 159, 190, 13, 172, 65, 255, 177, 138, 12, 161, 20, 85, 206, 120, 152, 242, 71, 250, 30, 185, 163, 95, 53, 127], [4, 29, 246, 112, 103, 47, 4, 93, 114, 115, 117, 6, 125, 250, 169, 197, 190, 116, 204, 238, 6, 206, 129, 4, 73, 168, 14, 218, 213, 206, 248, 164, 96, 107, 147, 94, 171, 114, 177, 106, 234, 26, 110, 57, 139, 227, 33, 169, 48, 109, 187, 160, 20, 211, 116, 2, 47, 114, 235, 139, 62, 121, 177, 139, 150, 1, 68, 117, 2, 136, 220, 151], "Medic", "Medic"]
_indy_callback: >>> command_handle: 33, err , args: (11,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 33, err , args: (11,)
_indy_loop_callback: Function returned 11
_indy_loop_callback <<<
open_wallet_search: <<< res: 11
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 11, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(11), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
_indy_callback: >>> command_handle: 34, err , args: (b'{"totalCount":null,"records":null}',)
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 34, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 11
do_call: >>> name: indy_close_wallet_search, args: (c_int(11), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
_indy_callback: >>> command_handle: 35, err , args: ()
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 35, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
ConnectionResponseHandler called with context <RequestContext(_connection_ready=None, _connection_record=None, _context=<aries_cloudagent.config.injection_context.InjectionContext object at 0x7fd99effb3c8>, _message=<ConnectionResponse(_message_id='10db6d48-dd2e-43df-b01e-b5cf02bf9d1b', _message_new_id=False, _message_decorators=<DecoratorSet{~thread: <ThreadDecorator(_thid='5c86d714-9808-4bc8-a653-6abb4c381dab', _pthid=None, _sender_order=None, _received_orders=None)>, ~timing: <TimingDecorator(in_time='2021-05-17 12:41:07.369640Z', out_time='2021-05-17 12:41:07.517054Z', stale_time=None, expires_time=None, delay_milli=None, wait_until_time=None)>}>, connection=<ConnectionDetail(_did='QxkFnUxMqbSZbC91on4s4x', _did_doc=<DIDDoc did=QxkFnUxMqbSZbC91on4s4x>)>)>, _message_receipt=<MessageReceipt(_connection_id=None, _direct_response_mode=None, _in_time='2021-05-17 12:41:07.882716Z', _raw_message='{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response", "@id": "10db6d48-dd2e-43df-b01e-b5cf02bf9d1b", "~thread": {"thid": "5c86d714-9808-4bc8-a653-6abb4c381dab"}, "~timing": {"in_time": "2021-05-17 12:41:07.369640Z", "out_time": "2021-05-17 12:41:07.517054Z"}, "connection~sig": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/signature/1.0/ed25519Sha512_single", "signature": "itwtM5YR6DfhtkzZ3Veob09wxCDuAM-WGb3q58sFxuS1Foab5QoZvIU5Ki8SeAuac_TJPuXT874gp7vT88J3Ag==", "sig_data": "AAAAAGCiZGN7IkRJRCI6ICJReGtGblV4TXFiU1piQzkxb240czR4IiwgIkRJRERvYyI6IHsiQGNvbnRleHQiOiAiaHR0cHM6Ly93M2lkLm9yZy9kaWQvdjEiLCAiaWQiOiAiZGlkOnNvdjpReGtGblV4TXFiU1piQzkxb240czR4IiwgInB1YmxpY0tleSI6IFt7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eCMxIiwgInR5cGUiOiAiRWQyNTUxOVZlcmlmaWNhdGlvbktleTIwMTgiLCAiY29udHJvbGxlciI6ICJkaWQ6c292OlF4a0ZuVXhNcWJTWmJDOTFvbjRzNHgiLCAicHVibGljS2V5QmFzZTU4IjogIkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIn1dLCAiYXV0aGVudGljYXRpb24iOiBbeyJ0eXBlIjogIkVkMjU1MTlTaWduYXR1cmVBdXRoZW50aWNhdGlvbjIwMTgiLCAicHVibGljS2V5IjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eCMxIn1dLCAic2VydmljZSI6IFt7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eDtpbmR5IiwgInR5cGUiOiAiSW5keUFnZW50IiwgInByaW9yaXR5IjogMCwgInJlY2lwaWVudEtleXMiOiBbIkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIl0sICJzZXJ2aWNlRW5kcG9pbnQiOiAiaHR0cDovLzIyZDE4MzY2YjYxYS5uZ3Jvay5pbyJ9LCB7ImlkIjogImRpZDpzb3Y6UXhrRm5VeE1xYlNaYkM5MW9uNHM0eDtpbmR5MSIsICJ0eXBlIjogIkluZHlBZ2VudCIsICJwcmlvcml0eSI6IDAsICJyZWNpcGllbnRLZXlzIjogWyJFNFRjMWZmQzdoV3Ntbm1YTHhDMzRDTldYWFBqTHZwU0M2aGRqYUtnUkdabSJdLCAic2VydmljZUVuZHBvaW50IjogIndzOi8vMjJkMTgzNjZiNjFhLm5ncm9rLmlvIn1dfX0=", "signer": "5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP"}}', _recipient_verkey='F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq', _recipient_did='Ss9L55FVLDVAE9wH9QUaLm', _recipient_did_public=None, _sender_did=None, _sender_verkey='E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm', _thread_id='5c86d714-9808-4bc8-a653-6abb4c381dab')>, _profile=<IndySdkProfile(backend=indy, name=Medic)>)>
open_wallet_search: >>> wallet_handle: 3, type_: 'connection', query_json: '{"request_id": "5c86d714-9808-4bc8-a653-6abb4c381dab"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140573273866320), c_char_p(140573273286800), c_char_p(140573275297904), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s4`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s4 with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [27, 226, 221, 240, 203, 243, 82, 65, 0, 81, 190, 180, 210, 22, 123, 46, 87, 60, 91, 123, 197, 182, 67, 89, 146, 121, 217, 236, 110, 174, 137, 104, 108, 127, 139, 128, 29, 20], [143, 43, 198, 179, 161, 47, 232, 33, 222, 197, 245, 31, 246, 64, 19, 225, 53, 3, 42, 201, 233, 247, 50, 253, 69, 91, 84, 45, 91, 200, 78, 27, 134, 48, 125, 244, 161, 51, 206, 22, 135, 15, 68, 220, 166, 35, 46, 31, 176, 30, 197, 155, 41, 185, 129, 233, 2, 229, 3, 63, 255, 4, 91, 224], "Medic", "Medic"]
_indy_callback: >>> command_handle: 36, err , args: (12,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 36, err , args: (12,)
_indy_loop_callback: Function returned 12
_indy_loop_callback <<<
open_wallet_search: <<< res: 12
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 12, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(12), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 37, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:06.929474Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}]}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 37, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:06.929474Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}]}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":[{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:06.929474Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}]}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":[{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:06.929474Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}]}'
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 12, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(12), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
_indy_callback: >>> command_handle: 38, err , args: (b'{"totalCount":null,"records":null}',)
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 38, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 12
do_call: >>> name: indy_close_wallet_search, args: (c_int(12), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 39, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 39, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
open_wallet_search: >>> wallet_handle: 3, type_: 'did_doc', query_json: '{"did": "QxkFnUxMqbSZbC91on4s4x"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": true}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140573273222392), c_char_p(140572651704264), c_char_p(140573275297904), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s9`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s2`: SELECT name, value from tags_plaintext where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s3`: SELECT name, value from tags_encrypted where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s9 with parameters: [[77, 85, 81, 56, 56, 50, 111, 87, 117, 47, 43, 110, 108, 54, 77, 79, 67, 109, 79, 115, 111, 120, 56, 72, 81, 120, 72, 101, 87, 76, 105, 66, 43, 82, 83, 87, 99, 99, 71, 90, 69, 77, 77, 69, 120, 43, 107, 61], [33, 18, 52, 163, 210, 24, 37, 66, 106, 67, 212, 175, 233, 149, 190, 158, 181, 229, 125, 4, 126, 116, 61, 127, 247, 85, 218, 130, 29, 17, 97], [69, 87, 72, 224, 12, 143, 215, 241, 201, 197, 41, 92, 1, 82, 146, 108, 12, 23, 11, 140, 253, 19, 32, 94, 228, 185, 78, 179, 129, 251, 56, 148, 50, 161, 38, 53, 216, 19, 160, 146, 242, 171, 93, 159, 17, 87, 154, 36, 26, 59], "Medic", "Medic"]
_indy_callback: >>> command_handle: 40, err , args: (13,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 40, err , args: (13,)
_indy_loop_callback: Function returned 13
_indy_loop_callback <<<
open_wallet_search: <<< res: 13
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 13, count: 2
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(13), c_uint(2), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
_indy_callback: >>> command_handle: 41, err , args: (b'{"totalCount":null,"records":null}',)
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 41, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 13
do_call: >>> name: indy_close_wallet_search, args: (c_int(13), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
_indy_callback: >>> command_handle: 42, err , args: ()
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 42, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
add_wallet_record: >>> wallet_handle: 3, type_: 'did_doc', id: '354ce0984d1143a1960b70e6ceadca07', value: '{"@context": "https://w3id.org/did/v1", "id": "did:sov:QxkFnUxMqbSZbC91on4s4x", "publicKey": [{"id": "did:sov:QxkFnUxMqbSZbC91on4s4x#1", "type": "Ed25519VerificationKey2018", "controller": "did:sov:QxkFnUxMqbSZbC91on4s4x", "publicKeyBase58": "E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}], "authentication": [{"type": "Ed25519SignatureAuthentication2018", "publicKey": "did:sov:QxkFnUxMqbSZbC91on4s4x#1"}], "service": [{"id": "did:sov:QxkFnUxMqbSZbC91on4s4x;indy", "type": "IndyAgent", "priority": 0, "recipientKeys": ["E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"], "serviceEndpoint": "http://22d18366b61a.ngrok.io"}, {"id": "did:sov:QxkFnUxMqbSZbC91on4s4x;indy1", "type": "IndyAgent", "priority": 0, "recipientKeys": ["E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"], "serviceEndpoint": "ws://22d18366b61a.ngrok.io"}]}', tags_json: '{"did": "QxkFnUxMqbSZbC91on4s4x"}'
do_call: >>> name: indy_add_wallet_record, args: (c_int(3), c_char_p(140573273222312), c_char_p(140572651704264), c_char_p(94095651164912), c_char_p(140572651729120), <CFunctionType object at 0x7fd9c421ba70>)
do_call: Function indy_add_wallet_record returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s4`: INSERT INTO items (type, name, value, key, wallet_id) VALUES ($1, $2, $3, $4, $5) RETURNING id
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s4 with parameters: [[77, 85, 81, 56, 56, 50, 111, 87, 117, 47, 43, 110, 108, 54, 77, 79, 67, 109, 79, 115, 111, 120, 56, 72, 81, 120, 72, 101, 87, 76, 105, 66, 43, 82, 83, 87, 99, 99, 71, 90, 69, 77, 77, 69, 120, 43, 107, 61], [86, 70, 74, 82, 78, 52, 75, 100, 72, 49, 116, 119, 70, 83, 117, 73, 119, 119, 98, 112, 103, 55, 76, 50, 50, 104, 68, 103, 109, 97, 115, 98, 79, 65, 115, 82, 71, 97, 73, 50, 71, 113, 71, 78, 67, 121, 82, 112, 53, 107, 111, 107, 74, 111, 81, 115, 53, 113, 56, 112, 103, 72, 90, 56, 88, 109, 114, 73, 86, 69, 87, 57, 116, 76, 97, 77, 109, 84, 116, 74], [5, 3, 247, 233, 47, 135, 113, 242, 8, 120, 107, 213, 45, 7, 24, 31, 253, 18, 108, 23, 159, 129, 207, 151, 116, 193, 51, 155, 207, 35, 25, 3, 216, 174, 191, 1, 30, 196, 49, 230, 195, 73, 158, 140, 197, 124, 74, 66, 76, 49, 34, 36, 72, 247, 120, 101, 177, 58, 55, 197, 141, 127, 117, 108, 191, 250, 101, 80, 131, 238, 12, 189, 44, 228, 155, 48, 186, 108, 154, 133, 153, 3, 178, 51, 18, 85, 230, 126, 113, 57, 227, 248, 80, 96, 109, 119, 37, 158, 182, 195, 159, 223, 98, 190, 51, 192, 5, 107, 94, 146, 20, 25, 109, 39, 40, 232, 8, 132, 12, 185, 90, 221, 131, 119, 143, 13, 133, 182, 54, 248, 50, 217, 169, 201, 165, 97, 24, 110, 203, 207, 154, 114, 167, 45, 200, 218, 72, 255, 219, 44, 64, 183, 149, 58, 147, 247, 236, 86, 202, 253, 211, 17, 177, 159, 232, 118, 84, 253, 166, 95, 59, 214, 109, 205, 51, 4, 174, 15, 161, 119, 119, 227, 100, 105, 24, 32, 53, 206, 33, 34, 119, 250, 241, 13, 88, 80, 178, 76, 156, 212, 59, 64, 96, 62, 205, 57, 177, 46, 41, 198, 208, 2, 89, 82, 66, 65, 86, 76, 231, 153, 201, 154, 112, 178, 20, 152, 35, 99, 3, 237, 27, 3, 21, 62, 221, 179, 139, 205, 53, 212, 6, 11, 104, 49, 0, 197, 51, 177, 76, 212, 129, 248, 18, 62, 175, 29, 164, 170, 233, 37, 225, 114, 58, 139, 96, 180, 164, 226, 182, 75, 9, 224, 89, 134, 76, 180, 52, 236, 126, 209, 14, 84, 252, 17, 231, 78, 202, 148, 245, 115, 84, 41, 109, 182, 45, 34, 211, 119, 85, 137, 230, 253, 28, 3, 194, 18, 19, 204, 69, 16, 63, 70, 112, 123, 197, 239, 233, 245, 125, 246, 54, 81, 123, 222, 207, 95, 162, 182, 70, 72, 52, 92, 30, 199, 74, 118, 176, 15, 154, 8, 165, 17, 2, 192, 90, 240, 79, 153, 172, 51, 79, 99, 135, 73, 109, 116, 234, 119, 81, 196, 129, 16, 139, 28, 36, 13, 193, 243, 231, 70, 197, 20, 117, 69, 112, 0, 202, 243, 237, 174, 164, 240, 35, 226, 234, 56, 251, 169, 92, 201, 212, 18, 21, 116, 225, 77, 112, 13, 253, 70, 207, 149, 120, 157, 210, 174, 114, 89, 199, 37, 88, 227, 228, 88, 67, 67, 122, 214, 205, 133, 237, 83, 124, 170, 100, 126, 9, 74, 189, 169, 212, 42, 137, 71, 38, 191, 211, 80, 5, 227, 55, 42, 80, 20, 215, 209, 96, 21, 208, 196, 46, 92, 15, 240, 6, 2, 17, 140, 81, 41, 2, 49, 197, 196, 56, 239, 204, 4, 72, 168, 243, 41, 150, 63, 195, 85, 246, 128, 4, 75, 21, 179, 40, 58, 64, 17, 142, 206, 126, 66, 212, 153, 18, 229, 217, 85, 95, 239, 210, 184, 114, 99, 247, 24, 168, 108, 82, 184, 159, 144, 140, 35, 183, 32, 129, 0, 136, 67, 6, 193, 127, 41, 170, 196, 23, 11, 224, 209, 123, 224, 113, 166, 243, 98, 84, 255, 189, 53, 173, 72, 249, 187, 179, 137, 252, 239, 180, 208, 8, 99, 122, 0, 226, 241, 125, 220, 161, 217, 201, 218, 108, 146, 8, 73, 107, 198, 95, 142, 169, 89, 55, 131, 226, 207, 43, 17, 103, 233, 142, 165, 212, 161, 13, 147, 156, 89, 230, 12, 230, 219, 96, 245, 27, 143, 151, 227, 156, 237, 117, 63, 198, 127, 236, 16, 29, 99, 112, 73, 53, 90, 220, 235, 237, 153, 10, 31, 176, 48, 172, 152, 195, 170, 170, 97, 176, 241, 104, 83, 71, 63, 121, 229, 187, 187, 221, 207, 39, 243, 240, 223, 108, 96, 251, 74, 213, 11, 214, 16, 61, 37, 209, 126, 99, 9, 193, 47, 230, 8, 143, 85, 216, 2, 142, 245, 110, 144, 218, 117, 79, 237, 166, 41, 31, 125, 15, 78, 183, 132, 98, 46, 24, 98, 142, 22, 30, 83, 131, 97, 100, 145, 49, 58, 52, 58, 124, 240, 133, 118, 36, 25, 62, 107, 24, 152, 88, 114, 213, 7, 226, 196, 226, 97, 20, 83, 178, 224, 237, 28, 233, 128, 131, 105, 61, 251, 241, 119, 109, 194, 206, 59, 153, 14, 0, 220, 232, 217, 42, 160, 49, 182, 43, 72, 118, 209, 218, 89, 85, 229, 81, 149, 92, 55, 121, 139, 236, 1, 43, 106, 64, 23, 111, 189, 89, 16, 80, 179, 56, 104, 4, 254, 4, 57, 8, 253, 57, 209, 118, 134, 44, 97, 152, 73, 219, 253, 26, 75, 232, 142, 57, 38, 129, 97, 187, 191, 19, 204, 159, 254, 14, 59, 243, 94, 167, 126, 182, 32, 135, 133, 88, 226, 223, 1, 68, 95, 168, 102, 179, 94, 29, 138, 141, 223, 146, 160, 99, 221, 25, 227, 133, 5, 0, 162, 49, 202, 159, 106, 44, 38, 32, 11, 44, 122, 143, 179, 97, 208, 88, 101, 47, 132], [179, 143, 100, 31, 254, 144, 115, 10, 179, 195, 212, 241, 153, 11, 56, 51, 18, 44, 86, 211, 143, 65, 102, 214, 117, 150, 4, 91, 208, 2, 164, 245, 254, 78, 196, 140, 149, 109, 193, 37, 46, 29, 174, 100, 187, 162, 242, 206, 240, 104, 18, 176, 118, 146, 84, 100, 231, 189, 158, 33], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s5`: INSERT INTO tags_encrypted (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s6`: INSERT INTO tags_plaintext (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s5 with parameters: [6, [33, 18, 52, 163, 210, 24, 37, 66, 106, 67, 212, 175, 233, 149, 190, 158, 181, 229, 125, 4, 126, 116, 61, 127, 247, 85, 218, 130, 29, 17, 97], [69, 87, 72, 224, 12, 143, 215, 241, 201, 197, 41, 92, 1, 82, 146, 108, 12, 23, 11, 140, 253, 19, 32, 94, 228, 185, 78, 179, 129, 251, 56, 148, 50, 161, 38, 53, 216, 19, 160, 146, 242, 171, 93, 159, 17, 87, 154, 36, 26, 59], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 43, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 43, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
add_wallet_record: <<< res: None
open_wallet_search: >>> wallet_handle: 3, type_: 'did_key', query_json: '{"did": "QxkFnUxMqbSZbC91on4s4x"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140573273222312), c_char_p(140572651704264), c_char_p(140573275297904), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s10`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s10 with parameters: [[69, 104, 65, 48, 66, 67, 100, 89, 99, 115, 89, 78, 116, 108, 102, 109, 47, 81, 54, 66, 110, 65, 84, 83, 83, 56, 113, 43, 70, 54, 121, 122, 103, 106, 53, 101, 73, 53, 49, 49, 81, 88, 89, 69, 106, 114, 52, 61], [33, 18, 52, 163, 210, 24, 37, 66, 106, 67, 212, 175, 233, 149, 190, 158, 181, 229, 125, 4, 126, 116, 61, 127, 247, 85, 218, 130, 29, 17, 97], [69, 87, 72, 224, 12, 143, 215, 241, 201, 197, 41, 92, 1, 82, 146, 108, 12, 23, 11, 140, 253, 19, 32, 94, 228, 185, 78, 179, 129, 251, 56, 148, 50, 161, 38, 53, 216, 19, 160, 146, 242, 171, 93, 159, 17, 87, 154, 36, 26, 59], "Medic", "Medic"]
_indy_callback: >>> command_handle: 44, err , args: (14,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 44, err , args: (14,)
_indy_loop_callback: Function returned 14
_indy_loop_callback <<<
open_wallet_search: <<< res: 14
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 14, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(14), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 45, err , args: (b'{"totalCount":null,"records":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 45, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 14
do_call: >>> name: indy_close_wallet_search, args: (c_int(14), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 46, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 46, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
add_wallet_record: >>> wallet_handle: 3, type_: 'did_key', id: 'f6fc20867178447f94cdb859cd454908', value: 'E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm', tags_json: '{"did": "QxkFnUxMqbSZbC91on4s4x", "key": "E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}'
do_call: >>> name: indy_add_wallet_record, args: (c_int(3), c_char_p(140573273222392), c_char_p(140572651704264), c_char_p(140572652152224), c_char_p(140572651733072), <CFunctionType object at 0x7fd9c421ba70>)
do_call: Function indy_add_wallet_record returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[69, 104, 65, 48, 66, 67, 100, 89, 99, 115, 89, 78, 116, 108, 102, 109, 47, 81, 54, 66, 110, 65, 84, 83, 83, 56, 113, 43, 70, 54, 121, 122, 103, 106, 53, 101, 73, 53, 49, 49, 81, 88, 89, 69, 106, 114, 52, 61], [106, 78, 113, 84, 102, 122, 79, 89, 85, 109, 104, 76, 120, 105, 43, 49, 74, 50, 77, 65, 68, 113, 72, 119, 103, 86, 55, 104, 117, 101, 74, 113, 114, 119, 65, 51, 84, 83, 65, 43, 108, 76, 85, 117, 67, 103, 113, 71, 47, 82, 110, 69, 118, 57, 74, 77, 117, 70, 114, 97, 104, 119, 65, 48, 56, 97, 72, 104, 119, 53, 81, 74, 71, 88, 78, 121, 71, 79, 77, 98], [147, 37, 22, 74, 1, 127, 66, 234, 221, 45, 213, 54, 156, 93, 165, 80, 242, 219, 49, 147, 22, 57, 212, 180, 119, 31, 147, 78, 249, 185, 126, 195, 95, 64, 174, 198, 213, 95, 148, 5, 13, 78, 187, 224, 84, 41, 146, 118, 168, 1, 0, 49, 86, 63, 199, 130, 34, 129, 85, 104, 136, 112, 133, 158, 69, 98, 89, 148, 0, 123, 0, 117], [222, 195, 223, 212, 118, 140, 81, 132, 72, 101, 245, 76, 77, 220, 89, 186, 221, 120, 219, 7, 187, 43, 21, 141, 79, 13, 193, 89, 23, 18, 80, 42, 218, 134, 11, 103, 248, 22, 31, 27, 215, 136, 190, 231, 216, 204, 80, 213, 181, 79, 81, 113, 250, 158, 196, 56, 188, 170, 17, 109], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [7, [33, 18, 52, 163, 210, 24, 37, 66, 106, 67, 212, 175, 233, 149, 190, 158, 181, 229, 125, 4, 126, 116, 61, 127, 247, 85, 218, 130, 29, 17, 97], [69, 87, 72, 224, 12, 143, 215, 241, 201, 197, 41, 92, 1, 82, 146, 108, 12, 23, 11, 140, 253, 19, 32, 94, 228, 185, 78, 179, 129, 251, 56, 148, 50, 161, 38, 53, 216, 19, 160, 146, 242, 171, 93, 159, 17, 87, 154, 36, 26, 59], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [7, [83, 152, 196, 253, 34, 233, 87, 108, 237, 20, 191, 58, 226, 16, 57, 168, 83, 202, 171, 251, 133, 250, 174, 19, 56, 23, 89, 51, 13, 68, 156], [61, 137, 155, 5, 97, 18, 79, 204, 240, 150, 171, 52, 20, 97, 250, 6, 230, 169, 179, 157, 128, 5, 136, 25, 253, 155, 132, 144, 129, 221, 105, 196, 184, 42, 207, 126, 141, 97, 119, 196, 91, 173, 75, 5, 180, 14, 71, 208, 23, 170, 255, 111, 74, 254, 82, 170, 241, 16, 232, 67, 197, 197, 15, 208, 140, 55, 87, 91, 66, 147, 127, 196], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 47, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 47, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
add_wallet_record: <<< res: None
update_wallet_record_value: >>> wallet_handle: 3, type_: 'connection', id: 'f56b18ea-92e1-4f6d-a094-80da3fad398d', value: '{"invitation_key": "5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP", "their_did": "QxkFnUxMqbSZbC91on4s4x", "my_did": "Ss9L55FVLDVAE9wH9QUaLm", "request_id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "created_at": "2021-05-17 12:41:06.885367Z", "updated_at": "2021-05-17 12:41:07.981202Z", "their_role": "inviter", "inbound_connection_id": null, "routing_state": "none", "accept": "auto", "invitation_mode": "once", "invitation_msg_id": null, "alias": null, "error_msg": null, "their_label": "Edinburgh Medical School", "state": "response", "their_public_did": null}'
do_call: >>> name: indy_update_wallet_record_value, args: (c_int(3), c_char_p(140573273868288), c_char_p(140572651704264), c_char_p(94095652536880), <CFunctionType object at 0x7fd99efcf110>)
do_call: Function indy_update_wallet_record_value returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s3 with parameters: [[173, 65, 187, 173, 44, 229, 216, 79, 160, 63, 227, 216, 208, 82, 128, 190, 11, 126, 231, 104, 112, 151, 55, 78, 109, 255, 221, 157, 84, 166, 198, 30, 4, 67, 141, 0, 118, 133, 252, 191, 25, 151, 104, 53, 90, 20, 239, 119, 247, 219, 56, 135, 222, 194, 102, 111, 129, 61, 131, 75, 22, 159, 142, 9, 246, 71, 58, 251, 244, 116, 225, 254, 152, 124, 156, 168, 124, 58, 126, 236, 89, 142, 93, 152, 97, 19, 45, 20, 235, 5, 99, 112, 231, 13, 19, 228, 220, 125, 173, 187, 206, 92, 10, 106, 178, 191, 199, 172, 35, 172, 22, 92, 199, 77, 65, 247, 173, 19, 46, 175, 170, 130, 15, 145, 59, 118, 188, 221, 179, 89, 33, 76, 112, 152, 97, 60, 135, 127, 116, 42, 163, 176, 135, 159, 126, 60, 133, 148, 89, 162, 77, 129, 14, 220, 62, 11, 139, 109, 119, 71, 6, 172, 150, 39, 209, 197, 204, 203, 112, 202, 234, 107, 247, 157, 70, 107, 99, 112, 243, 207, 48, 26, 232, 54, 180, 160, 241, 85, 58, 100, 70, 153, 188, 128, 54, 128, 146, 30, 113, 64, 22, 97, 119, 66, 69, 226, 63, 56, 141, 34, 253, 64, 99, 208, 169, 205, 154, 241, 232, 147, 182, 58, 201, 226, 135, 105, 30, 159, 139, 43, 3, 240, 81, 89, 70, 6, 146, 53, 123, 31, 12, 42, 252, 68, 53, 207, 41, 89, 117, 160, 37, 33, 60, 150, 16, 181, 188, 44, 101, 26, 180, 62, 104, 240, 79, 97, 34, 36, 147, 46, 132, 209, 80, 169, 166, 200, 89, 69, 26, 239, 12, 21, 1, 93, 134, 234, 134, 175, 34, 134, 213, 203, 160, 188, 96, 110, 102, 147, 130, 231, 16, 226, 49, 85, 200, 184, 20, 147, 81, 192, 17, 19, 112, 214, 115, 152, 208, 98, 184, 60, 129, 213, 141, 83, 10, 243, 85, 63, 16, 201, 143, 33, 137, 145, 111, 50, 223, 241, 174, 208, 77, 14, 211, 203, 172, 73, 107, 60, 23, 206, 133, 191, 153, 80, 117, 168, 78, 56, 34, 3, 38, 130, 108, 100, 67, 138, 3, 211, 129, 66, 98, 87, 203, 247, 70, 109, 31, 161, 143, 189, 94, 162, 201, 160, 79, 104, 231, 218, 98, 135, 83, 156, 131, 30, 48, 21, 232, 99, 97, 244, 10, 31, 135, 200, 188, 28, 28, 212, 144, 215, 45, 80, 230, 105, 10, 168, 184, 116, 72, 238, 104, 12, 196, 58, 133, 170, 158, 254, 46, 108, 195, 248, 148, 23, 126, 255, 57, 125, 132, 245, 208, 246, 209, 235, 219, 25, 184, 47, 65, 22, 26, 240, 46, 113, 90, 106, 20, 211, 254, 201, 38, 123, 20, 169, 13, 200, 213, 17, 102, 58, 21, 137, 6, 181, 109, 142, 2, 19, 178, 202, 138, 35, 123, 117, 15, 194, 73, 221, 203, 251, 180, 172, 58, 148, 29, 16, 91, 19, 135, 12, 52, 35, 62, 163, 141, 212, 55, 4, 108, 76, 203, 82, 255, 229, 93, 158, 161, 176, 5, 17, 40, 12, 110, 42, 185, 88, 190, 142, 250, 66, 168, 148, 141, 234, 199, 236, 106, 4, 180, 223, 117, 43, 225, 163, 93, 163, 156, 99, 213, 39, 116, 153, 104, 219, 110, 132, 183, 107, 161, 214, 68, 113, 121, 225, 30, 71, 232, 222, 44, 147, 37, 161, 196, 73, 125, 194, 49, 238, 136, 203, 161, 215, 56, 59, 239, 47, 98, 2, 110, 177], [4, 24, 107, 20, 182, 194, 56, 183, 92, 213, 165, 204, 212, 8, 49, 130, 216, 96, 228, 206, 46, 125, 191, 168, 67, 182, 252, 122, 110, 127, 183, 200, 54, 73, 205, 160, 150, 173, 191, 211, 235, 224, 194, 21, 16, 249, 151, 143, 209, 94, 62, 138, 180, 243, 75, 225, 152, 230, 173, 38], [73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [120, 99, 101, 86, 104, 116, 110, 103, 56, 75, 112, 113, 55, 105, 55, 47, 101, 106, 66, 77, 104, 76, 90, 102, 98, 69, 80, 98, 116, 98, 69, 114, 78, 67, 114, 109, 116, 118, 104, 85, 108, 65, 71, 107, 71, 78, 105, 52, 67, 54, 116, 117, 88, 105, 74, 47, 50, 108, 116, 118, 83, 102, 74, 77, 116, 106, 72, 119, 105, 51, 72, 105, 55, 82, 112, 79, 114, 67, 69, 70, 85, 84, 72, 122, 122, 81, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 48, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 48, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_value: <<< res: None
update_wallet_record_tags: >>> wallet_handle: 3, type_: 'connection', id: 'f56b18ea-92e1-4f6d-a094-80da3fad398d', tags_json: '{"invitation_key": "5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP", "their_did": "QxkFnUxMqbSZbC91on4s4x", "my_did": "Ss9L55FVLDVAE9wH9QUaLm", "request_id": "5c86d714-9808-4bc8-a653-6abb4c381dab"}'
do_call: >>> name: indy_update_wallet_record_tags, args: (c_int(3), c_char_p(140573273868288), c_char_p(140572651704264), c_char_p(140573275186160), <CFunctionType object at 0x7fd99efcf368>)
do_call: Function indy_update_wallet_record_tags returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s4 with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [120, 99, 101, 86, 104, 116, 110, 103, 56, 75, 112, 113, 55, 105, 55, 47, 101, 106, 66, 77, 104, 76, 90, 102, 98, 69, 80, 98, 116, 98, 69, 114, 78, 67, 114, 109, 116, 118, 104, 85, 108, 65, 71, 107, 71, 78, 105, 52, 67, 54, 116, 117, 88, 105, 74, 47, 50, 108, 116, 118, 83, 102, 74, 77, 116, 106, 72, 119, 105, 51, 72, 105, 55, 82, 112, 79, 114, 67, 69, 70, 85, 84, 72, 122, 122, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_encrypted WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [2, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_plaintext WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [2, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [2, [124, 188, 227, 212, 249, 145, 68, 148, 206, 221, 218, 202, 197, 44, 202, 175, 68, 115, 188, 201, 151, 19, 118, 100, 161, 169, 36, 131, 17, 142, 122, 97, 175, 70], [236, 191, 102, 187, 94, 110, 184, 122, 235, 240, 161, 75, 93, 40, 18, 107, 101, 226, 171, 123, 40, 218, 247, 162, 121, 226, 129, 52, 123, 164, 39, 105, 119, 174, 251, 19, 142, 10, 4, 252, 72, 192, 34, 202, 191, 198, 20, 251, 75, 185], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [2, [78, 213, 186, 199, 131, 172, 211, 195, 230, 130, 194, 70, 132, 64, 9, 145, 19, 166, 37, 83, 121, 118, 191, 114, 39, 224, 225, 136, 78, 26, 140, 84, 126, 47, 149, 34, 242], [69, 87, 72, 224, 12, 143, 215, 241, 201, 197, 41, 92, 1, 82, 146, 108, 12, 23, 11, 140, 253, 19, 32, 94, 228, 185, 78, 179, 129, 251, 56, 148, 50, 161, 38, 53, 216, 19, 160, 146, 242, 171, 93, 159, 17, 87, 154, 36, 26, 59], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [2, [167, 23, 192, 116, 15, 80, 7, 17, 243, 99, 244, 59, 154, 126, 107, 57, 135, 84, 159, 190, 13, 172, 65, 255, 177, 138, 12, 161, 20, 85, 206, 120, 152, 242, 71, 250, 30, 185, 163, 95, 53, 127], [131, 141, 215, 250, 166, 168, 163, 168, 204, 135, 210, 132, 146, 230, 231, 83, 195, 242, 119, 20, 244, 195, 237, 65, 142, 148, 81, 206, 67, 32, 10, 183, 232, 247, 238, 86, 118, 122, 176, 219, 152, 223, 211, 54, 30, 227, 29, 41, 187, 18, 37, 109, 50, 55, 121, 109, 62, 90, 246, 52, 27, 115, 180, 163, 171, 146, 39, 247, 57, 171, 206, 56], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [2, [27, 226, 221, 240, 203, 243, 82, 65, 0, 81, 190, 180, 210, 22, 123, 46, 87, 60, 91, 123, 197, 182, 67, 89, 146, 121, 217, 236, 110, 174, 137, 104, 108, 127, 139, 128, 29, 20], [143, 43, 198, 179, 161, 47, 232, 33, 222, 197, 245, 31, 246, 64, 19, 225, 53, 3, 42, 201, 233, 247, 50, 253, 69, 91, 84, 45, 91, 200, 78, 27, 134, 48, 125, 244, 161, 51, 206, 22, 135, 15, 68, 220, 166, 35, 46, 31, 176, 30, 197, 155, 41, 185, 129, 233, 2, 229, 3, 63, 255, 4, 91, 224], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 49, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 49, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_tags: <<< res: None
open_wallet_search: >>> wallet_handle: 3, type_: 'connection_metadata', query_json: '{"key": "send_mediation_request_on_connection", "connection_id": "f56b18ea-92e1-4f6d-a094-80da3fad398d"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": true}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140572651735144), c_char_p(140573275143632), c_char_p(140573275298704), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
  {"msg_id": "N/A", "thread_id": "N/A", "traced_type": "dict", "timestamp": 1621255267.997563, "str_time": "2021-05-17 12:41:07.997563", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://medic-business-logic:3010/topic/connections/"}
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
  {"msg_id": "N/A", "thread_id": "N/A", "traced_type": "dict", "timestamp": 1621255267.998597, "str_time": "2021-05-17 12:41:07.998597", "handler": "Medic", "ellapsed_milli": 1, "outcome": "OutboundTransportManager.DELIVER.END.http://medic-business-logic:3010/topic/connections/"}
Posting to http://medic-business-logic:3010/topic/connections/; Data: {"accept": "auto", "their_role": "inviter", "rfc23_state": "response-received", "created_at": "2021-05-17 12:41:06.885367Z", "invitation_key": "5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP", "request_id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "routing_state": "none", "invitation_mode": "once", "their_did": "QxkFnUxMqbSZbC91on4s4x", "my_did": "Ss9L55FVLDVAE9wH9QUaLm", "their_label": "Edinburgh Medical School", "connection_id": "f56b18ea-92e1-4f6d-a094-80da3fad398d", "state": "response", "updated_at": "2021-05-17 12:41:07.981202Z"}; Headers: {'Content-Type': 'application/json'}
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s7`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $7) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND ((i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $4 AND value = $5))) AND i.wallet_id = $6
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s5`: SELECT name, value from tags_plaintext where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s6`: SELECT name, value from tags_encrypted where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s7 with parameters: [[103, 84, 43, 105, 100, 72, 115, 104, 118, 118, 82, 71, 89, 98, 68, 51, 99, 53, 114, 70, 113, 74, 52, 48, 119, 79, 116, 87, 82, 104, 53, 110, 110, 82, 48, 97, 74, 49, 120, 47, 120, 88, 77, 68, 87, 106, 85, 67, 72, 55, 114, 79, 75, 84, 53, 43, 53, 48, 79, 103, 83, 70, 77, 61], [128, 44, 37, 101, 162, 29, 239, 218, 239, 135, 73, 229, 99, 65, 201, 55, 101, 9, 38, 46, 195, 245, 150, 56, 78, 77, 221, 254, 77, 76, 130, 82, 151, 7, 46, 97, 64, 6, 192, 66, 200], [142, 51, 102, 59, 108, 105, 86, 82, 207, 249, 224, 238, 123, 28, 211, 142, 85, 229, 191, 110, 30, 227, 146, 186, 89, 236, 170, 86, 99, 14, 64, 113, 122, 168, 167, 191, 142, 214, 107, 228, 240, 146, 253, 117, 41, 20, 132, 28, 52, 168, 168, 50, 15, 212, 152, 105, 174, 90, 197, 98, 251, 107, 126, 193], [83, 152, 196, 253, 34, 233, 87, 108, 237, 20, 191, 58, 226, 16, 57, 168, 83, 202, 171, 251, 133, 250, 174, 19, 56, 23, 89, 51, 13, 68, 156], [85, 169, 39, 241, 78, 99, 37, 249, 123, 166, 100, 45, 133, 92, 103, 10, 67, 105, 59, 213, 43, 154, 55, 192, 15, 179, 174, 217, 114, 196, 132, 168, 7, 98, 201, 95, 53, 122, 89, 9, 214, 159, 179, 201, 117, 90, 34, 202, 108, 203, 169, 101, 55, 207, 194, 245, 254, 173, 213, 23, 157, 12, 113, 87], "Medic", "Medic"]
_indy_callback: >>> command_handle: 50, err , args: (15,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 50, err , args: (15,)
_indy_loop_callback: Function returned 15
_indy_loop_callback <<<
open_wallet_search: <<< res: 15
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 15, count: 2
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(15), c_uint(2), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
_indy_callback: >>> command_handle: 51, err , args: (b'{"totalCount":null,"records":null}',)
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 51, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 15
do_call: >>> name: indy_close_wallet_search, args: (c_int(15), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
_indy_callback: >>> command_handle: 52, err , args: ()
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 52, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
get_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'f56b18ea-92e1-4f6d-a094-80da3fad398d', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573273868288), c_char_p(140572651741552), c_char_p(140573273512776), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [120, 99, 101, 86, 104, 116, 110, 103, 56, 75, 112, 113, 55, 105, 55, 47, 101, 106, 66, 77, 104, 76, 90, 102, 98, 69, 80, 98, 116, 98, 69, 114, 78, 67, 114, 109, 116, 118, 104, 85, 108, 65, 71, 107, 71, 78, 105, 52, 67, 54, 116, 117, 88, 105, 74, 47, 50, 108, 116, 118, 83, 102, 74, 77, 116, 106, 72, 119, 105, 51, 72, 105, 55, 82, 112, 79, 114, 67, 69, 70, 85, 84, 72, 122, 122, 81, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 53, err , args: (b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:07.981202Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"response\\", \\"their_public_did\\": null}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 53, err , args: (b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:07.981202Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"response\\", \\"their_public_did\\": null}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:07.981202Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"response\\", \\"their_public_did\\": null}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:07.981202Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"response\\", \\"their_public_did\\": null}","tags":null}'
get_my_did_with_meta: >>> wallet_handle: 3, did: 'Ss9L55FVLDVAE9wH9QUaLm'
do_call: >>> name: indy_get_my_did_with_meta, args: (c_int(3), c_char_p(140572651967440), <CFunctionType object at 0x7fd99efcf4f8>)
do_call: Function indy_get_my_did_with_meta returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], [88, 89, 85, 105, 72, 49, 70, 85, 113, 67, 72, 76, 117, 65, 55, 114, 71, 52, 50, 82, 51, 78, 107, 86, 79, 69, 67, 72, 86, 48, 49, 83, 67, 100, 98, 89, 74, 71, 80, 70, 48, 98, 119, 100, 47, 48, 73, 49, 72, 106, 69, 87, 100, 54, 111, 71, 84, 43, 109, 72, 114, 83, 73, 105, 48, 65, 103, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], [88, 89, 85, 105, 72, 49, 70, 85, 113, 67, 72, 76, 117, 65, 55, 114, 71, 52, 50, 82, 51, 78, 107, 86, 79, 69, 67, 72, 86, 48, 49, 83, 67, 100, 98, 89, 74, 71, 80, 70, 48, 98, 119, 100, 47, 48, 73, 49, 72, 106, 69, 87, 100, 54, 111, 71, 84, 43, 109, 72, 114, 83, 73, 105, 48, 65, 103, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], [88, 89, 85, 105, 72, 49, 70, 85, 113, 67, 72, 76, 117, 65, 55, 114, 71, 52, 50, 82, 51, 78, 107, 86, 79, 69, 67, 72, 86, 48, 49, 83, 67, 100, 98, 89, 74, 71, 80, 70, 48, 98, 119, 100, 47, 48, 73, 49, 72, 106, 69, 87, 100, 54, 111, 71, 84, 43, 109, 72, 114, 83, 73, 105, 48, 65, 103, 61], "Medic"]
_indy_callback: >>> command_handle: 54, err , args: (b'{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 54, err , args: (b'{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}',)
_indy_loop_callback: Function returned b'{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}'
_indy_loop_callback <<<
get_my_did_with_meta: <<< res: '{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}'
open_wallet_search: >>> wallet_handle: 3, type_: 'did_doc', query_json: '{"did": "QxkFnUxMqbSZbC91on4s4x"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": true}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140573273222872), c_char_p(140572651741840), c_char_p(140573275298704), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s8`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s11`: SELECT name, value from tags_plaintext where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s12`: SELECT name, value from tags_encrypted where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s8 with parameters: [[77, 85, 81, 56, 56, 50, 111, 87, 117, 47, 43, 110, 108, 54, 77, 79, 67, 109, 79, 115, 111, 120, 56, 72, 81, 120, 72, 101, 87, 76, 105, 66, 43, 82, 83, 87, 99, 99, 71, 90, 69, 77, 77, 69, 120, 43, 107, 61], [33, 18, 52, 163, 210, 24, 37, 66, 106, 67, 212, 175, 233, 149, 190, 158, 181, 229, 125, 4, 126, 116, 61, 127, 247, 85, 218, 130, 29, 17, 97], [69, 87, 72, 224, 12, 143, 215, 241, 201, 197, 41, 92, 1, 82, 146, 108, 12, 23, 11, 140, 253, 19, 32, 94, 228, 185, 78, 179, 129, 251, 56, 148, 50, 161, 38, 53, 216, 19, 160, 146, 242, 171, 93, 159, 17, 87, 154, 36, 26, 59], "Medic", "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s11 with parameters: [6, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s12 with parameters: [6, "Medic"]
_indy_callback: >>> command_handle: 55, err , args: (16,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 55, err , args: (16,)
_indy_loop_callback: Function returned 16
_indy_loop_callback <<<
open_wallet_search: <<< res: 16
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 16, count: 2
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(16), c_uint(2), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
_indy_callback: >>> command_handle: 56, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"354ce0984d1143a1960b70e6ceadca07","value":"{\\"@context\\": \\"https://w3id.org/did/v1\\", \\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x\\", \\"publicKey\\": [{\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x#1\\", \\"type\\": \\"Ed25519VerificationKey2018\\", \\"controller\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x\\", \\"publicKeyBase58\\": \\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"}], \\"authentication\\": [{\\"type\\": \\"Ed25519SignatureAuthentication2018\\", \\"publicKey\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x#1\\"}], \\"service\\": [{\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x;indy\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"], \\"serviceEndpoint\\": \\"http://22d18366b61a.ngrok.io\\"}, {\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x;indy1\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"], \\"serviceEndpoint\\": \\"ws://22d18366b61a.ngrok.io\\"}]}","tags":{"did":"QxkFnUxMqbSZbC91on4s4x"}}]}',)
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 56, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"354ce0984d1143a1960b70e6ceadca07","value":"{\\"@context\\": \\"https://w3id.org/did/v1\\", \\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x\\", \\"publicKey\\": [{\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x#1\\", \\"type\\": \\"Ed25519VerificationKey2018\\", \\"controller\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x\\", \\"publicKeyBase58\\": \\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"}], \\"authentication\\": [{\\"type\\": \\"Ed25519SignatureAuthentication2018\\", \\"publicKey\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x#1\\"}], \\"service\\": [{\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x;indy\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"], \\"serviceEndpoint\\": \\"http://22d18366b61a.ngrok.io\\"}, {\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x;indy1\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"], \\"serviceEndpoint\\": \\"ws://22d18366b61a.ngrok.io\\"}]}","tags":{"did":"QxkFnUxMqbSZbC91on4s4x"}}]}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":[{"type":null,"id":"354ce0984d1143a1960b70e6ceadca07","value":"{\\"@context\\": \\"https://w3id.org/did/v1\\", \\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x\\", \\"publicKey\\": [{\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x#1\\", \\"type\\": \\"Ed25519VerificationKey2018\\", \\"controller\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x\\", \\"publicKeyBase58\\": \\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"}], \\"authentication\\": [{\\"type\\": \\"Ed25519SignatureAuthentication2018\\", \\"publicKey\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x#1\\"}], \\"service\\": [{\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x;indy\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"], \\"serviceEndpoint\\": \\"http://22d18366b61a.ngrok.io\\"}, {\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x;indy1\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"], \\"serviceEndpoint\\": \\"ws://22d18366b61a.ngrok.io\\"}]}","tags":{"did":"QxkFnUxMqbSZbC91on4s4x"}}]}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":[{"type":null,"id":"354ce0984d1143a1960b70e6ceadca07","value":"{\\"@context\\": \\"https://w3id.org/did/v1\\", \\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x\\", \\"publicKey\\": [{\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x#1\\", \\"type\\": \\"Ed25519VerificationKey2018\\", \\"controller\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x\\", \\"publicKeyBase58\\": \\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"}], \\"authentication\\": [{\\"type\\": \\"Ed25519SignatureAuthentication2018\\", \\"publicKey\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x#1\\"}], \\"service\\": [{\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x;indy\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"], \\"serviceEndpoint\\": \\"http://22d18366b61a.ngrok.io\\"}, {\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x;indy1\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"], \\"serviceEndpoint\\": \\"ws://22d18366b61a.ngrok.io\\"}]}","tags":{"did":"QxkFnUxMqbSZbC91on4s4x"}}]}'
close_wallet_search: >>> wallet_search_handle: 16
do_call: >>> name: indy_close_wallet_search, args: (c_int(16), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 57, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 57, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
  {"msg_id": "10db6d48-dd2e-43df-b01e-b5cf02bf9d1b", "thread_id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response", "timestamp": 1621255268.0432858, "str_time": "2021-05-17 12:41:08.043286", "handler": "Medic", "ellapsed_milli": 151, "outcome": "Dispatcher.handle_message.END"}
  {"msg_id": "64dd6da5-0110-4fad-85e0-83280a23b4c2", "thread_id": "64dd6da5-0110-4fad-85e0-83280a23b4c2", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping", "timestamp": 1621255268.0437486, "str_time": "2021-05-17 12:41:08.043749", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.ENCODE.START"}
  {"msg_id": "64dd6da5-0110-4fad-85e0-83280a23b4c2", "thread_id": "64dd6da5-0110-4fad-85e0-83280a23b4c2", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping", "timestamp": 1621255268.0440538, "str_time": "2021-05-17 12:41:08.044054", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.ENCODE.END"}
pack_message: >>> wallet_handle: 3, message: '{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping", "@id": "64dd6da5-0110-4fad-85e0-83280a23b4c2", "~timing": {"in_time": "2021-05-17 12:41:07.882716Z", "out_time": "2021-05-17 12:41:08.014065Z"}, "response_requested": true}', recipient_verkeys: ['E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm'], sender_verkey: 'F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq'
do_call: >>> name: indy_pack_message, args: (c_int(3), b'{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping", "@id": "64dd6da5-0110-4fad-85e0-83280a23b4c2", "~timing": {"in_time": "2021-05-17 12:41:07.882716Z", "out_time": "2021-05-17 12:41:08.014065Z"}, "response_requested": true}', c_uint(241), c_char_p(140573273286448), c_char_p(140572652154064), <CFunctionType object at 0x7fd99efcfc00>)
do_call: Function indy_pack_message returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [97, 50, 75, 52, 116, 48, 101, 118, 65, 65, 104, 120, 49, 89, 87, 57, 53, 111, 118, 53, 55, 69, 87, 51, 50, 53, 50, 120, 50, 112, 114, 121, 122, 119, 122, 49, 78, 68, 106, 114, 78, 43, 71, 57, 56, 121, 120, 90, 65, 88, 114, 72, 110, 116, 114, 97, 101, 75, 99, 57, 87, 114, 84, 106, 56, 49, 77, 48, 72, 77, 98, 67, 66, 97, 77, 70, 43, 73, 98, 43, 51, 116, 112, 82, 116, 56, 52, 97, 115, 121, 83, 98, 113, 71, 52, 65], "Medic"]
_indy_callback: >>> command_handle: 58, err , args: (b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJHbnJubllFMUhZRXRKSXN1M1RDTUNieEFZLXNEUVJ5d0xlMUE2MnJqV3F3R0JnUGxEQ3J1MS1TZmNmdGRJX09KIiwiaGVhZGVyIjp7ImtpZCI6IkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIiwiaXYiOiJRbjZHS1FpVmN6VnlXWmNlaFJ1TG12Q1dvQ1NiOXVDeSIsInNlbmRlciI6IjdscWVtLU9fZ3RBRnFsVjN6V0RONl96b3NWQVBWdV84Wlp3Ynd0X0tzVGxLSzhBTV85NUZqZ0ZESWtsZWI0cEhJMVV0QU9iTnRaWmFuTnkwZzVKalVRVl9yeThpczE4cW4tbGVxYWtuR09JWkZGcnFTR1BVUU0tbW9rMD0ifX1dfQ==","iv":"dYAlv3pIU-P9K-5g","ciphertext":"RRH-yOMwgkdKhGvhTpnp6dBbvrEjwwrct2hiYh0k8lriBi4VWEXwWe5BjYWCHijQCRn--67pIgUcQvpY5gKVBx9KK2w_ChS3HAc_uVgCaRL3VvFShe6YrmBjUUoh-3cIAv5j0ZYbuVUFwvOoE7mrLhPl4JBR9F7Dir1uDAyLB1yqzAwpYDeOp5YKsPWIWzLz8MJSrRgIAyHmbKp98IDpP3sFuOFgg4D50--QQz1Bvxkk-jHl-941hq8w7WqoSjl6vk5HidE2tVd6od1aRdnGDFSUaBzJTKkHiyZ5RjlgC1gHQhOyHkvlhLysvw5mr_I-Hg==","tag":"yEgQdNRuonXC-tmczArf4g=="}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 58, err , args: (b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJHbnJubllFMUhZRXRKSXN1M1RDTUNieEFZLXNEUVJ5d0xlMUE2MnJqV3F3R0JnUGxEQ3J1MS1TZmNmdGRJX09KIiwiaGVhZGVyIjp7ImtpZCI6IkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIiwiaXYiOiJRbjZHS1FpVmN6VnlXWmNlaFJ1TG12Q1dvQ1NiOXVDeSIsInNlbmRlciI6IjdscWVtLU9fZ3RBRnFsVjN6V0RONl96b3NWQVBWdV84Wlp3Ynd0X0tzVGxLSzhBTV85NUZqZ0ZESWtsZWI0cEhJMVV0QU9iTnRaWmFuTnkwZzVKalVRVl9yeThpczE4cW4tbGVxYWtuR09JWkZGcnFTR1BVUU0tbW9rMD0ifX1dfQ==","iv":"dYAlv3pIU-P9K-5g","ciphertext":"RRH-yOMwgkdKhGvhTpnp6dBbvrEjwwrct2hiYh0k8lriBi4VWEXwWe5BjYWCHijQCRn--67pIgUcQvpY5gKVBx9KK2w_ChS3HAc_uVgCaRL3VvFShe6YrmBjUUoh-3cIAv5j0ZYbuVUFwvOoE7mrLhPl4JBR9F7Dir1uDAyLB1yqzAwpYDeOp5YKsPWIWzLz8MJSrRgIAyHmbKp98IDpP3sFuOFgg4D50--QQz1Bvxkk-jHl-941hq8w7WqoSjl6vk5HidE2tVd6od1aRdnGDFSUaBzJTKkHiyZ5RjlgC1gHQhOyHkvlhLysvw5mr_I-Hg==","tag":"yEgQdNRuonXC-tmczArf4g=="}',)
_indy_loop_callback: Function returned b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJHbnJubllFMUhZRXRKSXN1M1RDTUNieEFZLXNEUVJ5d0xlMUE2MnJqV3F3R0JnUGxEQ3J1MS1TZmNmdGRJX09KIiwiaGVhZGVyIjp7ImtpZCI6IkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIiwiaXYiOiJRbjZHS1FpVmN6VnlXWmNlaFJ1TG12Q1dvQ1NiOXVDeSIsInNlbmRlciI6IjdscWVtLU9fZ3RBRnFsVjN6V0RONl96b3NWQVBWdV84Wlp3Ynd0X0tzVGxLSzhBTV85NUZqZ0ZESWtsZWI0cEhJMVV0QU9iTnRaWmFuTnkwZzVKalVRVl9yeThpczE4cW4tbGVxYWtuR09JWkZGcnFTR1BVUU0tbW9rMD0ifX1dfQ==","iv":"dYAlv3pIU-P9K-5g","ciphertext":"RRH-yOMwgkdKhGvhTpnp6dBbvrEjwwrct2hiYh0k8lriBi4VWEXwWe5BjYWCHijQCRn--67pIgUcQvpY5gKVBx9KK2w_ChS3HAc_uVgCaRL3VvFShe6YrmBjUUoh-3cIAv5j0ZYbuVUFwvOoE7mrLhPl4JBR9F7Dir1uDAyLB1yqzAwpYDeOp5YKsPWIWzLz8MJSrRgIAyHmbKp98IDpP3sFuOFgg4D50--QQz1Bvxkk-jHl-941hq8w7WqoSjl6vk5HidE2tVd6od1aRdnGDFSUaBzJTKkHiyZ5RjlgC1gHQhOyHkvlhLysvw5mr_I-Hg==","tag":"yEgQdNRuonXC-tmczArf4g=="}'
_indy_loop_callback <<<
pack_message: <<< res: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJHbnJubllFMUhZRXRKSXN1M1RDTUNieEFZLXNEUVJ5d0xlMUE2MnJqV3F3R0JnUGxEQ3J1MS1TZmNmdGRJX09KIiwiaGVhZGVyIjp7ImtpZCI6IkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIiwiaXYiOiJRbjZHS1FpVmN6VnlXWmNlaFJ1TG12Q1dvQ1NiOXVDeSIsInNlbmRlciI6IjdscWVtLU9fZ3RBRnFsVjN6V0RONl96b3NWQVBWdV84Wlp3Ynd0X0tzVGxLSzhBTV85NUZqZ0ZESWtsZWI0cEhJMVV0QU9iTnRaWmFuTnkwZzVKalVRVl9yeThpczE4cW4tbGVxYWtuR09JWkZGcnFTR1BVUU0tbW9rMD0ifX1dfQ==","iv":"dYAlv3pIU-P9K-5g","ciphertext":"RRH-yOMwgkdKhGvhTpnp6dBbvrEjwwrct2hiYh0k8lriBi4VWEXwWe5BjYWCHijQCRn--67pIgUcQvpY5gKVBx9KK2w_ChS3HAc_uVgCaRL3VvFShe6YrmBjUUoh-3cIAv5j0ZYbuVUFwvOoE7mrLhPl4JBR9F7Dir1uDAyLB1yqzAwpYDeOp5YKsPWIWzLz8MJSrRgIAyHmbKp98IDpP3sFuOFgg4D50--QQz1Bvxkk-jHl-941hq8w7WqoSjl6vk5HidE2tVd6od1aRdnGDFSUaBzJTKkHiyZ5RjlgC1gHQhOyHkvlhLysvw5mr_I-Hg==","tag":"yEgQdNRuonXC-tmczArf4g=="}'
  {"msg_id": "64dd6da5-0110-4fad-85e0-83280a23b4c2", "thread_id": "64dd6da5-0110-4fad-85e0-83280a23b4c2", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping", "timestamp": 1621255268.0494957, "str_time": "2021-05-17 12:41:08.049496", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://22d18366b61a.ngrok.io"}
  {"msg_id": "64dd6da5-0110-4fad-85e0-83280a23b4c2", "thread_id": "64dd6da5-0110-4fad-85e0-83280a23b4c2", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping", "timestamp": 1621255268.0498967, "str_time": "2021-05-17 12:41:08.049897", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.END.http://22d18366b61a.ngrok.io"}
Posting to http://22d18366b61a.ngrok.io; Data: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJHbnJubllFMUhZRXRKSXN1M1RDTUNieEFZLXNEUVJ5d0xlMUE2MnJqV3F3R0JnUGxEQ3J1MS1TZmNmdGRJX09KIiwiaGVhZGVyIjp7ImtpZCI6IkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIiwiaXYiOiJRbjZHS1FpVmN6VnlXWmNlaFJ1TG12Q1dvQ1NiOXVDeSIsInNlbmRlciI6IjdscWVtLU9fZ3RBRnFsVjN6V0RONl96b3NWQVBWdV84Wlp3Ynd0X0tzVGxLSzhBTV85NUZqZ0ZESWtsZWI0cEhJMVV0QU9iTnRaWmFuTnkwZzVKalVRVl9yeThpczE4cW4tbGVxYWtuR09JWkZGcnFTR1BVUU0tbW9rMD0ifX1dfQ==","iv":"dYAlv3pIU-P9K-5g","ciphertext":"RRH-yOMwgkdKhGvhTpnp6dBbvrEjwwrct2hiYh0k8lriBi4VWEXwWe5BjYWCHijQCRn--67pIgUcQvpY5gKVBx9KK2w_ChS3HAc_uVgCaRL3VvFShe6YrmBjUUoh-3cIAv5j0ZYbuVUFwvOoE7mrLhPl4JBR9F7Dir1uDAyLB1yqzAwpYDeOp5YKsPWIWzLz8MJSrRgIAyHmbKp98IDpP3sFuOFgg4D50--QQz1Bvxkk-jHl-941hq8w7WqoSjl6vk5HidE2tVd6od1aRdnGDFSUaBzJTKkHiyZ5RjlgC1gHQhOyHkvlhLysvw5mr_I-Hg==","tag":"yEgQdNRuonXC-tmczArf4g=="}'; Headers: {'Content-Type': 'application/ssi-agent-wire'}
unpack_message: >>> wallet_handle: 3, jwe: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJOc2hDa2NDd2JjVTVJLVhaUkRsY1pLREFKOVRXUWtlb1hkV1RzaHBoRlozMGZoTG9UVmphTlZvNHBzdU9jOXhrIiwiaGVhZGVyIjp7ImtpZCI6IkY2ZFZvUkpNeEQyZnJFbjZKazFWNGE4TGNYaGNTTExhbU5DZXZacHBVMVBxIiwiaXYiOiJEekdzbkRYTTFWek5tQ09jdkczbFQ4WFhTNWdMcjE1ZyIsInNlbmRlciI6Ikp2cl91OWZmcGRCQnZXXzFMd0cyVjR3NG9RZ0JBQUpJS2o1VFhENHhnbmFCZ0NBcjlPMS0xajNNQ25VRVB0T3FvcF9meEEzZGZlTXRnaXZ1M1FFZGJrYnFBNHBYcjJzY1B5cVpZd281NHk1akJzU1J3OVlkVjRQNXBWWT0ifX1dfQ==","iv":"-t5N528aIfBE7kfY","ciphertext":"Mpa5ckP_mSPqeFgypEG7-pZRby0KlEyMLe5spviBs5cVr0Pcu4enj8T05tExihCzOF-UJitB4eJs7RlEbpnoVExV0SWErasFwYK1qZEKt2hAoUEvwHRR7zYoL8-iDTDCXFKsWIPvvO1FYaNmujcK6DOkexA3V-bjum8cfcZzlxKDkrKVumZaSW6lFNmwLD61mB9-Fp_AeXWAuLgeUZ6rIxO7Gz9tDZ5wOVkPW74kh8M-8AABKFzjQk34fJbmf8P15m03-4wlznEpS6Z15byFldmEpJq86S9pRZzno572mSvKLLn0BpaswvqISMt3p5e51e9Pa55Ezjc20qejLkjFe9Avb71SZDS_SdFCwLPbPyOEUw45aXD2zzJBDQ==","tag":"aE92Kl8UjACDE-V6WTLHlw=="}'
do_call: >>> name: indy_unpack_message, args: (c_int(3), b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJOc2hDa2NDd2JjVTVJLVhaUkRsY1pLREFKOVRXUWtlb1hkV1RzaHBoRlozMGZoTG9UVmphTlZvNHBzdU9jOXhrIiwiaGVhZGVyIjp7ImtpZCI6IkY2ZFZvUkpNeEQyZnJFbjZKazFWNGE4TGNYaGNTTExhbU5DZXZacHBVMVBxIiwiaXYiOiJEekdzbkRYTTFWek5tQ09jdkczbFQ4WFhTNWdMcjE1ZyIsInNlbmRlciI6Ikp2cl91OWZmcGRCQnZXXzFMd0cyVjR3NG9RZ0JBQUpJS2o1VFhENHhnbmFCZ0NBcjlPMS0xajNNQ25VRVB0T3FvcF9meEEzZGZlTXRnaXZ1M1FFZGJrYnFBNHBYcjJzY1B5cVpZd281NHk1akJzU1J3OVlkVjRQNXBWWT0ifX1dfQ==","iv":"-t5N528aIfBE7kfY","ciphertext":"Mpa5ckP_mSPqeFgypEG7-pZRby0KlEyMLe5spviBs5cVr0Pcu4enj8T05tExihCzOF-UJitB4eJs7RlEbpnoVExV0SWErasFwYK1qZEKt2hAoUEvwHRR7zYoL8-iDTDCXFKsWIPvvO1FYaNmujcK6DOkexA3V-bjum8cfcZzlxKDkrKVumZaSW6lFNmwLD61mB9-Fp_AeXWAuLgeUZ6rIxO7Gz9tDZ5wOVkPW74kh8M-8AABKFzjQk34fJbmf8P15m03-4wlznEpS6Z15byFldmEpJq86S9pRZzno572mSvKLLn0BpaswvqISMt3p5e51e9Pa55Ezjc20qejLkjFe9Avb71SZDS_SdFCwLPbPyOEUw45aXD2zzJBDQ==","tag":"aE92Kl8UjACDE-V6WTLHlw=="}', c_uint(1013), <CFunctionType object at 0x7fd99efcfe58>)
do_call: Function indy_unpack_message returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [97, 50, 75, 52, 116, 48, 101, 118, 65, 65, 104, 120, 49, 89, 87, 57, 53, 111, 118, 53, 55, 69, 87, 51, 50, 53, 50, 120, 50, 112, 114, 121, 122, 119, 122, 49, 78, 68, 106, 114, 78, 43, 71, 57, 56, 121, 120, 90, 65, 88, 114, 72, 110, 116, 114, 97, 101, 75, 99, 57, 87, 114, 84, 106, 56, 49, 77, 48, 72, 77, 98, 67, 66, 97, 77, 70, 43, 73, 98, 43, 51, 116, 112, 82, 116, 56, 52, 97, 115, 121, 83, 98, 113, 71, 52, 65], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [97, 50, 75, 52, 116, 48, 101, 118, 65, 65, 104, 120, 49, 89, 87, 57, 53, 111, 118, 53, 55, 69, 87, 51, 50, 53, 50, 120, 50, 112, 114, 121, 122, 119, 122, 49, 78, 68, 106, 114, 78, 43, 71, 57, 56, 121, 120, 90, 65, 88, 114, 72, 110, 116, 114, 97, 101, 75, 99, 57, 87, 114, 84, 106, 56, 49, 77, 48, 72, 77, 98, 67, 66, 97, 77, 70, 43, 73, 98, 43, 51, 116, 112, 82, 116, 56, 52, 97, 115, 121, 83, 98, 113, 71, 52, 65], "Medic"]
_indy_callback: >>> command_handle: 59, err , args: (b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping_response\\", \\"@id\\": \\"764114ee-129c-4e54-a261-57c330351a75\\", \\"~thread\\": {\\"thid\\": \\"64dd6da5-0110-4fad-85e0-83280a23b4c2\\"}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:41:08.163394Z\\", \\"out_time\\": \\"2021-05-17 12:41:08.204371Z\\"}}","recipient_verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","sender_verkey":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 59, err , args: (b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping_response\\", \\"@id\\": \\"764114ee-129c-4e54-a261-57c330351a75\\", \\"~thread\\": {\\"thid\\": \\"64dd6da5-0110-4fad-85e0-83280a23b4c2\\"}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:41:08.163394Z\\", \\"out_time\\": \\"2021-05-17 12:41:08.204371Z\\"}}","recipient_verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","sender_verkey":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}',)
_indy_loop_callback: Function returned b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping_response\\", \\"@id\\": \\"764114ee-129c-4e54-a261-57c330351a75\\", \\"~thread\\": {\\"thid\\": \\"64dd6da5-0110-4fad-85e0-83280a23b4c2\\"}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:41:08.163394Z\\", \\"out_time\\": \\"2021-05-17 12:41:08.204371Z\\"}}","recipient_verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","sender_verkey":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}'
_indy_loop_callback <<<
unpack_message: <<< res: b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping_response\\", \\"@id\\": \\"764114ee-129c-4e54-a261-57c330351a75\\", \\"~thread\\": {\\"thid\\": \\"64dd6da5-0110-4fad-85e0-83280a23b4c2\\"}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:41:08.163394Z\\", \\"out_time\\": \\"2021-05-17 12:41:08.204371Z\\"}}","recipient_verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","sender_verkey":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}'
Expanded message: {'@type': 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping_response', '@id': '764114ee-129c-4e54-a261-57c330351a75', '~thread': {'thid': '64dd6da5-0110-4fad-85e0-83280a23b4c2'}, '~timing': {'in_time': '2021-05-17 12:41:08.163394Z', 'out_time': '2021-05-17 12:41:08.204371Z'}}
  {"msg_id": "764114ee-129c-4e54-a261-57c330351a75", "thread_id": "64dd6da5-0110-4fad-85e0-83280a23b4c2", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping_response", "timestamp": 1621255268.3487294, "str_time": "2021-05-17 12:41:08.348729", "handler": "Medic", "ellapsed_milli": 0, "outcome": "Dispatcher.handle_message.START"}
open_wallet_search: >>> wallet_handle: 3, type_: 'did_key', query_json: '{"key": "E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": true}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140573273222552), c_char_p(140573273287328), c_char_p(140573275298704), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
192.168.208.2 [17/May/2021:12:41:08 +0000] "POST / HTTP/1.1" 200 149 "-" "Python/3.6 aiohttp/3.6.3"
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s9`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s7`: SELECT name, value from tags_plaintext where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s8`: SELECT name, value from tags_encrypted where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s9 with parameters: [[69, 104, 65, 48, 66, 67, 100, 89, 99, 115, 89, 78, 116, 108, 102, 109, 47, 81, 54, 66, 110, 65, 84, 83, 83, 56, 113, 43, 70, 54, 121, 122, 103, 106, 53, 101, 73, 53, 49, 49, 81, 88, 89, 69, 106, 114, 52, 61], [83, 152, 196, 253, 34, 233, 87, 108, 237, 20, 191, 58, 226, 16, 57, 168, 83, 202, 171, 251, 133, 250, 174, 19, 56, 23, 89, 51, 13, 68, 156], [61, 137, 155, 5, 97, 18, 79, 204, 240, 150, 171, 52, 20, 97, 250, 6, 230, 169, 179, 157, 128, 5, 136, 25, 253, 155, 132, 144, 129, 221, 105, 196, 184, 42, 207, 126, 141, 97, 119, 196, 91, 173, 75, 5, 180, 14, 71, 208, 23, 170, 255, 111, 74, 254, 82, 170, 241, 16, 232, 67, 197, 197, 15, 208, 140, 55, 87, 91, 66, 147, 127, 196], "Medic", "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s7 with parameters: [7, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s8 with parameters: [7, "Medic"]
_indy_callback: >>> command_handle: 60, err , args: (17,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 60, err , args: (17,)
_indy_loop_callback: Function returned 17
_indy_loop_callback <<<
open_wallet_search: <<< res: 17
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 17, count: 2
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(17), c_uint(2), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 61, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"f6fc20867178447f94cdb859cd454908","value":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm","tags":{"key":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm","did":"QxkFnUxMqbSZbC91on4s4x"}}]}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 61, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"f6fc20867178447f94cdb859cd454908","value":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm","tags":{"key":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm","did":"QxkFnUxMqbSZbC91on4s4x"}}]}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":[{"type":null,"id":"f6fc20867178447f94cdb859cd454908","value":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm","tags":{"key":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm","did":"QxkFnUxMqbSZbC91on4s4x"}}]}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":[{"type":null,"id":"f6fc20867178447f94cdb859cd454908","value":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm","tags":{"key":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm","did":"QxkFnUxMqbSZbC91on4s4x"}}]}'
close_wallet_search: >>> wallet_search_handle: 17
do_call: >>> name: indy_close_wallet_search, args: (c_int(17), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 62, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 62, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
list_my_dids_with_meta: >>> wallet_handle: 3
do_call: >>> name: indy_list_my_dids_with_meta, args: (c_int(3), <CFunctionType object at 0x7fd9c8bff818>)
do_call: Function indy_list_my_dids_with_meta returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s10`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s10 with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s9`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s9 with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s11`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s11 with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 63, err , args: (b'[{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 63, err , args: (b'[{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]',)
_indy_loop_callback: Function returned b'[{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]'
_indy_loop_callback <<<
list_my_dids_with_meta: <<< res: '[{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]'
open_wallet_search: >>> wallet_handle: 3, type_: 'connection', query_json: '{"their_did": "QxkFnUxMqbSZbC91on4s4x", "my_did": "Ss9L55FVLDVAE9wH9QUaLm"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140573352774544), c_char_p(140573274577392), c_char_p(140573275297904), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s10`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $7) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND ((i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $4 AND value = $5))) AND i.wallet_id = $6
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s10 with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [124, 188, 227, 212, 249, 145, 68, 148, 206, 221, 218, 202, 197, 44, 202, 175, 68, 115, 188, 201, 151, 19, 118, 100, 161, 169, 36, 131, 17, 142, 122, 97, 175, 70], [236, 191, 102, 187, 94, 110, 184, 122, 235, 240, 161, 75, 93, 40, 18, 107, 101, 226, 171, 123, 40, 218, 247, 162, 121, 226, 129, 52, 123, 164, 39, 105, 119, 174, 251, 19, 142, 10, 4, 252, 72, 192, 34, 202, 191, 198, 20, 251, 75, 185], [78, 213, 186, 199, 131, 172, 211, 195, 230, 130, 194, 70, 132, 64, 9, 145, 19, 166, 37, 83, 121, 118, 191, 114, 39, 224, 225, 136, 78, 26, 140, 84, 126, 47, 149, 34, 242], [69, 87, 72, 224, 12, 143, 215, 241, 201, 197, 41, 92, 1, 82, 146, 108, 12, 23, 11, 140, 253, 19, 32, 94, 228, 185, 78, 179, 129, 251, 56, 148, 50, 161, 38, 53, 216, 19, 160, 146, 242, 171, 93, 159, 17, 87, 154, 36, 26, 59], "Medic", "Medic"]
_indy_callback: >>> command_handle: 64, err , args: (18,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 64, err , args: (18,)
_indy_loop_callback: Function returned 18
_indy_loop_callback <<<
open_wallet_search: <<< res: 18
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 18, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(18), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 65, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:07.981202Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"response\\", \\"their_public_did\\": null}","tags":null}]}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 65, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:07.981202Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"response\\", \\"their_public_did\\": null}","tags":null}]}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":[{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:07.981202Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"response\\", \\"their_public_did\\": null}","tags":null}]}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":[{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:07.981202Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"response\\", \\"their_public_did\\": null}","tags":null}]}'
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 18, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(18), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
_indy_callback: >>> command_handle: 66, err , args: (b'{"totalCount":null,"records":null}',)
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 66, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 18
do_call: >>> name: indy_close_wallet_search, args: (c_int(18), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 67, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 67, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
update_wallet_record_value: >>> wallet_handle: 3, type_: 'connection', id: 'f56b18ea-92e1-4f6d-a094-80da3fad398d', value: '{"invitation_key": "5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP", "their_did": "QxkFnUxMqbSZbC91on4s4x", "my_did": "Ss9L55FVLDVAE9wH9QUaLm", "request_id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "created_at": "2021-05-17 12:41:06.885367Z", "updated_at": "2021-05-17 12:41:08.369600Z", "their_role": "inviter", "inbound_connection_id": null, "routing_state": "none", "accept": "auto", "invitation_mode": "once", "invitation_msg_id": null, "alias": null, "error_msg": null, "their_label": "Edinburgh Medical School", "state": "active", "their_public_did": null}'
do_call: >>> name: indy_update_wallet_record_value, args: (c_int(3), c_char_p(140573352774544), c_char_p(140572651778776), c_char_p(94095652536880), <CFunctionType object at 0x7fd99efcf110>)
do_call: Function indy_update_wallet_record_value returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s11`: UPDATE items SET value = $1, key = $2 WHERE type = $3 AND name = $4 AND wallet_id = $5
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s11 with parameters: [[234, 192, 113, 32, 16, 228, 5, 63, 14, 126, 144, 90, 173, 161, 146, 69, 214, 211, 147, 51, 146, 167, 200, 162, 90, 21, 7, 208, 161, 107, 232, 192, 72, 232, 166, 111, 162, 62, 50, 87, 48, 177, 106, 6, 22, 51, 117, 72, 234, 123, 137, 169, 99, 223, 70, 46, 245, 63, 168, 18, 179, 100, 125, 136, 69, 168, 113, 223, 52, 4, 100, 25, 4, 8, 141, 120, 252, 87, 40, 3, 146, 25, 39, 238, 196, 251, 255, 97, 213, 188, 201, 169, 177, 134, 187, 167, 228, 67, 87, 167, 40, 254, 37, 163, 54, 123, 219, 215, 238, 152, 45, 56, 19, 14, 141, 254, 141, 24, 213, 140, 4, 158, 115, 37, 150, 9, 103, 96, 145, 233, 40, 240, 137, 97, 206, 142, 128, 137, 99, 4, 104, 96, 177, 1, 123, 80, 170, 235, 57, 248, 114, 246, 90, 55, 243, 7, 94, 138, 149, 111, 134, 130, 171, 176, 97, 154, 12, 117, 165, 164, 175, 100, 46, 72, 13, 139, 52, 85, 214, 251, 138, 204, 172, 214, 70, 62, 48, 79, 241, 136, 183, 40, 80, 64, 156, 92, 111, 236, 234, 8, 196, 238, 251, 115, 222, 76, 74, 73, 25, 195, 44, 51, 119, 106, 127, 245, 65, 114, 84, 234, 148, 24, 185, 45, 206, 228, 240, 207, 140, 244, 210, 167, 246, 235, 36, 152, 31, 77, 149, 211, 59, 11, 153, 200, 197, 0, 128, 238, 220, 228, 190, 38, 45, 207, 229, 79, 234, 197, 27, 50, 170, 73, 141, 234, 31, 41, 123, 98, 45, 41, 251, 82, 36, 28, 223, 54, 89, 178, 46, 35, 222, 105, 194, 69, 11, 93, 58, 229, 136, 196, 156, 161, 176, 66, 134, 41, 243, 21, 237, 204, 45, 129, 50, 133, 38, 107, 198, 121, 230, 208, 197, 89, 139, 37, 212, 138, 3, 223, 18, 24, 230, 224, 19, 68, 244, 218, 16, 138, 149, 156, 212, 57, 37, 249, 132, 29, 43, 181, 73, 30, 19, 19, 159, 77, 68, 95, 254, 115, 57, 154, 172, 239, 23, 6, 96, 198, 95, 198, 179, 166, 23, 139, 54, 59, 39, 91, 31, 28, 69, 144, 8, 209, 156, 96, 148, 31, 150, 93, 140, 162, 217, 217, 178, 35, 23, 244, 133, 9, 38, 74, 66, 190, 75, 125, 185, 213, 222, 10, 192, 116, 152, 149, 151, 148, 121, 81, 156, 96, 181, 226, 68, 116, 1, 250, 26, 84, 75, 190, 66, 213, 75, 240, 15, 113, 36, 118, 180, 50, 213, 140, 26, 185, 3, 31, 34, 145, 184, 64, 126, 96, 158, 83, 71, 135, 195, 91, 186, 57, 35, 252, 6, 191, 55, 99, 163, 90, 159, 44, 246, 39, 36, 224, 222, 238, 246, 129, 178, 149, 235, 233, 70, 17, 81, 97, 194, 28, 195, 100, 97, 153, 150, 100, 231, 167, 184, 122, 252, 215, 15, 144, 204, 5, 147, 2, 54, 230, 197, 63, 216, 48, 211, 205, 105, 180, 42, 110, 217, 248, 49, 9, 205, 58, 221, 95, 235, 68, 30, 37, 167, 179, 226, 204, 78, 93, 202, 156, 131, 72, 162, 184, 231, 189, 74, 114, 156, 11, 251, 169, 178, 166, 226, 38, 75, 58, 215, 160, 63, 10, 44, 232, 103, 117, 230, 177, 118, 110, 64, 184, 8, 207, 60, 176, 183, 168, 244, 171, 93, 164, 123, 48, 107, 143, 169, 99, 235, 227, 171, 80, 155, 191, 123, 109, 133, 1, 174, 81, 13, 193], [30, 252, 249, 43, 236, 189, 65, 228, 64, 131, 213, 118, 145, 199, 48, 227, 84, 32, 16, 226, 157, 173, 110, 163, 245, 232, 255, 216, 12, 169, 199, 193, 164, 175, 191, 145, 133, 49, 194, 82, 71, 151, 29, 23, 3, 124, 154, 35, 113, 63, 5, 163, 96, 101, 98, 27, 63, 163, 152, 194], [73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [120, 99, 101, 86, 104, 116, 110, 103, 56, 75, 112, 113, 55, 105, 55, 47, 101, 106, 66, 77, 104, 76, 90, 102, 98, 69, 80, 98, 116, 98, 69, 114, 78, 67, 114, 109, 116, 118, 104, 85, 108, 65, 71, 107, 71, 78, 105, 52, 67, 54, 116, 117, 88, 105, 74, 47, 50, 108, 116, 118, 83, 102, 74, 77, 116, 106, 72, 119, 105, 51, 72, 105, 55, 82, 112, 79, 114, 67, 69, 70, 85, 84, 72, 122, 122, 81, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 68, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 68, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_value: <<< res: None
update_wallet_record_tags: >>> wallet_handle: 3, type_: 'connection', id: 'f56b18ea-92e1-4f6d-a094-80da3fad398d', tags_json: '{"invitation_key": "5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP", "their_did": "QxkFnUxMqbSZbC91on4s4x", "my_did": "Ss9L55FVLDVAE9wH9QUaLm", "request_id": "5c86d714-9808-4bc8-a653-6abb4c381dab"}'
do_call: >>> name: indy_update_wallet_record_tags, args: (c_int(3), c_char_p(140573352774544), c_char_p(140572651778776), c_char_p(140573275185928), <CFunctionType object at 0x7fd99efcf368>)
do_call: Function indy_update_wallet_record_tags returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s12`: SELECT id FROM items WHERE type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s12 with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [120, 99, 101, 86, 104, 116, 110, 103, 56, 75, 112, 113, 55, 105, 55, 47, 101, 106, 66, 77, 104, 76, 90, 102, 98, 69, 80, 98, 116, 98, 69, 114, 78, 67, 114, 109, 116, 118, 104, 85, 108, 65, 71, 107, 71, 78, 105, 52, 67, 54, 116, 117, 88, 105, 74, 47, 50, 108, 116, 118, 83, 102, 74, 77, 116, 106, 72, 119, 105, 51, 72, 105, 55, 82, 112, 79, 114, 67, 69, 70, 85, 84, 72, 122, 122, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_encrypted WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [2, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_plaintext WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [2, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s13`: INSERT INTO tags_encrypted (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s14`: INSERT INTO tags_plaintext (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s13 with parameters: [2, [78, 213, 186, 199, 131, 172, 211, 195, 230, 130, 194, 70, 132, 64, 9, 145, 19, 166, 37, 83, 121, 118, 191, 114, 39, 224, 225, 136, 78, 26, 140, 84, 126, 47, 149, 34, 242], [69, 87, 72, 224, 12, 143, 215, 241, 201, 197, 41, 92, 1, 82, 146, 108, 12, 23, 11, 140, 253, 19, 32, 94, 228, 185, 78, 179, 129, 251, 56, 148, 50, 161, 38, 53, 216, 19, 160, 146, 242, 171, 93, 159, 17, 87, 154, 36, 26, 59], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s13 with parameters: [2, [27, 226, 221, 240, 203, 243, 82, 65, 0, 81, 190, 180, 210, 22, 123, 46, 87, 60, 91, 123, 197, 182, 67, 89, 146, 121, 217, 236, 110, 174, 137, 104, 108, 127, 139, 128, 29, 20], [143, 43, 198, 179, 161, 47, 232, 33, 222, 197, 245, 31, 246, 64, 19, 225, 53, 3, 42, 201, 233, 247, 50, 253, 69, 91, 84, 45, 91, 200, 78, 27, 134, 48, 125, 244, 161, 51, 206, 22, 135, 15, 68, 220, 166, 35, 46, 31, 176, 30, 197, 155, 41, 185, 129, 233, 2, 229, 3, 63, 255, 4, 91, 224], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s13 with parameters: [2, [124, 188, 227, 212, 249, 145, 68, 148, 206, 221, 218, 202, 197, 44, 202, 175, 68, 115, 188, 201, 151, 19, 118, 100, 161, 169, 36, 131, 17, 142, 122, 97, 175, 70], [236, 191, 102, 187, 94, 110, 184, 122, 235, 240, 161, 75, 93, 40, 18, 107, 101, 226, 171, 123, 40, 218, 247, 162, 121, 226, 129, 52, 123, 164, 39, 105, 119, 174, 251, 19, 142, 10, 4, 252, 72, 192, 34, 202, 191, 198, 20, 251, 75, 185], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s13 with parameters: [2, [167, 23, 192, 116, 15, 80, 7, 17, 243, 99, 244, 59, 154, 126, 107, 57, 135, 84, 159, 190, 13, 172, 65, 255, 177, 138, 12, 161, 20, 85, 206, 120, 152, 242, 71, 250, 30, 185, 163, 95, 53, 127], [131, 141, 215, 250, 166, 168, 163, 168, 204, 135, 210, 132, 146, 230, 231, 83, 195, 242, 119, 20, 244, 195, 237, 65, 142, 148, 81, 206, 67, 32, 10, 183, 232, 247, 238, 86, 118, 122, 176, 219, 152, 223, 211, 54, 30, 227, 29, 41, 187, 18, 37, 109, 50, 55, 121, 109, 62, 90, 246, 52, 27, 115, 180, 163, 171, 146, 39, 247, 57, 171, 206, 56], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 69, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 69, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_tags: <<< res: None
PingResponseHandler called with context: <RequestContext(_connection_ready=True, _connection_record=<ConnRecord(_id='f56b18ea-92e1-4f6d-a094-80da3fad398d', _last_state='active', state='active', created_at='2021-05-17 12:41:06.885367Z', updated_at='2021-05-17 12:41:08.369600Z', my_did='Ss9L55FVLDVAE9wH9QUaLm', their_did='QxkFnUxMqbSZbC91on4s4x', their_label='Edinburgh Medical School', their_role='inviter', invitation_key='5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP', invitation_msg_id=None, request_id='5c86d714-9808-4bc8-a653-6abb4c381dab', error_msg=None, inbound_connection_id=None, routing_state='none', accept='auto', invitation_mode='once', alias=None, their_public_did=None)>, _context=<aries_cloudagent.config.injection_context.InjectionContext object at 0x7fd99effbc88>, _message=<PingResponse(_message_id='764114ee-129c-4e54-a261-57c330351a75', _message_new_id=False, _message_decorators=<DecoratorSet{~thread: <ThreadDecorator(_thid='64dd6da5-0110-4fad-85e0-83280a23b4c2', _pthid=None, _sender_order=None, _received_orders=None)>, ~timing: <TimingDecorator(in_time='2021-05-17 12:41:08.163394Z', out_time='2021-05-17 12:41:08.204371Z', stale_time=None, expires_time=None, delay_milli=None, wait_until_time=None)>}>, comment=None)>, _message_receipt=<MessageReceipt(_connection_id=None, _direct_response_mode=None, _in_time='2021-05-17 12:41:08.341595Z', _raw_message='{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping_response", "@id": "764114ee-129c-4e54-a261-57c330351a75", "~thread": {"thid": "64dd6da5-0110-4fad-85e0-83280a23b4c2"}, "~timing": {"in_time": "2021-05-17 12:41:08.163394Z", "out_time": "2021-05-17 12:41:08.204371Z"}}', _recipient_verkey='F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq', _recipient_did='Ss9L55FVLDVAE9wH9QUaLm', _recipient_did_public=None, _sender_did='QxkFnUxMqbSZbC91on4s4x', _sender_verkey='E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm', _thread_id='64dd6da5-0110-4fad-85e0-83280a23b4c2')>, _profile=<IndySdkProfile(backend=indy, name=Medic)>)>
Received trust ping response from: QxkFnUxMqbSZbC91on4s4x
  {"msg_id": "764114ee-129c-4e54-a261-57c330351a75", "thread_id": "64dd6da5-0110-4fad-85e0-83280a23b4c2", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping_response", "timestamp": 1621255268.3866887, "str_time": "2021-05-17 12:41:08.386689", "handler": "Medic", "ellapsed_milli": 40, "outcome": "Dispatcher.handle_message.END"}
  {"msg_id": "N/A", "thread_id": "N/A", "traced_type": "dict", "timestamp": 1621255268.3870265, "str_time": "2021-05-17 12:41:08.387027", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://medic-business-logic:3010/topic/connections/"}
  {"msg_id": "N/A", "thread_id": "N/A", "traced_type": "dict", "timestamp": 1621255268.3872933, "str_time": "2021-05-17 12:41:08.387293", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.END.http://medic-business-logic:3010/topic/connections/"}
Posting to http://medic-business-logic:3010/topic/connections/; Data: {"accept": "auto", "their_role": "inviter", "rfc23_state": "completed", "created_at": "2021-05-17 12:41:06.885367Z", "invitation_key": "5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP", "request_id": "5c86d714-9808-4bc8-a653-6abb4c381dab", "routing_state": "none", "invitation_mode": "once", "their_did": "QxkFnUxMqbSZbC91on4s4x", "my_did": "Ss9L55FVLDVAE9wH9QUaLm", "their_label": "Edinburgh Medical School", "connection_id": "f56b18ea-92e1-4f6d-a094-80da3fad398d", "state": "active", "updated_at": "2021-05-17 12:41:08.369600Z"}; Headers: {'Content-Type': 'application/json'}
unpack_message: >>> wallet_handle: 3, jwe: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJ6TW5OeWlaQlNpaUFzVmpaNldkN0VjU3FHamdNOW5KX0MwWUdhZ0FzQjdPMDBTeEt3dE5KZXgzalJ1QnFfeEtVIiwiaGVhZGVyIjp7ImtpZCI6IkY2ZFZvUkpNeEQyZnJFbjZKazFWNGE4TGNYaGNTTExhbU5DZXZacHBVMVBxIiwiaXYiOiJJVmNvVnhNV1ZKRUZDNE1vM1lkWUZ5ZC1JUmowbHVYVCIsInNlbmRlciI6IkhaOG1ybGNuWThYdFE1eDI1T1NYRXN1ZlEwYklKY3l1c1VOZjdJVzBYSHdJTkkySk9DS1ItXzlYUm1DTFNoSENqOFhrYjJZMWdtYVl1OUYwaDVmYk9YRDVTV2tUSXAzajBBV19Ra2J6NEVIWW5SV3NlVHdjR0xiLXNVZz0ifX1dfQ==","iv":"dJBE2kEB6cTghz1k","ciphertext":"jdKR4bOv1KLX-XCIpdx-ih8e7OVEvXF5JOO3SRDtHyuogUeo5x3w8yoPO-7r5uIBEy_GF4rt6GAcn7qvgaB_x5sdDZCU8-DyMkJqbt2DwTEyoOGAjQSOY3WHXGkhwVZS4MLZ7-n5aI6L5MZvlfvYaQ7iMbqpb-73aWCV3gjzmKcgKDfP85Fr8gyE4rJBPTCxOjKIQKvLUSjn9Pi4-ZTSr3CQXdLOYB3b-R_baD3-QbMhzv8_V5o3AJxIh5fuoyv6ZuG7ZRkB2rhB7f-cdYkMk4m3ObUs-lRN4DqD5wLY0clsBv0GVl28W1zI_fZo5G5CJlzzvuskk69UbKWQIBlfc4wxl_gRooqTaHx12ZhQFCuulp0ctbn_UuG6CPFmdxCBb5uF1KqtT0_xjsHIYl9xlmCtxJKJq_ew4u6X4Sgcy-O6brCYzVSnF2NI9KSIQ5U23-42BNTR6X1VhVl1ni7Tq9XvOnhEHMOy8foHXtNZfKzxiwQ4Hdp9E0EFEk5WtzfBsYo9tBJq9PIlkghEAttGAh_IrVSYXkzUDx-oXVJsfn8Ry4w9doWkGY_O5Y07u8YU3L2wO6NLNSvWnweKR1oTwCkE5U2pIKsO88H8Ek7Tlh8y5quvY-moNpmQwOR1f0BZCHHsbtI05W8hOjuDDy9qWkzLfbBf1JAbCmr0QVNRuTSMxfFpHwr_oRiYnc54WL7gbOP0FNBwNyxZdZ5BbC2kh9ezbUB-DVStx6-eHYwW3W-mQcbJAaWaOjanEGgjT_cxw6QbtmUeqMmN_bYVMEd6hUeW8-StzLHmEMK68FdNn62kMEmcYvhk6S3YCoTmcdL9shZ7yonf0y5CRRISLmjiTYBq1uvD2RAhj1-RZH0nhX3Cnavb0JmpYwbW2Pj4VPyGVsnstUCFfkkVqy_el3hqATOJ-DMQgxDOXZmC6c5hWah5_gdP8JqpX-LggkZoprUi34vUUQEacST-KjgJphmGOW3a6PojN6YQo43ACItC8JMWbG2gUw3gHcp2w5EpN1CM6uAgdQkHP86anHfnDdGMAijwTU5otnl_SpoMQBy7gQH37vvYOMMt2PdZ2gTPnU7AGPZmvtAwmcoKbMeU3LMD5YJpREz4gLOGNZZ-G62qAS28UWjoyxp3tcXYg_b--BQIp7_kwpHl3NyNAK28tW5VucE-LtedR-BLha_Ps0eZnOqfGl-LdlPdsQoI_OxYu80f33WGQw5Qcizz8q47Q4GV-83fRvIFyyptOY-QFS5h_QM-sitEbTlwinqu3dOCYwnIwAgIPDEW6X4eZ3mSOd6U7yaDbFowB3e9cyyDhgx6xru3lTt7TBVDtakLM_EPsDH84dkY9yKiCppUB5ELgXzw4ZrlJzFm97GEUyZFpMDyl4PVAALAuhh5cLunXlVIwVq2ppIfmY-Gs6udY2Pk9rlSlz7sHt-aUXfaHd8qnC74LsKF2P3vlmbrmv7gtTeQYXMwyz_16JW_n9PV8mrCtpOpOfGOUmXWg-DxtGWv8RBAhEXd1pVQjJQkDQyOaXqOKFk81cie4RuHuUfgspPStwGiZk75OKsf7i9G4H2ccEvws2-udqDxAz60zZpocNbRJaFyoUkreYspJH6hdreTTFvF-nJfN5wIbJ4FjwRv1h3aV7Zt1uvySatYRaAh2zckguGAE1po5OJmGZ1YPp3dgivzr5WyPgZ566GNewZIF4uOnoXCB8Sx2hDlK2DwhI7vSwAWUyF6zBEuYRUYjvYmMDJ4D2AY_ih2D21nGnDCpLVvA5FZLuUBifro__sSoYqWDxuCjz9frAze7DDa2loxi3SiO2LX55pRGWsQRHSgMIYwSB_ZgSCOp83HaWuFYbYx4tHu0LKYioRTISVNXnOpQ4_kLPU4Ok5EX_VdwjoDYYeBku_1eqmIZKjHCHwbt69qSntLsg7zRt5QGBMpgVb4qnszlF3PPlxxshTaza0CyUknOj2dveNazDyu6JKpYeVwpv6Z9YsbPZjtTIDFW60y-eqclfAd4Tq7N0HMTzf1AE8BwAphxkJzapYKp5xelEWSUAX5ARmpF3a_viusT_F404Baejf-fT1wY9LfYbMztP-8kpnT3C1hxmghDDKT3WdS3kegWkU1bks8KQDZiPPFvh9CUszi3HKWViKLp6JbDnZStB8pwPg_aEVYBuSaWy4MoZdZZqoqIctuqxG4cVMTmUkV9rKnClVRuzC3kr-Hxv99T5TB1Pkz6ns6NBzpUDZkWU4GMH_IEsp1iThcInxytsezLOwCK2x7qm2bNB6BEFye9c9K9MYK_Tx7QiKtIlLPII_UAk8eUBSdGXcDtEW-ZFg_jtGsaxnhvFWcBhETkEZy8sIAoAqx98kgCmlCStFEyyXeZgeUn4jI3cA1f1z0x-POn2Eo9S5opSwije20mNWhdjfiotn-und7XFKf0xIoXr2uaNo0TgBaaRIfPY79E0fsloPxgAvevZ-TcYcA_FADrs-RhnEtlZUGYJFHLHKIDN4XaBy22nbm0WsQFfysHmHxvEKH43Cqcz-54VJd1gTkLc0UJO7Ce8aI5xSim9tQ0mEpxbtOsN_8y5-Zz5YTVKC3u8nQqNnPaw5goEHtELsIk_ZXKp582ifuRLlr3EIZi2Z0hdGCueisa5YYN0G3Sphf3-OTrxReS51M6rmVmPdw8-WKdQ5zc7V3tl582VbuJk8piu2S6wIOS9aYa4yFE03SD0yXFBMvZFH0i76xlcwEixVhh7YsWFTny4fEvuEyHypHe0kwpTFbhJPtDKWl5AjnheEM0wdxBKFSlO1IaYNtXx8Fy6ds90641YjR2YXJzGLeBXsdTd185R3Ma2KgMAbd6h7UODocxpVQ8OtAV63FDc9W1t52Bnbp6gxyrrJX6Tnq3rdSjYqL3182floKK0McSO8QzLYx-hmkegaz1yUfG0nW_XGRkv5gE_MbaYuIefor1f5La4wm-QupVmVF0igJh8fK5VroXeGS1gCsEaTuWRZmeTCdpQYI2f1jdrt2BwapPAfo2Xi4XNejd68BqvquEB7A-l5mPixKVX9397jHrJK6R8oJUYga9cxFx40T2cJp3LYvXJCfwpxJuaMFozxqp2dDclzPZ8BEWpwsnXTYgGqapzyhaCVwj1hRxL-ujqraSQYA6O3TU1DAWiHu_HojEzMcIOygT-n4PvUVcV5h41svy3HMsOyF7laftOWoDbXptama1UZmGQXbf3NklrYbvwLvEzs97vKK-MQQ8XJcE-sYPQc22h0qv1Rk0BaqY8GOgCKJnihmwQcHk3p859M8zBVmJ5SoW0hPLZPdx5dKF9JQXw27XFYvusdg3z3lucOp3Jr1imRzv8oQ0v7-EtFkyPclWxy9I5FR-7aY2Z5kUCwm5xu4iuF8CNQElonxBbfJss6jlisr-hoVo__axTM2Lvndykgwn2QZtGnGREL2ky-fC9h1CPWszNVZTL53IdclDAIZihLrY2271TTmpllYlfTvFjoZsjS1ApHh9smRg73LeUDQEjH9-vWC8-VfzW3yIkDeLtwtj6tGqJGNDbVmmkj80-gFxoOqeFZXPuiCRpzSYL62RzqtYC2dqGszY302zLAdQ6n4mFh1r1_eCa96OpOguFL2qVOAcAqSx4tN43EyLGKgok4fM6xqU8ZVAu3iylEnzLHnQl1IwTtt3UlI-735eE6pG232Mddo696KQZJlf3jlvLEjVKdKgfJ4PNxRposrvsMb9WrlvIu_7XOxeriM92lKHQKiK-d0dL90EtFUtoymqiAyJoiA5XJ0srXhpm_Gv7Pg7sQKEEN5rLN3BCqErIyFVBGOWgtnnL3XfkUh57u3VTPTmtHXBCGeGy0J-KlHG89Q1CvnwsGgcBvXTJ28DWhpJR3_xgYs40XGTrXsb7gIikxaL9tdQgoTOAyWpQE8VMObEEHKZVruU1BS342PJ2IRYPspoiiG1cR_yYEf594A4qW_qFSfZNK6O_OmLkLXbp5MVX19oTcjv2rSWlRmUdvc9NMQR5TaYjpIfGgn8d4FoZzp-NY3J3PCvrL4UeObsgLGz3vroPtX5aYGcU8OdRwbZv9XMo6Vl-E7GHMOZMIdZ8wbAjhAzxTRpsX_LMVJ8uSK6_uCcUQ62LLx0id4XGodESa5eSki_CiuPjevj2og5ZebC34Z1A0eht_W65CIGJ7792swP-263pYsCLzdqgcsdo5bg5EetxWhpN4tAYJ5qa5RaZDZHA_CgZ1cPT59n2PV_Spv2_Iqt_JuJKoVu6h842WYjbIIk3EXJUGYmpU4yO2M8WJpHM-RGVoZsWV7muBqL6JglEfXqTkw5efR7OqeLyFKCp6aiGK6dHddgKnusZ1cH_S3t9hlDPqkxUHhPBM1yR14asS9ABWigiSGpXvEWwmn79XPWZMjBLKWrAThoKfUCkipwzXv7VtB-J25FXJqm4UmjZMUJNUXehjWv6KR4KhyMAefd2OUzH8DPt4B75sL3ED46kudiL52s4xHVeYyZVFgQVtcrbbWqonDW18aj1JAHHCY9-FmW7g8z9cH_UEOSQGPfjHsBrpJvAEtno0-y-f33CFBTY2AKE9lT5DUhhgzGOjKl8fi8E7wdtUyj_EP7eop78SS68wZArO4bXFxK7ECKvNA6ionLq9ZVIgsVErnJTSllAGK4WoS_ufpoZWGHIefY3897O-DQb2DJGx4qQb_bcYZY5FHdMeiliVJk3dD6ODiT1jeB3aoKpOuZtVTzxXW0B_QctLkAJLM37U-dMu4jpzMZ31FAkq6MJY2hHiLuNIDipEsT0FZ1GZEZ4k_EKRYr7l3n3G5eq9ZVKB8n3RwT7GYpdeilsZBSH8TcK-meDjdikQK9ZVjY-1_tUuBOPzPGaGW4dDhcIrpA7PWq6qs-Yc4cZ6gBWem4J2T7BwGjwfSeO0ZCRxBcB0YcFhpUcBYHHnB-NutVoZ23uhBcwjzAfraMsDq9XTKWnNuUW6ECALJywnRSnjqZA6CGe7O_DdlD17tOD9j06ARVAXKDoHv6-UFjvZY6lomP_7mTAeyQlhBwW2kXMemAZsvJVATcFtC7Wz62DX3aIUNQhd5Qx_4tFOXFFYLfO6boBGq2hU81IOeNe0KK_f-KyuuxMaOJjEjETzRl25fwvNjeFFeoj3iNG1pd81RhMun9nugI4bfHF-IoxRLme6d4biI8z5gxKxgyA0dYbzexyOUZhmTeHwBbDWYYwUSzGFbmkfJKVNJ5QchabawN4Z5J7_nzbC5Fxq-JL0Rskasz3ww3magtWPJtfXH37l7pFDAEMvED9sCXAbB5bj9xSGI95OUiu3DWiz_K5fvRvgZbg68Dw6of8WfGZbmH4fh9CC55M9D0lPXHC_I9iPGXLjtl-s1nggcoQFkzlHcJGk1yIcX3RC8RrrJ9Flj-3B4QO6AV2fEeHvFXdllN94U36gXL2Bb790WwsHEKjKCvRAMDm0kCinHYkXATLZ6tVuxhvYSob79YoWnDguU5HbRfft1Dqt4fJrYBjjvowG1F9ZMKilszxRhN-tP7-5s1-QZH_gptvVle1uuU3RvANLEPOmmWtmEjzhAnRsYdcma-Y1ogmhHavvpz-gTmLbIUcgGO9Uqi3IswLpnFwXR5492i6G21711w5sZK16fuiv--mMAU7AiQMcuIuv-Y782XvxMdvMRU3WG5tQHtlBSRr3-uIbHLtay0rIIf4GLluCxIUMqme2BZMXtya1g4gulZh-K8Fk5yLmdRKdhpvt0XUzFuvAZyT94jbQwcH_xfJ91vhfa8mKrQ6WYFxx3zDNiCYG677HtVfpQqIJjm-jb0UVCkzU2KyCBCyGixjfX3w8or-ubnqLzTHVa45-6sONmvsaldy1pup2Kyqm_iGDKzSbUJxYrzYsxTVZ0OS7AlLnrSrWAeS_1fPpTEtc67yqJx93eG2fzHw-uiSrwuHEfGEd8BHR37XAd4Tni8boDefERuCLLuWfECB_VWwPVMSnmikwSgRAqNEfcsdxhFxqMWINhIzK5mOAoTqwAX1QMjsb4vn1tjI_kNvZBGQA59mKgcnFAGHvCJOPnf39-sRP5_pwJb8Ob34xYIUAPsnQCptOjoLRpZDpzRO3uEV_M8VI2qJb_oP4U2a6QmUplyUPburjm3YKenUmCGxnTmWHoj_VxabU-_oSX8nRiaaEzpXM0bo2dafbu5u5jEPmTP5Z6PUBq6UF7NpO9UfglX1aCukiTr-mwJZnbKozOtSdXf1ZQuwxcG9HZxR8VJKjSYIv4jZA74JdNQl73ckgLQ-FXTftrIDlETeKMxnkCSOXep_ch50B9B4byQvwJ0imJ5ok6a1qmL2kQKxHd15L7SU0oPy8u2aj38uUthVnyu3QbkV3VprW0AihpyGV6sLv9roV-sNOTh3A9AUm9i1vKgcW3l1qYLKeSHoglXKY-cp6CyZqbJvCahjev_u3F1-gxVDW5nrR0SFDFXt2J2jh_T1tpqyEucfDeO9tjf8zR_jqjAd7zAJvgrJSDTMMpi9eD-kY8XAb1AgelFy0gUXCLXfKS2vufm5RsUYbtBJrzfga3Qm55taWsG3ceJosINt7LL2BmP9fDrYrItH2x-8xR4eMjhEGFhCwIBaZ7j3oqG_sp0lxN9lHD3WKG8P7QfDTQ6cQwhNVfg91NYTueFzDYPerCarz1bLFMrCjtib2a5WUtMPryhKQmHbfqd2m4e_ffvD857n8_KNOQ-KG-VQbSy5oLI8OT57NZ4pKDHHdD0cymOCRaGcpPbyKXHudEOsXsCKZ__yS1SyjRHa_X2ndO0K_wZDBY0vzc75tTDYspIFpz7DP9VB4wC3F3Q9KO9DbKUGOpBTAZqgr71peiiszuPPgbbBisTurOs3AkcP0tHEAmp_runC91cCnLwzdvB-MlxJBiXdcr0t9p0WAD2fnjpkrMsf0QwFtYUE4gL7gcFP2lFlW60F-uul17dqPPK018kVC7YA3Jtpl2ZWVQ0LPx_5kaeAjf9RIvUHSzN1TwfpzmXDgTOAH8i4uyrCVnMHsGla5llrGvN60HFhoZuPQjIJmBJemw59ASunbqJlmxkflhuILU98v0JSRT7xODdDKkyAXC5iHtGxVjex6RlGIycPoyohLC5qUw63XQfhrxKppbn9bXYDxf-p-dwzVgycCnQlxUll5lQu6tqtLJuhHtOfheb33f1NkQC_Unuzl0_LT0dJzwBYqSwnqhKyL8YZwdzOK6QOcuF71JqhBWFGVJHAyQb0OxK5tbr4y6BHlTaIOJv50rAcoqcV9hc7TYHXN3almUvdCiq1Qs8ZnLHCWAYCz5h1EUq8FjTFGddSbsIjzlveK1Nz82k0wQympI2sp9OVI1NyA6Br8fLYirkY87EjXBTo1hDB9YSo95JLe40qiuzwaKGe7viV423j2Q51M252A_y17_AGRGgwjfF1KEFmoEXoc7Eb2gcS5kFdFQ0Va_De7D9YffR-3tRBbxU45S97f-MCkk0UGNEwmcD13zygtdHdkUPscy5yVBukQfAMT6MuWYg6dwHcKxh08Eu8-xo492Mv-kMCPO2hkPMZViF2uzKWHuvGD4vZt8QM8QazNBEg8XqJTQ7AueYw82U10TzaO1AT2W6hPdSwEN4YKa8T4Q0yUZLB3cZL7ZuD12SHodUA1Ug3c6np47y2zZsYMVb4uK1QCGX4lvQ8UH8M2hq3ilAd940ZgWuf_rtwMgklqOVty6VxXHuydbkX8zc3h40TJLcuNfmSHHVdh2lvtSiyPie7k=","tag":"h76hKGMMniPCIS-SmtJlhA=="}'
do_call: >>> name: indy_unpack_message, args: (c_int(3), b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJ6TW5OeWlaQlNpaUFzVmpaNldkN0VjU3FHamdNOW5KX0MwWUdhZ0FzQjdPMDBTeEt3dE5KZXgzalJ1QnFfeEtVIiwiaGVhZGVyIjp7ImtpZCI6IkY2ZFZvUkpNeEQyZnJFbjZKazFWNGE4TGNYaGNTTExhbU5DZXZacHBVMVBxIiwiaXYiOiJJVmNvVnhNV1ZKRUZDNE1vM1lkWUZ5ZC1JUmowbHVYVCIsInNlbmRlciI6IkhaOG1ybGNuWThYdFE1eDI1T1NYRXN1ZlEwYklKY3l1c1VOZjdJVzBYSHdJTkkySk9DS1ItXzlYUm1DTFNoSENqOFhrYjJZMWdtYVl1OUYwaDVmYk9YRDVTV2tUSXAzajBBV19Ra2J6NEVIWW5SV3NlVHdjR0xiLXNVZz0ifX1dfQ==","iv":"dJBE2kEB6cTghz1k","ciphertext":"jdKR4bOv1KLX-XCIpdx-ih8e7OVEvXF5JOO3SRDtHyuogUeo5x3w8yoPO-7r5uIBEy_GF4rt6GAcn7qvgaB_x5sdDZCU8-DyMkJqbt2DwTEyoOGAjQSOY3WHXGkhwVZS4MLZ7-n5aI6L5MZvlfvYaQ7iMbqpb-73aWCV3gjzmKcgKDfP85Fr8gyE4rJBPTCxOjKIQKvLUSjn9Pi4-ZTSr3CQXdLOYB3b-R_baD3-QbMhzv8_V5o3AJxIh5fuoyv6ZuG7ZRkB2rhB7f-cdYkMk4m3ObUs-lRN4DqD5wLY0clsBv0GVl28W1zI_fZo5G5CJlzzvuskk69UbKWQIBlfc4wxl_gRooqTaHx12ZhQFCuulp0ctbn_UuG6CPFmdxCBb5uF1KqtT0_xjsHIYl9xlmCtxJKJq_ew4u6X4Sgcy-O6brCYzVSnF2NI9KSIQ5U23-42BNTR6X1VhVl1ni7Tq9XvOnhEHMOy8foHXtNZfKzxiwQ4Hdp9E0EFEk5WtzfBsYo9tBJq9PIlkghEAttGAh_IrVSYXkzUDx-oXVJsfn8Ry4w9doWkGY_O5Y07u8YU3L2wO6NLNSvWnweKR1oTwCkE5U2pIKsO88H8Ek7Tlh8y5quvY-moNpmQwOR1f0BZCHHsbtI05W8hOjuDDy9qWkzLfbBf1JAbCmr0QVNRuTSMxfFpHwr_oRiYnc54WL7gbOP0FNBwNyxZdZ5BbC2kh9ezbUB-DVStx6-eHYwW3W-mQcbJAaWaOjanEGgjT_cxw6QbtmUeqMmN_bYVMEd6hUeW8-StzLHmEMK68FdNn62kMEmcYvhk6S3YCoTmcdL9shZ7yonf0y5CRRISLmjiTYBq1uvD2RAhj1-RZH0nhX3Cnavb0JmpYwbW2Pj4VPyGVsnstUCFfkkVqy_el3hqATOJ-DMQgxDOXZmC6c5hWah5_gdP8JqpX-LggkZoprUi34vUUQEacST-KjgJphmGOW3a6PojN6YQo43ACItC8JMWbG2gUw3gHcp2w5EpN1CM6uAgdQkHP86anHfnDdGMAijwTU5otnl_SpoMQBy7gQH37vvYOMMt2PdZ2gTPnU7AGPZmvtAwmcoKbMeU3LMD5YJpREz4gLOGNZZ-G62qAS28UWjoyxp3tcXYg_b--BQIp7_kwpHl3NyNAK28tW5VucE-LtedR-BLha_Ps0eZnOqfGl-LdlPdsQoI_OxYu80f33WGQw5Qcizz8q47Q4GV-83fRvIFyyptOY-QFS5h_QM-sitEbTlwinqu3dOCYwnIwAgIPDEW6X4eZ3mSOd6U7yaDbFowB3e9cyyDhgx6xru3lTt7TBVDtakLM_EPsDH84dkY9yKiCppUB5ELgXzw4ZrlJzFm97GEUyZFpMDyl4PVAALAuhh5cLunXlVIwVq2ppIfmY-Gs6udY2Pk9rlSlz7sHt-aUXfaHd8qnC74LsKF2P3vlmbrmv7gtTeQYXMwyz_16JW_n9PV8mrCtpOpOfGOUmXWg-DxtGWv8RBAhEXd1pVQjJQkDQyOaXqOKFk81cie4RuHuUfgspPStwGiZk75OKsf7i9G4H2ccEvws2-udqDxAz60zZpocNbRJaFyoUkreYspJH6hdreTTFvF-nJfN5wIbJ4FjwRv1h3aV7Zt1uvySatYRaAh2zckguGAE1po5OJmGZ1YPp3dgivzr5WyPgZ566GNewZIF4uOnoXCB8Sx2hDlK2DwhI7vSwAWUyF6zBEuYRUYjvYmMDJ4D2AY_ih2D21nGnDCpLVvA5FZLuUBifro__sSoYqWDxuCjz9frAze7DDa2loxi3SiO2LX55pRGWsQRHSgMIYwSB_ZgSCOp83HaWuFYbYx4tHu0LKYioRTISVNXnOpQ4_kLPU4Ok5EX_VdwjoDYYeBku_1eqmIZKjHCHwbt69qSntLsg7zRt5QGBMpgVb4qnszlF3PPlxxshTaza0CyUknOj2dveNazDyu6JKpYeVwpv6Z9YsbPZjtTIDFW60y-eqclfAd4Tq7N0HMTzf1AE8BwAphxkJzapYKp5xelEWSUAX5ARmpF3a_viusT_F404Baejf-fT1wY9LfYbMztP-8kpnT3C1hxmghDDKT3WdS3kegWkU1bks8KQDZiPPFvh9CUszi3HKWViKLp6JbDnZStB8pwPg_aEVYBuSaWy4MoZdZZqoqIctuqxG4cVMTmUkV9rKnClVRuzC3kr-Hxv99T5TB1Pkz6ns6NBzpUDZkWU4GMH_IEsp1iThcInxytsezLOwCK2x7qm2bNB6BEFye9c9K9MYK_Tx7QiKtIlLPII_UAk8eUBSdGXcDtEW-ZFg_jtGsaxnhvFWcBhETkEZy8sIAoAqx98kgCmlCStFEyyXeZgeUn4jI3cA1f1z0x-POn2Eo9S5opSwije20mNWhdjfiotn-und7XFKf0xIoXr2uaNo0TgBaaRIfPY79E0fsloPxgAvevZ-TcYcA_FADrs-RhnEtlZUGYJFHLHKIDN4XaBy22nbm0WsQFfysHmHxvEKH43Cqcz-54VJd1gTkLc0UJO7Ce8aI5xSim9tQ0mEpxbtOsN_8y5-Zz5YTVKC3u8nQqNnPaw5goEHtELsIk_ZXKp582ifuRLlr3EIZi2Z0hdGCueisa5YYN0G3Sphf3-OTrxReS51M6rmVmPdw8-WKdQ5zc7V3tl582VbuJk8piu2S6wIOS9aYa4yFE03SD0yXFBMvZFH0i76xlcwEixVhh7YsWFTny4fEvuEyHypHe0kwpTFbhJPtDKWl5AjnheEM0wdxBKFSlO1IaYNtXx8Fy6ds90641YjR2YXJzGLeBXsdTd185R3Ma2KgMAbd6h7UODocxpVQ8OtAV63FDc9W1t52Bnbp6gxyrrJX6Tnq3rdSjYqL3182floKK0McSO8QzLYx-hmkegaz1yUfG0nW_XGRkv5gE_MbaYuIefor1f5La4wm-QupVmVF0igJh8fK5VroXeGS1gCsEaTuWRZmeTCdpQYI2f1jdrt2BwapPAfo2Xi4XNejd68BqvquEB7A-l5mPixKVX9397jHrJK6R8oJUYga9cxFx40T2cJp3LYvXJCfwpxJuaMFozxqp2dDclzPZ8BEWpwsnXTYgGqapzyhaCVwj1hRxL-ujqraSQYA6O3TU1DAWiHu_HojEzMcIOygT-n4PvUVcV5h41svy3HMsOyF7laftOWoDbXptama1UZmGQXbf3NklrYbvwLvEzs97vKK-MQQ8XJcE-sYPQc22h0qv1Rk0BaqY8GOgCKJnihmwQcHk3p859M8zBVmJ5SoW0hPLZPdx5dKF9JQXw27XFYvusdg3z3lucOp3Jr1imRzv8oQ0v7-EtFkyPclWxy9I5FR-7aY2Z5kUCwm5xu4iuF8CNQElonxBbfJss6jlisr-hoVo__axTM2Lvndykgwn2QZtGnGREL2ky-fC9h1CPWszNVZTL53IdclDAIZihLrY2271TTmpllYlfTvFjoZsjS1ApHh9smRg73LeUDQEjH9-vWC8-VfzW3yIkDeLtwtj6tGqJGNDbVmmkj80-gFxoOqeFZXPuiCRpzSYL62RzqtYC2dqGszY302zLAdQ6n4mFh1r1_eCa96OpOguFL2qVOAcAqSx4tN43EyLGKgok4fM6xqU8ZVAu3iylEnzLHnQl1IwTtt3UlI-735eE6pG232Mddo696KQZJlf3jlvLEjVKdKgfJ4PNxRposrvsMb9WrlvIu_7XOxeriM92lKHQKiK-d0dL90EtFUtoymqiAyJoiA5XJ0srXhpm_Gv7Pg7sQKEEN5rLN3BCqErIyFVBGOWgtnnL3XfkUh57u3VTPTmtHXBCGeGy0J-KlHG89Q1CvnwsGgcBvXTJ28DWhpJR3_xgYs40XGTrXsb7gIikxaL9tdQgoTOAyWpQE8VMObEEHKZVruU1BS342PJ2IRYPspoiiG1cR_yYEf594A4qW_qFSfZNK6O_OmLkLXbp5MVX19oTcjv2rSWlRmUdvc9NMQR5TaYjpIfGgn8d4FoZzp-NY3J3PCvrL4UeObsgLGz3vroPtX5aYGcU8OdRwbZv9XMo6Vl-E7GHMOZMIdZ8wbAjhAzxTRpsX_LMVJ8uSK6_uCcUQ62LLx0id4XGodESa5eSki_CiuPjevj2og5ZebC34Z1A0eht_W65CIGJ7792swP-263pYsCLzdqgcsdo5bg5EetxWhpN4tAYJ5qa5RaZDZHA_CgZ1cPT59n2PV_Spv2_Iqt_JuJKoVu6h842WYjbIIk3EXJUGYmpU4yO2M8WJpHM-RGVoZsWV7muBqL6JglEfXqTkw5efR7OqeLyFKCp6aiGK6dHddgKnusZ1cH_S3t9hlDPqkxUHhPBM1yR14asS9ABWigiSGpXvEWwmn79XPWZMjBLKWrAThoKfUCkipwzXv7VtB-J25FXJqm4UmjZMUJNUXehjWv6KR4KhyMAefd2OUzH8DPt4B75sL3ED46kudiL52s4xHVeYyZVFgQVtcrbbWqonDW18aj1JAHHCY9-FmW7g8z9cH_UEOSQGPfjHsBrpJvAEtno0-y-f33CFBTY2AKE9lT5DUhhgzGOjKl8fi8E7wdtUyj_EP7eop78SS68wZArO4bXFxK7ECKvNA6ionLq9ZVIgsVErnJTSllAGK4WoS_ufpoZWGHIefY3897O-DQb2DJGx4qQb_bcYZY5FHdMeiliVJk3dD6ODiT1jeB3aoKpOuZtVTzxXW0B_QctLkAJLM37U-dMu4jpzMZ31FAkq6MJY2hHiLuNIDipEsT0FZ1GZEZ4k_EKRYr7l3n3G5eq9ZVKB8n3RwT7GYpdeilsZBSH8TcK-meDjdikQK9ZVjY-1_tUuBOPzPGaGW4dDhcIrpA7PWq6qs-Yc4cZ6gBWem4J2T7BwGjwfSeO0ZCRxBcB0YcFhpUcBYHHnB-NutVoZ23uhBcwjzAfraMsDq9XTKWnNuUW6ECALJywnRSnjqZA6CGe7O_DdlD17tOD9j06ARVAXKDoHv6-UFjvZY6lomP_7mTAeyQlhBwW2kXMemAZsvJVATcFtC7Wz62DX3aIUNQhd5Qx_4tFOXFFYLfO6boBGq2hU81IOeNe0KK_f-KyuuxMaOJjEjETzRl25fwvNjeFFeoj3iNG1pd81RhMun9nugI4bfHF-IoxRLme6d4biI8z5gxKxgyA0dYbzexyOUZhmTeHwBbDWYYwUSzGFbmkfJKVNJ5QchabawN4Z5J7_nzbC5Fxq-JL0Rskasz3ww3magtWPJtfXH37l7pFDAEMvED9sCXAbB5bj9xSGI95OUiu3DWiz_K5fvRvgZbg68Dw6of8WfGZbmH4fh9CC55M9D0lPXHC_I9iPGXLjtl-s1nggcoQFkzlHcJGk1yIcX3RC8RrrJ9Flj-3B4QO6AV2fEeHvFXdllN94U36gXL2Bb790WwsHEKjKCvRAMDm0kCinHYkXATLZ6tVuxhvYSob79YoWnDguU5HbRfft1Dqt4fJrYBjjvowG1F9ZMKilszxRhN-tP7-5s1-QZH_gptvVle1uuU3RvANLEPOmmWtmEjzhAnRsYdcma-Y1ogmhHavvpz-gTmLbIUcgGO9Uqi3IswLpnFwXR5492i6G21711w5sZK16fuiv--mMAU7AiQMcuIuv-Y782XvxMdvMRU3WG5tQHtlBSRr3-uIbHLtay0rIIf4GLluCxIUMqme2BZMXtya1g4gulZh-K8Fk5yLmdRKdhpvt0XUzFuvAZyT94jbQwcH_xfJ91vhfa8mKrQ6WYFxx3zDNiCYG677HtVfpQqIJjm-jb0UVCkzU2KyCBCyGixjfX3w8or-ubnqLzTHVa45-6sONmvsaldy1pup2Kyqm_iGDKzSbUJxYrzYsxTVZ0OS7AlLnrSrWAeS_1fPpTEtc67yqJx93eG2fzHw-uiSrwuHEfGEd8BHR37XAd4Tni8boDefERuCLLuWfECB_VWwPVMSnmikwSgRAqNEfcsdxhFxqMWINhIzK5mOAoTqwAX1QMjsb4vn1tjI_kNvZBGQA59mKgcnFAGHvCJOPnf39-sRP5_pwJb8Ob34xYIUAPsnQCptOjoLRpZDpzRO3uEV_M8VI2qJb_oP4U2a6QmUplyUPburjm3YKenUmCGxnTmWHoj_VxabU-_oSX8nRiaaEzpXM0bo2dafbu5u5jEPmTP5Z6PUBq6UF7NpO9UfglX1aCukiTr-mwJZnbKozOtSdXf1ZQuwxcG9HZxR8VJKjSYIv4jZA74JdNQl73ckgLQ-FXTftrIDlETeKMxnkCSOXep_ch50B9B4byQvwJ0imJ5ok6a1qmL2kQKxHd15L7SU0oPy8u2aj38uUthVnyu3QbkV3VprW0AihpyGV6sLv9roV-sNOTh3A9AUm9i1vKgcW3l1qYLKeSHoglXKY-cp6CyZqbJvCahjev_u3F1-gxVDW5nrR0SFDFXt2J2jh_T1tpqyEucfDeO9tjf8zR_jqjAd7zAJvgrJSDTMMpi9eD-kY8XAb1AgelFy0gUXCLXfKS2vufm5RsUYbtBJrzfga3Qm55taWsG3ceJosINt7LL2BmP9fDrYrItH2x-8xR4eMjhEGFhCwIBaZ7j3oqG_sp0lxN9lHD3WKG8P7QfDTQ6cQwhNVfg91NYTueFzDYPerCarz1bLFMrCjtib2a5WUtMPryhKQmHbfqd2m4e_ffvD857n8_KNOQ-KG-VQbSy5oLI8OT57NZ4pKDHHdD0cymOCRaGcpPbyKXHudEOsXsCKZ__yS1SyjRHa_X2ndO0K_wZDBY0vzc75tTDYspIFpz7DP9VB4wC3F3Q9KO9DbKUGOpBTAZqgr71peiiszuPPgbbBisTurOs3AkcP0tHEAmp_runC91cCnLwzdvB-MlxJBiXdcr0t9p0WAD2fnjpkrMsf0QwFtYUE4gL7gcFP2lFlW60F-uul17dqPPK018kVC7YA3Jtpl2ZWVQ0LPx_5kaeAjf9RIvUHSzN1TwfpzmXDgTOAH8i4uyrCVnMHsGla5llrGvN60HFhoZuPQjIJmBJemw59ASunbqJlmxkflhuILU98v0JSRT7xODdDKkyAXC5iHtGxVjex6RlGIycPoyohLC5qUw63XQfhrxKppbn9bXYDxf-p-dwzVgycCnQlxUll5lQu6tqtLJuhHtOfheb33f1NkQC_Unuzl0_LT0dJzwBYqSwnqhKyL8YZwdzOK6QOcuF71JqhBWFGVJHAyQb0OxK5tbr4y6BHlTaIOJv50rAcoqcV9hc7TYHXN3almUvdCiq1Qs8ZnLHCWAYCz5h1EUq8FjTFGddSbsIjzlveK1Nz82k0wQympI2sp9OVI1NyA6Br8fLYirkY87EjXBTo1hDB9YSo95JLe40qiuzwaKGe7viV423j2Q51M252A_y17_AGRGgwjfF1KEFmoEXoc7Eb2gcS5kFdFQ0Va_De7D9YffR-3tRBbxU45S97f-MCkk0UGNEwmcD13zygtdHdkUPscy5yVBukQfAMT6MuWYg6dwHcKxh08Eu8-xo492Mv-kMCPO2hkPMZViF2uzKWHuvGD4vZt8QM8QazNBEg8XqJTQ7AueYw82U10TzaO1AT2W6hPdSwEN4YKa8T4Q0yUZLB3cZL7ZuD12SHodUA1Ug3c6np47y2zZsYMVb4uK1QCGX4lvQ8UH8M2hq3ilAd940ZgWuf_rtwMgklqOVty6VxXHuydbkX8zc3h40TJLcuNfmSHHVdh2lvtSiyPie7k=","tag":"h76hKGMMniPCIS-SmtJlhA=="}', c_uint(8373), <CFunctionType object at 0x7fd99efcfe58>)
do_call: Function indy_unpack_message returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [97, 50, 75, 52, 116, 48, 101, 118, 65, 65, 104, 120, 49, 89, 87, 57, 53, 111, 118, 53, 55, 69, 87, 51, 50, 53, 50, 120, 50, 112, 114, 121, 122, 119, 122, 49, 78, 68, 106, 114, 78, 43, 71, 57, 56, 121, 120, 90, 65, 88, 114, 72, 110, 116, 114, 97, 101, 75, 99, 57, 87, 114, 84, 106, 56, 49, 77, 48, 72, 77, 98, 67, 66, 97, 77, 70, 43, 73, 98, 43, 51, 116, 112, 82, 116, 56, 52, 97, 115, 121, 83, 98, 113, 71, 52, 65], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [97, 50, 75, 52, 116, 48, 101, 118, 65, 65, 104, 120, 49, 89, 87, 57, 53, 111, 118, 53, 55, 69, 87, 51, 50, 53, 50, 120, 50, 112, 114, 121, 122, 119, 122, 49, 78, 68, 106, 114, 78, 43, 71, 57, 56, 121, 120, 90, 65, 88, 114, 72, 110, 116, 114, 97, 101, 75, 99, 57, 87, 114, 84, 106, 56, 49, 77, 48, 72, 77, 98, 67, 66, 97, 77, 70, 43, 73, 98, 43, 51, 116, 112, 82, 116, 56, 52, 97, 115, 121, 83, 98, 113, 71, 52, 65], "Medic"]
_indy_callback: >>> command_handle: 70, err , args: (b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/offer-credential\\", \\"@id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"~thread\\": {}, \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"create automated credential exchange\\", \\"credential_preview\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"offers~attach\\": [{\\"@id\\": \\"libindy-cred-offer-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgImtleV9jb3JyZWN0bmVzc19wcm9vZiI6IHsiYyI6ICIxMDc3NDczODU0MjM1MjM2MzIxMTU4MzYxOTY1NzgyNTA5OTA0NzQyNTAyNDgwNDMxMjA3OTMwNDQ4NTc1Nzg4ODc2NzA0NTI4NjM5MDkiLCAieHpfY2FwIjogIjE1ODYyNDQzNTIzNDE3ODAxMzI3OTQ1NDEyMTc4NTU5NjMwODEzMTc2MDU5ODMxMjk0NjM0NTMxNjEzODQwOTU5NTc3MDM2ODE1NDg0NTA0MjMyNzk5OTY1Mjg5MTEwMDYxODQ0OTAxNDE1OTMwMDIzNjQxNjE1MjMwOTY2OTc3NzMzMDE1NjY3OTU5NTgzMTEyNjA3NzA2OTQxMzE2ODU2NTk2MTc0OTAwNTIwNDI3NjY5NDgyMjg2MDIwMDkwMjExNzQ4MzAyNTMxOTM3NTMyODA0MDc1MDEyMTg2NDQwMTcxNzIyNDgzNDM1NDU3ODQxNzgzOTU2Njc2MjI5MzMxMDIxNDg0NDcxNTgwMDM1ODIwMDExMTczMTMwMTcyMjY3NTQ2MjExMDEzMzQ2NTk2Nzg1NTExOTk4MjU5NzM3NDQwNjMwODgxODc4NDEzOTMxMDkxNDIzMTY2NDYxMTcyOTcyNzAzODQ4MjYzMzk0NDM0NjM2OTk5NzI5NDUzODgxNzg0NDQyMzEzNzk0MzMxNDY1NTYxMjkyNzAzMTE2ODE1NTc5NTU1NjAzNjY5NjkxMzQwNzI4MzQ4MjI0MTg4OTMwNzcyODY4ODc4MjQxNDYxMzU0NjU3NjY1MDA4NDgyODkzNjUyOTQ4NzE0MjE5ODExNTI3OTM5NTI5Njc1MzYyNTY2NzY3NTA2NTE5NTQyNTY4NzM0OTc2NjMzNDc3MDg5Mzc4ODIzNzY4MTc3ODYzMzY2MjcxODEwNjM1MjQzMTcxNzg1MDQ0NzU5NzMxNzc2NTAwOTAxMjkxMDc5MzgxMzcxOTg5OTU3OTQ3MTM4NTgwNjkxODIwNTM3ODEyNDM4MjAzMDg3MjgwNzM5MDQwMDA5NzU1MjE2MDk0OTQxMzExMzU0ODI0NzYyMzE2Mjk2OTQiLCAieHJfY2FwIjogW1sibmFtZSIsICIyNDQ1MDEwMTA0MjQwMjc5Nzg1NDU0NDE5NTM5Njk4MTU1MjIzNjk4NDQxODQ1NjE1MTMxOTQ3MDU3MjU1NjA1ODkxNDEzNDg0ODU1MTkxODUyMzk1ODYyNjUwMzU0MDQ3NDI2OTgwOTM4MDMyNTcwMjU1MjgxMzk0NDc5ODgyMTk2Njc1NTgyNTI4MTQ2MDYyODQ5NjE1NDQ2Mzg2NzQ4ODMxNjg3NzQ5OTQxMjgzOTI0NzA2NTc2MTU5MjUwMzU5ODg1OTgyOTMzNzQzMTQ0MTM0NDgxODIyOTM0OTgzMDI1OTI3MTE5NzUzNTA4OTk1MTE3MTI4ODYwOTY5Njk0NjQ1OTM5NDI1MTU2NzM5OTM0ODYwMjg1MTAxNTgxNDM3NjkyODYwNzA0ODk0MzM1OTcxMTYyMTM3NDAwNjE4NTAwMDA0Njc5ODUwNzk0NzE4OTcxMjk4Mzg4NTQ1OTE0NTEyNzk3MjM0Nzg3OTc5OTQyMTc0NjE3NDg0ODA5Mjc4NTQwMTA1ODE3MDczNjk4MDI0NDMzMjg3OTY0MTMzNTQ0NzE4MDY0NzAzMjU2NTkzNzMwNjg3MzM1ODIwNDYzNjQzODc4MzQ0MDAxMjY1ODQ1MDIwMjEwNDYwNDE2NTI5MjgzNDE4OTg5NDE1ODMzMDkzOTYzOTU3ODY2MDgyNDIzNDY1MDM3NzQ0MTc3MDAwMzgxMDk0MDE3MDA1NTQ3NDkzNDI2OTQ4NjU5NDE4NzU3NjIyNzU5MjAzODQ1NDY2Mzk3NzQ5NDQyMDkxMTEwMDIyMzYzMzU1NzUzMzczNjAxODY2NDI4NjQ2MjQ3MzM0NTQyMzAzMTEwNTU0ODg2ODQ4ODQxMjIxMDQzMDQ0OTQwOTc2MzMzOTIyOTI5MjEzMzc3Mjc2NjUwNTA5Nzk3Nzg5OTkzIl0sIFsidW5pdmVyc2l0eSIsICI0MDU1ODg2NzI5MzM3OTkxMDM0MTAyMjA3NjUzNjk3MjYxMzgyOTA4ODg2MTc1NzcyMzc4ODY2NDc3MDk2OTE1MzI5OTAyMjI2NDM2Mjc2Njk2NzI5MTg0MDEyMTEwMDAwNTMzOTE3MTM4MzQ1OTU3MDYyNDEyNjc3NDU4MDgzMzUzMzI4NjMyMDgwOTg3ODkxMjU3MDIzNzM0NzY5OTI0OTExNDMwNjc1MTU5ODIzNDMzNjIxODE2NDI1MjM4MjEyMzM1Nzk5NzQwMzY0NjAyMTg5NjgzMTI4MTE5OTg1MjgxMjE1NjgzMzcwNzA0NDU5NDUzNTEzNzM2ODkzMzU0Nzc0NTg3Mjc1NzU1ODE3Nzc1Njg5MDM3NTk3MTk1NTE3MzgwNjcwNDgxNTQ2ODk5Mzc5OTg0MTU3ODk0NzQ4MzMzMTI2ODQ0Nzg0NTU2MTQxODk5MjQ3NjU3ODY2NzQ0MTQxMDA2Mjg1MDY1OTUyNDkxODU2MTI1MjIwNDEwMTQyMjI1MjE5Nzg2MzcxMjk5NDkyNTI2NzIxNTQzMTYxNzgxODk4MjI4NjQxMzY3MTc0MTUwMjI2MDI4ODc4Mjg4NDA1NTg4NDk4MTQxMTUzMjYxMzA0NTUxMDA2NzIxMTgwOTk1OTIwNTAzNzEwNjcwMzA2Mjk1NjQ4OTY4NDU5MjYyMTg4NTM2MzA5NDM2NzkzMzE3Mjk5NjE5MzUyMTEzNjMyNjYyNjE0NTQ2MTE4MDE3MjI2MDcyNjYzMDE3NzA3OTA3NTYxMzIwMzE5MjU4ODM1NzYxMTMyOTAxNjY5ODM5MjU1NTk4OTQwMjg4OTMwNTAwNzI5MTI1NzA4MTE1MDQ0NTgyMDI5MjU4OTU1OTQ3NTc5MjExNTU1MzAyNTA4MjMwMzU1NDY3ODM0NDY2MDA2NTIiXSwgWyJkYXRlaXNzdWVkIiwgIjI0ODU4MzEzODg0NzkxMzIyOTI0Mzg2MzkxMjU5NTMzNDQxMjIzODM5MjIzOTAxMTI5NjEwNjk2ODcyOTg3MjU2MTIzNjEyMDY4NDUwMDMyMzgzMDQ1MzU1NDk0ODYzNjc1Njk5ODI5MzM0MTk1MDQ5ODcwMTk0ODc5OTEwNjI5NDE4NzU5NDY4NjA0MjUzNjc2NTIwNzQ1MzU3MDI0Njc2NTg5MzgzMDY1NzIxNjE5NTg4MTM1NzM5NTczNTAzMzUyODM1NzgyMDMwNTM2ODAwMTk3NjQ0NjAyMzU0MTUyNjYxMjI0OTY2NzY5OTA5NDQ1ODA2Nzg3MDA4Mzg1MzYyNzg1NTcyMzExNzE0MzkzNTY3NDA2NTM4MjIwNzQxOTkxNTU0NDc0Mjg1OTk5NDM0MTMwOTcwNTcxODQwODI3OTIyNTY2NzUxMTgxMDY2NDUwNTg2NDg1MjQ4NjYyMDMxNTg3NDk3MjY3OTUzMzUyNDE1NTc5MTY5MTg5OTI0NjUzOTQ5ODA3OTk2MTM4MzE1NzgyNDE5MTM4NzQ5MDY0ODQxODQ0NzYxMTQ0Njg2OTAwMTkxODg4NjQ0NTc4MTg0MTc4MDA2OTExODc1ODM0MzI0NzY2MDcyNTIxNDg1MTM3MDkxMDQxNTE3MTM4MzEwOTg4NDkzNzgwMTY1NTg3NzU5MDI1MDQ1NDU0NzA3NjYxMTI1NzkxNjQ4ODU0NTc5MjA2NjkyNTczNTYzNjIzNDI2Nzk1NzczMjgxOTQwNTczMjEyOTA0NDc0NTYwODQwNzE0NTQ2NTQwMTY3NTA0MjE0NDk3ODkwMjA0MTE1OTM0MDEwODg2OTQ1MDU0NzIwMDA4MDQ1NzU4OTQxMzcxNTc3OTE2NDkwMDU2MzE5NTIyMzg5OTg3ODg2MTk4MTg2ODU0NTEiXSwgWyJtYXN0ZXJfc2VjcmV0IiwgIjE4NzcyMjYxNzQwNTUwODY5ODQzNzUwNjQxNzA2Mjg5NDIzODI5OTQxNzQzNTU0NzYwNDE4NDg1NTI0MzE1NTIwNjE5NzI0ODQ2OTA0MzA5MDk2NjYxMTkxOTM0OTUwMzQ0MTE2NjIyNjUwMjQ2NzgzNjkxMzQzMzU4NzM0MzE4MjQzODAwOTg1NzkxNTAzODQwNzc5NjQ0MTUxMDA3NDgwMzc0NTMxMTE3MDQ5NDAxOTY5NDE4MjQxMDA4NTMwMzMwMDM3Nzc3NjAwMzg0MTkxNjA0NDc2NDg4MDkxODI3NDMwMzI2NDA1NTc5MDg1MTA2NDY5NDIwMjg5NzMxMzE0NjY0NTYxNjQ0NDU1MDY4MTc3ODQ0MzU2NDM2NDgwOTIzMDA5NjMyNTcyNzA0MzUxNTIzNzM1ODUwMzU4NDEzNjg0MzIzNzM0NDYxMzEzMjY2Mjg5OTM5MzA3MDY3ODIxMDk5Nzg1ODAzNjcyNTc1NDg4OTY1NzUyNjU0NjY5MzYwMDE1NDUzNTQ0NDU2MzA2NjEzMDYzMTkxNjU3MDg3ODAwMDE4MTI5NjMwNzYyNTk0OTUwNjkxODIyMjE3NTcwNjI4MTIxNzg1ODQwMzI5MDQ1NDkyOTczOTM4NTU2NzM0ODM5MzgzOTkyNjEwNjg5ODI0MTYzMDU4NTM0MDI4NTcxMzYyOTEzMzUyMzc0Nzk1ODM2NDQzNDU2MDM3MzE0MTQ5Mjc4NDcyNTE4NjMzODc4MzA5NjExMDk2Njk5ODEwMTM3OTk1OTcwNjI5MjQ3MTM3NDg4NzEzMTIzNzM3MDQ4MjM3NDgxNjk1MzA4Njk0NDI2MjMwNjU2Nzk3NDI0MTY4NTU5OTY1MzEwNTM5MjY0MjU1MTc5NDE0ODQ3NDc5MTMxMzE2MTI0NTc1MDcyMTMyMDIiXV19LCAibm9uY2UiOiAiNTk4MDY5OTIwOTMzNDc2ODk4NjM4MjE1In0=\\"}}]}","recipient_verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","sender_verkey":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 70, err , args: (b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/offer-credential\\", \\"@id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"~thread\\": {}, \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"create automated credential exchange\\", \\"credential_preview\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"offers~attach\\": [{\\"@id\\": \\"libindy-cred-offer-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgImtleV9jb3JyZWN0bmVzc19wcm9vZiI6IHsiYyI6ICIxMDc3NDczODU0MjM1MjM2MzIxMTU4MzYxOTY1NzgyNTA5OTA0NzQyNTAyNDgwNDMxMjA3OTMwNDQ4NTc1Nzg4ODc2NzA0NTI4NjM5MDkiLCAieHpfY2FwIjogIjE1ODYyNDQzNTIzNDE3ODAxMzI3OTQ1NDEyMTc4NTU5NjMwODEzMTc2MDU5ODMxMjk0NjM0NTMxNjEzODQwOTU5NTc3MDM2ODE1NDg0NTA0MjMyNzk5OTY1Mjg5MTEwMDYxODQ0OTAxNDE1OTMwMDIzNjQxNjE1MjMwOTY2OTc3NzMzMDE1NjY3OTU5NTgzMTEyNjA3NzA2OTQxMzE2ODU2NTk2MTc0OTAwNTIwNDI3NjY5NDgyMjg2MDIwMDkwMjExNzQ4MzAyNTMxOTM3NTMyODA0MDc1MDEyMTg2NDQwMTcxNzIyNDgzNDM1NDU3ODQxNzgzOTU2Njc2MjI5MzMxMDIxNDg0NDcxNTgwMDM1ODIwMDExMTczMTMwMTcyMjY3NTQ2MjExMDEzMzQ2NTk2Nzg1NTExOTk4MjU5NzM3NDQwNjMwODgxODc4NDEzOTMxMDkxNDIzMTY2NDYxMTcyOTcyNzAzODQ4MjYzMzk0NDM0NjM2OTk5NzI5NDUzODgxNzg0NDQyMzEzNzk0MzMxNDY1NTYxMjkyNzAzMTE2ODE1NTc5NTU1NjAzNjY5NjkxMzQwNzI4MzQ4MjI0MTg4OTMwNzcyODY4ODc4MjQxNDYxMzU0NjU3NjY1MDA4NDgyODkzNjUyOTQ4NzE0MjE5ODExNTI3OTM5NTI5Njc1MzYyNTY2NzY3NTA2NTE5NTQyNTY4NzM0OTc2NjMzNDc3MDg5Mzc4ODIzNzY4MTc3ODYzMzY2MjcxODEwNjM1MjQzMTcxNzg1MDQ0NzU5NzMxNzc2NTAwOTAxMjkxMDc5MzgxMzcxOTg5OTU3OTQ3MTM4NTgwNjkxODIwNTM3ODEyNDM4MjAzMDg3MjgwNzM5MDQwMDA5NzU1MjE2MDk0OTQxMzExMzU0ODI0NzYyMzE2Mjk2OTQiLCAieHJfY2FwIjogW1sibmFtZSIsICIyNDQ1MDEwMTA0MjQwMjc5Nzg1NDU0NDE5NTM5Njk4MTU1MjIzNjk4NDQxODQ1NjE1MTMxOTQ3MDU3MjU1NjA1ODkxNDEzNDg0ODU1MTkxODUyMzk1ODYyNjUwMzU0MDQ3NDI2OTgwOTM4MDMyNTcwMjU1MjgxMzk0NDc5ODgyMTk2Njc1NTgyNTI4MTQ2MDYyODQ5NjE1NDQ2Mzg2NzQ4ODMxNjg3NzQ5OTQxMjgzOTI0NzA2NTc2MTU5MjUwMzU5ODg1OTgyOTMzNzQzMTQ0MTM0NDgxODIyOTM0OTgzMDI1OTI3MTE5NzUzNTA4OTk1MTE3MTI4ODYwOTY5Njk0NjQ1OTM5NDI1MTU2NzM5OTM0ODYwMjg1MTAxNTgxNDM3NjkyODYwNzA0ODk0MzM1OTcxMTYyMTM3NDAwNjE4NTAwMDA0Njc5ODUwNzk0NzE4OTcxMjk4Mzg4NTQ1OTE0NTEyNzk3MjM0Nzg3OTc5OTQyMTc0NjE3NDg0ODA5Mjc4NTQwMTA1ODE3MDczNjk4MDI0NDMzMjg3OTY0MTMzNTQ0NzE4MDY0NzAzMjU2NTkzNzMwNjg3MzM1ODIwNDYzNjQzODc4MzQ0MDAxMjY1ODQ1MDIwMjEwNDYwNDE2NTI5MjgzNDE4OTg5NDE1ODMzMDkzOTYzOTU3ODY2MDgyNDIzNDY1MDM3NzQ0MTc3MDAwMzgxMDk0MDE3MDA1NTQ3NDkzNDI2OTQ4NjU5NDE4NzU3NjIyNzU5MjAzODQ1NDY2Mzk3NzQ5NDQyMDkxMTEwMDIyMzYzMzU1NzUzMzczNjAxODY2NDI4NjQ2MjQ3MzM0NTQyMzAzMTEwNTU0ODg2ODQ4ODQxMjIxMDQzMDQ0OTQwOTc2MzMzOTIyOTI5MjEzMzc3Mjc2NjUwNTA5Nzk3Nzg5OTkzIl0sIFsidW5pdmVyc2l0eSIsICI0MDU1ODg2NzI5MzM3OTkxMDM0MTAyMjA3NjUzNjk3MjYxMzgyOTA4ODg2MTc1NzcyMzc4ODY2NDc3MDk2OTE1MzI5OTAyMjI2NDM2Mjc2Njk2NzI5MTg0MDEyMTEwMDAwNTMzOTE3MTM4MzQ1OTU3MDYyNDEyNjc3NDU4MDgzMzUzMzI4NjMyMDgwOTg3ODkxMjU3MDIzNzM0NzY5OTI0OTExNDMwNjc1MTU5ODIzNDMzNjIxODE2NDI1MjM4MjEyMzM1Nzk5NzQwMzY0NjAyMTg5NjgzMTI4MTE5OTg1MjgxMjE1NjgzMzcwNzA0NDU5NDUzNTEzNzM2ODkzMzU0Nzc0NTg3Mjc1NzU1ODE3Nzc1Njg5MDM3NTk3MTk1NTE3MzgwNjcwNDgxNTQ2ODk5Mzc5OTg0MTU3ODk0NzQ4MzMzMTI2ODQ0Nzg0NTU2MTQxODk5MjQ3NjU3ODY2NzQ0MTQxMDA2Mjg1MDY1OTUyNDkxODU2MTI1MjIwNDEwMTQyMjI1MjE5Nzg2MzcxMjk5NDkyNTI2NzIxNTQzMTYxNzgxODk4MjI4NjQxMzY3MTc0MTUwMjI2MDI4ODc4Mjg4NDA1NTg4NDk4MTQxMTUzMjYxMzA0NTUxMDA2NzIxMTgwOTk1OTIwNTAzNzEwNjcwMzA2Mjk1NjQ4OTY4NDU5MjYyMTg4NTM2MzA5NDM2NzkzMzE3Mjk5NjE5MzUyMTEzNjMyNjYyNjE0NTQ2MTE4MDE3MjI2MDcyNjYzMDE3NzA3OTA3NTYxMzIwMzE5MjU4ODM1NzYxMTMyOTAxNjY5ODM5MjU1NTk4OTQwMjg4OTMwNTAwNzI5MTI1NzA4MTE1MDQ0NTgyMDI5MjU4OTU1OTQ3NTc5MjExNTU1MzAyNTA4MjMwMzU1NDY3ODM0NDY2MDA2NTIiXSwgWyJkYXRlaXNzdWVkIiwgIjI0ODU4MzEzODg0NzkxMzIyOTI0Mzg2MzkxMjU5NTMzNDQxMjIzODM5MjIzOTAxMTI5NjEwNjk2ODcyOTg3MjU2MTIzNjEyMDY4NDUwMDMyMzgzMDQ1MzU1NDk0ODYzNjc1Njk5ODI5MzM0MTk1MDQ5ODcwMTk0ODc5OTEwNjI5NDE4NzU5NDY4NjA0MjUzNjc2NTIwNzQ1MzU3MDI0Njc2NTg5MzgzMDY1NzIxNjE5NTg4MTM1NzM5NTczNTAzMzUyODM1NzgyMDMwNTM2ODAwMTk3NjQ0NjAyMzU0MTUyNjYxMjI0OTY2NzY5OTA5NDQ1ODA2Nzg3MDA4Mzg1MzYyNzg1NTcyMzExNzE0MzkzNTY3NDA2NTM4MjIwNzQxOTkxNTU0NDc0Mjg1OTk5NDM0MTMwOTcwNTcxODQwODI3OTIyNTY2NzUxMTgxMDY2NDUwNTg2NDg1MjQ4NjYyMDMxNTg3NDk3MjY3OTUzMzUyNDE1NTc5MTY5MTg5OTI0NjUzOTQ5ODA3OTk2MTM4MzE1NzgyNDE5MTM4NzQ5MDY0ODQxODQ0NzYxMTQ0Njg2OTAwMTkxODg4NjQ0NTc4MTg0MTc4MDA2OTExODc1ODM0MzI0NzY2MDcyNTIxNDg1MTM3MDkxMDQxNTE3MTM4MzEwOTg4NDkzNzgwMTY1NTg3NzU5MDI1MDQ1NDU0NzA3NjYxMTI1NzkxNjQ4ODU0NTc5MjA2NjkyNTczNTYzNjIzNDI2Nzk1NzczMjgxOTQwNTczMjEyOTA0NDc0NTYwODQwNzE0NTQ2NTQwMTY3NTA0MjE0NDk3ODkwMjA0MTE1OTM0MDEwODg2OTQ1MDU0NzIwMDA4MDQ1NzU4OTQxMzcxNTc3OTE2NDkwMDU2MzE5NTIyMzg5OTg3ODg2MTk4MTg2ODU0NTEiXSwgWyJtYXN0ZXJfc2VjcmV0IiwgIjE4NzcyMjYxNzQwNTUwODY5ODQzNzUwNjQxNzA2Mjg5NDIzODI5OTQxNzQzNTU0NzYwNDE4NDg1NTI0MzE1NTIwNjE5NzI0ODQ2OTA0MzA5MDk2NjYxMTkxOTM0OTUwMzQ0MTE2NjIyNjUwMjQ2NzgzNjkxMzQzMzU4NzM0MzE4MjQzODAwOTg1NzkxNTAzODQwNzc5NjQ0MTUxMDA3NDgwMzc0NTMxMTE3MDQ5NDAxOTY5NDE4MjQxMDA4NTMwMzMwMDM3Nzc3NjAwMzg0MTkxNjA0NDc2NDg4MDkxODI3NDMwMzI2NDA1NTc5MDg1MTA2NDY5NDIwMjg5NzMxMzE0NjY0NTYxNjQ0NDU1MDY4MTc3ODQ0MzU2NDM2NDgwOTIzMDA5NjMyNTcyNzA0MzUxNTIzNzM1ODUwMzU4NDEzNjg0MzIzNzM0NDYxMzEzMjY2Mjg5OTM5MzA3MDY3ODIxMDk5Nzg1ODAzNjcyNTc1NDg4OTY1NzUyNjU0NjY5MzYwMDE1NDUzNTQ0NDU2MzA2NjEzMDYzMTkxNjU3MDg3ODAwMDE4MTI5NjMwNzYyNTk0OTUwNjkxODIyMjE3NTcwNjI4MTIxNzg1ODQwMzI5MDQ1NDkyOTczOTM4NTU2NzM0ODM5MzgzOTkyNjEwNjg5ODI0MTYzMDU4NTM0MDI4NTcxMzYyOTEzMzUyMzc0Nzk1ODM2NDQzNDU2MDM3MzE0MTQ5Mjc4NDcyNTE4NjMzODc4MzA5NjExMDk2Njk5ODEwMTM3OTk1OTcwNjI5MjQ3MTM3NDg4NzEzMTIzNzM3MDQ4MjM3NDgxNjk1MzA4Njk0NDI2MjMwNjU2Nzk3NDI0MTY4NTU5OTY1MzEwNTM5MjY0MjU1MTc5NDE0ODQ3NDc5MTMxMzE2MTI0NTc1MDcyMTMyMDIiXV19LCAibm9uY2UiOiAiNTk4MDY5OTIwOTMzNDc2ODk4NjM4MjE1In0=\\"}}]}","recipient_verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","sender_verkey":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}',)
_indy_loop_callback: Function returned b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/offer-credential\\", \\"@id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"~thread\\": {}, \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"create automated credential exchange\\", \\"credential_preview\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"offers~attach\\": [{\\"@id\\": \\"libindy-cred-offer-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgImtleV9jb3JyZWN0bmVzc19wcm9vZiI6IHsiYyI6ICIxMDc3NDczODU0MjM1MjM2MzIxMTU4MzYxOTY1NzgyNTA5OTA0NzQyNTAyNDgwNDMxMjA3OTMwNDQ4NTc1Nzg4ODc2NzA0NTI4NjM5MDkiLCAieHpfY2FwIjogIjE1ODYyNDQzNTIzNDE3ODAxMzI3OTQ1NDEyMTc4NTU5NjMwODEzMTc2MDU5ODMxMjk0NjM0NTMxNjEzODQwOTU5NTc3MDM2ODE1NDg0NTA0MjMyNzk5OTY1Mjg5MTEwMDYxODQ0OTAxNDE1OTMwMDIzNjQxNjE1MjMwOTY2OTc3NzMzMDE1NjY3OTU5NTgzMTEyNjA3NzA2OTQxMzE2ODU2NTk2MTc0OTAwNTIwNDI3NjY5NDgyMjg2MDIwMDkwMjExNzQ4MzAyNTMxOTM3NTMyODA0MDc1MDEyMTg2NDQwMTcxNzIyNDgzNDM1NDU3ODQxNzgzOTU2Njc2MjI5MzMxMDIxNDg0NDcxNTgwMDM1ODIwMDExMTczMTMwMTcyMjY3NTQ2MjExMDEzMzQ2NTk2Nzg1NTExOTk4MjU5NzM3NDQwNjMwODgxODc4NDEzOTMxMDkxNDIzMTY2NDYxMTcyOTcyNzAzODQ4MjYzMzk0NDM0NjM2OTk5NzI5NDUzODgxNzg0NDQyMzEzNzk0MzMxNDY1NTYxMjkyNzAzMTE2ODE1NTc5NTU1NjAzNjY5NjkxMzQwNzI4MzQ4MjI0MTg4OTMwNzcyODY4ODc4MjQxNDYxMzU0NjU3NjY1MDA4NDgyODkzNjUyOTQ4NzE0MjE5ODExNTI3OTM5NTI5Njc1MzYyNTY2NzY3NTA2NTE5NTQyNTY4NzM0OTc2NjMzNDc3MDg5Mzc4ODIzNzY4MTc3ODYzMzY2MjcxODEwNjM1MjQzMTcxNzg1MDQ0NzU5NzMxNzc2NTAwOTAxMjkxMDc5MzgxMzcxOTg5OTU3OTQ3MTM4NTgwNjkxODIwNTM3ODEyNDM4MjAzMDg3MjgwNzM5MDQwMDA5NzU1MjE2MDk0OTQxMzExMzU0ODI0NzYyMzE2Mjk2OTQiLCAieHJfY2FwIjogW1sibmFtZSIsICIyNDQ1MDEwMTA0MjQwMjc5Nzg1NDU0NDE5NTM5Njk4MTU1MjIzNjk4NDQxODQ1NjE1MTMxOTQ3MDU3MjU1NjA1ODkxNDEzNDg0ODU1MTkxODUyMzk1ODYyNjUwMzU0MDQ3NDI2OTgwOTM4MDMyNTcwMjU1MjgxMzk0NDc5ODgyMTk2Njc1NTgyNTI4MTQ2MDYyODQ5NjE1NDQ2Mzg2NzQ4ODMxNjg3NzQ5OTQxMjgzOTI0NzA2NTc2MTU5MjUwMzU5ODg1OTgyOTMzNzQzMTQ0MTM0NDgxODIyOTM0OTgzMDI1OTI3MTE5NzUzNTA4OTk1MTE3MTI4ODYwOTY5Njk0NjQ1OTM5NDI1MTU2NzM5OTM0ODYwMjg1MTAxNTgxNDM3NjkyODYwNzA0ODk0MzM1OTcxMTYyMTM3NDAwNjE4NTAwMDA0Njc5ODUwNzk0NzE4OTcxMjk4Mzg4NTQ1OTE0NTEyNzk3MjM0Nzg3OTc5OTQyMTc0NjE3NDg0ODA5Mjc4NTQwMTA1ODE3MDczNjk4MDI0NDMzMjg3OTY0MTMzNTQ0NzE4MDY0NzAzMjU2NTkzNzMwNjg3MzM1ODIwNDYzNjQzODc4MzQ0MDAxMjY1ODQ1MDIwMjEwNDYwNDE2NTI5MjgzNDE4OTg5NDE1ODMzMDkzOTYzOTU3ODY2MDgyNDIzNDY1MDM3NzQ0MTc3MDAwMzgxMDk0MDE3MDA1NTQ3NDkzNDI2OTQ4NjU5NDE4NzU3NjIyNzU5MjAzODQ1NDY2Mzk3NzQ5NDQyMDkxMTEwMDIyMzYzMzU1NzUzMzczNjAxODY2NDI4NjQ2MjQ3MzM0NTQyMzAzMTEwNTU0ODg2ODQ4ODQxMjIxMDQzMDQ0OTQwOTc2MzMzOTIyOTI5MjEzMzc3Mjc2NjUwNTA5Nzk3Nzg5OTkzIl0sIFsidW5pdmVyc2l0eSIsICI0MDU1ODg2NzI5MzM3OTkxMDM0MTAyMjA3NjUzNjk3MjYxMzgyOTA4ODg2MTc1NzcyMzc4ODY2NDc3MDk2OTE1MzI5OTAyMjI2NDM2Mjc2Njk2NzI5MTg0MDEyMTEwMDAwNTMzOTE3MTM4MzQ1OTU3MDYyNDEyNjc3NDU4MDgzMzUzMzI4NjMyMDgwOTg3ODkxMjU3MDIzNzM0NzY5OTI0OTExNDMwNjc1MTU5ODIzNDMzNjIxODE2NDI1MjM4MjEyMzM1Nzk5NzQwMzY0NjAyMTg5NjgzMTI4MTE5OTg1MjgxMjE1NjgzMzcwNzA0NDU5NDUzNTEzNzM2ODkzMzU0Nzc0NTg3Mjc1NzU1ODE3Nzc1Njg5MDM3NTk3MTk1NTE3MzgwNjcwNDgxNTQ2ODk5Mzc5OTg0MTU3ODk0NzQ4MzMzMTI2ODQ0Nzg0NTU2MTQxODk5MjQ3NjU3ODY2NzQ0MTQxMDA2Mjg1MDY1OTUyNDkxODU2MTI1MjIwNDEwMTQyMjI1MjE5Nzg2MzcxMjk5NDkyNTI2NzIxNTQzMTYxNzgxODk4MjI4NjQxMzY3MTc0MTUwMjI2MDI4ODc4Mjg4NDA1NTg4NDk4MTQxMTUzMjYxMzA0NTUxMDA2NzIxMTgwOTk1OTIwNTAzNzEwNjcwMzA2Mjk1NjQ4OTY4NDU5MjYyMTg4NTM2MzA5NDM2NzkzMzE3Mjk5NjE5MzUyMTEzNjMyNjYyNjE0NTQ2MTE4MDE3MjI2MDcyNjYzMDE3NzA3OTA3NTYxMzIwMzE5MjU4ODM1NzYxMTMyOTAxNjY5ODM5MjU1NTk4OTQwMjg4OTMwNTAwNzI5MTI1NzA4MTE1MDQ0NTgyMDI5MjU4OTU1OTQ3NTc5MjExNTU1MzAyNTA4MjMwMzU1NDY3ODM0NDY2MDA2NTIiXSwgWyJkYXRlaXNzdWVkIiwgIjI0ODU4MzEzODg0NzkxMzIyOTI0Mzg2MzkxMjU5NTMzNDQxMjIzODM5MjIzOTAxMTI5NjEwNjk2ODcyOTg3MjU2MTIzNjEyMDY4NDUwMDMyMzgzMDQ1MzU1NDk0ODYzNjc1Njk5ODI5MzM0MTk1MDQ5ODcwMTk0ODc5OTEwNjI5NDE4NzU5NDY4NjA0MjUzNjc2NTIwNzQ1MzU3MDI0Njc2NTg5MzgzMDY1NzIxNjE5NTg4MTM1NzM5NTczNTAzMzUyODM1NzgyMDMwNTM2ODAwMTk3NjQ0NjAyMzU0MTUyNjYxMjI0OTY2NzY5OTA5NDQ1ODA2Nzg3MDA4Mzg1MzYyNzg1NTcyMzExNzE0MzkzNTY3NDA2NTM4MjIwNzQxOTkxNTU0NDc0Mjg1OTk5NDM0MTMwOTcwNTcxODQwODI3OTIyNTY2NzUxMTgxMDY2NDUwNTg2NDg1MjQ4NjYyMDMxNTg3NDk3MjY3OTUzMzUyNDE1NTc5MTY5MTg5OTI0NjUzOTQ5ODA3OTk2MTM4MzE1NzgyNDE5MTM4NzQ5MDY0ODQxODQ0NzYxMTQ0Njg2OTAwMTkxODg4NjQ0NTc4MTg0MTc4MDA2OTExODc1ODM0MzI0NzY2MDcyNTIxNDg1MTM3MDkxMDQxNTE3MTM4MzEwOTg4NDkzNzgwMTY1NTg3NzU5MDI1MDQ1NDU0NzA3NjYxMTI1NzkxNjQ4ODU0NTc5MjA2NjkyNTczNTYzNjIzNDI2Nzk1NzczMjgxOTQwNTczMjEyOTA0NDc0NTYwODQwNzE0NTQ2NTQwMTY3NTA0MjE0NDk3ODkwMjA0MTE1OTM0MDEwODg2OTQ1MDU0NzIwMDA4MDQ1NzU4OTQxMzcxNTc3OTE2NDkwMDU2MzE5NTIyMzg5OTg3ODg2MTk4MTg2ODU0NTEiXSwgWyJtYXN0ZXJfc2VjcmV0IiwgIjE4NzcyMjYxNzQwNTUwODY5ODQzNzUwNjQxNzA2Mjg5NDIzODI5OTQxNzQzNTU0NzYwNDE4NDg1NTI0MzE1NTIwNjE5NzI0ODQ2OTA0MzA5MDk2NjYxMTkxOTM0OTUwMzQ0MTE2NjIyNjUwMjQ2NzgzNjkxMzQzMzU4NzM0MzE4MjQzODAwOTg1NzkxNTAzODQwNzc5NjQ0MTUxMDA3NDgwMzc0NTMxMTE3MDQ5NDAxOTY5NDE4MjQxMDA4NTMwMzMwMDM3Nzc3NjAwMzg0MTkxNjA0NDc2NDg4MDkxODI3NDMwMzI2NDA1NTc5MDg1MTA2NDY5NDIwMjg5NzMxMzE0NjY0NTYxNjQ0NDU1MDY4MTc3ODQ0MzU2NDM2NDgwOTIzMDA5NjMyNTcyNzA0MzUxNTIzNzM1ODUwMzU4NDEzNjg0MzIzNzM0NDYxMzEzMjY2Mjg5OTM5MzA3MDY3ODIxMDk5Nzg1ODAzNjcyNTc1NDg4OTY1NzUyNjU0NjY5MzYwMDE1NDUzNTQ0NDU2MzA2NjEzMDYzMTkxNjU3MDg3ODAwMDE4MTI5NjMwNzYyNTk0OTUwNjkxODIyMjE3NTcwNjI4MTIxNzg1ODQwMzI5MDQ1NDkyOTczOTM4NTU2NzM0ODM5MzgzOTkyNjEwNjg5ODI0MTYzMDU4NTM0MDI4NTcxMzYyOTEzMzUyMzc0Nzk1ODM2NDQzNDU2MDM3MzE0MTQ5Mjc4NDcyNTE4NjMzODc4MzA5NjExMDk2Njk5ODEwMTM3OTk1OTcwNjI5MjQ3MTM3NDg4NzEzMTIzNzM3MDQ4MjM3NDgxNjk1MzA4Njk0NDI2MjMwNjU2Nzk3NDI0MTY4NTU5OTY1MzEwNTM5MjY0MjU1MTc5NDE0ODQ3NDc5MTMxMzE2MTI0NTc1MDcyMTMyMDIiXV19LCAibm9uY2UiOiAiNTk4MDY5OTIwOTMzNDc2ODk4NjM4MjE1In0=\\"}}]}","recipient_verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","sender_verkey":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}'
_indy_loop_callback <<<
unpack_message: <<< res: b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/offer-credential\\", \\"@id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"~thread\\": {}, \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"create automated credential exchange\\", \\"credential_preview\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"offers~attach\\": [{\\"@id\\": \\"libindy-cred-offer-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgImtleV9jb3JyZWN0bmVzc19wcm9vZiI6IHsiYyI6ICIxMDc3NDczODU0MjM1MjM2MzIxMTU4MzYxOTY1NzgyNTA5OTA0NzQyNTAyNDgwNDMxMjA3OTMwNDQ4NTc1Nzg4ODc2NzA0NTI4NjM5MDkiLCAieHpfY2FwIjogIjE1ODYyNDQzNTIzNDE3ODAxMzI3OTQ1NDEyMTc4NTU5NjMwODEzMTc2MDU5ODMxMjk0NjM0NTMxNjEzODQwOTU5NTc3MDM2ODE1NDg0NTA0MjMyNzk5OTY1Mjg5MTEwMDYxODQ0OTAxNDE1OTMwMDIzNjQxNjE1MjMwOTY2OTc3NzMzMDE1NjY3OTU5NTgzMTEyNjA3NzA2OTQxMzE2ODU2NTk2MTc0OTAwNTIwNDI3NjY5NDgyMjg2MDIwMDkwMjExNzQ4MzAyNTMxOTM3NTMyODA0MDc1MDEyMTg2NDQwMTcxNzIyNDgzNDM1NDU3ODQxNzgzOTU2Njc2MjI5MzMxMDIxNDg0NDcxNTgwMDM1ODIwMDExMTczMTMwMTcyMjY3NTQ2MjExMDEzMzQ2NTk2Nzg1NTExOTk4MjU5NzM3NDQwNjMwODgxODc4NDEzOTMxMDkxNDIzMTY2NDYxMTcyOTcyNzAzODQ4MjYzMzk0NDM0NjM2OTk5NzI5NDUzODgxNzg0NDQyMzEzNzk0MzMxNDY1NTYxMjkyNzAzMTE2ODE1NTc5NTU1NjAzNjY5NjkxMzQwNzI4MzQ4MjI0MTg4OTMwNzcyODY4ODc4MjQxNDYxMzU0NjU3NjY1MDA4NDgyODkzNjUyOTQ4NzE0MjE5ODExNTI3OTM5NTI5Njc1MzYyNTY2NzY3NTA2NTE5NTQyNTY4NzM0OTc2NjMzNDc3MDg5Mzc4ODIzNzY4MTc3ODYzMzY2MjcxODEwNjM1MjQzMTcxNzg1MDQ0NzU5NzMxNzc2NTAwOTAxMjkxMDc5MzgxMzcxOTg5OTU3OTQ3MTM4NTgwNjkxODIwNTM3ODEyNDM4MjAzMDg3MjgwNzM5MDQwMDA5NzU1MjE2MDk0OTQxMzExMzU0ODI0NzYyMzE2Mjk2OTQiLCAieHJfY2FwIjogW1sibmFtZSIsICIyNDQ1MDEwMTA0MjQwMjc5Nzg1NDU0NDE5NTM5Njk4MTU1MjIzNjk4NDQxODQ1NjE1MTMxOTQ3MDU3MjU1NjA1ODkxNDEzNDg0ODU1MTkxODUyMzk1ODYyNjUwMzU0MDQ3NDI2OTgwOTM4MDMyNTcwMjU1MjgxMzk0NDc5ODgyMTk2Njc1NTgyNTI4MTQ2MDYyODQ5NjE1NDQ2Mzg2NzQ4ODMxNjg3NzQ5OTQxMjgzOTI0NzA2NTc2MTU5MjUwMzU5ODg1OTgyOTMzNzQzMTQ0MTM0NDgxODIyOTM0OTgzMDI1OTI3MTE5NzUzNTA4OTk1MTE3MTI4ODYwOTY5Njk0NjQ1OTM5NDI1MTU2NzM5OTM0ODYwMjg1MTAxNTgxNDM3NjkyODYwNzA0ODk0MzM1OTcxMTYyMTM3NDAwNjE4NTAwMDA0Njc5ODUwNzk0NzE4OTcxMjk4Mzg4NTQ1OTE0NTEyNzk3MjM0Nzg3OTc5OTQyMTc0NjE3NDg0ODA5Mjc4NTQwMTA1ODE3MDczNjk4MDI0NDMzMjg3OTY0MTMzNTQ0NzE4MDY0NzAzMjU2NTkzNzMwNjg3MzM1ODIwNDYzNjQzODc4MzQ0MDAxMjY1ODQ1MDIwMjEwNDYwNDE2NTI5MjgzNDE4OTg5NDE1ODMzMDkzOTYzOTU3ODY2MDgyNDIzNDY1MDM3NzQ0MTc3MDAwMzgxMDk0MDE3MDA1NTQ3NDkzNDI2OTQ4NjU5NDE4NzU3NjIyNzU5MjAzODQ1NDY2Mzk3NzQ5NDQyMDkxMTEwMDIyMzYzMzU1NzUzMzczNjAxODY2NDI4NjQ2MjQ3MzM0NTQyMzAzMTEwNTU0ODg2ODQ4ODQxMjIxMDQzMDQ0OTQwOTc2MzMzOTIyOTI5MjEzMzc3Mjc2NjUwNTA5Nzk3Nzg5OTkzIl0sIFsidW5pdmVyc2l0eSIsICI0MDU1ODg2NzI5MzM3OTkxMDM0MTAyMjA3NjUzNjk3MjYxMzgyOTA4ODg2MTc1NzcyMzc4ODY2NDc3MDk2OTE1MzI5OTAyMjI2NDM2Mjc2Njk2NzI5MTg0MDEyMTEwMDAwNTMzOTE3MTM4MzQ1OTU3MDYyNDEyNjc3NDU4MDgzMzUzMzI4NjMyMDgwOTg3ODkxMjU3MDIzNzM0NzY5OTI0OTExNDMwNjc1MTU5ODIzNDMzNjIxODE2NDI1MjM4MjEyMzM1Nzk5NzQwMzY0NjAyMTg5NjgzMTI4MTE5OTg1MjgxMjE1NjgzMzcwNzA0NDU5NDUzNTEzNzM2ODkzMzU0Nzc0NTg3Mjc1NzU1ODE3Nzc1Njg5MDM3NTk3MTk1NTE3MzgwNjcwNDgxNTQ2ODk5Mzc5OTg0MTU3ODk0NzQ4MzMzMTI2ODQ0Nzg0NTU2MTQxODk5MjQ3NjU3ODY2NzQ0MTQxMDA2Mjg1MDY1OTUyNDkxODU2MTI1MjIwNDEwMTQyMjI1MjE5Nzg2MzcxMjk5NDkyNTI2NzIxNTQzMTYxNzgxODk4MjI4NjQxMzY3MTc0MTUwMjI2MDI4ODc4Mjg4NDA1NTg4NDk4MTQxMTUzMjYxMzA0NTUxMDA2NzIxMTgwOTk1OTIwNTAzNzEwNjcwMzA2Mjk1NjQ4OTY4NDU5MjYyMTg4NTM2MzA5NDM2NzkzMzE3Mjk5NjE5MzUyMTEzNjMyNjYyNjE0NTQ2MTE4MDE3MjI2MDcyNjYzMDE3NzA3OTA3NTYxMzIwMzE5MjU4ODM1NzYxMTMyOTAxNjY5ODM5MjU1NTk4OTQwMjg4OTMwNTAwNzI5MTI1NzA4MTE1MDQ0NTgyMDI5MjU4OTU1OTQ3NTc5MjExNTU1MzAyNTA4MjMwMzU1NDY3ODM0NDY2MDA2NTIiXSwgWyJkYXRlaXNzdWVkIiwgIjI0ODU4MzEzODg0NzkxMzIyOTI0Mzg2MzkxMjU5NTMzNDQxMjIzODM5MjIzOTAxMTI5NjEwNjk2ODcyOTg3MjU2MTIzNjEyMDY4NDUwMDMyMzgzMDQ1MzU1NDk0ODYzNjc1Njk5ODI5MzM0MTk1MDQ5ODcwMTk0ODc5OTEwNjI5NDE4NzU5NDY4NjA0MjUzNjc2NTIwNzQ1MzU3MDI0Njc2NTg5MzgzMDY1NzIxNjE5NTg4MTM1NzM5NTczNTAzMzUyODM1NzgyMDMwNTM2ODAwMTk3NjQ0NjAyMzU0MTUyNjYxMjI0OTY2NzY5OTA5NDQ1ODA2Nzg3MDA4Mzg1MzYyNzg1NTcyMzExNzE0MzkzNTY3NDA2NTM4MjIwNzQxOTkxNTU0NDc0Mjg1OTk5NDM0MTMwOTcwNTcxODQwODI3OTIyNTY2NzUxMTgxMDY2NDUwNTg2NDg1MjQ4NjYyMDMxNTg3NDk3MjY3OTUzMzUyNDE1NTc5MTY5MTg5OTI0NjUzOTQ5ODA3OTk2MTM4MzE1NzgyNDE5MTM4NzQ5MDY0ODQxODQ0NzYxMTQ0Njg2OTAwMTkxODg4NjQ0NTc4MTg0MTc4MDA2OTExODc1ODM0MzI0NzY2MDcyNTIxNDg1MTM3MDkxMDQxNTE3MTM4MzEwOTg4NDkzNzgwMTY1NTg3NzU5MDI1MDQ1NDU0NzA3NjYxMTI1NzkxNjQ4ODU0NTc5MjA2NjkyNTczNTYzNjIzNDI2Nzk1NzczMjgxOTQwNTczMjEyOTA0NDc0NTYwODQwNzE0NTQ2NTQwMTY3NTA0MjE0NDk3ODkwMjA0MTE1OTM0MDEwODg2OTQ1MDU0NzIwMDA4MDQ1NzU4OTQxMzcxNTc3OTE2NDkwMDU2MzE5NTIyMzg5OTg3ODg2MTk4MTg2ODU0NTEiXSwgWyJtYXN0ZXJfc2VjcmV0IiwgIjE4NzcyMjYxNzQwNTUwODY5ODQzNzUwNjQxNzA2Mjg5NDIzODI5OTQxNzQzNTU0NzYwNDE4NDg1NTI0MzE1NTIwNjE5NzI0ODQ2OTA0MzA5MDk2NjYxMTkxOTM0OTUwMzQ0MTE2NjIyNjUwMjQ2NzgzNjkxMzQzMzU4NzM0MzE4MjQzODAwOTg1NzkxNTAzODQwNzc5NjQ0MTUxMDA3NDgwMzc0NTMxMTE3MDQ5NDAxOTY5NDE4MjQxMDA4NTMwMzMwMDM3Nzc3NjAwMzg0MTkxNjA0NDc2NDg4MDkxODI3NDMwMzI2NDA1NTc5MDg1MTA2NDY5NDIwMjg5NzMxMzE0NjY0NTYxNjQ0NDU1MDY4MTc3ODQ0MzU2NDM2NDgwOTIzMDA5NjMyNTcyNzA0MzUxNTIzNzM1ODUwMzU4NDEzNjg0MzIzNzM0NDYxMzEzMjY2Mjg5OTM5MzA3MDY3ODIxMDk5Nzg1ODAzNjcyNTc1NDg4OTY1NzUyNjU0NjY5MzYwMDE1NDUzNTQ0NDU2MzA2NjEzMDYzMTkxNjU3MDg3ODAwMDE4MTI5NjMwNzYyNTk0OTUwNjkxODIyMjE3NTcwNjI4MTIxNzg1ODQwMzI5MDQ1NDkyOTczOTM4NTU2NzM0ODM5MzgzOTkyNjEwNjg5ODI0MTYzMDU4NTM0MDI4NTcxMzYyOTEzMzUyMzc0Nzk1ODM2NDQzNDU2MDM3MzE0MTQ5Mjc4NDcyNTE4NjMzODc4MzA5NjExMDk2Njk5ODEwMTM3OTk1OTcwNjI5MjQ3MTM3NDg4NzEzMTIzNzM3MDQ4MjM3NDgxNjk1MzA4Njk0NDI2MjMwNjU2Nzk3NDI0MTY4NTU5OTY1MzEwNTM5MjY0MjU1MTc5NDE0ODQ3NDc5MTMxMzE2MTI0NTc1MDcyMTMyMDIiXV19LCAibm9uY2UiOiAiNTk4MDY5OTIwOTMzNDc2ODk4NjM4MjE1In0=\\"}}]}","recipient_verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","sender_verkey":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}'
Expanded message: {'@type': 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/offer-credential', '@id': '756497eb-22b7-4c6d-9b38-052a58a9e6bc', '~thread': {}, '~trace': {'target': 'log', 'full_thread': True, 'trace_reports': []}, 'comment': 'create automated credential exchange', 'credential_preview': {'@type': 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview', 'attributes': [{'name': 'Name', 'value': 'Will Abramson'}, {'name': 'University', 'value': 'Edinburgh Medical School'}, {'name': 'Date Issued', 'value': '2021-05-17'}]}, 'offers~attach': [{'@id': 'libindy-cred-offer-0', 'mime-type': 'application/json', 'data': {'base64': 'eyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgImtleV9jb3JyZWN0bmVzc19wcm9vZiI6IHsiYyI6ICIxMDc3NDczODU0MjM1MjM2MzIxMTU4MzYxOTY1NzgyNTA5OTA0NzQyNTAyNDgwNDMxMjA3OTMwNDQ4NTc1Nzg4ODc2NzA0NTI4NjM5MDkiLCAieHpfY2FwIjogIjE1ODYyNDQzNTIzNDE3ODAxMzI3OTQ1NDEyMTc4NTU5NjMwODEzMTc2MDU5ODMxMjk0NjM0NTMxNjEzODQwOTU5NTc3MDM2ODE1NDg0NTA0MjMyNzk5OTY1Mjg5MTEwMDYxODQ0OTAxNDE1OTMwMDIzNjQxNjE1MjMwOTY2OTc3NzMzMDE1NjY3OTU5NTgzMTEyNjA3NzA2OTQxMzE2ODU2NTk2MTc0OTAwNTIwNDI3NjY5NDgyMjg2MDIwMDkwMjExNzQ4MzAyNTMxOTM3NTMyODA0MDc1MDEyMTg2NDQwMTcxNzIyNDgzNDM1NDU3ODQxNzgzOTU2Njc2MjI5MzMxMDIxNDg0NDcxNTgwMDM1ODIwMDExMTczMTMwMTcyMjY3NTQ2MjExMDEzMzQ2NTk2Nzg1NTExOTk4MjU5NzM3NDQwNjMwODgxODc4NDEzOTMxMDkxNDIzMTY2NDYxMTcyOTcyNzAzODQ4MjYzMzk0NDM0NjM2OTk5NzI5NDUzODgxNzg0NDQyMzEzNzk0MzMxNDY1NTYxMjkyNzAzMTE2ODE1NTc5NTU1NjAzNjY5NjkxMzQwNzI4MzQ4MjI0MTg4OTMwNzcyODY4ODc4MjQxNDYxMzU0NjU3NjY1MDA4NDgyODkzNjUyOTQ4NzE0MjE5ODExNTI3OTM5NTI5Njc1MzYyNTY2NzY3NTA2NTE5NTQyNTY4NzM0OTc2NjMzNDc3MDg5Mzc4ODIzNzY4MTc3ODYzMzY2MjcxODEwNjM1MjQzMTcxNzg1MDQ0NzU5NzMxNzc2NTAwOTAxMjkxMDc5MzgxMzcxOTg5OTU3OTQ3MTM4NTgwNjkxODIwNTM3ODEyNDM4MjAzMDg3MjgwNzM5MDQwMDA5NzU1MjE2MDk0OTQxMzExMzU0ODI0NzYyMzE2Mjk2OTQiLCAieHJfY2FwIjogW1sibmFtZSIsICIyNDQ1MDEwMTA0MjQwMjc5Nzg1NDU0NDE5NTM5Njk4MTU1MjIzNjk4NDQxODQ1NjE1MTMxOTQ3MDU3MjU1NjA1ODkxNDEzNDg0ODU1MTkxODUyMzk1ODYyNjUwMzU0MDQ3NDI2OTgwOTM4MDMyNTcwMjU1MjgxMzk0NDc5ODgyMTk2Njc1NTgyNTI4MTQ2MDYyODQ5NjE1NDQ2Mzg2NzQ4ODMxNjg3NzQ5OTQxMjgzOTI0NzA2NTc2MTU5MjUwMzU5ODg1OTgyOTMzNzQzMTQ0MTM0NDgxODIyOTM0OTgzMDI1OTI3MTE5NzUzNTA4OTk1MTE3MTI4ODYwOTY5Njk0NjQ1OTM5NDI1MTU2NzM5OTM0ODYwMjg1MTAxNTgxNDM3NjkyODYwNzA0ODk0MzM1OTcxMTYyMTM3NDAwNjE4NTAwMDA0Njc5ODUwNzk0NzE4OTcxMjk4Mzg4NTQ1OTE0NTEyNzk3MjM0Nzg3OTc5OTQyMTc0NjE3NDg0ODA5Mjc4NTQwMTA1ODE3MDczNjk4MDI0NDMzMjg3OTY0MTMzNTQ0NzE4MDY0NzAzMjU2NTkzNzMwNjg3MzM1ODIwNDYzNjQzODc4MzQ0MDAxMjY1ODQ1MDIwMjEwNDYwNDE2NTI5MjgzNDE4OTg5NDE1ODMzMDkzOTYzOTU3ODY2MDgyNDIzNDY1MDM3NzQ0MTc3MDAwMzgxMDk0MDE3MDA1NTQ3NDkzNDI2OTQ4NjU5NDE4NzU3NjIyNzU5MjAzODQ1NDY2Mzk3NzQ5NDQyMDkxMTEwMDIyMzYzMzU1NzUzMzczNjAxODY2NDI4NjQ2MjQ3MzM0NTQyMzAzMTEwNTU0ODg2ODQ4ODQxMjIxMDQzMDQ0OTQwOTc2MzMzOTIyOTI5MjEzMzc3Mjc2NjUwNTA5Nzk3Nzg5OTkzIl0sIFsidW5pdmVyc2l0eSIsICI0MDU1ODg2NzI5MzM3OTkxMDM0MTAyMjA3NjUzNjk3MjYxMzgyOTA4ODg2MTc1NzcyMzc4ODY2NDc3MDk2OTE1MzI5OTAyMjI2NDM2Mjc2Njk2NzI5MTg0MDEyMTEwMDAwNTMzOTE3MTM4MzQ1OTU3MDYyNDEyNjc3NDU4MDgzMzUzMzI4NjMyMDgwOTg3ODkxMjU3MDIzNzM0NzY5OTI0OTExNDMwNjc1MTU5ODIzNDMzNjIxODE2NDI1MjM4MjEyMzM1Nzk5NzQwMzY0NjAyMTg5NjgzMTI4MTE5OTg1MjgxMjE1NjgzMzcwNzA0NDU5NDUzNTEzNzM2ODkzMzU0Nzc0NTg3Mjc1NzU1ODE3Nzc1Njg5MDM3NTk3MTk1NTE3MzgwNjcwNDgxNTQ2ODk5Mzc5OTg0MTU3ODk0NzQ4MzMzMTI2ODQ0Nzg0NTU2MTQxODk5MjQ3NjU3ODY2NzQ0MTQxMDA2Mjg1MDY1OTUyNDkxODU2MTI1MjIwNDEwMTQyMjI1MjE5Nzg2MzcxMjk5NDkyNTI2NzIxNTQzMTYxNzgxODk4MjI4NjQxMzY3MTc0MTUwMjI2MDI4ODc4Mjg4NDA1NTg4NDk4MTQxMTUzMjYxMzA0NTUxMDA2NzIxMTgwOTk1OTIwNTAzNzEwNjcwMzA2Mjk1NjQ4OTY4NDU5MjYyMTg4NTM2MzA5NDM2NzkzMzE3Mjk5NjE5MzUyMTEzNjMyNjYyNjE0NTQ2MTE4MDE3MjI2MDcyNjYzMDE3NzA3OTA3NTYxMzIwMzE5MjU4ODM1NzYxMTMyOTAxNjY5ODM5MjU1NTk4OTQwMjg4OTMwNTAwNzI5MTI1NzA4MTE1MDQ0NTgyMDI5MjU4OTU1OTQ3NTc5MjExNTU1MzAyNTA4MjMwMzU1NDY3ODM0NDY2MDA2NTIiXSwgWyJkYXRlaXNzdWVkIiwgIjI0ODU4MzEzODg0NzkxMzIyOTI0Mzg2MzkxMjU5NTMzNDQxMjIzODM5MjIzOTAxMTI5NjEwNjk2ODcyOTg3MjU2MTIzNjEyMDY4NDUwMDMyMzgzMDQ1MzU1NDk0ODYzNjc1Njk5ODI5MzM0MTk1MDQ5ODcwMTk0ODc5OTEwNjI5NDE4NzU5NDY4NjA0MjUzNjc2NTIwNzQ1MzU3MDI0Njc2NTg5MzgzMDY1NzIxNjE5NTg4MTM1NzM5NTczNTAzMzUyODM1NzgyMDMwNTM2ODAwMTk3NjQ0NjAyMzU0MTUyNjYxMjI0OTY2NzY5OTA5NDQ1ODA2Nzg3MDA4Mzg1MzYyNzg1NTcyMzExNzE0MzkzNTY3NDA2NTM4MjIwNzQxOTkxNTU0NDc0Mjg1OTk5NDM0MTMwOTcwNTcxODQwODI3OTIyNTY2NzUxMTgxMDY2NDUwNTg2NDg1MjQ4NjYyMDMxNTg3NDk3MjY3OTUzMzUyNDE1NTc5MTY5MTg5OTI0NjUzOTQ5ODA3OTk2MTM4MzE1NzgyNDE5MTM4NzQ5MDY0ODQxODQ0NzYxMTQ0Njg2OTAwMTkxODg4NjQ0NTc4MTg0MTc4MDA2OTExODc1ODM0MzI0NzY2MDcyNTIxNDg1MTM3MDkxMDQxNTE3MTM4MzEwOTg4NDkzNzgwMTY1NTg3NzU5MDI1MDQ1NDU0NzA3NjYxMTI1NzkxNjQ4ODU0NTc5MjA2NjkyNTczNTYzNjIzNDI2Nzk1NzczMjgxOTQwNTczMjEyOTA0NDc0NTYwODQwNzE0NTQ2NTQwMTY3NTA0MjE0NDk3ODkwMjA0MTE1OTM0MDEwODg2OTQ1MDU0NzIwMDA4MDQ1NzU4OTQxMzcxNTc3OTE2NDkwMDU2MzE5NTIyMzg5OTg3ODg2MTk4MTg2ODU0NTEiXSwgWyJtYXN0ZXJfc2VjcmV0IiwgIjE4NzcyMjYxNzQwNTUwODY5ODQzNzUwNjQxNzA2Mjg5NDIzODI5OTQxNzQzNTU0NzYwNDE4NDg1NTI0MzE1NTIwNjE5NzI0ODQ2OTA0MzA5MDk2NjYxMTkxOTM0OTUwMzQ0MTE2NjIyNjUwMjQ2NzgzNjkxMzQzMzU4NzM0MzE4MjQzODAwOTg1NzkxNTAzODQwNzc5NjQ0MTUxMDA3NDgwMzc0NTMxMTE3MDQ5NDAxOTY5NDE4MjQxMDA4NTMwMzMwMDM3Nzc3NjAwMzg0MTkxNjA0NDc2NDg4MDkxODI3NDMwMzI2NDA1NTc5MDg1MTA2NDY5NDIwMjg5NzMxMzE0NjY0NTYxNjQ0NDU1MDY4MTc3ODQ0MzU2NDM2NDgwOTIzMDA5NjMyNTcyNzA0MzUxNTIzNzM1ODUwMzU4NDEzNjg0MzIzNzM0NDYxMzEzMjY2Mjg5OTM5MzA3MDY3ODIxMDk5Nzg1ODAzNjcyNTc1NDg4OTY1NzUyNjU0NjY5MzYwMDE1NDUzNTQ0NDU2MzA2NjEzMDYzMTkxNjU3MDg3ODAwMDE4MTI5NjMwNzYyNTk0OTUwNjkxODIyMjE3NTcwNjI4MTIxNzg1ODQwMzI5MDQ1NDkyOTczOTM4NTU2NzM0ODM5MzgzOTkyNjEwNjg5ODI0MTYzMDU4NTM0MDI4NTcxMzYyOTEzMzUyMzc0Nzk1ODM2NDQzNDU2MDM3MzE0MTQ5Mjc4NDcyNTE4NjMzODc4MzA5NjExMDk2Njk5ODEwMTM3OTk1OTcwNjI5MjQ3MTM3NDg4NzEzMTIzNzM3MDQ4MjM3NDgxNjk1MzA4Njk0NDI2MjMwNjU2Nzk3NDI0MTY4NTU5OTY1MzEwNTM5MjY0MjU1MTc5NDE0ODQ3NDc5MTMxMzE2MTI0NTc1MDcyMTMyMDIiXV19LCAibm9uY2UiOiAiNTk4MDY5OTIwOTMzNDc2ODk4NjM4MjE1In0='}}]}
  {"msg_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/offer-credential", "timestamp": 1621255292.1134617, "str_time": "2021-05-17 12:41:32.113462", "handler": "Medic", "ellapsed_milli": 0, "outcome": "Dispatcher.handle_message.START"}
get_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'f56b18ea-92e1-4f6d-a094-80da3fad398d', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573273868768), c_char_p(140572651798400), c_char_p(140573273512360), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
192.168.208.2 [17/May/2021:12:41:32 +0000] "POST / HTTP/1.1" 200 149 "-" "Python/3.6 aiohttp/3.6.3"
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [120, 99, 101, 86, 104, 116, 110, 103, 56, 75, 112, 113, 55, 105, 55, 47, 101, 106, 66, 77, 104, 76, 90, 102, 98, 69, 80, 98, 116, 98, 69, 114, 78, 67, 114, 109, 116, 118, 104, 85, 108, 65, 71, 107, 71, 78, 105, 52, 67, 54, 116, 117, 88, 105, 74, 47, 50, 108, 116, 118, 83, 102, 74, 77, 116, 106, 72, 119, 105, 51, 72, 105, 55, 82, 112, 79, 114, 67, 69, 70, 85, 84, 72, 122, 122, 81, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 71, err , args: (b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 71, err , args: (b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
CredentialOfferHandler called with context <RequestContext(_connection_ready=True, _connection_record=<ConnRecord(_id='f56b18ea-92e1-4f6d-a094-80da3fad398d', _last_state='active', state='active', created_at='2021-05-17 12:41:06.885367Z', updated_at='2021-05-17 12:41:08.369600Z', my_did='Ss9L55FVLDVAE9wH9QUaLm', their_did='QxkFnUxMqbSZbC91on4s4x', their_label='Edinburgh Medical School', their_role='inviter', invitation_key='5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP', invitation_msg_id=None, request_id='5c86d714-9808-4bc8-a653-6abb4c381dab', error_msg=None, inbound_connection_id=None, routing_state='none', accept='auto', invitation_mode='once', alias=None, their_public_did=None)>, _context=<aries_cloudagent.config.injection_context.InjectionContext object at 0x7fd99ef99e10>, _message=<CredentialOffer(_message_id='756497eb-22b7-4c6d-9b38-052a58a9e6bc', _message_new_id=False, _message_decorators=<DecoratorSet{~thread: <ThreadDecorator(_thid=None, _pthid=None, _sender_order=None, _received_orders=None)>, ~trace: <TraceDecorator(_target='log', _full_thread=True, _trace_reports=None)>}>, comment='create automated credential exchange', credential_preview=<CredentialPreview(attributes=[<CredAttrSpec(name='Name', value='Will Abramson', mime_type=None)>, <CredAttrSpec(name='University', value='Edinburgh Medical School', mime_type=None)>, <CredAttrSpec(name='Date Issued', value='2021-05-17', mime_type=None)>])>, offers_attach=[<AttachDecorator(ident='libindy-cred-offer-0', description=None, filename=None, mime_type='application/json', lastmod_time=None, byte_count=None, data=<AttachDecoratorData(base64_='eyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgImtleV9jb3JyZWN0bmVzc19wcm9vZiI6IHsiYyI6ICIxMDc3NDczODU0MjM1MjM2MzIxMTU4MzYxOTY1NzgyNTA5OTA0NzQyNTAyNDgwNDMxMjA3OTMwNDQ4NTc1Nzg4ODc2NzA0NTI4NjM5MDkiLCAieHpfY2FwIjogIjE1ODYyNDQzNTIzNDE3ODAxMzI3OTQ1NDEyMTc4NTU5NjMwODEzMTc2MDU5ODMxMjk0NjM0NTMxNjEzODQwOTU5NTc3MDM2ODE1NDg0NTA0MjMyNzk5OTY1Mjg5MTEwMDYxODQ0OTAxNDE1OTMwMDIzNjQxNjE1MjMwOTY2OTc3NzMzMDE1NjY3OTU5NTgzMTEyNjA3NzA2OTQxMzE2ODU2NTk2MTc0OTAwNTIwNDI3NjY5NDgyMjg2MDIwMDkwMjExNzQ4MzAyNTMxOTM3NTMyODA0MDc1MDEyMTg2NDQwMTcxNzIyNDgzNDM1NDU3ODQxNzgzOTU2Njc2MjI5MzMxMDIxNDg0NDcxNTgwMDM1ODIwMDExMTczMTMwMTcyMjY3NTQ2MjExMDEzMzQ2NTk2Nzg1NTExOTk4MjU5NzM3NDQwNjMwODgxODc4NDEzOTMxMDkxNDIzMTY2NDYxMTcyOTcyNzAzODQ4MjYzMzk0NDM0NjM2OTk5NzI5NDUzODgxNzg0NDQyMzEzNzk0MzMxNDY1NTYxMjkyNzAzMTE2ODE1NTc5NTU1NjAzNjY5NjkxMzQwNzI4MzQ4MjI0MTg4OTMwNzcyODY4ODc4MjQxNDYxMzU0NjU3NjY1MDA4NDgyODkzNjUyOTQ4NzE0MjE5ODExNTI3OTM5NTI5Njc1MzYyNTY2NzY3NTA2NTE5NTQyNTY4NzM0OTc2NjMzNDc3MDg5Mzc4ODIzNzY4MTc3ODYzMzY2MjcxODEwNjM1MjQzMTcxNzg1MDQ0NzU5NzMxNzc2NTAwOTAxMjkxMDc5MzgxMzcxOTg5OTU3OTQ3MTM4NTgwNjkxODIwNTM3ODEyNDM4MjAzMDg3MjgwNzM5MDQwMDA5NzU1MjE2MDk0OTQxMzExMzU0ODI0NzYyMzE2Mjk2OTQiLCAieHJfY2FwIjogW1sibmFtZSIsICIyNDQ1MDEwMTA0MjQwMjc5Nzg1NDU0NDE5NTM5Njk4MTU1MjIzNjk4NDQxODQ1NjE1MTMxOTQ3MDU3MjU1NjA1ODkxNDEzNDg0ODU1MTkxODUyMzk1ODYyNjUwMzU0MDQ3NDI2OTgwOTM4MDMyNTcwMjU1MjgxMzk0NDc5ODgyMTk2Njc1NTgyNTI4MTQ2MDYyODQ5NjE1NDQ2Mzg2NzQ4ODMxNjg3NzQ5OTQxMjgzOTI0NzA2NTc2MTU5MjUwMzU5ODg1OTgyOTMzNzQzMTQ0MTM0NDgxODIyOTM0OTgzMDI1OTI3MTE5NzUzNTA4OTk1MTE3MTI4ODYwOTY5Njk0NjQ1OTM5NDI1MTU2NzM5OTM0ODYwMjg1MTAxNTgxNDM3NjkyODYwNzA0ODk0MzM1OTcxMTYyMTM3NDAwNjE4NTAwMDA0Njc5ODUwNzk0NzE4OTcxMjk4Mzg4NTQ1OTE0NTEyNzk3MjM0Nzg3OTc5OTQyMTc0NjE3NDg0ODA5Mjc4NTQwMTA1ODE3MDczNjk4MDI0NDMzMjg3OTY0MTMzNTQ0NzE4MDY0NzAzMjU2NTkzNzMwNjg3MzM1ODIwNDYzNjQzODc4MzQ0MDAxMjY1ODQ1MDIwMjEwNDYwNDE2NTI5MjgzNDE4OTg5NDE1ODMzMDkzOTYzOTU3ODY2MDgyNDIzNDY1MDM3NzQ0MTc3MDAwMzgxMDk0MDE3MDA1NTQ3NDkzNDI2OTQ4NjU5NDE4NzU3NjIyNzU5MjAzODQ1NDY2Mzk3NzQ5NDQyMDkxMTEwMDIyMzYzMzU1NzUzMzczNjAxODY2NDI4NjQ2MjQ3MzM0NTQyMzAzMTEwNTU0ODg2ODQ4ODQxMjIxMDQzMDQ0OTQwOTc2MzMzOTIyOTI5MjEzMzc3Mjc2NjUwNTA5Nzk3Nzg5OTkzIl0sIFsidW5pdmVyc2l0eSIsICI0MDU1ODg2NzI5MzM3OTkxMDM0MTAyMjA3NjUzNjk3MjYxMzgyOTA4ODg2MTc1NzcyMzc4ODY2NDc3MDk2OTE1MzI5OTAyMjI2NDM2Mjc2Njk2NzI5MTg0MDEyMTEwMDAwNTMzOTE3MTM4MzQ1OTU3MDYyNDEyNjc3NDU4MDgzMzUzMzI4NjMyMDgwOTg3ODkxMjU3MDIzNzM0NzY5OTI0OTExNDMwNjc1MTU5ODIzNDMzNjIxODE2NDI1MjM4MjEyMzM1Nzk5NzQwMzY0NjAyMTg5NjgzMTI4MTE5OTg1MjgxMjE1NjgzMzcwNzA0NDU5NDUzNTEzNzM2ODkzMzU0Nzc0NTg3Mjc1NzU1ODE3Nzc1Njg5MDM3NTk3MTk1NTE3MzgwNjcwNDgxNTQ2ODk5Mzc5OTg0MTU3ODk0NzQ4MzMzMTI2ODQ0Nzg0NTU2MTQxODk5MjQ3NjU3ODY2NzQ0MTQxMDA2Mjg1MDY1OTUyNDkxODU2MTI1MjIwNDEwMTQyMjI1MjE5Nzg2MzcxMjk5NDkyNTI2NzIxNTQzMTYxNzgxODk4MjI4NjQxMzY3MTc0MTUwMjI2MDI4ODc4Mjg4NDA1NTg4NDk4MTQxMTUzMjYxMzA0NTUxMDA2NzIxMTgwOTk1OTIwNTAzNzEwNjcwMzA2Mjk1NjQ4OTY4NDU5MjYyMTg4NTM2MzA5NDM2NzkzMzE3Mjk5NjE5MzUyMTEzNjMyNjYyNjE0NTQ2MTE4MDE3MjI2MDcyNjYzMDE3NzA3OTA3NTYxMzIwMzE5MjU4ODM1NzYxMTMyOTAxNjY5ODM5MjU1NTk4OTQwMjg4OTMwNTAwNzI5MTI1NzA4MTE1MDQ0NTgyMDI5MjU4OTU1OTQ3NTc5MjExNTU1MzAyNTA4MjMwMzU1NDY3ODM0NDY2MDA2NTIiXSwgWyJkYXRlaXNzdWVkIiwgIjI0ODU4MzEzODg0NzkxMzIyOTI0Mzg2MzkxMjU5NTMzNDQxMjIzODM5MjIzOTAxMTI5NjEwNjk2ODcyOTg3MjU2MTIzNjEyMDY4NDUwMDMyMzgzMDQ1MzU1NDk0ODYzNjc1Njk5ODI5MzM0MTk1MDQ5ODcwMTk0ODc5OTEwNjI5NDE4NzU5NDY4NjA0MjUzNjc2NTIwNzQ1MzU3MDI0Njc2NTg5MzgzMDY1NzIxNjE5NTg4MTM1NzM5NTczNTAzMzUyODM1NzgyMDMwNTM2ODAwMTk3NjQ0NjAyMzU0MTUyNjYxMjI0OTY2NzY5OTA5NDQ1ODA2Nzg3MDA4Mzg1MzYyNzg1NTcyMzExNzE0MzkzNTY3NDA2NTM4MjIwNzQxOTkxNTU0NDc0Mjg1OTk5NDM0MTMwOTcwNTcxODQwODI3OTIyNTY2NzUxMTgxMDY2NDUwNTg2NDg1MjQ4NjYyMDMxNTg3NDk3MjY3OTUzMzUyNDE1NTc5MTY5MTg5OTI0NjUzOTQ5ODA3OTk2MTM4MzE1NzgyNDE5MTM4NzQ5MDY0ODQxODQ0NzYxMTQ0Njg2OTAwMTkxODg4NjQ0NTc4MTg0MTc4MDA2OTExODc1ODM0MzI0NzY2MDcyNTIxNDg1MTM3MDkxMDQxNTE3MTM4MzEwOTg4NDkzNzgwMTY1NTg3NzU5MDI1MDQ1NDU0NzA3NjYxMTI1NzkxNjQ4ODU0NTc5MjA2NjkyNTczNTYzNjIzNDI2Nzk1NzczMjgxOTQwNTczMjEyOTA0NDc0NTYwODQwNzE0NTQ2NTQwMTY3NTA0MjE0NDk3ODkwMjA0MTE1OTM0MDEwODg2OTQ1MDU0NzIwMDA4MDQ1NzU4OTQxMzcxNTc3OTE2NDkwMDU2MzE5NTIyMzg5OTg3ODg2MTk4MTg2ODU0NTEiXSwgWyJtYXN0ZXJfc2VjcmV0IiwgIjE4NzcyMjYxNzQwNTUwODY5ODQzNzUwNjQxNzA2Mjg5NDIzODI5OTQxNzQzNTU0NzYwNDE4NDg1NTI0MzE1NTIwNjE5NzI0ODQ2OTA0MzA5MDk2NjYxMTkxOTM0OTUwMzQ0MTE2NjIyNjUwMjQ2NzgzNjkxMzQzMzU4NzM0MzE4MjQzODAwOTg1NzkxNTAzODQwNzc5NjQ0MTUxMDA3NDgwMzc0NTMxMTE3MDQ5NDAxOTY5NDE4MjQxMDA4NTMwMzMwMDM3Nzc3NjAwMzg0MTkxNjA0NDc2NDg4MDkxODI3NDMwMzI2NDA1NTc5MDg1MTA2NDY5NDIwMjg5NzMxMzE0NjY0NTYxNjQ0NDU1MDY4MTc3ODQ0MzU2NDM2NDgwOTIzMDA5NjMyNTcyNzA0MzUxNTIzNzM1ODUwMzU4NDEzNjg0MzIzNzM0NDYxMzEzMjY2Mjg5OTM5MzA3MDY3ODIxMDk5Nzg1ODAzNjcyNTc1NDg4OTY1NzUyNjU0NjY5MzYwMDE1NDUzNTQ0NDU2MzA2NjEzMDYzMTkxNjU3MDg3ODAwMDE4MTI5NjMwNzYyNTk0OTUwNjkxODIyMjE3NTcwNjI4MTIxNzg1ODQwMzI5MDQ1NDkyOTczOTM4NTU2NzM0ODM5MzgzOTkyNjEwNjg5ODI0MTYzMDU4NTM0MDI4NTcxMzYyOTEzMzUyMzc0Nzk1ODM2NDQzNDU2MDM3MzE0MTQ5Mjc4NDcyNTE4NjMzODc4MzA5NjExMDk2Njk5ODEwMTM3OTk1OTcwNjI5MjQ3MTM3NDg4NzEzMTIzNzM3MDQ4MjM3NDgxNjk1MzA4Njk0NDI2MjMwNjU2Nzk3NDI0MTY4NTU5OTY1MzEwNTM5MjY0MjU1MTc5NDE0ODQ3NDc5MTMxMzE2MTI0NTc1MDcyMTMyMDIiXV19LCAibm9uY2UiOiAiNTk4MDY5OTIwOTMzNDc2ODk4NjM4MjE1In0=')>)>])>, _message_receipt=<MessageReceipt(_connection_id=None, _direct_response_mode=None, _in_time='2021-05-17 12:41:32.063763Z', _raw_message='{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/offer-credential", "@id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "~thread": {}, "~trace": {"target": "log", "full_thread": true, "trace_reports": []}, "comment": "create automated credential exchange", "credential_preview": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview", "attributes": [{"name": "Name", "value": "Will Abramson"}, {"name": "University", "value": "Edinburgh Medical School"}, {"name": "Date Issued", "value": "2021-05-17"}]}, "offers~attach": [{"@id": "libindy-cred-offer-0", "mime-type": "application/json", "data": {"base64": "eyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgImtleV9jb3JyZWN0bmVzc19wcm9vZiI6IHsiYyI6ICIxMDc3NDczODU0MjM1MjM2MzIxMTU4MzYxOTY1NzgyNTA5OTA0NzQyNTAyNDgwNDMxMjA3OTMwNDQ4NTc1Nzg4ODc2NzA0NTI4NjM5MDkiLCAieHpfY2FwIjogIjE1ODYyNDQzNTIzNDE3ODAxMzI3OTQ1NDEyMTc4NTU5NjMwODEzMTc2MDU5ODMxMjk0NjM0NTMxNjEzODQwOTU5NTc3MDM2ODE1NDg0NTA0MjMyNzk5OTY1Mjg5MTEwMDYxODQ0OTAxNDE1OTMwMDIzNjQxNjE1MjMwOTY2OTc3NzMzMDE1NjY3OTU5NTgzMTEyNjA3NzA2OTQxMzE2ODU2NTk2MTc0OTAwNTIwNDI3NjY5NDgyMjg2MDIwMDkwMjExNzQ4MzAyNTMxOTM3NTMyODA0MDc1MDEyMTg2NDQwMTcxNzIyNDgzNDM1NDU3ODQxNzgzOTU2Njc2MjI5MzMxMDIxNDg0NDcxNTgwMDM1ODIwMDExMTczMTMwMTcyMjY3NTQ2MjExMDEzMzQ2NTk2Nzg1NTExOTk4MjU5NzM3NDQwNjMwODgxODc4NDEzOTMxMDkxNDIzMTY2NDYxMTcyOTcyNzAzODQ4MjYzMzk0NDM0NjM2OTk5NzI5NDUzODgxNzg0NDQyMzEzNzk0MzMxNDY1NTYxMjkyNzAzMTE2ODE1NTc5NTU1NjAzNjY5NjkxMzQwNzI4MzQ4MjI0MTg4OTMwNzcyODY4ODc4MjQxNDYxMzU0NjU3NjY1MDA4NDgyODkzNjUyOTQ4NzE0MjE5ODExNTI3OTM5NTI5Njc1MzYyNTY2NzY3NTA2NTE5NTQyNTY4NzM0OTc2NjMzNDc3MDg5Mzc4ODIzNzY4MTc3ODYzMzY2MjcxODEwNjM1MjQzMTcxNzg1MDQ0NzU5NzMxNzc2NTAwOTAxMjkxMDc5MzgxMzcxOTg5OTU3OTQ3MTM4NTgwNjkxODIwNTM3ODEyNDM4MjAzMDg3MjgwNzM5MDQwMDA5NzU1MjE2MDk0OTQxMzExMzU0ODI0NzYyMzE2Mjk2OTQiLCAieHJfY2FwIjogW1sibmFtZSIsICIyNDQ1MDEwMTA0MjQwMjc5Nzg1NDU0NDE5NTM5Njk4MTU1MjIzNjk4NDQxODQ1NjE1MTMxOTQ3MDU3MjU1NjA1ODkxNDEzNDg0ODU1MTkxODUyMzk1ODYyNjUwMzU0MDQ3NDI2OTgwOTM4MDMyNTcwMjU1MjgxMzk0NDc5ODgyMTk2Njc1NTgyNTI4MTQ2MDYyODQ5NjE1NDQ2Mzg2NzQ4ODMxNjg3NzQ5OTQxMjgzOTI0NzA2NTc2MTU5MjUwMzU5ODg1OTgyOTMzNzQzMTQ0MTM0NDgxODIyOTM0OTgzMDI1OTI3MTE5NzUzNTA4OTk1MTE3MTI4ODYwOTY5Njk0NjQ1OTM5NDI1MTU2NzM5OTM0ODYwMjg1MTAxNTgxNDM3NjkyODYwNzA0ODk0MzM1OTcxMTYyMTM3NDAwNjE4NTAwMDA0Njc5ODUwNzk0NzE4OTcxMjk4Mzg4NTQ1OTE0NTEyNzk3MjM0Nzg3OTc5OTQyMTc0NjE3NDg0ODA5Mjc4NTQwMTA1ODE3MDczNjk4MDI0NDMzMjg3OTY0MTMzNTQ0NzE4MDY0NzAzMjU2NTkzNzMwNjg3MzM1ODIwNDYzNjQzODc4MzQ0MDAxMjY1ODQ1MDIwMjEwNDYwNDE2NTI5MjgzNDE4OTg5NDE1ODMzMDkzOTYzOTU3ODY2MDgyNDIzNDY1MDM3NzQ0MTc3MDAwMzgxMDk0MDE3MDA1NTQ3NDkzNDI2OTQ4NjU5NDE4NzU3NjIyNzU5MjAzODQ1NDY2Mzk3NzQ5NDQyMDkxMTEwMDIyMzYzMzU1NzUzMzczNjAxODY2NDI4NjQ2MjQ3MzM0NTQyMzAzMTEwNTU0ODg2ODQ4ODQxMjIxMDQzMDQ0OTQwOTc2MzMzOTIyOTI5MjEzMzc3Mjc2NjUwNTA5Nzk3Nzg5OTkzIl0sIFsidW5pdmVyc2l0eSIsICI0MDU1ODg2NzI5MzM3OTkxMDM0MTAyMjA3NjUzNjk3MjYxMzgyOTA4ODg2MTc1NzcyMzc4ODY2NDc3MDk2OTE1MzI5OTAyMjI2NDM2Mjc2Njk2NzI5MTg0MDEyMTEwMDAwNTMzOTE3MTM4MzQ1OTU3MDYyNDEyNjc3NDU4MDgzMzUzMzI4NjMyMDgwOTg3ODkxMjU3MDIzNzM0NzY5OTI0OTExNDMwNjc1MTU5ODIzNDMzNjIxODE2NDI1MjM4MjEyMzM1Nzk5NzQwMzY0NjAyMTg5NjgzMTI4MTE5OTg1MjgxMjE1NjgzMzcwNzA0NDU5NDUzNTEzNzM2ODkzMzU0Nzc0NTg3Mjc1NzU1ODE3Nzc1Njg5MDM3NTk3MTk1NTE3MzgwNjcwNDgxNTQ2ODk5Mzc5OTg0MTU3ODk0NzQ4MzMzMTI2ODQ0Nzg0NTU2MTQxODk5MjQ3NjU3ODY2NzQ0MTQxMDA2Mjg1MDY1OTUyNDkxODU2MTI1MjIwNDEwMTQyMjI1MjE5Nzg2MzcxMjk5NDkyNTI2NzIxNTQzMTYxNzgxODk4MjI4NjQxMzY3MTc0MTUwMjI2MDI4ODc4Mjg4NDA1NTg4NDk4MTQxMTUzMjYxMzA0NTUxMDA2NzIxMTgwOTk1OTIwNTAzNzEwNjcwMzA2Mjk1NjQ4OTY4NDU5MjYyMTg4NTM2MzA5NDM2NzkzMzE3Mjk5NjE5MzUyMTEzNjMyNjYyNjE0NTQ2MTE4MDE3MjI2MDcyNjYzMDE3NzA3OTA3NTYxMzIwMzE5MjU4ODM1NzYxMTMyOTAxNjY5ODM5MjU1NTk4OTQwMjg4OTMwNTAwNzI5MTI1NzA4MTE1MDQ0NTgyMDI5MjU4OTU1OTQ3NTc5MjExNTU1MzAyNTA4MjMwMzU1NDY3ODM0NDY2MDA2NTIiXSwgWyJkYXRlaXNzdWVkIiwgIjI0ODU4MzEzODg0NzkxMzIyOTI0Mzg2MzkxMjU5NTMzNDQxMjIzODM5MjIzOTAxMTI5NjEwNjk2ODcyOTg3MjU2MTIzNjEyMDY4NDUwMDMyMzgzMDQ1MzU1NDk0ODYzNjc1Njk5ODI5MzM0MTk1MDQ5ODcwMTk0ODc5OTEwNjI5NDE4NzU5NDY4NjA0MjUzNjc2NTIwNzQ1MzU3MDI0Njc2NTg5MzgzMDY1NzIxNjE5NTg4MTM1NzM5NTczNTAzMzUyODM1NzgyMDMwNTM2ODAwMTk3NjQ0NjAyMzU0MTUyNjYxMjI0OTY2NzY5OTA5NDQ1ODA2Nzg3MDA4Mzg1MzYyNzg1NTcyMzExNzE0MzkzNTY3NDA2NTM4MjIwNzQxOTkxNTU0NDc0Mjg1OTk5NDM0MTMwOTcwNTcxODQwODI3OTIyNTY2NzUxMTgxMDY2NDUwNTg2NDg1MjQ4NjYyMDMxNTg3NDk3MjY3OTUzMzUyNDE1NTc5MTY5MTg5OTI0NjUzOTQ5ODA3OTk2MTM4MzE1NzgyNDE5MTM4NzQ5MDY0ODQxODQ0NzYxMTQ0Njg2OTAwMTkxODg4NjQ0NTc4MTg0MTc4MDA2OTExODc1ODM0MzI0NzY2MDcyNTIxNDg1MTM3MDkxMDQxNTE3MTM4MzEwOTg4NDkzNzgwMTY1NTg3NzU5MDI1MDQ1NDU0NzA3NjYxMTI1NzkxNjQ4ODU0NTc5MjA2NjkyNTczNTYzNjIzNDI2Nzk1NzczMjgxOTQwNTczMjEyOTA0NDc0NTYwODQwNzE0NTQ2NTQwMTY3NTA0MjE0NDk3ODkwMjA0MTE1OTM0MDEwODg2OTQ1MDU0NzIwMDA4MDQ1NzU4OTQxMzcxNTc3OTE2NDkwMDU2MzE5NTIyMzg5OTg3ODg2MTk4MTg2ODU0NTEiXSwgWyJtYXN0ZXJfc2VjcmV0IiwgIjE4NzcyMjYxNzQwNTUwODY5ODQzNzUwNjQxNzA2Mjg5NDIzODI5OTQxNzQzNTU0NzYwNDE4NDg1NTI0MzE1NTIwNjE5NzI0ODQ2OTA0MzA5MDk2NjYxMTkxOTM0OTUwMzQ0MTE2NjIyNjUwMjQ2NzgzNjkxMzQzMzU4NzM0MzE4MjQzODAwOTg1NzkxNTAzODQwNzc5NjQ0MTUxMDA3NDgwMzc0NTMxMTE3MDQ5NDAxOTY5NDE4MjQxMDA4NTMwMzMwMDM3Nzc3NjAwMzg0MTkxNjA0NDc2NDg4MDkxODI3NDMwMzI2NDA1NTc5MDg1MTA2NDY5NDIwMjg5NzMxMzE0NjY0NTYxNjQ0NDU1MDY4MTc3ODQ0MzU2NDM2NDgwOTIzMDA5NjMyNTcyNzA0MzUxNTIzNzM1ODUwMzU4NDEzNjg0MzIzNzM0NDYxMzEzMjY2Mjg5OTM5MzA3MDY3ODIxMDk5Nzg1ODAzNjcyNTc1NDg4OTY1NzUyNjU0NjY5MzYwMDE1NDUzNTQ0NDU2MzA2NjEzMDYzMTkxNjU3MDg3ODAwMDE4MTI5NjMwNzYyNTk0OTUwNjkxODIyMjE3NTcwNjI4MTIxNzg1ODQwMzI5MDQ1NDkyOTczOTM4NTU2NzM0ODM5MzgzOTkyNjEwNjg5ODI0MTYzMDU4NTM0MDI4NTcxMzYyOTEzMzUyMzc0Nzk1ODM2NDQzNDU2MDM3MzE0MTQ5Mjc4NDcyNTE4NjMzODc4MzA5NjExMDk2Njk5ODEwMTM3OTk1OTcwNjI5MjQ3MTM3NDg4NzEzMTIzNzM3MDQ4MjM3NDgxNjk1MzA4Njk0NDI2MjMwNjU2Nzk3NDI0MTY4NTU5OTY1MzEwNTM5MjY0MjU1MTc5NDE0ODQ3NDc5MTMxMzE2MTI0NTc1MDcyMTMyMDIiXV19LCAibm9uY2UiOiAiNTk4MDY5OTIwOTMzNDc2ODk4NjM4MjE1In0="}}]}', _recipient_verkey='F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq', _recipient_did='Ss9L55FVLDVAE9wH9QUaLm', _recipient_did_public=None, _sender_did='QxkFnUxMqbSZbC91on4s4x', _sender_verkey='E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm', _thread_id='756497eb-22b7-4c6d-9b38-052a58a9e6bc')>, _profile=<IndySdkProfile(backend=indy, name=Medic)>)>
Received credential offer message: {"@type":"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/offer-credential","@id":"756497eb-22b7-4c6d-9b38-052a58a9e6bc","~thread":{},"~trace":{"target":"log","full_thread":true,"trace_reports":[]},"comment":"create automated credential exchange","credential_preview":{"@type":"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview","attributes":[{"name":"Name","value":"Will Abramson"},{"name":"University","value":"Edinburgh Medical School"},{"name":"Date Issued","value":"2021-05-17"}]},"offers~attach":[{"@id":"libindy-cred-offer-0","mime-type":"application/json","data":{"base64":"eyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgImtleV9jb3JyZWN0bmVzc19wcm9vZiI6IHsiYyI6ICIxMDc3NDczODU0MjM1MjM2MzIxMTU4MzYxOTY1NzgyNTA5OTA0NzQyNTAyNDgwNDMxMjA3OTMwNDQ4NTc1Nzg4ODc2NzA0NTI4NjM5MDkiLCAieHpfY2FwIjogIjE1ODYyNDQzNTIzNDE3ODAxMzI3OTQ1NDEyMTc4NTU5NjMwODEzMTc2MDU5ODMxMjk0NjM0NTMxNjEzODQwOTU5NTc3MDM2ODE1NDg0NTA0MjMyNzk5OTY1Mjg5MTEwMDYxODQ0OTAxNDE1OTMwMDIzNjQxNjE1MjMwOTY2OTc3NzMzMDE1NjY3OTU5NTgzMTEyNjA3NzA2OTQxMzE2ODU2NTk2MTc0OTAwNTIwNDI3NjY5NDgyMjg2MDIwMDkwMjExNzQ4MzAyNTMxOTM3NTMyODA0MDc1MDEyMTg2NDQwMTcxNzIyNDgzNDM1NDU3ODQxNzgzOTU2Njc2MjI5MzMxMDIxNDg0NDcxNTgwMDM1ODIwMDExMTczMTMwMTcyMjY3NTQ2MjExMDEzMzQ2NTk2Nzg1NTExOTk4MjU5NzM3NDQwNjMwODgxODc4NDEzOTMxMDkxNDIzMTY2NDYxMTcyOTcyNzAzODQ4MjYzMzk0NDM0NjM2OTk5NzI5NDUzODgxNzg0NDQyMzEzNzk0MzMxNDY1NTYxMjkyNzAzMTE2ODE1NTc5NTU1NjAzNjY5NjkxMzQwNzI4MzQ4MjI0MTg4OTMwNzcyODY4ODc4MjQxNDYxMzU0NjU3NjY1MDA4NDgyODkzNjUyOTQ4NzE0MjE5ODExNTI3OTM5NTI5Njc1MzYyNTY2NzY3NTA2NTE5NTQyNTY4NzM0OTc2NjMzNDc3MDg5Mzc4ODIzNzY4MTc3ODYzMzY2MjcxODEwNjM1MjQzMTcxNzg1MDQ0NzU5NzMxNzc2NTAwOTAxMjkxMDc5MzgxMzcxOTg5OTU3OTQ3MTM4NTgwNjkxODIwNTM3ODEyNDM4MjAzMDg3MjgwNzM5MDQwMDA5NzU1MjE2MDk0OTQxMzExMzU0ODI0NzYyMzE2Mjk2OTQiLCAieHJfY2FwIjogW1sibmFtZSIsICIyNDQ1MDEwMTA0MjQwMjc5Nzg1NDU0NDE5NTM5Njk4MTU1MjIzNjk4NDQxODQ1NjE1MTMxOTQ3MDU3MjU1NjA1ODkxNDEzNDg0ODU1MTkxODUyMzk1ODYyNjUwMzU0MDQ3NDI2OTgwOTM4MDMyNTcwMjU1MjgxMzk0NDc5ODgyMTk2Njc1NTgyNTI4MTQ2MDYyODQ5NjE1NDQ2Mzg2NzQ4ODMxNjg3NzQ5OTQxMjgzOTI0NzA2NTc2MTU5MjUwMzU5ODg1OTgyOTMzNzQzMTQ0MTM0NDgxODIyOTM0OTgzMDI1OTI3MTE5NzUzNTA4OTk1MTE3MTI4ODYwOTY5Njk0NjQ1OTM5NDI1MTU2NzM5OTM0ODYwMjg1MTAxNTgxNDM3NjkyODYwNzA0ODk0MzM1OTcxMTYyMTM3NDAwNjE4NTAwMDA0Njc5ODUwNzk0NzE4OTcxMjk4Mzg4NTQ1OTE0NTEyNzk3MjM0Nzg3OTc5OTQyMTc0NjE3NDg0ODA5Mjc4NTQwMTA1ODE3MDczNjk4MDI0NDMzMjg3OTY0MTMzNTQ0NzE4MDY0NzAzMjU2NTkzNzMwNjg3MzM1ODIwNDYzNjQzODc4MzQ0MDAxMjY1ODQ1MDIwMjEwNDYwNDE2NTI5MjgzNDE4OTg5NDE1ODMzMDkzOTYzOTU3ODY2MDgyNDIzNDY1MDM3NzQ0MTc3MDAwMzgxMDk0MDE3MDA1NTQ3NDkzNDI2OTQ4NjU5NDE4NzU3NjIyNzU5MjAzODQ1NDY2Mzk3NzQ5NDQyMDkxMTEwMDIyMzYzMzU1NzUzMzczNjAxODY2NDI4NjQ2MjQ3MzM0NTQyMzAzMTEwNTU0ODg2ODQ4ODQxMjIxMDQzMDQ0OTQwOTc2MzMzOTIyOTI5MjEzMzc3Mjc2NjUwNTA5Nzk3Nzg5OTkzIl0sIFsidW5pdmVyc2l0eSIsICI0MDU1ODg2NzI5MzM3OTkxMDM0MTAyMjA3NjUzNjk3MjYxMzgyOTA4ODg2MTc1NzcyMzc4ODY2NDc3MDk2OTE1MzI5OTAyMjI2NDM2Mjc2Njk2NzI5MTg0MDEyMTEwMDAwNTMzOTE3MTM4MzQ1OTU3MDYyNDEyNjc3NDU4MDgzMzUzMzI4NjMyMDgwOTg3ODkxMjU3MDIzNzM0NzY5OTI0OTExNDMwNjc1MTU5ODIzNDMzNjIxODE2NDI1MjM4MjEyMzM1Nzk5NzQwMzY0NjAyMTg5NjgzMTI4MTE5OTg1MjgxMjE1NjgzMzcwNzA0NDU5NDUzNTEzNzM2ODkzMzU0Nzc0NTg3Mjc1NzU1ODE3Nzc1Njg5MDM3NTk3MTk1NTE3MzgwNjcwNDgxNTQ2ODk5Mzc5OTg0MTU3ODk0NzQ4MzMzMTI2ODQ0Nzg0NTU2MTQxODk5MjQ3NjU3ODY2NzQ0MTQxMDA2Mjg1MDY1OTUyNDkxODU2MTI1MjIwNDEwMTQyMjI1MjE5Nzg2MzcxMjk5NDkyNTI2NzIxNTQzMTYxNzgxODk4MjI4NjQxMzY3MTc0MTUwMjI2MDI4ODc4Mjg4NDA1NTg4NDk4MTQxMTUzMjYxMzA0NTUxMDA2NzIxMTgwOTk1OTIwNTAzNzEwNjcwMzA2Mjk1NjQ4OTY4NDU5MjYyMTg4NTM2MzA5NDM2NzkzMzE3Mjk5NjE5MzUyMTEzNjMyNjYyNjE0NTQ2MTE4MDE3MjI2MDcyNjYzMDE3NzA3OTA3NTYxMzIwMzE5MjU4ODM1NzYxMTMyOTAxNjY5ODM5MjU1NTk4OTQwMjg4OTMwNTAwNzI5MTI1NzA4MTE1MDQ0NTgyMDI5MjU4OTU1OTQ3NTc5MjExNTU1MzAyNTA4MjMwMzU1NDY3ODM0NDY2MDA2NTIiXSwgWyJkYXRlaXNzdWVkIiwgIjI0ODU4MzEzODg0NzkxMzIyOTI0Mzg2MzkxMjU5NTMzNDQxMjIzODM5MjIzOTAxMTI5NjEwNjk2ODcyOTg3MjU2MTIzNjEyMDY4NDUwMDMyMzgzMDQ1MzU1NDk0ODYzNjc1Njk5ODI5MzM0MTk1MDQ5ODcwMTk0ODc5OTEwNjI5NDE4NzU5NDY4NjA0MjUzNjc2NTIwNzQ1MzU3MDI0Njc2NTg5MzgzMDY1NzIxNjE5NTg4MTM1NzM5NTczNTAzMzUyODM1NzgyMDMwNTM2ODAwMTk3NjQ0NjAyMzU0MTUyNjYxMjI0OTY2NzY5OTA5NDQ1ODA2Nzg3MDA4Mzg1MzYyNzg1NTcyMzExNzE0MzkzNTY3NDA2NTM4MjIwNzQxOTkxNTU0NDc0Mjg1OTk5NDM0MTMwOTcwNTcxODQwODI3OTIyNTY2NzUxMTgxMDY2NDUwNTg2NDg1MjQ4NjYyMDMxNTg3NDk3MjY3OTUzMzUyNDE1NTc5MTY5MTg5OTI0NjUzOTQ5ODA3OTk2MTM4MzE1NzgyNDE5MTM4NzQ5MDY0ODQxODQ0NzYxMTQ0Njg2OTAwMTkxODg4NjQ0NTc4MTg0MTc4MDA2OTExODc1ODM0MzI0NzY2MDcyNTIxNDg1MTM3MDkxMDQxNTE3MTM4MzEwOTg4NDkzNzgwMTY1NTg3NzU5MDI1MDQ1NDU0NzA3NjYxMTI1NzkxNjQ4ODU0NTc5MjA2NjkyNTczNTYzNjIzNDI2Nzk1NzczMjgxOTQwNTczMjEyOTA0NDc0NTYwODQwNzE0NTQ2NTQwMTY3NTA0MjE0NDk3ODkwMjA0MTE1OTM0MDEwODg2OTQ1MDU0NzIwMDA4MDQ1NzU4OTQxMzcxNTc3OTE2NDkwMDU2MzE5NTIyMzg5OTg3ODg2MTk4MTg2ODU0NTEiXSwgWyJtYXN0ZXJfc2VjcmV0IiwgIjE4NzcyMjYxNzQwNTUwODY5ODQzNzUwNjQxNzA2Mjg5NDIzODI5OTQxNzQzNTU0NzYwNDE4NDg1NTI0MzE1NTIwNjE5NzI0ODQ2OTA0MzA5MDk2NjYxMTkxOTM0OTUwMzQ0MTE2NjIyNjUwMjQ2NzgzNjkxMzQzMzU4NzM0MzE4MjQzODAwOTg1NzkxNTAzODQwNzc5NjQ0MTUxMDA3NDgwMzc0NTMxMTE3MDQ5NDAxOTY5NDE4MjQxMDA4NTMwMzMwMDM3Nzc3NjAwMzg0MTkxNjA0NDc2NDg4MDkxODI3NDMwMzI2NDA1NTc5MDg1MTA2NDY5NDIwMjg5NzMxMzE0NjY0NTYxNjQ0NDU1MDY4MTc3ODQ0MzU2NDM2NDgwOTIzMDA5NjMyNTcyNzA0MzUxNTIzNzM1ODUwMzU4NDEzNjg0MzIzNzM0NDYxMzEzMjY2Mjg5OTM5MzA3MDY3ODIxMDk5Nzg1ODAzNjcyNTc1NDg4OTY1NzUyNjU0NjY5MzYwMDE1NDUzNTQ0NDU2MzA2NjEzMDYzMTkxNjU3MDg3ODAwMDE4MTI5NjMwNzYyNTk0OTUwNjkxODIyMjE3NTcwNjI4MTIxNzg1ODQwMzI5MDQ1NDkyOTczOTM4NTU2NzM0ODM5MzgzOTkyNjEwNjg5ODI0MTYzMDU4NTM0MDI4NTcxMzYyOTEzMzUyMzc0Nzk1ODM2NDQzNDU2MDM3MzE0MTQ5Mjc4NDcyNTE4NjMzODc4MzA5NjExMDk2Njk5ODEwMTM3OTk1OTcwNjI5MjQ3MTM3NDg4NzEzMTIzNzM3MDQ4MjM3NDgxNjk1MzA4Njk0NDI2MjMwNjU2Nzk3NDI0MTY4NTU5OTY1MzEwNTM5MjY0MjU1MTc5NDE0ODQ3NDc5MTMxMzE2MTI0NTc1MDcyMTMyMDIiXV19LCAibm9uY2UiOiAiNTk4MDY5OTIwOTMzNDc2ODk4NjM4MjE1In0="}}]}
open_wallet_search: >>> wallet_handle: 3, type_: 'credential_exchange_v10', query_json: '{"thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140573273243160), c_char_p(140573273287152), c_char_p(140573275297904), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[68, 120, 77, 86, 78, 80, 76, 102, 86, 83, 78, 57, 84, 105, 75, 104, 99, 116, 77, 66, 79, 86, 78, 98, 89, 80, 104, 71, 111, 67, 102, 101, 101, 90, 86, 81, 69, 119, 120, 47, 105, 102, 52, 90, 79, 105, 82, 112, 106, 50, 88, 119, 53, 113, 118, 66, 114, 84, 103, 80, 122, 78, 77, 82, 88, 109, 119, 89], [63, 214, 72, 222, 130, 103, 146, 158, 195, 194, 230, 74, 26, 53, 129, 230, 232, 7, 33, 137, 227, 21, 72, 88, 62, 97, 106, 31, 62, 194, 84, 80, 193, 83, 183, 11, 35], [118, 216, 161, 255, 225, 241, 243, 209, 149, 17, 79, 48, 71, 125, 4, 107, 229, 121, 155, 216, 246, 172, 55, 66, 121, 145, 13, 223, 39, 217, 43, 81, 45, 74, 27, 120, 65, 214, 59, 253, 245, 44, 99, 110, 118, 85, 225, 130, 132, 109, 86, 191, 168, 17, 154, 24, 121, 233, 212, 3, 131, 86, 68, 17], "Medic", "Medic"]
_indy_callback: >>> command_handle: 72, err , args: (19,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 72, err , args: (19,)
_indy_loop_callback: Function returned 19
_indy_loop_callback <<<
open_wallet_search: <<< res: 19
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 19, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(19), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 73, err , args: (b'{"totalCount":null,"records":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 73, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 19
do_call: >>> name: indy_close_wallet_search, args: (c_int(19), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
_indy_callback: >>> command_handle: 74, err , args: ()
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 74, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
add_wallet_record: >>> wallet_handle: 3, type_: 'credential_exchange_v10', id: '71bf4548-eca4-4e17-9234-f2a75f0a41ed', value: '{"thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "created_at": "2021-05-17 12:41:32.182428Z", "updated_at": "2021-05-17 12:41:32.182428Z", "connection_id": "f56b18ea-92e1-4f6d-a094-80da3fad398d", "credential_proposal_dict": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential", "@id": "11b76349-c461-401e-8668-d198a86f1988", "credential_proposal": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview", "attributes": [{"name": "Name", "value": "Will Abramson"}, {"name": "University", "value": "Edinburgh Medical School"}, {"name": "Date Issued", "value": "2021-05-17"}]}, "comment": "create automated credential exchange", "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default"}, "credential_offer_dict": null, "credential_offer": {"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "key_correctness_proof": {"c": "107747385423523632115836196578250990474250248043120793044857578887670452863909", "xz_cap": "1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694", "xr_cap": [["name", "2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993"], ["university", "405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652"], ["dateissued", "2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451"], ["master_secret", "1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202"]]}, "nonce": "598069920933476898638215"}, "credential_request": null, "credential_request_metadata": null, "error_msg": null, "auto_offer": false, "auto_issue": false, "auto_remove": false, "raw_credential": null, "credential": null, "parent_thread_id": null, "initiator": "external", "credential_definition_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "credential_id": null, "revoc_reg_id": null, "revocation_id": null, "role": "holder", "state": "offer_received", "trace": true}', tags_json: '{"thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc"}'
do_call: >>> name: indy_add_wallet_record, args: (c_int(3), c_char_p(140573273243496), c_char_p(140572651742560), c_char_p(94095652634464), c_char_p(140573273288120), <CFunctionType object at 0x7fd9c421ba70>)
do_call: Function indy_add_wallet_record returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: INSERT INTO items (type, name, value, key, wallet_id) VALUES ($1, $2, $3, $4, $5) RETURNING id
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [[68, 120, 77, 86, 78, 80, 76, 102, 86, 83, 78, 57, 84, 105, 75, 104, 99, 116, 77, 66, 79, 86, 78, 98, 89, 80, 104, 71, 111, 67, 102, 101, 101, 90, 86, 81, 69, 119, 120, 47, 105, 102, 52, 90, 79, 105, 82, 112, 106, 50, 88, 119, 53, 113, 118, 66, 114, 84, 103, 80, 122, 78, 77, 82, 88, 109, 119, 89], [119, 56, 101, 122, 118, 50, 99, 121, 73, 74, 77, 100, 81, 81, 102, 49, 90, 120, 115, 109, 79, 119, 78, 107, 74, 81, 109, 52, 43, 110, 74, 87, 88, 54, 97, 121, 43, 110, 57, 56, 43, 48, 51, 121, 104, 81, 105, 68, 98, 55, 51, 97, 79, 98, 102, 54, 115, 48, 79, 108, 75, 118, 56, 119, 81, 68, 65, 85, 71, 122, 55, 105, 43, 102, 49, 67, 73, 97, 122, 52, 78, 122, 69, 115, 84, 119, 61, 61], [197, 48, 96, 32, 94, 138, 152, 100, 222, 205, 133, 109, 47, 93, 132, 66, 158, 222, 228, 26, 98, 220, 108, 236, 181, 245, 199, 24, 87, 96, 11, 124, 193, 157, 17, 106, 162, 72, 112, 34, 35, 127, 250, 250, 8, 192, 38, 70, 27, 201, 187, 51, 61, 74, 5, 61, 10, 42, 92, 193, 46, 175, 88, 255, 169, 126, 223, 47, 108, 113, 203, 64, 138, 114, 228, 202, 24, 14, 89, 235, 122, 54, 107, 148, 55, 160, 174, 254, 16, 252, 172, 14, 215, 249, 137, 154, 168, 157, 65, 203, 40, 254, 197, 146, 164, 199, 21, 234, 33, 185, 138, 191, 125, 23, 177, 150, 157, 109, 47, 105, 55, 192, 113, 232, 119, 41, 143, 4, 118, 59, 154, 31, 40, 150, 150, 59, 166, 241, 226, 5, 8, 215, 91, 121, 183, 225, 42, 118, 128, 159, 245, 245, 203, 238, 229, 197, 235, 208, 128, 96, 24, 116, 52, 202, 82, 214, 253, 230, 127, 136, 100, 216, 34, 148, 118, 177, 131, 196, 101, 222, 58, 111, 15, 189, 129, 216, 117, 142, 162, 21, 42, 0, 81, 168, 130, 159, 168, 207, 4, 100, 22, 118, 124, 103, 49, 9, 124, 204, 86, 67, 174, 68, 20, 136, 16, 102, 97, 160, 23, 30, 196, 65, 149, 228, 190, 77, 32, 28, 109, 124, 209, 162, 158, 184, 219, 67, 71, 2, 3, 120, 49, 83, 0, 140, 216, 243, 228, 139, 9, 81, 65, 247, 64, 189, 138, 119, 74, 10, 204, 233, 118, 68, 43, 176, 169, 209, 52, 180, 147, 236, 182, 251, 25, 184, 46, 5, 112, 210, 81, 106, 101, 201, 233, 220, 75, 101, 140, 118, 81, 171, 242, 213, 111, 236, 116, 185, 2, 111, 218, 241, 132, 164, 85, 69, 237, 255, 176, 229, 222, 223, 180, 156, 148, 76, 86, 195, 39, 150, 248, 51, 167, 203, 254, 121, 33, 173, 148, 225, 147, 94, 177, 145, 101, 212, 132, 61, 195, 118, 129, 94, 90, 164, 220, 248, 33, 170, 249, 89, 53, 195, 225, 94, 153, 163, 61, 195, 125, 123, 83, 177, 162, 132, 235, 144, 246, 251, 154, 121, 127, 176, 38, 148, 223, 242, 140, 42, 179, 52, 55, 4, 154, 248, 142, 96, 234, 203, 11, 17, 235, 183, 224, 164, 190, 225, 34, 56, 182, 113, 136, 245, 84, 178, 219, 79, 143, 59, 177, 42, 224, 98, 106, 213, 235, 189, 211, 217, 64, 80, 50, 26, 104, 201, 141, 25, 163, 73, 71, 6, 227, 255, 151, 91, 134, 109, 122, 226, 218, 189, 148, 52, 23, 206, 206, 127, 169, 250, 207, 40, 68, 245, 231, 99, 178, 6, 31, 12, 169, 60, 89, 163, 68, 64, 109, 163, 75, 106, 124, 248, 87, 246, 43, 225, 53, 86, 190, 31, 252, 92, 26, 219, 201, 58, 12, 27, 69, 155, 18, 224, 119, 154, 14, 11, 73, 115, 53, 224, 158, 96, 109, 155, 38, 46, 176, 3, 164, 73, 186, 202, 34, 172, 220, 148, 158, 238, 226, 158, 224, 77, 166, 66, 174, 69, 241, 154, 162, 252, 42, 70, 20, 156, 241, 177, 244, 155, 10, 60, 57, 81, 0, 229, 91, 136, 8, 70, 170, 209, 98, 38, 119, 157, 232, 189, 207, 73, 142, 138, 185, 232, 181, 186, 122, 249, 14, 76, 92, 81, 218, 88, 43, 219, 177, 225, 58, 116, 202, 75, 50, 124, 248, 147, 161, 220, 83, 50, 180, 219, 89, 62, 225, 169, 100, 240, 139, 3, 48, 103, 132, 77, 119, 4, 193, 214, 145, 13, 140, 13, 72, 22, 142, 7, 19, 173, 74, 101, 48, 116, 80, 253, 121, 147, 203, 19, 16, 158, 41, 78, 209, 176, 225, 203, 157, 153, 154, 48, 100, 138, 35, 195, 139, 179, 31, 167, 23, 135, 91, 57, 120, 155, 21, 168, 154, 160, 80, 1, 204, 78, 103, 165, 195, 16, 16, 25, 80, 165, 169, 106, 101, 193, 65, 75, 22, 3, 59, 60, 29, 227, 137, 114, 53, 131, 70, 226, 130, 2, 243, 207, 38, 37, 23, 9, 42, 77, 174, 163, 33, 144, 127, 71, 18, 190, 118, 78, 99, 70, 46, 205, 196, 41, 222, 224, 238, 27, 210, 61, 213, 199, 4, 203, 74, 31, 215, 65, 254, 155, 229, 162, 2, 160, 187, 230, 202, 26, 85, 253, 194, 120, 17, 229, 87, 166, 227, 146, 76, 19, 131, 159, 241, 95, 207, 213, 171, 7, 133, 203, 111, 241, 129, 246, 12, 166, 199, 204, 82, 164, 115, 135, 153, 3, 48, 19, 64, 110, 90, 163, 248, 185, 118, 128, 19, 20, 123, 48, 105, 77, 46, 115, 197, 143, 190, 10, 36, 104, 107, 98, 81, 162, 107, 91, 196, 125, 140, 18, 177, 5, 89, 29, 147, 217, 105, 213, 92, 249, 241, 188, 43, 227, 45, 134, 38, 143, 148, 158, 71, 15, 234, 121, 175, 47, 228, 199, 110, 125, 59, 130, 90, 27, 28, 38, 82, 117, 214, 153, 227, 14, 38, 29, 1, 247, 73, 159, 154, 46, 15, 50, 43, 216, 5, 165, 5, 52, 76, 95, 45, 200, 8, 243, 121, 20, 6, 216, 163, 44, 92, 208, 32, 0, 161, 245, 24, 220, 224, 175, 6, 2, 215, 87, 79, 162, 168, 205, 105, 148, 37, 190, 2, 56, 150, 234, 33, 113, 59, 222, 123, 82, 3, 139, 101, 116, 113, 65, 49, 27, 131, 219, 17, 239, 116, 160, 226, 8, 236, 255, 166, 98, 7, 203, 35, 83, 18, 17, 111, 70, 37, 178, 18, 16, 84, 205, 188, 185, 28, 243, 208, 223, 62, 192, 190, 9, 210, 101, 128, 4, 213, 53, 118, 145, 47, 131, 59, 244, 126, 209, 40, 153, 127, 190, 66, 78, 147, 102, 16, 34, 241, 35, 205, 39, 2, 7, 201, 122, 122, 102, 62, 39, 211, 79, 255, 145, 40, 62, 126, 251, 231, 5, 234, 207, 46, 37, 70, 214, 216, 254, 99, 29, 103, 53, 216, 95, 171, 148, 210, 54, 86, 99, 75, 200, 27, 56, 90, 16, 209, 252, 249, 13, 160, 229, 72, 94, 8, 167, 192, 212, 129, 30, 87, 83, 199, 98, 42, 183, 214, 209, 239, 24, 139, 197, 212, 84, 190, 218, 214, 103, 82, 75, 233, 246, 85, 185, 97, 223, 34, 134, 203, 254, 145, 49, 147, 75, 68, 6, 225, 167, 71, 108, 172, 110, 109, 72, 38, 164, 62, 216, 61, 97, 153, 172, 146, 8, 203, 140, 157, 71, 109, 132, 188, 143, 202, 214, 125, 46, 6, 156, 97, 235, 97, 129, 126, 118, 238, 172, 181, 185, 127, 91, 37, 216, 81, 6, 30, 45, 161, 150, 23, 213, 114, 229, 112, 193, 40, 212, 25, 255, 161, 214, 22, 226, 189, 50, 85, 93, 144, 130, 151, 197, 1, 175, 35, 176, 42, 88, 100, 14, 97, 222, 122, 33, 158, 224, 120, 209, 159, 229, 24, 244, 38, 182, 201, 115, 148, 223, 4, 74, 112, 252, 135, 249, 212, 87, 104, 167, 186, 52, 28, 183, 76, 175, 61, 130, 146, 210, 134, 139, 228, 163, 248, 157, 15, 212, 38, 128, 52, 134, 52, 174, 209, 143, 57, 202, 59, 94, 135, 218, 166, 217, 108, 58, 246, 20, 117, 167, 53, 157, 216, 140, 14, 120, 136, 98, 106, 158, 175, 153, 168, 163, 55, 21, 49, 110, 46, 150, 233, 44, 129, 173, 32, 158, 121, 28, 68, 162, 66, 125, 123, 199, 239, 75, 78, 228, 177, 193, 178, 142, 185, 122, 224, 35, 138, 156, 225, 156, 81, 11, 71, 37, 99, 11, 9, 246, 150, 42, 174, 249, 70, 99, 153, 50, 35, 203, 216, 196, 153, 92, 179, 86, 95, 31, 55, 92, 109, 182, 175, 128, 11, 4, 1, 163, 214, 88, 38, 136, 144, 247, 212, 183, 237, 143, 184, 45, 50, 64, 95, 209, 64, 177, 20, 85, 51, 152, 202, 19, 176, 106, 167, 131, 191, 224, 126, 218, 63, 1, 122, 127, 138, 254, 78, 51, 13, 16, 128, 248, 231, 146, 128, 138, 247, 150, 207, 255, 201, 29, 102, 15, 91, 134, 242, 202, 50, 252, 43, 89, 25, 213, 160, 226, 131, 190, 168, 237, 64, 112, 252, 126, 172, 87, 236, 172, 227, 145, 193, 224, 190, 82, 221, 43, 105, 36, 78, 67, 20, 19, 181, 139, 118, 47, 135, 51, 71, 193, 82, 26, 188, 151, 167, 16, 199, 68, 128, 145, 171, 201, 209, 35, 11, 222, 64, 6, 186, 64, 192, 124, 79, 189, 132, 156, 201, 96, 9, 242, 135, 43, 138, 176, 242, 51, 2, 60, 69, 246, 202, 229, 114, 73, 229, 180, 222, 1, 95, 152, 153, 94, 170, 26, 120, 31, 85, 213, 102, 132, 166, 104, 26, 72, 5, 21, 91, 202, 111, 230, 76, 193, 24, 30, 20, 112, 157, 81, 189, 74, 244, 125, 215, 140, 89, 104, 187, 108, 129, 251, 208, 150, 240, 168, 169, 118, 129, 128, 97, 65, 209, 106, 5, 217, 92, 239, 82, 116, 30, 238, 137, 36, 106, 114, 239, 84, 96, 227, 225, 8, 143, 217, 81, 249, 213, 76, 100, 240, 4, 13, 82, 5, 158, 254, 1, 158, 173, 28, 18, 17, 15, 250, 150, 18, 229, 100, 207, 53, 165, 128, 46, 99, 139, 230, 253, 10, 242, 21, 78, 132, 122, 27, 7, 8, 103, 93, 38, 243, 27, 218, 91, 160, 174, 97, 179, 106, 245, 108, 39, 186, 203, 232, 87, 129, 163, 28, 68, 188, 181, 119, 116, 94, 94, 84, 130, 244, 73, 111, 94, 86, 224, 130, 46, 112, 79, 194, 234, 101, 169, 19, 218, 237, 122, 91, 89, 234, 61, 88, 12, 192, 79, 8, 4, 216, 248, 240, 174, 135, 50, 226, 180, 37, 91, 115, 162, 188, 133, 235, 175, 28, 232, 188, 77, 120, 53, 21, 26, 7, 47, 151, 187, 197, 32, 216, 87, 81, 113, 11, 196, 136, 216, 27, 242, 170, 66, 211, 161, 51, 11, 168, 137, 59, 255, 124, 8, 43, 197, 94, 236, 107, 46, 85, 37, 120, 87, 109, 187, 90, 85, 253, 182, 100, 4, 203, 255, 17, 107, 188, 103, 209, 24, 89, 137, 41, 10, 245, 147, 65, 30, 38, 90, 76, 212, 31, 238, 135, 30, 209, 198, 60, 188, 56, 103, 70, 101, 3, 228, 227, 120, 175, 127, 26, 225, 74, 48, 47, 182, 169, 151, 111, 148, 182, 231, 73, 41, 27, 87, 33, 69, 65, 72, 154, 129, 234, 183, 252, 79, 42, 75, 209, 161, 122, 72, 192, 32, 48, 238, 242, 38, 74, 28, 58, 67, 5, 63, 180, 50, 140, 135, 100, 195, 59, 185, 47, 236, 116, 99, 120, 144, 71, 68, 158, 92, 42, 197, 78, 101, 119, 75, 108, 113, 75, 140, 70, 89, 218, 223, 139, 87, 161, 207, 6, 114, 251, 40, 9, 59, 229, 157, 72, 83, 53, 79, 135, 68, 242, 191, 163, 109, 83, 212, 190, 123, 96, 136, 83, 188, 24, 252, 251, 20, 254, 45, 239, 48, 43, 82, 23, 119, 6, 201, 201, 144, 23, 204, 34, 60, 154, 86, 246, 199, 70, 97, 64, 248, 170, 1, 70, 1, 22, 41, 103, 31, 69, 59, 152, 27, 177, 158, 117, 102, 172, 2, 64, 214, 133, 205, 136, 175, 120, 160, 84, 176, 228, 99, 210, 74, 235, 192, 172, 115, 103, 77, 196, 223, 7, 11, 221, 108, 52, 223, 237, 163, 3, 130, 78, 133, 58, 60, 63, 36, 5, 203, 136, 224, 77, 243, 106, 93, 44, 42, 94, 142, 62, 159, 97, 196, 226, 118, 92, 230, 221, 77, 143, 153, 179, 129, 207, 16, 39, 182, 141, 79, 122, 7, 250, 171, 227, 44, 176, 181, 209, 62, 116, 148, 171, 249, 101, 211, 14, 187, 7, 232, 119, 226, 39, 101, 9, 184, 246, 43, 73, 238, 135, 136, 192, 94, 132, 152, 231, 133, 138, 174, 248, 80, 254, 153, 21, 233, 21, 193, 121, 158, 100, 246, 200, 130, 154, 183, 233, 179, 108, 255, 123, 182, 149, 52, 148, 77, 31, 171, 49, 130, 75, 76, 53, 13, 32, 20, 136, 149, 211, 93, 73, 116, 124, 50, 136, 158, 109, 149, 158, 251, 76, 166, 25, 200, 101, 101, 5, 67, 209, 204, 204, 236, 196, 239, 9, 200, 182, 21, 253, 39, 240, 16, 60, 197, 171, 71, 247, 184, 155, 112, 18, 12, 104, 31, 57, 50, 164, 214, 7, 2, 108, 215, 49, 224, 39, 17, 245, 134, 10, 169, 65, 115, 189, 130, 172, 239, 116, 26, 220, 151, 146, 105, 251, 206, 6, 89, 53, 67, 195, 224, 227, 33, 189, 236, 237, 215, 248, 183, 30, 28, 62, 78, 36, 136, 160, 47, 112, 46, 23, 97, 103, 225, 222, 173, 105, 238, 127, 244, 93, 7, 190, 6, 76, 35, 174, 242, 39, 208, 145, 197, 249, 15, 53, 147, 36, 254, 100, 174, 253, 220, 234, 180, 205, 102, 225, 84, 127, 144, 33, 198, 27, 16, 153, 185, 108, 248, 228, 49, 125, 244, 99, 113, 185, 175, 14, 75, 65, 114, 10, 135, 245, 11, 246, 0, 236, 116, 43, 179, 247, 114, 80, 164, 101, 98, 58, 25, 188, 42, 26, 82, 22, 223, 178, 44, 238, 118, 67, 121, 11, 0, 124, 108, 234, 251, 142, 230, 239, 150, 173, 109, 21, 120, 191, 103, 137, 174, 166, 2, 49, 165, 142, 39, 151, 134, 171, 140, 211, 180, 136, 188, 205, 180, 156, 33, 217, 124, 64, 162, 154, 214, 194, 69, 145, 173, 244, 49, 191, 40, 168, 161, 252, 95, 79, 114, 247, 252, 200, 115, 10, 203, 118, 218, 254, 132, 134, 242, 245, 250, 162, 2, 176, 11, 243, 129, 20, 172, 80, 58, 44, 93, 49, 78, 43, 57, 231, 90, 86, 169, 245, 51, 36, 20, 155, 81, 246, 107, 16, 230, 246, 65, 2, 180, 231, 243, 143, 144, 59, 28, 45, 48, 17, 248, 201, 42, 154, 182, 18, 77, 163, 182, 169, 36, 149, 17, 247, 165, 167, 98, 21, 99, 101, 150, 86, 60, 16, 96, 211, 75, 89, 107, 26, 150, 97, 199, 174, 49, 73, 232, 137, 12, 199, 200, 33, 116, 96, 247, 4, 31, 127, 115, 213, 70, 130, 126, 240, 144, 185, 235, 15, 70, 154, 21, 77, 86, 126, 245, 225, 170, 44, 33, 111, 163, 186, 152, 134, 105, 7, 79, 133, 94, 211, 134, 249, 48, 144, 139, 83, 9, 109, 131, 36, 136, 157, 239, 120, 159, 3, 155, 41, 233, 44, 226, 45, 117, 89, 66, 93, 255, 74, 113, 31, 71, 60, 82, 100, 152, 195, 11, 254, 58, 30, 38, 199, 136, 75, 141, 225, 116, 235, 7, 229, 1, 244, 6, 177, 52, 197, 80, 91, 87, 231, 35, 2, 65, 85, 127, 1, 157, 115, 218, 106, 228, 149, 240, 203, 20, 208, 235, 64, 185, 3, 97, 104, 215, 220, 163, 87, 8, 48, 222, 43, 239, 31, 220, 110, 147, 8, 25, 60, 215, 237, 33, 249, 122, 77, 121, 93, 63, 211, 215, 190, 74, 85, 19, 77, 77, 155, 47, 177, 152, 25, 25, 114, 131, 139, 202, 171, 206, 161, 43, 57, 66, 56, 69, 241, 86, 117, 214, 171, 96, 24, 98, 169, 36, 88, 77, 217, 113, 105, 220, 218, 218, 31, 80, 234, 182, 92, 127, 193, 252, 33, 253, 193, 117, 106, 114, 232, 137, 97, 160, 178, 228, 52, 181, 62, 13, 125, 167, 251, 91, 193, 22, 246, 179, 132, 57, 174, 131, 206, 148, 106, 12, 59, 250, 192, 40, 65, 221, 123, 185, 67, 227, 111, 235, 76, 161, 110, 98, 249, 129, 83, 174, 192, 236, 172, 15, 72, 228, 20, 20, 188, 208, 108, 62, 5, 207, 172, 217, 203, 153, 162, 43, 140, 153, 252, 131, 61, 57, 48, 99, 83, 108, 190, 2, 114, 95, 140, 173, 79, 242, 93, 161, 176, 207, 254, 77, 1, 211, 81, 62, 63, 18, 154, 32, 91, 223, 150, 76, 41, 147, 10, 113, 151, 31, 122, 212, 71, 190, 12, 241, 122, 155, 170, 125, 86, 30, 174, 233, 39, 14, 30, 116, 169, 107, 11, 108, 128, 212, 205, 27, 97, 169, 215, 147, 108, 82, 209, 64, 74, 124, 125, 19, 53, 107, 137, 66, 114, 219, 21, 189, 235, 223, 109, 201, 46, 147, 97, 94, 80, 14, 207, 140, 117, 80, 163, 212, 206, 24, 40, 65, 242, 86, 111, 129, 18, 140, 199, 34, 152, 80, 82, 142, 190, 36, 228, 105, 93, 59, 49, 219, 116, 12, 156, 48, 16, 18, 199, 51, 141, 142, 23, 57, 195, 190, 198, 150, 193, 187, 218, 51, 201, 232, 31, 173, 219, 83, 95, 110, 54, 236, 132, 254, 127, 133, 206, 227, 25, 42, 52, 126, 166, 59, 1, 219, 86, 60, 174, 118, 76, 26, 148, 151, 154, 150, 156, 147, 46, 37, 154, 179, 17, 19, 126, 72, 36, 134, 13, 139, 158, 1, 56, 128, 155, 195, 51, 199, 55, 167, 102, 21, 53, 174, 227, 44, 95, 146, 106, 191, 201, 32, 77, 189, 88, 132, 99, 51, 123, 148, 33, 245, 27, 213, 240, 179, 162, 21, 97, 105, 23, 28, 247, 149, 187, 14, 121, 81, 30, 95, 88, 236, 227, 15, 185, 168, 216, 95, 73, 18, 30, 7, 87, 38, 13, 178, 36, 90, 115, 158, 1, 198, 59, 4, 251, 37, 65, 38, 90, 59, 245, 18, 113, 134, 159, 157, 10, 9, 103, 241, 167, 99, 104, 147, 227, 227, 140, 244, 244, 204, 123, 69, 3, 223, 55, 65, 2, 147, 199, 174, 28, 65, 211, 158, 190, 134, 85, 188, 69, 70, 124, 142, 49, 95, 206, 204, 62, 179, 242, 170, 252, 111, 49, 121, 222, 1, 169, 192, 172, 24, 181, 243, 38, 201, 191, 234, 124, 1, 52, 182, 235, 76, 13, 97, 236, 134, 155, 2, 141, 230, 53, 218, 95, 241, 144, 62, 59, 91, 212, 193, 215, 176, 233, 248, 245, 31, 165, 18, 228, 72, 4, 200, 199, 54, 108, 241, 117, 159, 19, 97, 98, 200, 125, 160, 127, 11, 27, 231, 172, 59, 36, 97, 145, 97, 185, 78, 227, 95, 57, 72, 34, 195, 220, 166, 17, 242, 143, 101, 229, 236, 120, 157, 170, 88, 76, 96, 21, 24, 170, 171, 146, 112, 31, 26, 84, 184, 142, 238, 74, 92, 42, 156, 107, 179, 183, 44, 224, 231, 123, 32, 229, 28, 78, 133, 177, 126, 42, 123, 102, 124, 124, 138, 36, 7, 154, 139, 26, 117, 96, 179, 55, 211, 23, 104, 27, 176, 164, 68, 142, 85, 32, 207, 160, 38, 110, 164, 169, 9, 133, 84, 35, 85, 60, 27, 124, 248, 224, 77, 215, 220, 255, 247, 247, 165, 103, 191, 137, 34, 140, 30, 163, 224, 152, 229, 183, 170, 184, 222, 236, 235, 148, 60, 230, 104, 233, 106, 65, 115, 218, 193, 79, 179, 84, 26, 10, 51, 190, 37, 193, 249, 212, 62, 158, 84, 38, 147, 66, 62, 142, 91, 58, 230, 69, 3, 216, 54, 243, 237, 253, 130, 81, 221, 171, 144, 187, 217, 190, 220, 14, 45, 124, 192, 218, 74, 96, 147, 98, 139, 175, 79, 91, 189, 113, 133, 229, 105, 81, 206, 131, 237, 145, 129, 96, 210, 180, 200, 148, 222, 38, 40, 99, 11, 238, 37, 124, 98, 238, 60, 175, 84, 24, 113, 195, 158, 231, 209, 149, 217, 96, 40, 193, 222, 77, 61, 227, 252, 180, 170, 51, 219, 190, 202, 122, 168, 9, 144, 113, 58, 221, 52, 230, 125, 212, 71, 106, 249, 97, 119, 216, 239, 104, 48, 173, 77, 217, 185, 13, 153, 154, 244, 107, 246, 20, 203, 166, 192, 45, 205, 101, 157, 111, 175, 26, 160, 104, 62, 248, 171, 82, 24, 151, 69, 221, 100, 54, 200, 141, 1, 215, 26, 175, 60, 53, 145, 168, 220, 88, 104, 2, 200, 4, 130, 25, 202, 108, 28, 54, 205, 206, 169, 200, 188, 158, 126, 130, 86, 60, 227, 57, 105, 198, 46, 147, 133, 60, 237, 95, 104, 32, 160, 158, 107, 86, 44, 137, 159, 163, 29, 60, 140, 237, 195, 35, 158, 99, 197, 146, 176, 60, 210, 208, 8, 220, 242, 229, 80, 119, 240, 37, 16, 242, 171, 78, 250, 0, 219, 180, 221, 255, 63, 205, 217, 70, 47, 99, 57, 176, 64, 176, 167, 142, 72, 63, 111, 176, 200, 2, 165, 224, 2, 131, 78, 69, 35, 246, 147, 236, 142, 175, 172, 71, 115, 222, 180, 3, 46, 25, 250, 248, 113, 21, 80, 206, 52, 7, 255, 62, 41, 14, 68, 120, 78, 180, 227, 226, 249, 175, 89, 28, 236, 215, 224, 246, 83, 230, 21, 243, 141, 78, 231, 11, 36, 249, 247, 149, 74, 87, 78, 25, 219, 213, 224, 30, 146, 228, 84, 70, 249, 103, 236, 194, 130, 34, 205, 199, 212, 230, 60, 230, 89, 62, 20, 160, 223, 60, 117, 147, 24, 173, 21, 40, 137, 83, 80, 85, 134, 224, 180, 130, 10, 249, 76, 175, 190, 26, 100, 108, 12, 114, 145, 198, 126, 180, 167, 71, 131, 105, 108, 253, 14, 99, 134, 216, 152, 246, 94, 155, 202, 156, 194, 164, 95, 237, 2, 22, 57, 208, 129, 16, 33, 231, 195, 43, 38, 216, 9, 23, 40, 26, 135, 216, 196, 135, 171, 70, 27, 11, 78, 162, 147, 84, 220, 189, 44, 107, 192, 20, 151, 163, 84, 77, 8, 225, 247, 164, 217, 8, 133, 10, 192, 255, 148, 144, 145, 26, 26, 48, 41, 224, 26, 232, 100, 104, 231, 238, 71, 98, 130, 164, 132, 197, 99, 4, 162, 186, 14, 220, 122, 57, 30, 118, 231, 163, 94, 203, 58, 189, 222, 79, 113, 91, 255, 0, 213, 181, 226, 66, 190, 126, 62, 92, 245, 59, 64, 78, 13, 157, 216, 170, 223, 145, 180, 228, 191, 106, 125, 160, 105, 8, 83, 134, 247, 60, 73, 123, 133, 60, 233, 119, 97, 127, 228, 184, 237, 84, 252, 89, 71, 52, 46, 136, 207, 84, 55, 175, 167, 82, 24, 130, 34, 176, 9, 36, 145, 23, 235, 238, 212, 227, 120, 205, 40, 126, 192, 142, 197, 185, 1, 81, 41, 36, 113, 15, 190, 69, 185, 56, 60, 94, 76, 75, 214, 21, 71, 160, 101, 240, 32, 165, 5, 203, 137, 212, 8, 132, 160, 12, 242, 123, 243, 248, 193, 35, 21, 143, 60, 191, 30, 44, 253, 161, 211, 224, 197, 51, 235, 122, 212, 235, 22, 129, 245, 116, 164, 222, 152, 223, 90, 238, 224, 95, 108, 210, 7, 2, 165, 189, 78, 9, 213, 178, 8, 176, 167, 168, 73, 34, 140, 14, 186, 203, 114, 66, 61, 248, 124, 149, 153, 103, 50, 84, 216, 46, 72, 150, 227, 119, 37, 114, 186, 155, 83, 235, 235, 236, 186, 138, 42, 123, 21, 127, 51, 87, 96, 94, 146, 223, 121, 60, 103, 85, 70, 213, 242, 227, 14, 56, 25, 171, 71, 15, 84, 142, 101, 84, 150, 63, 231, 184, 153, 41, 121, 156, 238, 77, 82, 228, 167, 62, 214, 0, 57, 38, 207, 91, 152, 201, 105, 219, 162, 98, 130, 98, 97, 169, 16, 253, 126, 52, 213, 68, 106, 21, 122, 187, 75, 235, 51, 133, 76, 211, 209, 81, 49, 3, 206, 74, 236, 164, 55, 115, 252, 196, 217, 205, 77, 204, 146, 116, 4, 199, 156, 6, 23, 215, 183, 40, 83, 14, 170, 38, 120, 143, 126, 107, 82, 164, 3, 89, 27, 54, 169, 220, 93, 109, 158, 190, 249, 69, 152, 212, 129, 17, 18, 17, 127, 81, 124, 109, 199, 14, 11, 66, 226, 203, 238, 152, 195, 253, 164, 207, 94, 26, 141, 50, 167, 34, 131, 197, 102, 59, 233, 185, 86, 220, 222, 193, 138, 11, 182, 23, 48, 98, 4, 219, 3, 208, 232, 193, 171, 102, 83, 240, 167, 51, 29, 190, 131, 249, 181, 91, 93, 23, 209, 239, 7, 62, 249, 109, 35, 216, 223, 90, 118, 40, 59, 140, 225, 7, 139, 66, 167, 13, 69, 184, 230, 6, 156, 1, 170, 4, 24, 42, 247, 216, 38, 107, 77, 47, 128, 158, 154, 66, 20, 82, 156, 233, 148, 176, 15, 21, 138, 86, 151, 103, 114, 92, 46, 62, 25, 235, 99, 23, 240, 41, 241, 7, 2, 251, 137, 79, 52, 147, 137, 104, 235, 94, 193, 184, 175, 49, 116, 182, 176, 180, 37, 24, 8, 111, 126, 204, 195, 23, 199, 168, 160, 37, 136, 135, 177, 43, 74, 118, 174, 186, 188, 244, 106, 139, 189, 214, 29, 129, 37, 224, 5, 121, 36, 18, 197, 175, 216, 24, 174, 185, 7, 93, 105, 99, 17, 63, 242, 221, 16, 171, 180, 35, 55, 121, 99, 158, 93, 18, 48, 240, 50, 94, 1, 97, 106, 180, 26, 42, 237, 244, 59, 65, 15, 117, 196, 108, 136, 117, 65, 143, 25, 33, 186, 94, 226, 0, 235, 245, 148, 253, 43, 100, 196, 238, 9, 152, 215, 30, 235, 159, 32, 193, 192, 174, 253, 207, 210, 31, 93, 39, 184, 104, 7, 104, 106, 167, 178, 200, 144, 195, 23, 232, 149, 130, 163, 40, 111, 92, 69, 94, 251, 35, 199, 218, 95, 118, 216, 201, 117, 236, 193, 113, 19, 62, 73, 136, 167, 111, 76, 110, 32, 56, 129, 53, 112, 120, 9, 6, 180, 207, 212, 15, 197, 180, 72, 243, 195, 242, 11, 61, 83, 51, 88, 125, 106, 61, 16, 240, 169, 91, 181, 158, 235, 113, 21, 49, 242, 30, 208, 215, 93, 117, 205, 83, 2, 62, 51, 94, 150, 70, 67, 47, 182, 248, 77, 160, 6, 10, 245, 168, 94, 242, 18, 24, 9, 159, 219, 33, 31, 109, 205, 220, 0, 104, 135, 87, 0, 48, 19, 186, 59, 195, 27, 21, 118, 121, 237, 9, 155, 200, 40, 61, 135, 232, 133, 81, 177, 67, 43, 70, 145, 147, 144, 18, 209, 130, 129, 147, 206, 144, 239, 23, 170, 106, 44, 116, 247, 111, 100, 183, 186, 186, 23, 120, 199, 198, 159, 9, 188, 235, 24, 116, 103, 163, 104, 0, 118, 183, 227, 90, 159, 74, 78, 173, 88, 163, 183, 255, 244, 135, 24, 244, 227, 46, 89, 9, 51, 55, 14, 230, 246, 62, 26, 0, 38, 155, 167, 149, 15, 141, 243, 33, 77, 80, 7, 203, 20, 159, 59, 76, 44, 205, 61, 63, 68, 100, 23, 72, 142, 0, 46, 125, 66, 141, 97, 169, 88, 7, 94, 28, 121, 137, 154, 87, 63, 222, 123, 202, 98, 2, 164, 224, 75, 11, 65, 36, 155, 68, 206, 151, 39, 159, 136, 133, 70, 51, 169, 122, 45, 225, 195, 241, 35, 76, 50, 111, 244, 201, 1, 237, 205, 161, 45, 122, 41, 96, 75, 174, 237, 201, 104, 142, 103, 132, 225, 115, 163, 42, 186, 206, 120, 19, 73, 210, 58, 29, 53, 244, 191, 58, 211, 109, 18, 60, 94, 180, 172, 60, 165, 25, 198, 86, 191, 189, 92, 136, 120, 57, 210, 71, 17, 167, 249, 251, 4, 49, 31, 117, 2, 108, 64, 37, 167, 148, 225, 187, 122, 199, 34, 132, 43, 226, 58, 3, 32, 213, 165, 63, 204, 0, 165, 245, 79, 112, 17, 191, 1, 58, 33, 224, 249, 88, 25, 236, 63, 136, 134, 46, 88, 244, 119, 188, 34, 108, 227, 85, 162, 4, 89, 134, 252, 68, 19, 233, 195, 11, 46, 154, 253, 36, 119, 217, 131, 241, 198, 162, 196, 246, 153, 219, 235, 103, 75, 85, 120, 222, 176, 241, 232, 158, 186, 157, 101, 216, 200, 119, 60, 214, 237, 75, 237, 176, 205, 91, 234, 110, 5, 201, 8, 219, 75, 210, 84, 249, 67, 65, 5, 12, 2, 237, 190, 194, 27, 39, 86, 158, 130, 139, 230, 136, 78, 155, 61, 189, 112, 132, 119, 242, 230, 83, 112, 7, 144, 232, 222, 153, 17, 32, 232, 228, 17, 98, 195, 105, 213, 99, 146, 1, 255, 157, 60, 172, 58, 102, 215, 49, 132, 173, 123, 226, 143, 71, 86, 109, 52, 20, 206, 19, 238, 174, 53, 181, 216, 15, 61, 58, 39, 148, 44, 161, 153, 159, 239, 240, 99, 30, 181, 102, 10, 212, 223, 19, 156, 61, 41, 121, 66, 28, 51, 49, 123, 151, 106, 160, 62, 133, 103, 23, 212, 246, 31, 255, 132, 35, 197, 163, 94, 66, 249, 72, 65, 133, 28, 247, 159, 166, 152, 174, 3, 202, 38, 220, 192, 44, 158, 118, 119, 33, 203, 248, 252, 200, 186, 67, 65, 195, 161, 197, 91, 59, 166, 201, 128, 156, 133, 35, 190, 123, 66, 18, 188, 112, 140, 211, 79, 85, 118, 169, 10, 235, 246, 20, 181, 30, 240, 84, 202, 76, 180, 218, 253, 22, 44, 179, 1, 157, 219, 154, 164, 207, 73, 190, 72, 191, 199, 240, 181, 115, 114, 56, 58, 72, 219, 80, 168, 141, 247, 50, 245, 216, 38, 54, 155, 102, 147, 99, 201, 0, 127, 239, 63, 145, 169, 233, 241, 202, 255, 113, 252, 232, 101, 240, 85, 227, 19, 189, 108, 11, 214, 16, 139, 150, 99, 236, 30, 40, 166, 86, 26, 177, 53, 49, 171, 91, 127, 149, 87, 240, 180, 213, 172, 59, 47, 60, 138, 158, 116, 208, 134, 204, 100, 117, 47, 16, 186, 21, 251, 153, 171, 174, 109, 15, 30, 121, 202, 102, 195, 8, 16, 118, 178, 114, 179, 118, 229, 247, 113, 109, 30, 86, 210, 175, 157, 1, 104, 198, 58, 84, 252, 234, 207, 111, 13, 76, 240, 103, 26, 167, 159, 114, 255, 209, 141, 72, 122, 56, 35, 244, 198, 16, 26, 23, 6, 37, 172, 11, 105, 121, 143, 236, 1, 175, 206, 158, 136, 13, 198, 146, 233, 55, 153, 155, 105, 0, 174, 202, 32, 26, 251, 77, 195, 2, 197, 4, 153, 23, 190, 43, 246, 139, 226, 184, 124, 253, 172, 20, 175, 44, 149, 195, 56, 93, 34, 133, 209, 52, 202, 138, 59, 162, 161, 121, 202, 95, 61, 195, 253, 244, 167, 95, 109, 78, 169, 132, 87, 21, 147, 106, 6, 234, 41, 39, 95, 199, 21, 176, 72, 42, 109, 36, 86, 198, 182, 76, 165, 134, 51, 13, 162, 223, 44, 102, 61, 200, 99, 137, 61, 206, 240, 195, 165, 104, 122, 96, 40, 105, 100, 167, 243, 192, 64, 235, 95, 64, 119, 237, 102, 189, 130, 215, 82, 215, 85, 196, 138, 17, 136, 6, 59, 9, 90, 197, 165, 51, 13, 212, 81, 213, 28, 166, 197, 196, 40, 7, 226, 81, 216, 160, 111, 44, 247, 52, 108, 65, 191, 119, 55, 20, 219, 119, 59, 240, 64, 25, 185, 116, 0, 109, 187, 106, 51, 99, 60, 137, 125, 56, 2, 195, 76, 204, 199, 186, 84, 25, 185, 171, 217, 4, 168, 3, 76, 72, 243, 146, 240, 89, 108, 248, 105, 126, 156, 97, 126, 130, 171, 173, 138, 165, 47, 67, 240, 59, 143, 201, 112, 240, 83, 227, 26, 212, 18, 177, 52, 208, 202, 139, 254, 255, 131, 221, 83, 203, 217, 94, 216, 161, 211, 125, 3, 37, 228, 228, 23, 227, 101, 156, 112, 123, 50, 115, 92, 221, 140, 236, 196, 16, 88, 35, 166, 81, 240, 110, 29, 162, 237, 114, 78, 107, 167, 193, 155, 31, 141, 110, 199, 37, 109, 227, 11, 224, 160, 119, 128, 134], [244, 39, 21, 194, 209, 20, 6, 117, 81, 68, 237, 187, 20, 115, 224, 86, 103, 242, 189, 153, 200, 8, 119, 37, 139, 139, 190, 77, 89, 91, 236, 98, 245, 181, 236, 147, 200, 43, 41, 37, 5, 172, 135, 249, 115, 12, 223, 225, 111, 248, 133, 198, 143, 35, 154, 123, 62, 48, 246, 244], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s2`: INSERT INTO tags_encrypted (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s3`: INSERT INTO tags_plaintext (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s2 with parameters: [8, [63, 214, 72, 222, 130, 103, 146, 158, 195, 194, 230, 74, 26, 53, 129, 230, 232, 7, 33, 137, 227, 21, 72, 88, 62, 97, 106, 31, 62, 194, 84, 80, 193, 83, 183, 11, 35], [118, 216, 161, 255, 225, 241, 243, 209, 149, 17, 79, 48, 71, 125, 4, 107, 229, 121, 155, 216, 246, 172, 55, 66, 121, 145, 13, 223, 39, 217, 43, 81, 45, 74, 27, 120, 65, 214, 59, 253, 245, 44, 99, 110, 118, 85, 225, 130, 132, 109, 86, 191, 168, 17, 154, 24, 121, 233, 212, 3, 131, 86, 68, 17], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 75, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 75, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
add_wallet_record: <<< res: None
  {"msg_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/offer-credential", "timestamp": 1621255292.2096229, "str_time": "2021-05-17 12:41:32.209623", "handler": "Medic", "ellapsed_milli": 78, "outcome": "CredentialOfferHandler.handle.END"}
  {"msg_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/offer-credential", "timestamp": 1621255292.2104478, "str_time": "2021-05-17 12:41:32.210448", "handler": "Medic", "ellapsed_milli": 111, "outcome": "Dispatcher.handle_message.END"}
  {"msg_id": "N/A", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "dict:Exchange", "timestamp": 1621255292.2113082, "str_time": "2021-05-17 12:41:32.211308", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://medic-business-logic:3010/topic/issue_credential/"}
  {"msg_id": "N/A", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "dict:Exchange", "timestamp": 1621255292.2120643, "str_time": "2021-05-17 12:41:32.212064", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.END.http://medic-business-logic:3010/topic/issue_credential/"}
Posting to http://medic-business-logic:3010/topic/issue_credential/; Data: {"credential_proposal_dict": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential", "@id": "11b76349-c461-401e-8668-d198a86f1988", "credential_proposal": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview", "attributes": [{"name": "Name", "value": "Will Abramson"}, {"name": "University", "value": "Edinburgh Medical School"}, {"name": "Date Issued", "value": "2021-05-17"}]}, "comment": "create automated credential exchange", "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default"}, "credential_offer": {"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "key_correctness_proof": {"c": "107747385423523632115836196578250990474250248043120793044857578887670452863909", "xz_cap": "1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694", "xr_cap": [["name", "2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993"], ["university", "405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652"], ["dateissued", "2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451"], ["master_secret", "1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202"]]}, "nonce": "598069920933476898638215"}, "credential_definition_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "initiator": "external", "auto_remove": false, "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "credential_exchange_id": "71bf4548-eca4-4e17-9234-f2a75f0a41ed", "role": "holder", "auto_issue": false, "state": "offer_received", "auto_offer": false, "trace": true, "created_at": "2021-05-17 12:41:32.182428Z", "connection_id": "f56b18ea-92e1-4f6d-a094-80da3fad398d", "updated_at": "2021-05-17 12:41:32.182428Z"}; Headers: {'Content-Type': 'application/json'}
Incoming request: GET /issue-credential/records
Match info: <MatchInfo {}: <ResourceRoute [GET] <PlainResource  /issue-credential/records> -> <function credential_exchange_list at 0x7fd9c4240950>>
Body: 
open_wallet_search: >>> wallet_handle: 3, type_: 'credential_exchange_v10', query_json: '{}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140572651874352), c_char_p(140572651888800), c_char_p(140573275297904), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[68, 120, 77, 86, 78, 80, 76, 102, 86, 83, 78, 57, 84, 105, 75, 104, 99, 116, 77, 66, 79, 86, 78, 98, 89, 80, 104, 71, 111, 67, 102, 101, 101, 90, 86, 81, 69, 119, 120, 47, 105, 102, 52, 90, 79, 105, 82, 112, 106, 50, 88, 119, 53, 113, 118, 66, 114, 84, 103, 80, 122, 78, 77, 82, 88, 109, 119, 89], "Medic"]
_indy_callback: >>> command_handle: 76, err , args: (20,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 76, err , args: (20,)
_indy_loop_callback: Function returned 20
_indy_loop_callback <<<
open_wallet_search: <<< res: 20
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 20, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(20), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 77, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"71bf4548-eca4-4e17-9234-f2a75f0a41ed","value":"{\\"thread_id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"created_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"updated_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"connection_id\\": \\"f56b18ea-92e1-4f6d-a094-80da3fad398d\\", \\"credential_proposal_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential\\", \\"@id\\": \\"11b76349-c461-401e-8668-d198a86f1988\\", \\"credential_proposal\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"comment\\": \\"create automated credential exchange\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\"}, \\"credential_offer_dict\\": null, \\"credential_offer\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"key_correctness_proof\\": {\\"c\\": \\"107747385423523632115836196578250990474250248043120793044857578887670452863909\\", \\"xz_cap\\": \\"1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694\\", \\"xr_cap\\": [[\\"name\\", \\"2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993\\"], [\\"university\\", \\"405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652\\"], [\\"dateissued\\", \\"2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451\\"], [\\"master_secret\\", \\"1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202\\"]]}, \\"nonce\\": \\"598069920933476898638215\\"}, \\"credential_request\\": null, \\"credential_request_metadata\\": null, \\"error_msg\\": null, \\"auto_offer\\": false, \\"auto_issue\\": false, \\"auto_remove\\": false, \\"raw_credential\\": null, \\"credential\\": null, \\"parent_thread_id\\": null, \\"initiator\\": \\"external\\", \\"credential_definition_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"credential_id\\": null, \\"revoc_reg_id\\": null, \\"revocation_id\\": null, \\"role\\": \\"holder\\", \\"state\\": \\"offer_received\\", \\"trace\\": true}","tags":null}]}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 77, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"71bf4548-eca4-4e17-9234-f2a75f0a41ed","value":"{\\"thread_id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"created_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"updated_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"connection_id\\": \\"f56b18ea-92e1-4f6d-a094-80da3fad398d\\", \\"credential_proposal_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential\\", \\"@id\\": \\"11b76349-c461-401e-8668-d198a86f1988\\", \\"credential_proposal\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"comment\\": \\"create automated credential exchange\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\"}, \\"credential_offer_dict\\": null, \\"credential_offer\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"key_correctness_proof\\": {\\"c\\": \\"107747385423523632115836196578250990474250248043120793044857578887670452863909\\", \\"xz_cap\\": \\"1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694\\", \\"xr_cap\\": [[\\"name\\", \\"2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993\\"], [\\"university\\", \\"405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652\\"], [\\"dateissued\\", \\"2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451\\"], [\\"master_secret\\", \\"1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202\\"]]}, \\"nonce\\": \\"598069920933476898638215\\"}, \\"credential_request\\": null, \\"credential_request_metadata\\": null, \\"error_msg\\": null, \\"auto_offer\\": false, \\"auto_issue\\": false, \\"auto_remove\\": false, \\"raw_credential\\": null, \\"credential\\": null, \\"parent_thread_id\\": null, \\"initiator\\": \\"external\\", \\"credential_definition_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"credential_id\\": null, \\"revoc_reg_id\\": null, \\"revocation_id\\": null, \\"role\\": \\"holder\\", \\"state\\": \\"offer_received\\", \\"trace\\": true}","tags":null}]}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":[{"type":null,"id":"71bf4548-eca4-4e17-9234-f2a75f0a41ed","value":"{\\"thread_id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"created_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"updated_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"connection_id\\": \\"f56b18ea-92e1-4f6d-a094-80da3fad398d\\", \\"credential_proposal_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential\\", \\"@id\\": \\"11b76349-c461-401e-8668-d198a86f1988\\", \\"credential_proposal\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"comment\\": \\"create automated credential exchange\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\"}, \\"credential_offer_dict\\": null, \\"credential_offer\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"key_correctness_proof\\": {\\"c\\": \\"107747385423523632115836196578250990474250248043120793044857578887670452863909\\", \\"xz_cap\\": \\"1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694\\", \\"xr_cap\\": [[\\"name\\", \\"2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993\\"], [\\"university\\", \\"405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652\\"], [\\"dateissued\\", \\"2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451\\"], [\\"master_secret\\", \\"1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202\\"]]}, \\"nonce\\": \\"598069920933476898638215\\"}, \\"credential_request\\": null, \\"credential_request_metadata\\": null, \\"error_msg\\": null, \\"auto_offer\\": false, \\"auto_issue\\": false, \\"auto_remove\\": false, \\"raw_credential\\": null, \\"credential\\": null, \\"parent_thread_id\\": null, \\"initiator\\": \\"external\\", \\"credential_definition_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"credential_id\\": null, \\"revoc_reg_id\\": null, \\"revocation_id\\": null, \\"role\\": \\"holder\\", \\"state\\": \\"offer_received\\", \\"trace\\": true}","tags":null}]}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":[{"type":null,"id":"71bf4548-eca4-4e17-9234-f2a75f0a41ed","value":"{\\"thread_id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"created_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"updated_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"connection_id\\": \\"f56b18ea-92e1-4f6d-a094-80da3fad398d\\", \\"credential_proposal_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential\\", \\"@id\\": \\"11b76349-c461-401e-8668-d198a86f1988\\", \\"credential_proposal\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"comment\\": \\"create automated credential exchange\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\"}, \\"credential_offer_dict\\": null, \\"credential_offer\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"key_correctness_proof\\": {\\"c\\": \\"107747385423523632115836196578250990474250248043120793044857578887670452863909\\", \\"xz_cap\\": \\"1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694\\", \\"xr_cap\\": [[\\"name\\", \\"2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993\\"], [\\"university\\", \\"405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652\\"], [\\"dateissued\\", \\"2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451\\"], [\\"master_secret\\", \\"1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202\\"]]}, \\"nonce\\": \\"598069920933476898638215\\"}, \\"credential_request\\": null, \\"credential_request_metadata\\": null, \\"error_msg\\": null, \\"auto_offer\\": false, \\"auto_issue\\": false, \\"auto_remove\\": false, \\"raw_credential\\": null, \\"credential\\": null, \\"parent_thread_id\\": null, \\"initiator\\": \\"external\\", \\"credential_definition_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"credential_id\\": null, \\"revoc_reg_id\\": null, \\"revocation_id\\": null, \\"role\\": \\"holder\\", \\"state\\": \\"offer_received\\", \\"trace\\": true}","tags":null}]}'
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 20, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(20), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 78, err , args: (b'{"totalCount":null,"records":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 78, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 20
do_call: >>> name: indy_close_wallet_search, args: (c_int(20), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
_indy_callback: >>> command_handle: 79, err , args: ()
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 79, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
192.168.208.6 [17/May/2021:12:41:40 +0000] "GET /issue-credential/records HTTP/1.1" 200 5247 "-" "Python/3.7 aiohttp/3.7.4.post0"
Incoming request: POST /issue-credential/records/71bf4548-eca4-4e17-9234-f2a75f0a41ed/send-request
Match info: <MatchInfo {'cred_ex_id': '71bf4548-eca4-4e17-9234-f2a75f0a41ed'}: <ResourceRoute [POST] <DynamicResource  /issue-credential/records/{cred_ex_id}/send-request> -> <function credential_exchange_send_request at 0x7fd9c4240f28>>
Body: None
get_wallet_record: >>> wallet_handle: 3, type_: 'credential_exchange_v10', id: '71bf4548-eca4-4e17-9234-f2a75f0a41ed', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140572651787832), c_char_p(140572651910064), c_char_p(140573273512672), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[68, 120, 77, 86, 78, 80, 76, 102, 86, 83, 78, 57, 84, 105, 75, 104, 99, 116, 77, 66, 79, 86, 78, 98, 89, 80, 104, 71, 111, 67, 102, 101, 101, 90, 86, 81, 69, 119, 120, 47, 105, 102, 52, 90, 79, 105, 82, 112, 106, 50, 88, 119, 53, 113, 118, 66, 114, 84, 103, 80, 122, 78, 77, 82, 88, 109, 119, 89], [119, 56, 101, 122, 118, 50, 99, 121, 73, 74, 77, 100, 81, 81, 102, 49, 90, 120, 115, 109, 79, 119, 78, 107, 74, 81, 109, 52, 43, 110, 74, 87, 88, 54, 97, 121, 43, 110, 57, 56, 43, 48, 51, 121, 104, 81, 105, 68, 98, 55, 51, 97, 79, 98, 102, 54, 115, 48, 79, 108, 75, 118, 56, 119, 81, 68, 65, 85, 71, 122, 55, 105, 43, 102, 49, 67, 73, 97, 122, 52, 78, 122, 69, 115, 84, 119, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 80, err , args: (b'{"type":null,"id":"71bf4548-eca4-4e17-9234-f2a75f0a41ed","value":"{\\"thread_id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"created_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"updated_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"connection_id\\": \\"f56b18ea-92e1-4f6d-a094-80da3fad398d\\", \\"credential_proposal_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential\\", \\"@id\\": \\"11b76349-c461-401e-8668-d198a86f1988\\", \\"credential_proposal\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"comment\\": \\"create automated credential exchange\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\"}, \\"credential_offer_dict\\": null, \\"credential_offer\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"key_correctness_proof\\": {\\"c\\": \\"107747385423523632115836196578250990474250248043120793044857578887670452863909\\", \\"xz_cap\\": \\"1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694\\", \\"xr_cap\\": [[\\"name\\", \\"2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993\\"], [\\"university\\", \\"405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652\\"], [\\"dateissued\\", \\"2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451\\"], [\\"master_secret\\", \\"1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202\\"]]}, \\"nonce\\": \\"598069920933476898638215\\"}, \\"credential_request\\": null, \\"credential_request_metadata\\": null, \\"error_msg\\": null, \\"auto_offer\\": false, \\"auto_issue\\": false, \\"auto_remove\\": false, \\"raw_credential\\": null, \\"credential\\": null, \\"parent_thread_id\\": null, \\"initiator\\": \\"external\\", \\"credential_definition_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"credential_id\\": null, \\"revoc_reg_id\\": null, \\"revocation_id\\": null, \\"role\\": \\"holder\\", \\"state\\": \\"offer_received\\", \\"trace\\": true}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 80, err , args: (b'{"type":null,"id":"71bf4548-eca4-4e17-9234-f2a75f0a41ed","value":"{\\"thread_id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"created_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"updated_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"connection_id\\": \\"f56b18ea-92e1-4f6d-a094-80da3fad398d\\", \\"credential_proposal_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential\\", \\"@id\\": \\"11b76349-c461-401e-8668-d198a86f1988\\", \\"credential_proposal\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"comment\\": \\"create automated credential exchange\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\"}, \\"credential_offer_dict\\": null, \\"credential_offer\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"key_correctness_proof\\": {\\"c\\": \\"107747385423523632115836196578250990474250248043120793044857578887670452863909\\", \\"xz_cap\\": \\"1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694\\", \\"xr_cap\\": [[\\"name\\", \\"2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993\\"], [\\"university\\", \\"405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652\\"], [\\"dateissued\\", \\"2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451\\"], [\\"master_secret\\", \\"1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202\\"]]}, \\"nonce\\": \\"598069920933476898638215\\"}, \\"credential_request\\": null, \\"credential_request_metadata\\": null, \\"error_msg\\": null, \\"auto_offer\\": false, \\"auto_issue\\": false, \\"auto_remove\\": false, \\"raw_credential\\": null, \\"credential\\": null, \\"parent_thread_id\\": null, \\"initiator\\": \\"external\\", \\"credential_definition_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"credential_id\\": null, \\"revoc_reg_id\\": null, \\"revocation_id\\": null, \\"role\\": \\"holder\\", \\"state\\": \\"offer_received\\", \\"trace\\": true}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"71bf4548-eca4-4e17-9234-f2a75f0a41ed","value":"{\\"thread_id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"created_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"updated_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"connection_id\\": \\"f56b18ea-92e1-4f6d-a094-80da3fad398d\\", \\"credential_proposal_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential\\", \\"@id\\": \\"11b76349-c461-401e-8668-d198a86f1988\\", \\"credential_proposal\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"comment\\": \\"create automated credential exchange\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\"}, \\"credential_offer_dict\\": null, \\"credential_offer\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"key_correctness_proof\\": {\\"c\\": \\"107747385423523632115836196578250990474250248043120793044857578887670452863909\\", \\"xz_cap\\": \\"1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694\\", \\"xr_cap\\": [[\\"name\\", \\"2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993\\"], [\\"university\\", \\"405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652\\"], [\\"dateissued\\", \\"2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451\\"], [\\"master_secret\\", \\"1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202\\"]]}, \\"nonce\\": \\"598069920933476898638215\\"}, \\"credential_request\\": null, \\"credential_request_metadata\\": null, \\"error_msg\\": null, \\"auto_offer\\": false, \\"auto_issue\\": false, \\"auto_remove\\": false, \\"raw_credential\\": null, \\"credential\\": null, \\"parent_thread_id\\": null, \\"initiator\\": \\"external\\", \\"credential_definition_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"credential_id\\": null, \\"revoc_reg_id\\": null, \\"revocation_id\\": null, \\"role\\": \\"holder\\", \\"state\\": \\"offer_received\\", \\"trace\\": true}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"71bf4548-eca4-4e17-9234-f2a75f0a41ed","value":"{\\"thread_id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"created_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"updated_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"connection_id\\": \\"f56b18ea-92e1-4f6d-a094-80da3fad398d\\", \\"credential_proposal_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential\\", \\"@id\\": \\"11b76349-c461-401e-8668-d198a86f1988\\", \\"credential_proposal\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"comment\\": \\"create automated credential exchange\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\"}, \\"credential_offer_dict\\": null, \\"credential_offer\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"key_correctness_proof\\": {\\"c\\": \\"107747385423523632115836196578250990474250248043120793044857578887670452863909\\", \\"xz_cap\\": \\"1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694\\", \\"xr_cap\\": [[\\"name\\", \\"2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993\\"], [\\"university\\", \\"405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652\\"], [\\"dateissued\\", \\"2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451\\"], [\\"master_secret\\", \\"1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202\\"]]}, \\"nonce\\": \\"598069920933476898638215\\"}, \\"credential_request\\": null, \\"credential_request_metadata\\": null, \\"error_msg\\": null, \\"auto_offer\\": false, \\"auto_issue\\": false, \\"auto_remove\\": false, \\"raw_credential\\": null, \\"credential\\": null, \\"parent_thread_id\\": null, \\"initiator\\": \\"external\\", \\"credential_definition_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"credential_id\\": null, \\"revoc_reg_id\\": null, \\"revocation_id\\": null, \\"role\\": \\"holder\\", \\"state\\": \\"offer_received\\", \\"trace\\": true}","tags":null}'
get_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'f56b18ea-92e1-4f6d-a094-80da3fad398d', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573352774304), c_char_p(140572651910424), c_char_p(140573273512672), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [120, 99, 101, 86, 104, 116, 110, 103, 56, 75, 112, 113, 55, 105, 55, 47, 101, 106, 66, 77, 104, 76, 90, 102, 98, 69, 80, 98, 116, 98, 69, 114, 78, 67, 114, 109, 116, 118, 104, 85, 108, 65, 71, 107, 71, 78, 105, 52, 67, 54, 116, 117, 88, 105, 74, 47, 50, 108, 116, 118, 83, 102, 74, 77, 116, 106, 72, 119, 105, 51, 72, 105, 55, 82, 112, 79, 114, 67, 69, 70, 85, 84, 72, 122, 122, 81, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 81, err , args: (b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 81, err , args: (b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
Opening the pool ledger
set_protocol_version: >>> protocol_version: 2
do_call: >>> name: indy_set_protocol_version, args: (2, <CFunctionType object at 0x7fd9c8bffe58>)
do_call: Function indy_set_protocol_version returned err: 0
_indy_callback: >>> command_handle: 82, err , args: ()
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 82, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
set_protocol_version: <<< res: None
open_pool_ledger: >>> config_name: 'default', config: '{}'
do_call: >>> name: indy_open_pool_ledger, args: (c_char_p(140572651892976), c_char_p(140572651893016), <CFunctionType object at 0x7fd9c63d4048>)
do_call: Function indy_open_pool_ledger returned err: 0
do_call: <<< <Future pending>
	src/commands/pool.rs:75 | OpenAck handle 21, pool_id 21, result Ok(())
_indy_callback: >>> command_handle: 83, err , args: (21,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 83, err , args: (21,)
_indy_loop_callback: Function returned 21
_indy_loop_callback <<<
open_pool_ledger: <<< res: 21
list_my_dids_with_meta: >>> wallet_handle: 3
do_call: >>> name: indy_list_my_dids_with_meta, args: (c_int(3), <CFunctionType object at 0x7fd9c8bff818>)
do_call: Function indy_list_my_dids_with_meta returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s4`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s4 with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s5`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s5 with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 84, err , args: (b'[{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 84, err , args: (b'[{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]',)
_indy_loop_callback: Function returned b'[{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]'
_indy_loop_callback <<<
list_my_dids_with_meta: <<< res: '[{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]'
build_get_cred_def_request: >>> submitter_did: None, id: '3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default'
build_get_cred_def_request: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99ef83688>
do_call: >>> name: indy_build_get_cred_def_request, args: (None, c_char_p(140572651910136), <CFunctionType object at 0x7fd99ef83688>)
do_call: Function indy_build_get_cred_def_request returned err: 0
do_call: <<< <Future pending>
	src/services/ledger/mod.rs:171 | build_get_cred_def_request() => Ok("{\"reqId\":1621255304026787456,\"identifier\":\"LibindyDid111111111111\",\"operation\":{\"type\":\"108\",\"ref\":10,\"signature_type\":\"CL\",\"origin\":\"3jnXQcj9VLFjcUbtDVZZzV\",\"tag\":\"default\"},\"protocolVersion\":2}")
_indy_callback: >>> command_handle: 85, err , args: (b'{"reqId":1621255304026787456,"identifier":"LibindyDid111111111111","operation":{"type":"108","ref":10,"signature_type":"CL","origin":"3jnXQcj9VLFjcUbtDVZZzV","tag":"default"},"protocolVersion":2}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 85, err , args: (b'{"reqId":1621255304026787456,"identifier":"LibindyDid111111111111","operation":{"type":"108","ref":10,"signature_type":"CL","origin":"3jnXQcj9VLFjcUbtDVZZzV","tag":"default"},"protocolVersion":2}',)
_indy_loop_callback: Function returned b'{"reqId":1621255304026787456,"identifier":"LibindyDid111111111111","operation":{"type":"108","ref":10,"signature_type":"CL","origin":"3jnXQcj9VLFjcUbtDVZZzV","tag":"default"},"protocolVersion":2}'
_indy_loop_callback <<<
build_get_cred_def_request: <<< res: '{"reqId":1621255304026787456,"identifier":"LibindyDid111111111111","operation":{"type":"108","ref":10,"signature_type":"CL","origin":"3jnXQcj9VLFjcUbtDVZZzV","tag":"default"},"protocolVersion":2}'
submit_request: >>> pool_handle: 21, request_json: '{"reqId":1621255304026787456,"identifier":"LibindyDid111111111111","operation":{"type":"108","ref":10,"signature_type":"CL","origin":"3jnXQcj9VLFjcUbtDVZZzV","tag":"default"},"protocolVersion":2}'
do_call: >>> name: indy_submit_request, args: (c_int(21), c_char_p(140573275185928), <CFunctionType object at 0x7fd9c63d4368>)
do_call: Function indy_submit_request returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 86, err , args: (b'{"op":"REPLY","result":{"type":"108","ref":10,"signature_type":"CL","origin":"3jnXQcj9VLFjcUbtDVZZzV","tag":"default","data":{"primary":{"n":"94395789918231228154091785586208843768578611847406303642651586891320930921222577081682230513612376731058197900820380914247688360049152906855525071639682048377145839103957609377714707719996675230706669321219428162692467324558094099599975868966359717071320779088929152605016542346699384011376930722440028896866096433708622612880431237575976995549426585399554650551399842593587963267758910127885708120359104171691736586089614188198196403067253458139734883446766648674330236607203272574691987391068966666586806995593618443807684047062115622841653991664284445314132632263661187734217623134159115481886205370089744580113873","r":{"dateissued":"18859023741018797872038815229638117026310339435744972607910760746976197568986451324307784659205603164866675762626845593584383953972951170576488223929403145953405880160997837014576916783672289014577491803877405955021543305639943207054834276533724888622816572222212002817434521247029102961171038131491016993683945958422904951967972242721815515956951687914783455532817412140497820261587057222074602535598277491573901466789858112285556636463931043202870509835082348016849346871822417355851938877835473162167541963027783714110369668288318655034153675621000872099879442600835618083660187178225685391119538793895918988690951","master_secret":"38018101519921364727663368811618364961198439828773774963837808691300389099073641171173405972255390297743591226127198243269040440391331382005419723386460723507508748134326215218108079487747310689655719830220233038870395851200615467976988479364617945744009175380255178291443316837400065778174525671555554858846963660754273049900258540789750490659565596066796144609195933532365732229205176649943186753690388273648613883847077543436939447724144311053713620313478922939433052250159704813019931470611137912845604761954056274516499163256212589424003418836016270513452406523634776192214967795359655752585855421903408811504820","name":"36972881227678226440524799834715449272905068152296041598298656344868823425822182142795341444521792489486865867678420406707813366601225310068973916314294496409888578098137466321037329183322105661346445057074775952226980306807756318820908180989553261280373209427144589281724427550334494051418908462936434249924425014938135365683029473367852494388771701690499555627259602163694165048703404978943387681274632934879094520963711354499009945634348271392433647603995327488071723814413654420116984500071622022838652865117264689191402593903686138105531309317348858688060431554155935932858240155529478495227551673149659583878367","university":"85116886009283016587228837585185311801589234072532060179339162055691896259340973464378227116173921589574143079368170380064143315961104464737805257104371227573987632118021149596346336106979223046724507249243729298609587976484591179974141219437072662798348044620985302987585711515763230783304102509425352385088810988130856153145777680332189971409522233277037621493075538751179102002174462822864033520018868896075058926153340905166677380284040336304204116434323400415636380662101070808244622574958353942889060506400005103199810764605894756304090121203262515557730788468189763417280558801085969455488137667032138426499258"},"rctxt":"72626192235856995713273878588635875503481156228369835798223682595862896495927599478785691456386732961699963442191790521351546847893842544331284577466655322900390546674081030387374194070100367944808152504857990896324240085608833289560880701109409966502178884502922967259001538262028100840388335398150175296461704717640987560280776117404108475362814709228233187171804851053778460491440104978266175123106542827674110607437222663300473774884530762942299317232900017062741820195136922938188215927090888278399065229552785414585240736808133545586693839331647692030044269603072142186291558337525917277699344952583144729625821","s":"81015554602046261170194441766593713402652953400350870565114032770101449194297729670972477002174582485434108371542070977617557550121283690070154003153465127142412492947796621604600610943420608021996428452150207616569073697990519854557474268872609763827715371234014675999148925758192510809298846373459463897569613243987836413106444130079827991856407108661830455636123140979595080835420673872438643970902637587408616587774476369311312702638678399091209309062417365872445535935878731892209908961704038522600004246100600971609868679635382295155855245796766811360326275356141899810243775065920199349268650268063905993595880","z":"51405307349344473067543426140468250092978855391487837047919159448408306062742488977366371466579706875599220069757479535367208213512828381608544912208283492410837784787782762642642861456735914591395012090431192866710568924623222136268204112035067662953104257210546855663474292551899072591301630322930203349354091168912443214512040520480983018735448811935672679905506225871744898385465084434247135025413977137413227467339209144247099296863360895679895363096178564770291071017904729821236003386032365050793392320240962960327650486516536201676196280265057090339600515877691397338416693239305406465297046578191629345668206"}},"identifier":"LibindyDid111111111111","reqId":1621255304026787456,"seqNo":12,"txnTime":1621255084,"state_proof":{"root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","multi_signature":{"signature":"RStTBauNqLyaZMM4Q2dXnDZb9sycR73n8xCen6MhQvjKSxGbArW2KRhfjCds89hmQQsvsTNN3ErR8Q89adR8BwzEUFnkLyEWtL7cB7peSKby6pR7RPK3RoGNQeJoZJcyoPZgtj3JRYHZsPALZTazYGPzSdZF7qEHdMc5yAHJNWpkib","participants":["Node1","Node3","Node4"],"value":{"ledger_id":1,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","timestamp":1621255110,"txn_root_hash":"33Qn7LL4eu98k6KpZb2KcVvxbHXJiyWLqx2xuPDraijy"}},"proof_nodes":"+RYq+DmXFqblhRY2o5VkxGamNVYnREVlpaelY6OgSTB4yxlMGlDPjmivX37ZhuDvpLa\\/YfeYipaqOzTw7474kYCAgKBEqR+trIkK+QqI5+NvWpBpc9bTacOGUIZN2zZjiB6wPICgv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSiegv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSieAgICAoL8QgC6a78sPnRhjdbUStwqlPP4TOGrPyYC4FAYtN\\/A9gICAgID4cYCg5ZUcauzc0SNjlc9zNTOsh2N9\\/r5zC\\/sCdf8x5S2AVgqgC8atJ8a\\/kPsxJ3lQ4cf7N3Nou8Lxc4btUeqg8FQ7aLegqQOaP7RADF6l\\/BbN9VBCxAM85GugTmTPKwcKctp6oGqAgICAgICAgICAgICA+RPzjyA6Q0w6MTA6ZGVmYXVsdLkT4PkT3bkT2nsibHNuIjoxMiwibHV0IjoxNjIxMjU1MDg0LCJ2YWwiOnsicHJpbWFyeSI6eyJuIjoiOTQzOTU3ODk5MTgyMzEyMjgxNTQwOTE3ODU1ODYyMDg4NDM3Njg1Nzg2MTE4NDc0MDYzMDM2NDI2NTE1ODY4OTEzMjA5MzA5MjEyMjI1NzcwODE2ODIyMzA1MTM2MTIzNzY3MzEwNTgxOTc5MDA4MjAzODA5MTQyNDc2ODgzNjAwNDkxNTI5MDY4NTU1MjUwNzE2Mzk2ODIwNDgzNzcxNDU4MzkxMDM5NTc2MDkzNzc3MTQ3MDc3MTk5OTY2NzUyMzA3MDY2NjkzMjEyMTk0MjgxNjI2OTI0NjczMjQ1NTgwOTQwOTk1OTk5NzU4Njg5NjYzNTk3MTcwNzEzMjA3NzkwODg5MjkxNTI2MDUwMTY1NDIzNDY2OTkzODQwMTEzNzY5MzA3MjI0NDAwMjg4OTY4NjYwOTY0MzM3MDg2MjI2MTI4ODA0MzEyMzc1NzU5NzY5OTU1NDk0MjY1ODUzOTk1NTQ2NTA1NTEzOTk4NDI1OTM1ODc5NjMyNjc3NTg5MTAxMjc4ODU3MDgxMjAzNTkxMDQxNzE2OTE3MzY1ODYwODk2MTQxODgxOTgxOTY0MDMwNjcyNTM0NTgxMzk3MzQ4ODM0NDY3NjY2NDg2NzQzMzAyMzY2MDcyMDMyNzI1NzQ2OTE5ODczOTEwNjg5NjY2NjY1ODY4MDY5OTU1OTM2MTg0NDM4MDc2ODQwNDcwNjIxMTU2MjI4NDE2NTM5OTE2NjQyODQ0NDUzMTQxMzI2MzIyNjM2NjExODc3MzQyMTc2MjMxMzQxNTkxMTU0ODE4ODYyMDUzNzAwODk3NDQ1ODAxMTM4NzMiLCJyIjp7ImRhdGVpc3N1ZWQiOiIxODg1OTAyMzc0MTAxODc5Nzg3MjAzODgxNTIyOTYzODExNzAyNjMxMDMzOTQzNTc0NDk3MjYwNzkxMDc2MDc0Njk3NjE5NzU2ODk4NjQ1MTMyNDMwNzc4NDY1OTIwNTYwMzE2NDg2NjY3NTc2MjYyNjg0NTU5MzU4NDM4Mzk1Mzk3Mjk1MTE3MDU3NjQ4ODIyMzkyOTQwMzE0NTk1MzQwNTg4MDE2MDk5NzgzNzAxNDU3NjkxNjc4MzY3MjI4OTAxNDU3NzQ5MTgwMzg3NzQwNTk1NTAyMTU0MzMwNTYzOTk0MzIwNzA1NDgzNDI3NjUzMzcyNDg4ODYyMjgxNjU3MjIyMjIxMjAwMjgxNzQzNDUyMTI0NzAyOTEwMjk2MTE3MTAzODEzMTQ5MTAxNjk5MzY4Mzk0NTk1ODQyMjkwNDk1MTk2Nzk3MjI0MjcyMTgxNTUxNTk1Njk1MTY4NzkxNDc4MzQ1NTUzMjgxNzQxMjE0MDQ5NzgyMDI2MTU4NzA1NzIyMjA3NDYwMjUzNTU5ODI3NzQ5MTU3MzkwMTQ2Njc4OTg1ODExMjI4NTU1NjYzNjQ2MzkzMTA0MzIwMjg3MDUwOTgzNTA4MjM0ODAxNjg0OTM0Njg3MTgyMjQxNzM1NTg1MTkzODg3NzgzNTQ3MzE2MjE2NzU0MTk2MzAyNzc4MzcxNDExMDM2OTY2ODI4ODMxODY1NTAzNDE1MzY3NTYyMTAwMDg3MjA5OTg3OTQ0MjYwMDgzNTYxODA4MzY2MDE4NzE3ODIyNTY4NTM5MTExOTUzODc5Mzg5NTkxODk4ODY5MDk1MSIsIm1hc3Rlcl9zZWNyZXQiOiIzODAxODEwMTUxOTkyMTM2NDcyNzY2MzM2ODgxMTYxODM2NDk2MTE5ODQzOTgyODc3Mzc3NDk2MzgzNzgwODY5MTMwMDM4OTA5OTA3MzY0MTE3MTE3MzQwNTk3MjI1NTM5MDI5Nzc0MzU5MTIyNjEyNzE5ODI0MzI2OTA0MDQ0MDM5MTMzMTM4MjAwNTQxOTcyMzM4NjQ2MDcyMzUwNzUwODc0ODEzNDMyNjIxNTIxODEwODA3OTQ4Nzc0NzMxMDY4OTY1NTcxOTgzMDIyMDIzMzAzODg3MDM5NTg1MTIwMDYxNTQ2Nzk3Njk4ODQ3OTM2NDYxNzk0NTc0NDAwOTE3NTM4MDI1NTE3ODI5MTQ0MzMxNjgzNzQwMDA2NTc3ODE3NDUyNTY3MTU1NTU1NDg1ODg0Njk2MzY2MDc1NDI3MzA0OTkwMDI1ODU0MDc4OTc1MDQ5MDY1OTU2NTU5NjA2Njc5NjE0NDYwOTE5NTkzMzUzMjM2NTczMjIyOTIwNTE3NjY0OTk0MzE4Njc1MzY5MDM4ODI3MzY0ODYxMzg4Mzg0NzA3NzU0MzQzNjkzOTQ0NzcyNDE0NDMxMTA1MzcxMzYyMDMxMzQ3ODkyMjkzOTQzMzA1MjI1MDE1OTcwNDgxMzAxOTkzMTQ3MDYxMTEzNzkxMjg0NTYwNDc2MTk1NDA1NjI3NDUxNjQ5OTE2MzI1NjIxMjU4OTQyNDAwMzQxODgzNjAxNjI3MDUxMzQ1MjQwNjUyMzYzNDc3NjE5MjIxNDk2Nzc5NTM1OTY1NTc1MjU4NTg1NTQyMTkwMzQwODgxMTUwNDgyMCIsIm5hbWUiOiIzNjk3Mjg4MTIyNzY3ODIyNjQ0MDUyNDc5OTgzNDcxNTQ0OTI3MjkwNTA2ODE1MjI5NjA0MTU5ODI5ODY1NjM0NDg2ODgyMzQyNTgyMjE4MjE0Mjc5NTM0MTQ0NDUyMTc5MjQ4OTQ4Njg2NTg2NzY3ODQyMDQwNjcwNzgxMzM2NjYwMTIyNTMxMDA2ODk3MzkxNjMxNDI5NDQ5NjQwOTg4ODU3ODA5ODEzNzQ2NjMyMTAzNzMyOTE4MzMyMjEwNTY2MTM0NjQ0NTA1NzA3NDc3NTk1MjIyNjk4MDMwNjgwNzc1NjMxODgyMDkwODE4MDk4OTU1MzI2MTI4MDM3MzIwOTQyNzE0NDU4OTI4MTcyNDQyNzU1MDMzNDQ5NDA1MTQxODkwODQ2MjkzNjQzNDI0OTkyNDQyNTAxNDkzODEzNTM2NTY4MzAyOTQ3MzM2Nzg1MjQ5NDM4ODc3MTcwMTY5MDQ5OTU1NTYyNzI1OTYwMjE2MzY5NDE2NTA0ODcwMzQwNDk3ODk0MzM4NzY4MTI3NDYzMjkzNDg3OTA5NDUyMDk2MzcxMTM1NDQ5OTAwOTk0NTYzNDM0ODI3MTM5MjQzMzY0NzYwMzk5NTMyNzQ4ODA3MTcyMzgxNDQxMzY1NDQyMDExNjk4NDUwMDA3MTYyMjAyMjgzODY1Mjg2NTExNzI2NDY4OTE5MTQwMjU5MzkwMzY4NjEzODEwNTUzMTMwOTMxNzM0ODg1ODY4ODA2MDQzMTU1NDE1NTkzNTkzMjg1ODI0MDE1NTUyOTQ3ODQ5NTIyNzU1MTY3MzE0OTY1OTU4Mzg3ODM2NyIsInVuaXZlcnNpdHkiOiI4NTExNjg4NjAwOTI4MzAxNjU4NzIyODgzNzU4NTE4NTMxMTgwMTU4OTIzNDA3MjUzMjA2MDE3OTMzOTE2MjA1NTY5MTg5NjI1OTM0MDk3MzQ2NDM3ODIyNzExNjE3MzkyMTU4OTU3NDE0MzA3OTM2ODE3MDM4MDA2NDE0MzMxNTk2MTEwNDQ2NDczNzgwNTI1NzEwNDM3MTIyNzU3Mzk4NzYzMjExODAyMTE0OTU5NjM0NjMzNjEwNjk3OTIyMzA0NjcyNDUwNzI0OTI0MzcyOTI5ODYwOTU4Nzk3NjQ4NDU5MTE3OTk3NDE0MTIxOTQzNzA3MjY2Mjc5ODM0ODA0NDYyMDk4NTMwMjk4NzU4NTcxMTUxNTc2MzIzMDc4MzMwNDEwMjUwOTQyNTM1MjM4NTA4ODgxMDk4ODEzMDg1NjE1MzE0NTc3NzY4MDMzMjE4OTk3MTQwOTUyMjIzMzI3NzAzNzYyMTQ5MzA3NTUzODc1MTE3OTEwMjAwMjE3NDQ2MjgyMjg2NDAzMzUyMDAxODg2ODg5NjA3NTA1ODkyNjE1MzM0MDkwNTE2NjY3NzM4MDI4NDA0MDMzNjMwNDIwNDExNjQzNDMyMzQwMDQxNTYzNjM4MDY2MjEwMTA3MDgwODI0NDYyMjU3NDk1ODM1Mzk0Mjg4OTA2MDUwNjQwMDAwNTEwMzE5OTgxMDc2NDYwNTg5NDc1NjMwNDA5MDEyMTIwMzI2MjUxNTU1NzczMDc4ODQ2ODE4OTc2MzQxNzI4MDU1ODgwMTA4NTk2OTQ1NTQ4ODEzNzY2NzAzMjEzODQyNjQ5OTI1OCJ9LCJyY3R4dCI6IjcyNjI2MTkyMjM1ODU2OTk1NzEzMjczODc4NTg4NjM1ODc1NTAzNDgxMTU2MjI4MzY5ODM1Nzk4MjIzNjgyNTk1ODYyODk2NDk1OTI3NTk5NDc4Nzg1NjkxNDU2Mzg2NzMyOTYxNjk5OTYzNDQyMTkxNzkwNTIxMzUxNTQ2ODQ3ODkzODQyNTQ0MzMxMjg0NTc3NDY2NjU1MzIyOTAwMzkwNTQ2Njc0MDgxMDMwMzg3Mzc0MTk0MDcwMTAwMzY3OTQ0ODA4MTUyNTA0ODU3OTkwODk2MzI0MjQwMDg1NjA4ODMzMjg5NTYwODgwNzAxMTA5NDA5OTY2NTAyMTc4ODg0NTAyOTIyOTY3MjU5MDAxNTM4MjYyMDI4MTAwODQwMzg4MzM1Mzk4MTUwMTc1Mjk2NDYxNzA0NzE3NjQwOTg3NTYwMjgwNzc2MTE3NDA0MTA4NDc1MzYyODE0NzA5MjI4MjMzMTg3MTcxODA0ODUxMDUzNzc4NDYwNDkxNDQwMTA0OTc4MjY2MTc1MTIzMTA2NTQyODI3Njc0MTEwNjA3NDM3MjIyNjYzMzAwNDczNzc0ODg0NTMwNzYyOTQyMjk5MzE3MjMyOTAwMDE3MDYyNzQxODIwMTk1MTM2OTIyOTM4MTg4MjE1OTI3MDkwODg4Mjc4Mzk5MDY1MjI5NTUyNzg1NDE0NTg1MjQwNzM2ODA4MTMzNTQ1NTg2NjkzODM5MzMxNjQ3NjkyMDMwMDQ0MjY5NjAzMDcyMTQyMTg2MjkxNTU4MzM3NTI1OTE3Mjc3Njk5MzQ0OTUyNTgzMTQ0NzI5NjI1ODIxIiwicyI6IjgxMDE1NTU0NjAyMDQ2MjYxMTcwMTk0NDQxNzY2NTkzNzEzNDAyNjUyOTUzNDAwMzUwODcwNTY1MTE0MDMyNzcwMTAxNDQ5MTk0Mjk3NzI5NjcwOTcyNDc3MDAyMTc0NTgyNDg1NDM0MTA4MzcxNTQyMDcwOTc3NjE3NTU3NTUwMTIxMjgzNjkwMDcwMTU0MDAzMTUzNDY1MTI3MTQyNDEyNDkyOTQ3Nzk2NjIxNjA0NjAwNjEwOTQzNDIwNjA4MDIxOTk2NDI4NDUyMTUwMjA3NjE2NTY5MDczNjk3OTkwNTE5ODU0NTU3NDc0MjY4ODcyNjA5NzYzODI3NzE1MzcxMjM0MDE0Njc1OTk5MTQ4OTI1NzU4MTkyNTEwODA5Mjk4ODQ2MzczNDU5NDYzODk3NTY5NjEzMjQzOTg3ODM2NDEzMTA2NDQ0MTMwMDc5ODI3OTkxODU2NDA3MTA4NjYxODMwNDU1NjM2MTIzMTQwOTc5NTk1MDgwODM1NDIwNjczODcyNDM4NjQzOTcwOTAyNjM3NTg3NDA4NjE2NTg3Nzc0NDc2MzY5MzExMzEyNzAyNjM4Njc4Mzk5MDkxMjA5MzA5MDYyNDE3MzY1ODcyNDQ1NTM1OTM1ODc4NzMxODkyMjA5OTA4OTYxNzA0MDM4NTIyNjAwMDA0MjQ2MTAwNjAwOTcxNjA5ODY4Njc5NjM1MzgyMjk1MTU1ODU1MjQ1Nzk2NzY2ODExMzYwMzI2Mjc1MzU2MTQxODk5ODEwMjQzNzc1MDY1OTIwMTk5MzQ5MjY4NjUwMjY4MDYzOTA1OTkzNTk1ODgwIiwieiI6IjUxNDA1MzA3MzQ5MzQ0NDczMDY3NTQzNDI2MTQwNDY4MjUwMDkyOTc4ODU1MzkxNDg3ODM3MDQ3OTE5MTU5NDQ4NDA4MzA2MDYyNzQyNDg4OTc3MzY2MzcxNDY2NTc5NzA2ODc1NTk5MjIwMDY5NzU3NDc5NTM1MzY3MjA4MjEzNTEyODI4MzgxNjA4NTQ0OTEyMjA4MjgzNDkyNDEwODM3Nzg0Nzg3NzgyNzYyNjQyNjQyODYxNDU2NzM1OTE0NTkxMzk1MDEyMDkwNDMxMTkyODY2NzEwNTY4OTI0NjIzMjIyMTM2MjY4MjA0MTEyMDM1MDY3NjYyOTUzMTA0MjU3MjEwNTQ2ODU1NjYzNDc0MjkyNTUxODk5MDcyNTkxMzAxNjMwMzIyOTMwMjAzMzQ5MzU0MDkxMTY4OTEyNDQzMjE0NTEyMDQwNTIwNDgwOTgzMDE4NzM1NDQ4ODExOTM1NjcyNjc5OTA1NTA2MjI1ODcxNzQ0ODk4Mzg1NDY1MDg0NDM0MjQ3MTM1MDI1NDEzOTc3MTM3NDEzMjI3NDY3MzM5MjA5MTQ0MjQ3MDk5Mjk2ODYzMzYwODk1Njc5ODk1MzYzMDk2MTc4NTY0NzcwMjkxMDcxMDE3OTA0NzI5ODIxMjM2MDAzMzg2MDMyMzY1MDUwNzkzMzkyMzIwMjQwOTYyOTYwMzI3NjUwNDg2NTE2NTM2MjAxNjc2MTk2MjgwMjY1MDU3MDkwMzM5NjAwNTE1ODc3NjkxMzk3MzM4NDE2NjkzMjM5MzA1NDA2NDY1Mjk3MDQ2NTc4MTkxNjI5MzQ1NjY4MjA2In19ffjxoNPSP24JsVps7QufK62cHm4MLrVBpYu1VMlThcJrixajoFiHYK69G3VM22wpOgdo++T8vpiatvplsRjwGewwYJACgKDAQxK1RpIpFb8a3Dz2ZzDFhSsUNJVfjkOhoPtHMxbhrICgwDNthfqgNkQUeYeFg+tc40ZJfJNVDhpusCPyR4Gi8K6g4Szt8zqF22990QYL2QT79AgN5zWTeWQvUfakse0mY56AgICAgICgSPFxE7GIAdYVFQHY6GY9m5Fi6UqwOZuEC3Vx+Yrja9GAoDs6GXxRL8inD2b3RY1v\\/ufksDHNqfFKaK2MEIjNIZwagA=="}}}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 86, err , args: (b'{"op":"REPLY","result":{"type":"108","ref":10,"signature_type":"CL","origin":"3jnXQcj9VLFjcUbtDVZZzV","tag":"default","data":{"primary":{"n":"94395789918231228154091785586208843768578611847406303642651586891320930921222577081682230513612376731058197900820380914247688360049152906855525071639682048377145839103957609377714707719996675230706669321219428162692467324558094099599975868966359717071320779088929152605016542346699384011376930722440028896866096433708622612880431237575976995549426585399554650551399842593587963267758910127885708120359104171691736586089614188198196403067253458139734883446766648674330236607203272574691987391068966666586806995593618443807684047062115622841653991664284445314132632263661187734217623134159115481886205370089744580113873","r":{"dateissued":"18859023741018797872038815229638117026310339435744972607910760746976197568986451324307784659205603164866675762626845593584383953972951170576488223929403145953405880160997837014576916783672289014577491803877405955021543305639943207054834276533724888622816572222212002817434521247029102961171038131491016993683945958422904951967972242721815515956951687914783455532817412140497820261587057222074602535598277491573901466789858112285556636463931043202870509835082348016849346871822417355851938877835473162167541963027783714110369668288318655034153675621000872099879442600835618083660187178225685391119538793895918988690951","master_secret":"38018101519921364727663368811618364961198439828773774963837808691300389099073641171173405972255390297743591226127198243269040440391331382005419723386460723507508748134326215218108079487747310689655719830220233038870395851200615467976988479364617945744009175380255178291443316837400065778174525671555554858846963660754273049900258540789750490659565596066796144609195933532365732229205176649943186753690388273648613883847077543436939447724144311053713620313478922939433052250159704813019931470611137912845604761954056274516499163256212589424003418836016270513452406523634776192214967795359655752585855421903408811504820","name":"36972881227678226440524799834715449272905068152296041598298656344868823425822182142795341444521792489486865867678420406707813366601225310068973916314294496409888578098137466321037329183322105661346445057074775952226980306807756318820908180989553261280373209427144589281724427550334494051418908462936434249924425014938135365683029473367852494388771701690499555627259602163694165048703404978943387681274632934879094520963711354499009945634348271392433647603995327488071723814413654420116984500071622022838652865117264689191402593903686138105531309317348858688060431554155935932858240155529478495227551673149659583878367","university":"85116886009283016587228837585185311801589234072532060179339162055691896259340973464378227116173921589574143079368170380064143315961104464737805257104371227573987632118021149596346336106979223046724507249243729298609587976484591179974141219437072662798348044620985302987585711515763230783304102509425352385088810988130856153145777680332189971409522233277037621493075538751179102002174462822864033520018868896075058926153340905166677380284040336304204116434323400415636380662101070808244622574958353942889060506400005103199810764605894756304090121203262515557730788468189763417280558801085969455488137667032138426499258"},"rctxt":"72626192235856995713273878588635875503481156228369835798223682595862896495927599478785691456386732961699963442191790521351546847893842544331284577466655322900390546674081030387374194070100367944808152504857990896324240085608833289560880701109409966502178884502922967259001538262028100840388335398150175296461704717640987560280776117404108475362814709228233187171804851053778460491440104978266175123106542827674110607437222663300473774884530762942299317232900017062741820195136922938188215927090888278399065229552785414585240736808133545586693839331647692030044269603072142186291558337525917277699344952583144729625821","s":"81015554602046261170194441766593713402652953400350870565114032770101449194297729670972477002174582485434108371542070977617557550121283690070154003153465127142412492947796621604600610943420608021996428452150207616569073697990519854557474268872609763827715371234014675999148925758192510809298846373459463897569613243987836413106444130079827991856407108661830455636123140979595080835420673872438643970902637587408616587774476369311312702638678399091209309062417365872445535935878731892209908961704038522600004246100600971609868679635382295155855245796766811360326275356141899810243775065920199349268650268063905993595880","z":"51405307349344473067543426140468250092978855391487837047919159448408306062742488977366371466579706875599220069757479535367208213512828381608544912208283492410837784787782762642642861456735914591395012090431192866710568924623222136268204112035067662953104257210546855663474292551899072591301630322930203349354091168912443214512040520480983018735448811935672679905506225871744898385465084434247135025413977137413227467339209144247099296863360895679895363096178564770291071017904729821236003386032365050793392320240962960327650486516536201676196280265057090339600515877691397338416693239305406465297046578191629345668206"}},"identifier":"LibindyDid111111111111","reqId":1621255304026787456,"seqNo":12,"txnTime":1621255084,"state_proof":{"root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","multi_signature":{"signature":"RStTBauNqLyaZMM4Q2dXnDZb9sycR73n8xCen6MhQvjKSxGbArW2KRhfjCds89hmQQsvsTNN3ErR8Q89adR8BwzEUFnkLyEWtL7cB7peSKby6pR7RPK3RoGNQeJoZJcyoPZgtj3JRYHZsPALZTazYGPzSdZF7qEHdMc5yAHJNWpkib","participants":["Node1","Node3","Node4"],"value":{"ledger_id":1,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","timestamp":1621255110,"txn_root_hash":"33Qn7LL4eu98k6KpZb2KcVvxbHXJiyWLqx2xuPDraijy"}},"proof_nodes":"+RYq+DmXFqblhRY2o5VkxGamNVYnREVlpaelY6OgSTB4yxlMGlDPjmivX37ZhuDvpLa\\/YfeYipaqOzTw7474kYCAgKBEqR+trIkK+QqI5+NvWpBpc9bTacOGUIZN2zZjiB6wPICgv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSiegv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSieAgICAoL8QgC6a78sPnRhjdbUStwqlPP4TOGrPyYC4FAYtN\\/A9gICAgID4cYCg5ZUcauzc0SNjlc9zNTOsh2N9\\/r5zC\\/sCdf8x5S2AVgqgC8atJ8a\\/kPsxJ3lQ4cf7N3Nou8Lxc4btUeqg8FQ7aLegqQOaP7RADF6l\\/BbN9VBCxAM85GugTmTPKwcKctp6oGqAgICAgICAgICAgICA+RPzjyA6Q0w6MTA6ZGVmYXVsdLkT4PkT3bkT2nsibHNuIjoxMiwibHV0IjoxNjIxMjU1MDg0LCJ2YWwiOnsicHJpbWFyeSI6eyJuIjoiOTQzOTU3ODk5MTgyMzEyMjgxNTQwOTE3ODU1ODYyMDg4NDM3Njg1Nzg2MTE4NDc0MDYzMDM2NDI2NTE1ODY4OTEzMjA5MzA5MjEyMjI1NzcwODE2ODIyMzA1MTM2MTIzNzY3MzEwNTgxOTc5MDA4MjAzODA5MTQyNDc2ODgzNjAwNDkxNTI5MDY4NTU1MjUwNzE2Mzk2ODIwNDgzNzcxNDU4MzkxMDM5NTc2MDkzNzc3MTQ3MDc3MTk5OTY2NzUyMzA3MDY2NjkzMjEyMTk0MjgxNjI2OTI0NjczMjQ1NTgwOTQwOTk1OTk5NzU4Njg5NjYzNTk3MTcwNzEzMjA3NzkwODg5MjkxNTI2MDUwMTY1NDIzNDY2OTkzODQwMTEzNzY5MzA3MjI0NDAwMjg4OTY4NjYwOTY0MzM3MDg2MjI2MTI4ODA0MzEyMzc1NzU5NzY5OTU1NDk0MjY1ODUzOTk1NTQ2NTA1NTEzOTk4NDI1OTM1ODc5NjMyNjc3NTg5MTAxMjc4ODU3MDgxMjAzNTkxMDQxNzE2OTE3MzY1ODYwODk2MTQxODgxOTgxOTY0MDMwNjcyNTM0NTgxMzk3MzQ4ODM0NDY3NjY2NDg2NzQzMzAyMzY2MDcyMDMyNzI1NzQ2OTE5ODczOTEwNjg5NjY2NjY1ODY4MDY5OTU1OTM2MTg0NDM4MDc2ODQwNDcwNjIxMTU2MjI4NDE2NTM5OTE2NjQyODQ0NDUzMTQxMzI2MzIyNjM2NjExODc3MzQyMTc2MjMxMzQxNTkxMTU0ODE4ODYyMDUzNzAwODk3NDQ1ODAxMTM4NzMiLCJyIjp7ImRhdGVpc3N1ZWQiOiIxODg1OTAyMzc0MTAxODc5Nzg3MjAzODgxNTIyOTYzODExNzAyNjMxMDMzOTQzNTc0NDk3MjYwNzkxMDc2MDc0Njk3NjE5NzU2ODk4NjQ1MTMyNDMwNzc4NDY1OTIwNTYwMzE2NDg2NjY3NTc2MjYyNjg0NTU5MzU4NDM4Mzk1Mzk3Mjk1MTE3MDU3NjQ4ODIyMzkyOTQwMzE0NTk1MzQwNTg4MDE2MDk5NzgzNzAxNDU3NjkxNjc4MzY3MjI4OTAxNDU3NzQ5MTgwMzg3NzQwNTk1NTAyMTU0MzMwNTYzOTk0MzIwNzA1NDgzNDI3NjUzMzcyNDg4ODYyMjgxNjU3MjIyMjIxMjAwMjgxNzQzNDUyMTI0NzAyOTEwMjk2MTE3MTAzODEzMTQ5MTAxNjk5MzY4Mzk0NTk1ODQyMjkwNDk1MTk2Nzk3MjI0MjcyMTgxNTUxNTk1Njk1MTY4NzkxNDc4MzQ1NTUzMjgxNzQxMjE0MDQ5NzgyMDI2MTU4NzA1NzIyMjA3NDYwMjUzNTU5ODI3NzQ5MTU3MzkwMTQ2Njc4OTg1ODExMjI4NTU1NjYzNjQ2MzkzMTA0MzIwMjg3MDUwOTgzNTA4MjM0ODAxNjg0OTM0Njg3MTgyMjQxNzM1NTg1MTkzODg3NzgzNTQ3MzE2MjE2NzU0MTk2MzAyNzc4MzcxNDExMDM2OTY2ODI4ODMxODY1NTAzNDE1MzY3NTYyMTAwMDg3MjA5OTg3OTQ0MjYwMDgzNTYxODA4MzY2MDE4NzE3ODIyNTY4NTM5MTExOTUzODc5Mzg5NTkxODk4ODY5MDk1MSIsIm1hc3Rlcl9zZWNyZXQiOiIzODAxODEwMTUxOTkyMTM2NDcyNzY2MzM2ODgxMTYxODM2NDk2MTE5ODQzOTgyODc3Mzc3NDk2MzgzNzgwODY5MTMwMDM4OTA5OTA3MzY0MTE3MTE3MzQwNTk3MjI1NTM5MDI5Nzc0MzU5MTIyNjEyNzE5ODI0MzI2OTA0MDQ0MDM5MTMzMTM4MjAwNTQxOTcyMzM4NjQ2MDcyMzUwNzUwODc0ODEzNDMyNjIxNTIxODEwODA3OTQ4Nzc0NzMxMDY4OTY1NTcxOTgzMDIyMDIzMzAzODg3MDM5NTg1MTIwMDYxNTQ2Nzk3Njk4ODQ3OTM2NDYxNzk0NTc0NDAwOTE3NTM4MDI1NTE3ODI5MTQ0MzMxNjgzNzQwMDA2NTc3ODE3NDUyNTY3MTU1NTU1NDg1ODg0Njk2MzY2MDc1NDI3MzA0OTkwMDI1ODU0MDc4OTc1MDQ5MDY1OTU2NTU5NjA2Njc5NjE0NDYwOTE5NTkzMzUzMjM2NTczMjIyOTIwNTE3NjY0OTk0MzE4Njc1MzY5MDM4ODI3MzY0ODYxMzg4Mzg0NzA3NzU0MzQzNjkzOTQ0NzcyNDE0NDMxMTA1MzcxMzYyMDMxMzQ3ODkyMjkzOTQzMzA1MjI1MDE1OTcwNDgxMzAxOTkzMTQ3MDYxMTEzNzkxMjg0NTYwNDc2MTk1NDA1NjI3NDUxNjQ5OTE2MzI1NjIxMjU4OTQyNDAwMzQxODgzNjAxNjI3MDUxMzQ1MjQwNjUyMzYzNDc3NjE5MjIxNDk2Nzc5NTM1OTY1NTc1MjU4NTg1NTQyMTkwMzQwODgxMTUwNDgyMCIsIm5hbWUiOiIzNjk3Mjg4MTIyNzY3ODIyNjQ0MDUyNDc5OTgzNDcxNTQ0OTI3MjkwNTA2ODE1MjI5NjA0MTU5ODI5ODY1NjM0NDg2ODgyMzQyNTgyMjE4MjE0Mjc5NTM0MTQ0NDUyMTc5MjQ4OTQ4Njg2NTg2NzY3ODQyMDQwNjcwNzgxMzM2NjYwMTIyNTMxMDA2ODk3MzkxNjMxNDI5NDQ5NjQwOTg4ODU3ODA5ODEzNzQ2NjMyMTAzNzMyOTE4MzMyMjEwNTY2MTM0NjQ0NTA1NzA3NDc3NTk1MjIyNjk4MDMwNjgwNzc1NjMxODgyMDkwODE4MDk4OTU1MzI2MTI4MDM3MzIwOTQyNzE0NDU4OTI4MTcyNDQyNzU1MDMzNDQ5NDA1MTQxODkwODQ2MjkzNjQzNDI0OTkyNDQyNTAxNDkzODEzNTM2NTY4MzAyOTQ3MzM2Nzg1MjQ5NDM4ODc3MTcwMTY5MDQ5OTU1NTYyNzI1OTYwMjE2MzY5NDE2NTA0ODcwMzQwNDk3ODk0MzM4NzY4MTI3NDYzMjkzNDg3OTA5NDUyMDk2MzcxMTM1NDQ5OTAwOTk0NTYzNDM0ODI3MTM5MjQzMzY0NzYwMzk5NTMyNzQ4ODA3MTcyMzgxNDQxMzY1NDQyMDExNjk4NDUwMDA3MTYyMjAyMjgzODY1Mjg2NTExNzI2NDY4OTE5MTQwMjU5MzkwMzY4NjEzODEwNTUzMTMwOTMxNzM0ODg1ODY4ODA2MDQzMTU1NDE1NTkzNTkzMjg1ODI0MDE1NTUyOTQ3ODQ5NTIyNzU1MTY3MzE0OTY1OTU4Mzg3ODM2NyIsInVuaXZlcnNpdHkiOiI4NTExNjg4NjAwOTI4MzAxNjU4NzIyODgzNzU4NTE4NTMxMTgwMTU4OTIzNDA3MjUzMjA2MDE3OTMzOTE2MjA1NTY5MTg5NjI1OTM0MDk3MzQ2NDM3ODIyNzExNjE3MzkyMTU4OTU3NDE0MzA3OTM2ODE3MDM4MDA2NDE0MzMxNTk2MTEwNDQ2NDczNzgwNTI1NzEwNDM3MTIyNzU3Mzk4NzYzMjExODAyMTE0OTU5NjM0NjMzNjEwNjk3OTIyMzA0NjcyNDUwNzI0OTI0MzcyOTI5ODYwOTU4Nzk3NjQ4NDU5MTE3OTk3NDE0MTIxOTQzNzA3MjY2Mjc5ODM0ODA0NDYyMDk4NTMwMjk4NzU4NTcxMTUxNTc2MzIzMDc4MzMwNDEwMjUwOTQyNTM1MjM4NTA4ODgxMDk4ODEzMDg1NjE1MzE0NTc3NzY4MDMzMjE4OTk3MTQwOTUyMjIzMzI3NzAzNzYyMTQ5MzA3NTUzODc1MTE3OTEwMjAwMjE3NDQ2MjgyMjg2NDAzMzUyMDAxODg2ODg5NjA3NTA1ODkyNjE1MzM0MDkwNTE2NjY3NzM4MDI4NDA0MDMzNjMwNDIwNDExNjQzNDMyMzQwMDQxNTYzNjM4MDY2MjEwMTA3MDgwODI0NDYyMjU3NDk1ODM1Mzk0Mjg4OTA2MDUwNjQwMDAwNTEwMzE5OTgxMDc2NDYwNTg5NDc1NjMwNDA5MDEyMTIwMzI2MjUxNTU1NzczMDc4ODQ2ODE4OTc2MzQxNzI4MDU1ODgwMTA4NTk2OTQ1NTQ4ODEzNzY2NzAzMjEzODQyNjQ5OTI1OCJ9LCJyY3R4dCI6IjcyNjI2MTkyMjM1ODU2OTk1NzEzMjczODc4NTg4NjM1ODc1NTAzNDgxMTU2MjI4MzY5ODM1Nzk4MjIzNjgyNTk1ODYyODk2NDk1OTI3NTk5NDc4Nzg1NjkxNDU2Mzg2NzMyOTYxNjk5OTYzNDQyMTkxNzkwNTIxMzUxNTQ2ODQ3ODkzODQyNTQ0MzMxMjg0NTc3NDY2NjU1MzIyOTAwMzkwNTQ2Njc0MDgxMDMwMzg3Mzc0MTk0MDcwMTAwMzY3OTQ0ODA4MTUyNTA0ODU3OTkwODk2MzI0MjQwMDg1NjA4ODMzMjg5NTYwODgwNzAxMTA5NDA5OTY2NTAyMTc4ODg0NTAyOTIyOTY3MjU5MDAxNTM4MjYyMDI4MTAwODQwMzg4MzM1Mzk4MTUwMTc1Mjk2NDYxNzA0NzE3NjQwOTg3NTYwMjgwNzc2MTE3NDA0MTA4NDc1MzYyODE0NzA5MjI4MjMzMTg3MTcxODA0ODUxMDUzNzc4NDYwNDkxNDQwMTA0OTc4MjY2MTc1MTIzMTA2NTQyODI3Njc0MTEwNjA3NDM3MjIyNjYzMzAwNDczNzc0ODg0NTMwNzYyOTQyMjk5MzE3MjMyOTAwMDE3MDYyNzQxODIwMTk1MTM2OTIyOTM4MTg4MjE1OTI3MDkwODg4Mjc4Mzk5MDY1MjI5NTUyNzg1NDE0NTg1MjQwNzM2ODA4MTMzNTQ1NTg2NjkzODM5MzMxNjQ3NjkyMDMwMDQ0MjY5NjAzMDcyMTQyMTg2MjkxNTU4MzM3NTI1OTE3Mjc3Njk5MzQ0OTUyNTgzMTQ0NzI5NjI1ODIxIiwicyI6IjgxMDE1NTU0NjAyMDQ2MjYxMTcwMTk0NDQxNzY2NTkzNzEzNDAyNjUyOTUzNDAwMzUwODcwNTY1MTE0MDMyNzcwMTAxNDQ5MTk0Mjk3NzI5NjcwOTcyNDc3MDAyMTc0NTgyNDg1NDM0MTA4MzcxNTQyMDcwOTc3NjE3NTU3NTUwMTIxMjgzNjkwMDcwMTU0MDAzMTUzNDY1MTI3MTQyNDEyNDkyOTQ3Nzk2NjIxNjA0NjAwNjEwOTQzNDIwNjA4MDIxOTk2NDI4NDUyMTUwMjA3NjE2NTY5MDczNjk3OTkwNTE5ODU0NTU3NDc0MjY4ODcyNjA5NzYzODI3NzE1MzcxMjM0MDE0Njc1OTk5MTQ4OTI1NzU4MTkyNTEwODA5Mjk4ODQ2MzczNDU5NDYzODk3NTY5NjEzMjQzOTg3ODM2NDEzMTA2NDQ0MTMwMDc5ODI3OTkxODU2NDA3MTA4NjYxODMwNDU1NjM2MTIzMTQwOTc5NTk1MDgwODM1NDIwNjczODcyNDM4NjQzOTcwOTAyNjM3NTg3NDA4NjE2NTg3Nzc0NDc2MzY5MzExMzEyNzAyNjM4Njc4Mzk5MDkxMjA5MzA5MDYyNDE3MzY1ODcyNDQ1NTM1OTM1ODc4NzMxODkyMjA5OTA4OTYxNzA0MDM4NTIyNjAwMDA0MjQ2MTAwNjAwOTcxNjA5ODY4Njc5NjM1MzgyMjk1MTU1ODU1MjQ1Nzk2NzY2ODExMzYwMzI2Mjc1MzU2MTQxODk5ODEwMjQzNzc1MDY1OTIwMTk5MzQ5MjY4NjUwMjY4MDYzOTA1OTkzNTk1ODgwIiwieiI6IjUxNDA1MzA3MzQ5MzQ0NDczMDY3NTQzNDI2MTQwNDY4MjUwMDkyOTc4ODU1MzkxNDg3ODM3MDQ3OTE5MTU5NDQ4NDA4MzA2MDYyNzQyNDg4OTc3MzY2MzcxNDY2NTc5NzA2ODc1NTk5MjIwMDY5NzU3NDc5NTM1MzY3MjA4MjEzNTEyODI4MzgxNjA4NTQ0OTEyMjA4MjgzNDkyNDEwODM3Nzg0Nzg3NzgyNzYyNjQyNjQyODYxNDU2NzM1OTE0NTkxMzk1MDEyMDkwNDMxMTkyODY2NzEwNTY4OTI0NjIzMjIyMTM2MjY4MjA0MTEyMDM1MDY3NjYyOTUzMTA0MjU3MjEwNTQ2ODU1NjYzNDc0MjkyNTUxODk5MDcyNTkxMzAxNjMwMzIyOTMwMjAzMzQ5MzU0MDkxMTY4OTEyNDQzMjE0NTEyMDQwNTIwNDgwOTgzMDE4NzM1NDQ4ODExOTM1NjcyNjc5OTA1NTA2MjI1ODcxNzQ0ODk4Mzg1NDY1MDg0NDM0MjQ3MTM1MDI1NDEzOTc3MTM3NDEzMjI3NDY3MzM5MjA5MTQ0MjQ3MDk5Mjk2ODYzMzYwODk1Njc5ODk1MzYzMDk2MTc4NTY0NzcwMjkxMDcxMDE3OTA0NzI5ODIxMjM2MDAzMzg2MDMyMzY1MDUwNzkzMzkyMzIwMjQwOTYyOTYwMzI3NjUwNDg2NTE2NTM2MjAxNjc2MTk2MjgwMjY1MDU3MDkwMzM5NjAwNTE1ODc3NjkxMzk3MzM4NDE2NjkzMjM5MzA1NDA2NDY1Mjk3MDQ2NTc4MTkxNjI5MzQ1NjY4MjA2In19ffjxoNPSP24JsVps7QufK62cHm4MLrVBpYu1VMlThcJrixajoFiHYK69G3VM22wpOgdo++T8vpiatvplsRjwGewwYJACgKDAQxK1RpIpFb8a3Dz2ZzDFhSsUNJVfjkOhoPtHMxbhrICgwDNthfqgNkQUeYeFg+tc40ZJfJNVDhpusCPyR4Gi8K6g4Szt8zqF22990QYL2QT79AgN5zWTeWQvUfakse0mY56AgICAgICgSPFxE7GIAdYVFQHY6GY9m5Fi6UqwOZuEC3Vx+Yrja9GAoDs6GXxRL8inD2b3RY1v\\/ufksDHNqfFKaK2MEIjNIZwagA=="}}}',)
_indy_loop_callback: Function returned b'{"op":"REPLY","result":{"type":"108","ref":10,"signature_type":"CL","origin":"3jnXQcj9VLFjcUbtDVZZzV","tag":"default","data":{"primary":{"n":"94395789918231228154091785586208843768578611847406303642651586891320930921222577081682230513612376731058197900820380914247688360049152906855525071639682048377145839103957609377714707719996675230706669321219428162692467324558094099599975868966359717071320779088929152605016542346699384011376930722440028896866096433708622612880431237575976995549426585399554650551399842593587963267758910127885708120359104171691736586089614188198196403067253458139734883446766648674330236607203272574691987391068966666586806995593618443807684047062115622841653991664284445314132632263661187734217623134159115481886205370089744580113873","r":{"dateissued":"18859023741018797872038815229638117026310339435744972607910760746976197568986451324307784659205603164866675762626845593584383953972951170576488223929403145953405880160997837014576916783672289014577491803877405955021543305639943207054834276533724888622816572222212002817434521247029102961171038131491016993683945958422904951967972242721815515956951687914783455532817412140497820261587057222074602535598277491573901466789858112285556636463931043202870509835082348016849346871822417355851938877835473162167541963027783714110369668288318655034153675621000872099879442600835618083660187178225685391119538793895918988690951","master_secret":"38018101519921364727663368811618364961198439828773774963837808691300389099073641171173405972255390297743591226127198243269040440391331382005419723386460723507508748134326215218108079487747310689655719830220233038870395851200615467976988479364617945744009175380255178291443316837400065778174525671555554858846963660754273049900258540789750490659565596066796144609195933532365732229205176649943186753690388273648613883847077543436939447724144311053713620313478922939433052250159704813019931470611137912845604761954056274516499163256212589424003418836016270513452406523634776192214967795359655752585855421903408811504820","name":"36972881227678226440524799834715449272905068152296041598298656344868823425822182142795341444521792489486865867678420406707813366601225310068973916314294496409888578098137466321037329183322105661346445057074775952226980306807756318820908180989553261280373209427144589281724427550334494051418908462936434249924425014938135365683029473367852494388771701690499555627259602163694165048703404978943387681274632934879094520963711354499009945634348271392433647603995327488071723814413654420116984500071622022838652865117264689191402593903686138105531309317348858688060431554155935932858240155529478495227551673149659583878367","university":"85116886009283016587228837585185311801589234072532060179339162055691896259340973464378227116173921589574143079368170380064143315961104464737805257104371227573987632118021149596346336106979223046724507249243729298609587976484591179974141219437072662798348044620985302987585711515763230783304102509425352385088810988130856153145777680332189971409522233277037621493075538751179102002174462822864033520018868896075058926153340905166677380284040336304204116434323400415636380662101070808244622574958353942889060506400005103199810764605894756304090121203262515557730788468189763417280558801085969455488137667032138426499258"},"rctxt":"72626192235856995713273878588635875503481156228369835798223682595862896495927599478785691456386732961699963442191790521351546847893842544331284577466655322900390546674081030387374194070100367944808152504857990896324240085608833289560880701109409966502178884502922967259001538262028100840388335398150175296461704717640987560280776117404108475362814709228233187171804851053778460491440104978266175123106542827674110607437222663300473774884530762942299317232900017062741820195136922938188215927090888278399065229552785414585240736808133545586693839331647692030044269603072142186291558337525917277699344952583144729625821","s":"81015554602046261170194441766593713402652953400350870565114032770101449194297729670972477002174582485434108371542070977617557550121283690070154003153465127142412492947796621604600610943420608021996428452150207616569073697990519854557474268872609763827715371234014675999148925758192510809298846373459463897569613243987836413106444130079827991856407108661830455636123140979595080835420673872438643970902637587408616587774476369311312702638678399091209309062417365872445535935878731892209908961704038522600004246100600971609868679635382295155855245796766811360326275356141899810243775065920199349268650268063905993595880","z":"51405307349344473067543426140468250092978855391487837047919159448408306062742488977366371466579706875599220069757479535367208213512828381608544912208283492410837784787782762642642861456735914591395012090431192866710568924623222136268204112035067662953104257210546855663474292551899072591301630322930203349354091168912443214512040520480983018735448811935672679905506225871744898385465084434247135025413977137413227467339209144247099296863360895679895363096178564770291071017904729821236003386032365050793392320240962960327650486516536201676196280265057090339600515877691397338416693239305406465297046578191629345668206"}},"identifier":"LibindyDid111111111111","reqId":1621255304026787456,"seqNo":12,"txnTime":1621255084,"state_proof":{"root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","multi_signature":{"signature":"RStTBauNqLyaZMM4Q2dXnDZb9sycR73n8xCen6MhQvjKSxGbArW2KRhfjCds89hmQQsvsTNN3ErR8Q89adR8BwzEUFnkLyEWtL7cB7peSKby6pR7RPK3RoGNQeJoZJcyoPZgtj3JRYHZsPALZTazYGPzSdZF7qEHdMc5yAHJNWpkib","participants":["Node1","Node3","Node4"],"value":{"ledger_id":1,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","timestamp":1621255110,"txn_root_hash":"33Qn7LL4eu98k6KpZb2KcVvxbHXJiyWLqx2xuPDraijy"}},"proof_nodes":"+RYq+DmXFqblhRY2o5VkxGamNVYnREVlpaelY6OgSTB4yxlMGlDPjmivX37ZhuDvpLa\\/YfeYipaqOzTw7474kYCAgKBEqR+trIkK+QqI5+NvWpBpc9bTacOGUIZN2zZjiB6wPICgv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSiegv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSieAgICAoL8QgC6a78sPnRhjdbUStwqlPP4TOGrPyYC4FAYtN\\/A9gICAgID4cYCg5ZUcauzc0SNjlc9zNTOsh2N9\\/r5zC\\/sCdf8x5S2AVgqgC8atJ8a\\/kPsxJ3lQ4cf7N3Nou8Lxc4btUeqg8FQ7aLegqQOaP7RADF6l\\/BbN9VBCxAM85GugTmTPKwcKctp6oGqAgICAgICAgICAgICA+RPzjyA6Q0w6MTA6ZGVmYXVsdLkT4PkT3bkT2nsibHNuIjoxMiwibHV0IjoxNjIxMjU1MDg0LCJ2YWwiOnsicHJpbWFyeSI6eyJuIjoiOTQzOTU3ODk5MTgyMzEyMjgxNTQwOTE3ODU1ODYyMDg4NDM3Njg1Nzg2MTE4NDc0MDYzMDM2NDI2NTE1ODY4OTEzMjA5MzA5MjEyMjI1NzcwODE2ODIyMzA1MTM2MTIzNzY3MzEwNTgxOTc5MDA4MjAzODA5MTQyNDc2ODgzNjAwNDkxNTI5MDY4NTU1MjUwNzE2Mzk2ODIwNDgzNzcxNDU4MzkxMDM5NTc2MDkzNzc3MTQ3MDc3MTk5OTY2NzUyMzA3MDY2NjkzMjEyMTk0MjgxNjI2OTI0NjczMjQ1NTgwOTQwOTk1OTk5NzU4Njg5NjYzNTk3MTcwNzEzMjA3NzkwODg5MjkxNTI2MDUwMTY1NDIzNDY2OTkzODQwMTEzNzY5MzA3MjI0NDAwMjg4OTY4NjYwOTY0MzM3MDg2MjI2MTI4ODA0MzEyMzc1NzU5NzY5OTU1NDk0MjY1ODUzOTk1NTQ2NTA1NTEzOTk4NDI1OTM1ODc5NjMyNjc3NTg5MTAxMjc4ODU3MDgxMjAzNTkxMDQxNzE2OTE3MzY1ODYwODk2MTQxODgxOTgxOTY0MDMwNjcyNTM0NTgxMzk3MzQ4ODM0NDY3NjY2NDg2NzQzMzAyMzY2MDcyMDMyNzI1NzQ2OTE5ODczOTEwNjg5NjY2NjY1ODY4MDY5OTU1OTM2MTg0NDM4MDc2ODQwNDcwNjIxMTU2MjI4NDE2NTM5OTE2NjQyODQ0NDUzMTQxMzI2MzIyNjM2NjExODc3MzQyMTc2MjMxMzQxNTkxMTU0ODE4ODYyMDUzNzAwODk3NDQ1ODAxMTM4NzMiLCJyIjp7ImRhdGVpc3N1ZWQiOiIxODg1OTAyMzc0MTAxODc5Nzg3MjAzODgxNTIyOTYzODExNzAyNjMxMDMzOTQzNTc0NDk3MjYwNzkxMDc2MDc0Njk3NjE5NzU2ODk4NjQ1MTMyNDMwNzc4NDY1OTIwNTYwMzE2NDg2NjY3NTc2MjYyNjg0NTU5MzU4NDM4Mzk1Mzk3Mjk1MTE3MDU3NjQ4ODIyMzkyOTQwMzE0NTk1MzQwNTg4MDE2MDk5NzgzNzAxNDU3NjkxNjc4MzY3MjI4OTAxNDU3NzQ5MTgwMzg3NzQwNTk1NTAyMTU0MzMwNTYzOTk0MzIwNzA1NDgzNDI3NjUzMzcyNDg4ODYyMjgxNjU3MjIyMjIxMjAwMjgxNzQzNDUyMTI0NzAyOTEwMjk2MTE3MTAzODEzMTQ5MTAxNjk5MzY4Mzk0NTk1ODQyMjkwNDk1MTk2Nzk3MjI0MjcyMTgxNTUxNTk1Njk1MTY4NzkxNDc4MzQ1NTUzMjgxNzQxMjE0MDQ5NzgyMDI2MTU4NzA1NzIyMjA3NDYwMjUzNTU5ODI3NzQ5MTU3MzkwMTQ2Njc4OTg1ODExMjI4NTU1NjYzNjQ2MzkzMTA0MzIwMjg3MDUwOTgzNTA4MjM0ODAxNjg0OTM0Njg3MTgyMjQxNzM1NTg1MTkzODg3NzgzNTQ3MzE2MjE2NzU0MTk2MzAyNzc4MzcxNDExMDM2OTY2ODI4ODMxODY1NTAzNDE1MzY3NTYyMTAwMDg3MjA5OTg3OTQ0MjYwMDgzNTYxODA4MzY2MDE4NzE3ODIyNTY4NTM5MTExOTUzODc5Mzg5NTkxODk4ODY5MDk1MSIsIm1hc3Rlcl9zZWNyZXQiOiIzODAxODEwMTUxOTkyMTM2NDcyNzY2MzM2ODgxMTYxODM2NDk2MTE5ODQzOTgyODc3Mzc3NDk2MzgzNzgwODY5MTMwMDM4OTA5OTA3MzY0MTE3MTE3MzQwNTk3MjI1NTM5MDI5Nzc0MzU5MTIyNjEyNzE5ODI0MzI2OTA0MDQ0MDM5MTMzMTM4MjAwNTQxOTcyMzM4NjQ2MDcyMzUwNzUwODc0ODEzNDMyNjIxNTIxODEwODA3OTQ4Nzc0NzMxMDY4OTY1NTcxOTgzMDIyMDIzMzAzODg3MDM5NTg1MTIwMDYxNTQ2Nzk3Njk4ODQ3OTM2NDYxNzk0NTc0NDAwOTE3NTM4MDI1NTE3ODI5MTQ0MzMxNjgzNzQwMDA2NTc3ODE3NDUyNTY3MTU1NTU1NDg1ODg0Njk2MzY2MDc1NDI3MzA0OTkwMDI1ODU0MDc4OTc1MDQ5MDY1OTU2NTU5NjA2Njc5NjE0NDYwOTE5NTkzMzUzMjM2NTczMjIyOTIwNTE3NjY0OTk0MzE4Njc1MzY5MDM4ODI3MzY0ODYxMzg4Mzg0NzA3NzU0MzQzNjkzOTQ0NzcyNDE0NDMxMTA1MzcxMzYyMDMxMzQ3ODkyMjkzOTQzMzA1MjI1MDE1OTcwNDgxMzAxOTkzMTQ3MDYxMTEzNzkxMjg0NTYwNDc2MTk1NDA1NjI3NDUxNjQ5OTE2MzI1NjIxMjU4OTQyNDAwMzQxODgzNjAxNjI3MDUxMzQ1MjQwNjUyMzYzNDc3NjE5MjIxNDk2Nzc5NTM1OTY1NTc1MjU4NTg1NTQyMTkwMzQwODgxMTUwNDgyMCIsIm5hbWUiOiIzNjk3Mjg4MTIyNzY3ODIyNjQ0MDUyNDc5OTgzNDcxNTQ0OTI3MjkwNTA2ODE1MjI5NjA0MTU5ODI5ODY1NjM0NDg2ODgyMzQyNTgyMjE4MjE0Mjc5NTM0MTQ0NDUyMTc5MjQ4OTQ4Njg2NTg2NzY3ODQyMDQwNjcwNzgxMzM2NjYwMTIyNTMxMDA2ODk3MzkxNjMxNDI5NDQ5NjQwOTg4ODU3ODA5ODEzNzQ2NjMyMTAzNzMyOTE4MzMyMjEwNTY2MTM0NjQ0NTA1NzA3NDc3NTk1MjIyNjk4MDMwNjgwNzc1NjMxODgyMDkwODE4MDk4OTU1MzI2MTI4MDM3MzIwOTQyNzE0NDU4OTI4MTcyNDQyNzU1MDMzNDQ5NDA1MTQxODkwODQ2MjkzNjQzNDI0OTkyNDQyNTAxNDkzODEzNTM2NTY4MzAyOTQ3MzM2Nzg1MjQ5NDM4ODc3MTcwMTY5MDQ5OTU1NTYyNzI1OTYwMjE2MzY5NDE2NTA0ODcwMzQwNDk3ODk0MzM4NzY4MTI3NDYzMjkzNDg3OTA5NDUyMDk2MzcxMTM1NDQ5OTAwOTk0NTYzNDM0ODI3MTM5MjQzMzY0NzYwMzk5NTMyNzQ4ODA3MTcyMzgxNDQxMzY1NDQyMDExNjk4NDUwMDA3MTYyMjAyMjgzODY1Mjg2NTExNzI2NDY4OTE5MTQwMjU5MzkwMzY4NjEzODEwNTUzMTMwOTMxNzM0ODg1ODY4ODA2MDQzMTU1NDE1NTkzNTkzMjg1ODI0MDE1NTUyOTQ3ODQ5NTIyNzU1MTY3MzE0OTY1OTU4Mzg3ODM2NyIsInVuaXZlcnNpdHkiOiI4NTExNjg4NjAwOTI4MzAxNjU4NzIyODgzNzU4NTE4NTMxMTgwMTU4OTIzNDA3MjUzMjA2MDE3OTMzOTE2MjA1NTY5MTg5NjI1OTM0MDk3MzQ2NDM3ODIyNzExNjE3MzkyMTU4OTU3NDE0MzA3OTM2ODE3MDM4MDA2NDE0MzMxNTk2MTEwNDQ2NDczNzgwNTI1NzEwNDM3MTIyNzU3Mzk4NzYzMjExODAyMTE0OTU5NjM0NjMzNjEwNjk3OTIyMzA0NjcyNDUwNzI0OTI0MzcyOTI5ODYwOTU4Nzk3NjQ4NDU5MTE3OTk3NDE0MTIxOTQzNzA3MjY2Mjc5ODM0ODA0NDYyMDk4NTMwMjk4NzU4NTcxMTUxNTc2MzIzMDc4MzMwNDEwMjUwOTQyNTM1MjM4NTA4ODgxMDk4ODEzMDg1NjE1MzE0NTc3NzY4MDMzMjE4OTk3MTQwOTUyMjIzMzI3NzAzNzYyMTQ5MzA3NTUzODc1MTE3OTEwMjAwMjE3NDQ2MjgyMjg2NDAzMzUyMDAxODg2ODg5NjA3NTA1ODkyNjE1MzM0MDkwNTE2NjY3NzM4MDI4NDA0MDMzNjMwNDIwNDExNjQzNDMyMzQwMDQxNTYzNjM4MDY2MjEwMTA3MDgwODI0NDYyMjU3NDk1ODM1Mzk0Mjg4OTA2MDUwNjQwMDAwNTEwMzE5OTgxMDc2NDYwNTg5NDc1NjMwNDA5MDEyMTIwMzI2MjUxNTU1NzczMDc4ODQ2ODE4OTc2MzQxNzI4MDU1ODgwMTA4NTk2OTQ1NTQ4ODEzNzY2NzAzMjEzODQyNjQ5OTI1OCJ9LCJyY3R4dCI6IjcyNjI2MTkyMjM1ODU2OTk1NzEzMjczODc4NTg4NjM1ODc1NTAzNDgxMTU2MjI4MzY5ODM1Nzk4MjIzNjgyNTk1ODYyODk2NDk1OTI3NTk5NDc4Nzg1NjkxNDU2Mzg2NzMyOTYxNjk5OTYzNDQyMTkxNzkwNTIxMzUxNTQ2ODQ3ODkzODQyNTQ0MzMxMjg0NTc3NDY2NjU1MzIyOTAwMzkwNTQ2Njc0MDgxMDMwMzg3Mzc0MTk0MDcwMTAwMzY3OTQ0ODA4MTUyNTA0ODU3OTkwODk2MzI0MjQwMDg1NjA4ODMzMjg5NTYwODgwNzAxMTA5NDA5OTY2NTAyMTc4ODg0NTAyOTIyOTY3MjU5MDAxNTM4MjYyMDI4MTAwODQwMzg4MzM1Mzk4MTUwMTc1Mjk2NDYxNzA0NzE3NjQwOTg3NTYwMjgwNzc2MTE3NDA0MTA4NDc1MzYyODE0NzA5MjI4MjMzMTg3MTcxODA0ODUxMDUzNzc4NDYwNDkxNDQwMTA0OTc4MjY2MTc1MTIzMTA2NTQyODI3Njc0MTEwNjA3NDM3MjIyNjYzMzAwNDczNzc0ODg0NTMwNzYyOTQyMjk5MzE3MjMyOTAwMDE3MDYyNzQxODIwMTk1MTM2OTIyOTM4MTg4MjE1OTI3MDkwODg4Mjc4Mzk5MDY1MjI5NTUyNzg1NDE0NTg1MjQwNzM2ODA4MTMzNTQ1NTg2NjkzODM5MzMxNjQ3NjkyMDMwMDQ0MjY5NjAzMDcyMTQyMTg2MjkxNTU4MzM3NTI1OTE3Mjc3Njk5MzQ0OTUyNTgzMTQ0NzI5NjI1ODIxIiwicyI6IjgxMDE1NTU0NjAyMDQ2MjYxMTcwMTk0NDQxNzY2NTkzNzEzNDAyNjUyOTUzNDAwMzUwODcwNTY1MTE0MDMyNzcwMTAxNDQ5MTk0Mjk3NzI5NjcwOTcyNDc3MDAyMTc0NTgyNDg1NDM0MTA4MzcxNTQyMDcwOTc3NjE3NTU3NTUwMTIxMjgzNjkwMDcwMTU0MDAzMTUzNDY1MTI3MTQyNDEyNDkyOTQ3Nzk2NjIxNjA0NjAwNjEwOTQzNDIwNjA4MDIxOTk2NDI4NDUyMTUwMjA3NjE2NTY5MDczNjk3OTkwNTE5ODU0NTU3NDc0MjY4ODcyNjA5NzYzODI3NzE1MzcxMjM0MDE0Njc1OTk5MTQ4OTI1NzU4MTkyNTEwODA5Mjk4ODQ2MzczNDU5NDYzODk3NTY5NjEzMjQzOTg3ODM2NDEzMTA2NDQ0MTMwMDc5ODI3OTkxODU2NDA3MTA4NjYxODMwNDU1NjM2MTIzMTQwOTc5NTk1MDgwODM1NDIwNjczODcyNDM4NjQzOTcwOTAyNjM3NTg3NDA4NjE2NTg3Nzc0NDc2MzY5MzExMzEyNzAyNjM4Njc4Mzk5MDkxMjA5MzA5MDYyNDE3MzY1ODcyNDQ1NTM1OTM1ODc4NzMxODkyMjA5OTA4OTYxNzA0MDM4NTIyNjAwMDA0MjQ2MTAwNjAwOTcxNjA5ODY4Njc5NjM1MzgyMjk1MTU1ODU1MjQ1Nzk2NzY2ODExMzYwMzI2Mjc1MzU2MTQxODk5ODEwMjQzNzc1MDY1OTIwMTk5MzQ5MjY4NjUwMjY4MDYzOTA1OTkzNTk1ODgwIiwieiI6IjUxNDA1MzA3MzQ5MzQ0NDczMDY3NTQzNDI2MTQwNDY4MjUwMDkyOTc4ODU1MzkxNDg3ODM3MDQ3OTE5MTU5NDQ4NDA4MzA2MDYyNzQyNDg4OTc3MzY2MzcxNDY2NTc5NzA2ODc1NTk5MjIwMDY5NzU3NDc5NTM1MzY3MjA4MjEzNTEyODI4MzgxNjA4NTQ0OTEyMjA4MjgzNDkyNDEwODM3Nzg0Nzg3NzgyNzYyNjQyNjQyODYxNDU2NzM1OTE0NTkxMzk1MDEyMDkwNDMxMTkyODY2NzEwNTY4OTI0NjIzMjIyMTM2MjY4MjA0MTEyMDM1MDY3NjYyOTUzMTA0MjU3MjEwNTQ2ODU1NjYzNDc0MjkyNTUxODk5MDcyNTkxMzAxNjMwMzIyOTMwMjAzMzQ5MzU0MDkxMTY4OTEyNDQzMjE0NTEyMDQwNTIwNDgwOTgzMDE4NzM1NDQ4ODExOTM1NjcyNjc5OTA1NTA2MjI1ODcxNzQ0ODk4Mzg1NDY1MDg0NDM0MjQ3MTM1MDI1NDEzOTc3MTM3NDEzMjI3NDY3MzM5MjA5MTQ0MjQ3MDk5Mjk2ODYzMzYwODk1Njc5ODk1MzYzMDk2MTc4NTY0NzcwMjkxMDcxMDE3OTA0NzI5ODIxMjM2MDAzMzg2MDMyMzY1MDUwNzkzMzkyMzIwMjQwOTYyOTYwMzI3NjUwNDg2NTE2NTM2MjAxNjc2MTk2MjgwMjY1MDU3MDkwMzM5NjAwNTE1ODc3NjkxMzk3MzM4NDE2NjkzMjM5MzA1NDA2NDY1Mjk3MDQ2NTc4MTkxNjI5MzQ1NjY4MjA2In19ffjxoNPSP24JsVps7QufK62cHm4MLrVBpYu1VMlThcJrixajoFiHYK69G3VM22wpOgdo++T8vpiatvplsRjwGewwYJACgKDAQxK1RpIpFb8a3Dz2ZzDFhSsUNJVfjkOhoPtHMxbhrICgwDNthfqgNkQUeYeFg+tc40ZJfJNVDhpusCPyR4Gi8K6g4Szt8zqF22990QYL2QT79AgN5zWTeWQvUfakse0mY56AgICAgICgSPFxE7GIAdYVFQHY6GY9m5Fi6UqwOZuEC3Vx+Yrja9GAoDs6GXxRL8inD2b3RY1v\\/ufksDHNqfFKaK2MEIjNIZwagA=="}}}'
_indy_loop_callback <<<
submit_request: <<< res: '{"op":"REPLY","result":{"type":"108","ref":10,"signature_type":"CL","origin":"3jnXQcj9VLFjcUbtDVZZzV","tag":"default","data":{"primary":{"n":"94395789918231228154091785586208843768578611847406303642651586891320930921222577081682230513612376731058197900820380914247688360049152906855525071639682048377145839103957609377714707719996675230706669321219428162692467324558094099599975868966359717071320779088929152605016542346699384011376930722440028896866096433708622612880431237575976995549426585399554650551399842593587963267758910127885708120359104171691736586089614188198196403067253458139734883446766648674330236607203272574691987391068966666586806995593618443807684047062115622841653991664284445314132632263661187734217623134159115481886205370089744580113873","r":{"dateissued":"18859023741018797872038815229638117026310339435744972607910760746976197568986451324307784659205603164866675762626845593584383953972951170576488223929403145953405880160997837014576916783672289014577491803877405955021543305639943207054834276533724888622816572222212002817434521247029102961171038131491016993683945958422904951967972242721815515956951687914783455532817412140497820261587057222074602535598277491573901466789858112285556636463931043202870509835082348016849346871822417355851938877835473162167541963027783714110369668288318655034153675621000872099879442600835618083660187178225685391119538793895918988690951","master_secret":"38018101519921364727663368811618364961198439828773774963837808691300389099073641171173405972255390297743591226127198243269040440391331382005419723386460723507508748134326215218108079487747310689655719830220233038870395851200615467976988479364617945744009175380255178291443316837400065778174525671555554858846963660754273049900258540789750490659565596066796144609195933532365732229205176649943186753690388273648613883847077543436939447724144311053713620313478922939433052250159704813019931470611137912845604761954056274516499163256212589424003418836016270513452406523634776192214967795359655752585855421903408811504820","name":"36972881227678226440524799834715449272905068152296041598298656344868823425822182142795341444521792489486865867678420406707813366601225310068973916314294496409888578098137466321037329183322105661346445057074775952226980306807756318820908180989553261280373209427144589281724427550334494051418908462936434249924425014938135365683029473367852494388771701690499555627259602163694165048703404978943387681274632934879094520963711354499009945634348271392433647603995327488071723814413654420116984500071622022838652865117264689191402593903686138105531309317348858688060431554155935932858240155529478495227551673149659583878367","university":"85116886009283016587228837585185311801589234072532060179339162055691896259340973464378227116173921589574143079368170380064143315961104464737805257104371227573987632118021149596346336106979223046724507249243729298609587976484591179974141219437072662798348044620985302987585711515763230783304102509425352385088810988130856153145777680332189971409522233277037621493075538751179102002174462822864033520018868896075058926153340905166677380284040336304204116434323400415636380662101070808244622574958353942889060506400005103199810764605894756304090121203262515557730788468189763417280558801085969455488137667032138426499258"},"rctxt":"72626192235856995713273878588635875503481156228369835798223682595862896495927599478785691456386732961699963442191790521351546847893842544331284577466655322900390546674081030387374194070100367944808152504857990896324240085608833289560880701109409966502178884502922967259001538262028100840388335398150175296461704717640987560280776117404108475362814709228233187171804851053778460491440104978266175123106542827674110607437222663300473774884530762942299317232900017062741820195136922938188215927090888278399065229552785414585240736808133545586693839331647692030044269603072142186291558337525917277699344952583144729625821","s":"81015554602046261170194441766593713402652953400350870565114032770101449194297729670972477002174582485434108371542070977617557550121283690070154003153465127142412492947796621604600610943420608021996428452150207616569073697990519854557474268872609763827715371234014675999148925758192510809298846373459463897569613243987836413106444130079827991856407108661830455636123140979595080835420673872438643970902637587408616587774476369311312702638678399091209309062417365872445535935878731892209908961704038522600004246100600971609868679635382295155855245796766811360326275356141899810243775065920199349268650268063905993595880","z":"51405307349344473067543426140468250092978855391487837047919159448408306062742488977366371466579706875599220069757479535367208213512828381608544912208283492410837784787782762642642861456735914591395012090431192866710568924623222136268204112035067662953104257210546855663474292551899072591301630322930203349354091168912443214512040520480983018735448811935672679905506225871744898385465084434247135025413977137413227467339209144247099296863360895679895363096178564770291071017904729821236003386032365050793392320240962960327650486516536201676196280265057090339600515877691397338416693239305406465297046578191629345668206"}},"identifier":"LibindyDid111111111111","reqId":1621255304026787456,"seqNo":12,"txnTime":1621255084,"state_proof":{"root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","multi_signature":{"signature":"RStTBauNqLyaZMM4Q2dXnDZb9sycR73n8xCen6MhQvjKSxGbArW2KRhfjCds89hmQQsvsTNN3ErR8Q89adR8BwzEUFnkLyEWtL7cB7peSKby6pR7RPK3RoGNQeJoZJcyoPZgtj3JRYHZsPALZTazYGPzSdZF7qEHdMc5yAHJNWpkib","participants":["Node1","Node3","Node4"],"value":{"ledger_id":1,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","timestamp":1621255110,"txn_root_hash":"33Qn7LL4eu98k6KpZb2KcVvxbHXJiyWLqx2xuPDraijy"}},"proof_nodes":"+RYq+DmXFqblhRY2o5VkxGamNVYnREVlpaelY6OgSTB4yxlMGlDPjmivX37ZhuDvpLa\\/YfeYipaqOzTw7474kYCAgKBEqR+trIkK+QqI5+NvWpBpc9bTacOGUIZN2zZjiB6wPICgv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSiegv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSieAgICAoL8QgC6a78sPnRhjdbUStwqlPP4TOGrPyYC4FAYtN\\/A9gICAgID4cYCg5ZUcauzc0SNjlc9zNTOsh2N9\\/r5zC\\/sCdf8x5S2AVgqgC8atJ8a\\/kPsxJ3lQ4cf7N3Nou8Lxc4btUeqg8FQ7aLegqQOaP7RADF6l\\/BbN9VBCxAM85GugTmTPKwcKctp6oGqAgICAgICAgICAgICA+RPzjyA6Q0w6MTA6ZGVmYXVsdLkT4PkT3bkT2nsibHNuIjoxMiwibHV0IjoxNjIxMjU1MDg0LCJ2YWwiOnsicHJpbWFyeSI6eyJuIjoiOTQzOTU3ODk5MTgyMzEyMjgxNTQwOTE3ODU1ODYyMDg4NDM3Njg1Nzg2MTE4NDc0MDYzMDM2NDI2NTE1ODY4OTEzMjA5MzA5MjEyMjI1NzcwODE2ODIyMzA1MTM2MTIzNzY3MzEwNTgxOTc5MDA4MjAzODA5MTQyNDc2ODgzNjAwNDkxNTI5MDY4NTU1MjUwNzE2Mzk2ODIwNDgzNzcxNDU4MzkxMDM5NTc2MDkzNzc3MTQ3MDc3MTk5OTY2NzUyMzA3MDY2NjkzMjEyMTk0MjgxNjI2OTI0NjczMjQ1NTgwOTQwOTk1OTk5NzU4Njg5NjYzNTk3MTcwNzEzMjA3NzkwODg5MjkxNTI2MDUwMTY1NDIzNDY2OTkzODQwMTEzNzY5MzA3MjI0NDAwMjg4OTY4NjYwOTY0MzM3MDg2MjI2MTI4ODA0MzEyMzc1NzU5NzY5OTU1NDk0MjY1ODUzOTk1NTQ2NTA1NTEzOTk4NDI1OTM1ODc5NjMyNjc3NTg5MTAxMjc4ODU3MDgxMjAzNTkxMDQxNzE2OTE3MzY1ODYwODk2MTQxODgxOTgxOTY0MDMwNjcyNTM0NTgxMzk3MzQ4ODM0NDY3NjY2NDg2NzQzMzAyMzY2MDcyMDMyNzI1NzQ2OTE5ODczOTEwNjg5NjY2NjY1ODY4MDY5OTU1OTM2MTg0NDM4MDc2ODQwNDcwNjIxMTU2MjI4NDE2NTM5OTE2NjQyODQ0NDUzMTQxMzI2MzIyNjM2NjExODc3MzQyMTc2MjMxMzQxNTkxMTU0ODE4ODYyMDUzNzAwODk3NDQ1ODAxMTM4NzMiLCJyIjp7ImRhdGVpc3N1ZWQiOiIxODg1OTAyMzc0MTAxODc5Nzg3MjAzODgxNTIyOTYzODExNzAyNjMxMDMzOTQzNTc0NDk3MjYwNzkxMDc2MDc0Njk3NjE5NzU2ODk4NjQ1MTMyNDMwNzc4NDY1OTIwNTYwMzE2NDg2NjY3NTc2MjYyNjg0NTU5MzU4NDM4Mzk1Mzk3Mjk1MTE3MDU3NjQ4ODIyMzkyOTQwMzE0NTk1MzQwNTg4MDE2MDk5NzgzNzAxNDU3NjkxNjc4MzY3MjI4OTAxNDU3NzQ5MTgwMzg3NzQwNTk1NTAyMTU0MzMwNTYzOTk0MzIwNzA1NDgzNDI3NjUzMzcyNDg4ODYyMjgxNjU3MjIyMjIxMjAwMjgxNzQzNDUyMTI0NzAyOTEwMjk2MTE3MTAzODEzMTQ5MTAxNjk5MzY4Mzk0NTk1ODQyMjkwNDk1MTk2Nzk3MjI0MjcyMTgxNTUxNTk1Njk1MTY4NzkxNDc4MzQ1NTUzMjgxNzQxMjE0MDQ5NzgyMDI2MTU4NzA1NzIyMjA3NDYwMjUzNTU5ODI3NzQ5MTU3MzkwMTQ2Njc4OTg1ODExMjI4NTU1NjYzNjQ2MzkzMTA0MzIwMjg3MDUwOTgzNTA4MjM0ODAxNjg0OTM0Njg3MTgyMjQxNzM1NTg1MTkzODg3NzgzNTQ3MzE2MjE2NzU0MTk2MzAyNzc4MzcxNDExMDM2OTY2ODI4ODMxODY1NTAzNDE1MzY3NTYyMTAwMDg3MjA5OTg3OTQ0MjYwMDgzNTYxODA4MzY2MDE4NzE3ODIyNTY4NTM5MTExOTUzODc5Mzg5NTkxODk4ODY5MDk1MSIsIm1hc3Rlcl9zZWNyZXQiOiIzODAxODEwMTUxOTkyMTM2NDcyNzY2MzM2ODgxMTYxODM2NDk2MTE5ODQzOTgyODc3Mzc3NDk2MzgzNzgwODY5MTMwMDM4OTA5OTA3MzY0MTE3MTE3MzQwNTk3MjI1NTM5MDI5Nzc0MzU5MTIyNjEyNzE5ODI0MzI2OTA0MDQ0MDM5MTMzMTM4MjAwNTQxOTcyMzM4NjQ2MDcyMzUwNzUwODc0ODEzNDMyNjIxNTIxODEwODA3OTQ4Nzc0NzMxMDY4OTY1NTcxOTgzMDIyMDIzMzAzODg3MDM5NTg1MTIwMDYxNTQ2Nzk3Njk4ODQ3OTM2NDYxNzk0NTc0NDAwOTE3NTM4MDI1NTE3ODI5MTQ0MzMxNjgzNzQwMDA2NTc3ODE3NDUyNTY3MTU1NTU1NDg1ODg0Njk2MzY2MDc1NDI3MzA0OTkwMDI1ODU0MDc4OTc1MDQ5MDY1OTU2NTU5NjA2Njc5NjE0NDYwOTE5NTkzMzUzMjM2NTczMjIyOTIwNTE3NjY0OTk0MzE4Njc1MzY5MDM4ODI3MzY0ODYxMzg4Mzg0NzA3NzU0MzQzNjkzOTQ0NzcyNDE0NDMxMTA1MzcxMzYyMDMxMzQ3ODkyMjkzOTQzMzA1MjI1MDE1OTcwNDgxMzAxOTkzMTQ3MDYxMTEzNzkxMjg0NTYwNDc2MTk1NDA1NjI3NDUxNjQ5OTE2MzI1NjIxMjU4OTQyNDAwMzQxODgzNjAxNjI3MDUxMzQ1MjQwNjUyMzYzNDc3NjE5MjIxNDk2Nzc5NTM1OTY1NTc1MjU4NTg1NTQyMTkwMzQwODgxMTUwNDgyMCIsIm5hbWUiOiIzNjk3Mjg4MTIyNzY3ODIyNjQ0MDUyNDc5OTgzNDcxNTQ0OTI3MjkwNTA2ODE1MjI5NjA0MTU5ODI5ODY1NjM0NDg2ODgyMzQyNTgyMjE4MjE0Mjc5NTM0MTQ0NDUyMTc5MjQ4OTQ4Njg2NTg2NzY3ODQyMDQwNjcwNzgxMzM2NjYwMTIyNTMxMDA2ODk3MzkxNjMxNDI5NDQ5NjQwOTg4ODU3ODA5ODEzNzQ2NjMyMTAzNzMyOTE4MzMyMjEwNTY2MTM0NjQ0NTA1NzA3NDc3NTk1MjIyNjk4MDMwNjgwNzc1NjMxODgyMDkwODE4MDk4OTU1MzI2MTI4MDM3MzIwOTQyNzE0NDU4OTI4MTcyNDQyNzU1MDMzNDQ5NDA1MTQxODkwODQ2MjkzNjQzNDI0OTkyNDQyNTAxNDkzODEzNTM2NTY4MzAyOTQ3MzM2Nzg1MjQ5NDM4ODc3MTcwMTY5MDQ5OTU1NTYyNzI1OTYwMjE2MzY5NDE2NTA0ODcwMzQwNDk3ODk0MzM4NzY4MTI3NDYzMjkzNDg3OTA5NDUyMDk2MzcxMTM1NDQ5OTAwOTk0NTYzNDM0ODI3MTM5MjQzMzY0NzYwMzk5NTMyNzQ4ODA3MTcyMzgxNDQxMzY1NDQyMDExNjk4NDUwMDA3MTYyMjAyMjgzODY1Mjg2NTExNzI2NDY4OTE5MTQwMjU5MzkwMzY4NjEzODEwNTUzMTMwOTMxNzM0ODg1ODY4ODA2MDQzMTU1NDE1NTkzNTkzMjg1ODI0MDE1NTUyOTQ3ODQ5NTIyNzU1MTY3MzE0OTY1OTU4Mzg3ODM2NyIsInVuaXZlcnNpdHkiOiI4NTExNjg4NjAwOTI4MzAxNjU4NzIyODgzNzU4NTE4NTMxMTgwMTU4OTIzNDA3MjUzMjA2MDE3OTMzOTE2MjA1NTY5MTg5NjI1OTM0MDk3MzQ2NDM3ODIyNzExNjE3MzkyMTU4OTU3NDE0MzA3OTM2ODE3MDM4MDA2NDE0MzMxNTk2MTEwNDQ2NDczNzgwNTI1NzEwNDM3MTIyNzU3Mzk4NzYzMjExODAyMTE0OTU5NjM0NjMzNjEwNjk3OTIyMzA0NjcyNDUwNzI0OTI0MzcyOTI5ODYwOTU4Nzk3NjQ4NDU5MTE3OTk3NDE0MTIxOTQzNzA3MjY2Mjc5ODM0ODA0NDYyMDk4NTMwMjk4NzU4NTcxMTUxNTc2MzIzMDc4MzMwNDEwMjUwOTQyNTM1MjM4NTA4ODgxMDk4ODEzMDg1NjE1MzE0NTc3NzY4MDMzMjE4OTk3MTQwOTUyMjIzMzI3NzAzNzYyMTQ5MzA3NTUzODc1MTE3OTEwMjAwMjE3NDQ2MjgyMjg2NDAzMzUyMDAxODg2ODg5NjA3NTA1ODkyNjE1MzM0MDkwNTE2NjY3NzM4MDI4NDA0MDMzNjMwNDIwNDExNjQzNDMyMzQwMDQxNTYzNjM4MDY2MjEwMTA3MDgwODI0NDYyMjU3NDk1ODM1Mzk0Mjg4OTA2MDUwNjQwMDAwNTEwMzE5OTgxMDc2NDYwNTg5NDc1NjMwNDA5MDEyMTIwMzI2MjUxNTU1NzczMDc4ODQ2ODE4OTc2MzQxNzI4MDU1ODgwMTA4NTk2OTQ1NTQ4ODEzNzY2NzAzMjEzODQyNjQ5OTI1OCJ9LCJyY3R4dCI6IjcyNjI2MTkyMjM1ODU2OTk1NzEzMjczODc4NTg4NjM1ODc1NTAzNDgxMTU2MjI4MzY5ODM1Nzk4MjIzNjgyNTk1ODYyODk2NDk1OTI3NTk5NDc4Nzg1NjkxNDU2Mzg2NzMyOTYxNjk5OTYzNDQyMTkxNzkwNTIxMzUxNTQ2ODQ3ODkzODQyNTQ0MzMxMjg0NTc3NDY2NjU1MzIyOTAwMzkwNTQ2Njc0MDgxMDMwMzg3Mzc0MTk0MDcwMTAwMzY3OTQ0ODA4MTUyNTA0ODU3OTkwODk2MzI0MjQwMDg1NjA4ODMzMjg5NTYwODgwNzAxMTA5NDA5OTY2NTAyMTc4ODg0NTAyOTIyOTY3MjU5MDAxNTM4MjYyMDI4MTAwODQwMzg4MzM1Mzk4MTUwMTc1Mjk2NDYxNzA0NzE3NjQwOTg3NTYwMjgwNzc2MTE3NDA0MTA4NDc1MzYyODE0NzA5MjI4MjMzMTg3MTcxODA0ODUxMDUzNzc4NDYwNDkxNDQwMTA0OTc4MjY2MTc1MTIzMTA2NTQyODI3Njc0MTEwNjA3NDM3MjIyNjYzMzAwNDczNzc0ODg0NTMwNzYyOTQyMjk5MzE3MjMyOTAwMDE3MDYyNzQxODIwMTk1MTM2OTIyOTM4MTg4MjE1OTI3MDkwODg4Mjc4Mzk5MDY1MjI5NTUyNzg1NDE0NTg1MjQwNzM2ODA4MTMzNTQ1NTg2NjkzODM5MzMxNjQ3NjkyMDMwMDQ0MjY5NjAzMDcyMTQyMTg2MjkxNTU4MzM3NTI1OTE3Mjc3Njk5MzQ0OTUyNTgzMTQ0NzI5NjI1ODIxIiwicyI6IjgxMDE1NTU0NjAyMDQ2MjYxMTcwMTk0NDQxNzY2NTkzNzEzNDAyNjUyOTUzNDAwMzUwODcwNTY1MTE0MDMyNzcwMTAxNDQ5MTk0Mjk3NzI5NjcwOTcyNDc3MDAyMTc0NTgyNDg1NDM0MTA4MzcxNTQyMDcwOTc3NjE3NTU3NTUwMTIxMjgzNjkwMDcwMTU0MDAzMTUzNDY1MTI3MTQyNDEyNDkyOTQ3Nzk2NjIxNjA0NjAwNjEwOTQzNDIwNjA4MDIxOTk2NDI4NDUyMTUwMjA3NjE2NTY5MDczNjk3OTkwNTE5ODU0NTU3NDc0MjY4ODcyNjA5NzYzODI3NzE1MzcxMjM0MDE0Njc1OTk5MTQ4OTI1NzU4MTkyNTEwODA5Mjk4ODQ2MzczNDU5NDYzODk3NTY5NjEzMjQzOTg3ODM2NDEzMTA2NDQ0MTMwMDc5ODI3OTkxODU2NDA3MTA4NjYxODMwNDU1NjM2MTIzMTQwOTc5NTk1MDgwODM1NDIwNjczODcyNDM4NjQzOTcwOTAyNjM3NTg3NDA4NjE2NTg3Nzc0NDc2MzY5MzExMzEyNzAyNjM4Njc4Mzk5MDkxMjA5MzA5MDYyNDE3MzY1ODcyNDQ1NTM1OTM1ODc4NzMxODkyMjA5OTA4OTYxNzA0MDM4NTIyNjAwMDA0MjQ2MTAwNjAwOTcxNjA5ODY4Njc5NjM1MzgyMjk1MTU1ODU1MjQ1Nzk2NzY2ODExMzYwMzI2Mjc1MzU2MTQxODk5ODEwMjQzNzc1MDY1OTIwMTk5MzQ5MjY4NjUwMjY4MDYzOTA1OTkzNTk1ODgwIiwieiI6IjUxNDA1MzA3MzQ5MzQ0NDczMDY3NTQzNDI2MTQwNDY4MjUwMDkyOTc4ODU1MzkxNDg3ODM3MDQ3OTE5MTU5NDQ4NDA4MzA2MDYyNzQyNDg4OTc3MzY2MzcxNDY2NTc5NzA2ODc1NTk5MjIwMDY5NzU3NDc5NTM1MzY3MjA4MjEzNTEyODI4MzgxNjA4NTQ0OTEyMjA4MjgzNDkyNDEwODM3Nzg0Nzg3NzgyNzYyNjQyNjQyODYxNDU2NzM1OTE0NTkxMzk1MDEyMDkwNDMxMTkyODY2NzEwNTY4OTI0NjIzMjIyMTM2MjY4MjA0MTEyMDM1MDY3NjYyOTUzMTA0MjU3MjEwNTQ2ODU1NjYzNDc0MjkyNTUxODk5MDcyNTkxMzAxNjMwMzIyOTMwMjAzMzQ5MzU0MDkxMTY4OTEyNDQzMjE0NTEyMDQwNTIwNDgwOTgzMDE4NzM1NDQ4ODExOTM1NjcyNjc5OTA1NTA2MjI1ODcxNzQ0ODk4Mzg1NDY1MDg0NDM0MjQ3MTM1MDI1NDEzOTc3MTM3NDEzMjI3NDY3MzM5MjA5MTQ0MjQ3MDk5Mjk2ODYzMzYwODk1Njc5ODk1MzYzMDk2MTc4NTY0NzcwMjkxMDcxMDE3OTA0NzI5ODIxMjM2MDAzMzg2MDMyMzY1MDUwNzkzMzkyMzIwMjQwOTYyOTYwMzI3NjUwNDg2NTE2NTM2MjAxNjc2MTk2MjgwMjY1MDU3MDkwMzM5NjAwNTE1ODc3NjkxMzk3MzM4NDE2NjkzMjM5MzA1NDA2NDY1Mjk3MDQ2NTc4MTkxNjI5MzQ1NjY4MjA2In19ffjxoNPSP24JsVps7QufK62cHm4MLrVBpYu1VMlThcJrixajoFiHYK69G3VM22wpOgdo++T8vpiatvplsRjwGewwYJACgKDAQxK1RpIpFb8a3Dz2ZzDFhSsUNJVfjkOhoPtHMxbhrICgwDNthfqgNkQUeYeFg+tc40ZJfJNVDhpusCPyR4Gi8K6g4Szt8zqF22990QYL2QT79AgN5zWTeWQvUfakse0mY56AgICAgICgSPFxE7GIAdYVFQHY6GY9m5Fi6UqwOZuEC3Vx+Yrja9GAoDs6GXxRL8inD2b3RY1v\\/ufksDHNqfFKaK2MEIjNIZwagA=="}}}'
parse_get_cred_def_response: >>> get_cred_def_response: '{"op":"REPLY","result":{"type":"108","ref":10,"signature_type":"CL","origin":"3jnXQcj9VLFjcUbtDVZZzV","tag":"default","data":{"primary":{"n":"94395789918231228154091785586208843768578611847406303642651586891320930921222577081682230513612376731058197900820380914247688360049152906855525071639682048377145839103957609377714707719996675230706669321219428162692467324558094099599975868966359717071320779088929152605016542346699384011376930722440028896866096433708622612880431237575976995549426585399554650551399842593587963267758910127885708120359104171691736586089614188198196403067253458139734883446766648674330236607203272574691987391068966666586806995593618443807684047062115622841653991664284445314132632263661187734217623134159115481886205370089744580113873","r":{"dateissued":"18859023741018797872038815229638117026310339435744972607910760746976197568986451324307784659205603164866675762626845593584383953972951170576488223929403145953405880160997837014576916783672289014577491803877405955021543305639943207054834276533724888622816572222212002817434521247029102961171038131491016993683945958422904951967972242721815515956951687914783455532817412140497820261587057222074602535598277491573901466789858112285556636463931043202870509835082348016849346871822417355851938877835473162167541963027783714110369668288318655034153675621000872099879442600835618083660187178225685391119538793895918988690951","master_secret":"38018101519921364727663368811618364961198439828773774963837808691300389099073641171173405972255390297743591226127198243269040440391331382005419723386460723507508748134326215218108079487747310689655719830220233038870395851200615467976988479364617945744009175380255178291443316837400065778174525671555554858846963660754273049900258540789750490659565596066796144609195933532365732229205176649943186753690388273648613883847077543436939447724144311053713620313478922939433052250159704813019931470611137912845604761954056274516499163256212589424003418836016270513452406523634776192214967795359655752585855421903408811504820","name":"36972881227678226440524799834715449272905068152296041598298656344868823425822182142795341444521792489486865867678420406707813366601225310068973916314294496409888578098137466321037329183322105661346445057074775952226980306807756318820908180989553261280373209427144589281724427550334494051418908462936434249924425014938135365683029473367852494388771701690499555627259602163694165048703404978943387681274632934879094520963711354499009945634348271392433647603995327488071723814413654420116984500071622022838652865117264689191402593903686138105531309317348858688060431554155935932858240155529478495227551673149659583878367","university":"85116886009283016587228837585185311801589234072532060179339162055691896259340973464378227116173921589574143079368170380064143315961104464737805257104371227573987632118021149596346336106979223046724507249243729298609587976484591179974141219437072662798348044620985302987585711515763230783304102509425352385088810988130856153145777680332189971409522233277037621493075538751179102002174462822864033520018868896075058926153340905166677380284040336304204116434323400415636380662101070808244622574958353942889060506400005103199810764605894756304090121203262515557730788468189763417280558801085969455488137667032138426499258"},"rctxt":"72626192235856995713273878588635875503481156228369835798223682595862896495927599478785691456386732961699963442191790521351546847893842544331284577466655322900390546674081030387374194070100367944808152504857990896324240085608833289560880701109409966502178884502922967259001538262028100840388335398150175296461704717640987560280776117404108475362814709228233187171804851053778460491440104978266175123106542827674110607437222663300473774884530762942299317232900017062741820195136922938188215927090888278399065229552785414585240736808133545586693839331647692030044269603072142186291558337525917277699344952583144729625821","s":"81015554602046261170194441766593713402652953400350870565114032770101449194297729670972477002174582485434108371542070977617557550121283690070154003153465127142412492947796621604600610943420608021996428452150207616569073697990519854557474268872609763827715371234014675999148925758192510809298846373459463897569613243987836413106444130079827991856407108661830455636123140979595080835420673872438643970902637587408616587774476369311312702638678399091209309062417365872445535935878731892209908961704038522600004246100600971609868679635382295155855245796766811360326275356141899810243775065920199349268650268063905993595880","z":"51405307349344473067543426140468250092978855391487837047919159448408306062742488977366371466579706875599220069757479535367208213512828381608544912208283492410837784787782762642642861456735914591395012090431192866710568924623222136268204112035067662953104257210546855663474292551899072591301630322930203349354091168912443214512040520480983018735448811935672679905506225871744898385465084434247135025413977137413227467339209144247099296863360895679895363096178564770291071017904729821236003386032365050793392320240962960327650486516536201676196280265057090339600515877691397338416693239305406465297046578191629345668206"}},"identifier":"LibindyDid111111111111","reqId":1621255304026787456,"seqNo":12,"txnTime":1621255084,"state_proof":{"root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","multi_signature":{"signature":"RStTBauNqLyaZMM4Q2dXnDZb9sycR73n8xCen6MhQvjKSxGbArW2KRhfjCds89hmQQsvsTNN3ErR8Q89adR8BwzEUFnkLyEWtL7cB7peSKby6pR7RPK3RoGNQeJoZJcyoPZgtj3JRYHZsPALZTazYGPzSdZF7qEHdMc5yAHJNWpkib","participants":["Node1","Node3","Node4"],"value":{"ledger_id":1,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","timestamp":1621255110,"txn_root_hash":"33Qn7LL4eu98k6KpZb2KcVvxbHXJiyWLqx2xuPDraijy"}},"proof_nodes":"+RYq+DmXFqblhRY2o5VkxGamNVYnREVlpaelY6OgSTB4yxlMGlDPjmivX37ZhuDvpLa\\/YfeYipaqOzTw7474kYCAgKBEqR+trIkK+QqI5+NvWpBpc9bTacOGUIZN2zZjiB6wPICgv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSiegv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSieAgICAoL8QgC6a78sPnRhjdbUStwqlPP4TOGrPyYC4FAYtN\\/A9gICAgID4cYCg5ZUcauzc0SNjlc9zNTOsh2N9\\/r5zC\\/sCdf8x5S2AVgqgC8atJ8a\\/kPsxJ3lQ4cf7N3Nou8Lxc4btUeqg8FQ7aLegqQOaP7RADF6l\\/BbN9VBCxAM85GugTmTPKwcKctp6oGqAgICAgICAgICAgICA+RPzjyA6Q0w6MTA6ZGVmYXVsdLkT4PkT3bkT2nsibHNuIjoxMiwibHV0IjoxNjIxMjU1MDg0LCJ2YWwiOnsicHJpbWFyeSI6eyJuIjoiOTQzOTU3ODk5MTgyMzEyMjgxNTQwOTE3ODU1ODYyMDg4NDM3Njg1Nzg2MTE4NDc0MDYzMDM2NDI2NTE1ODY4OTEzMjA5MzA5MjEyMjI1NzcwODE2ODIyMzA1MTM2MTIzNzY3MzEwNTgxOTc5MDA4MjAzODA5MTQyNDc2ODgzNjAwNDkxNTI5MDY4NTU1MjUwNzE2Mzk2ODIwNDgzNzcxNDU4MzkxMDM5NTc2MDkzNzc3MTQ3MDc3MTk5OTY2NzUyMzA3MDY2NjkzMjEyMTk0MjgxNjI2OTI0NjczMjQ1NTgwOTQwOTk1OTk5NzU4Njg5NjYzNTk3MTcwNzEzMjA3NzkwODg5MjkxNTI2MDUwMTY1NDIzNDY2OTkzODQwMTEzNzY5MzA3MjI0NDAwMjg4OTY4NjYwOTY0MzM3MDg2MjI2MTI4ODA0MzEyMzc1NzU5NzY5OTU1NDk0MjY1ODUzOTk1NTQ2NTA1NTEzOTk4NDI1OTM1ODc5NjMyNjc3NTg5MTAxMjc4ODU3MDgxMjAzNTkxMDQxNzE2OTE3MzY1ODYwODk2MTQxODgxOTgxOTY0MDMwNjcyNTM0NTgxMzk3MzQ4ODM0NDY3NjY2NDg2NzQzMzAyMzY2MDcyMDMyNzI1NzQ2OTE5ODczOTEwNjg5NjY2NjY1ODY4MDY5OTU1OTM2MTg0NDM4MDc2ODQwNDcwNjIxMTU2MjI4NDE2NTM5OTE2NjQyODQ0NDUzMTQxMzI2MzIyNjM2NjExODc3MzQyMTc2MjMxMzQxNTkxMTU0ODE4ODYyMDUzNzAwODk3NDQ1ODAxMTM4NzMiLCJyIjp7ImRhdGVpc3N1ZWQiOiIxODg1OTAyMzc0MTAxODc5Nzg3MjAzODgxNTIyOTYzODExNzAyNjMxMDMzOTQzNTc0NDk3MjYwNzkxMDc2MDc0Njk3NjE5NzU2ODk4NjQ1MTMyNDMwNzc4NDY1OTIwNTYwMzE2NDg2NjY3NTc2MjYyNjg0NTU5MzU4NDM4Mzk1Mzk3Mjk1MTE3MDU3NjQ4ODIyMzkyOTQwMzE0NTk1MzQwNTg4MDE2MDk5NzgzNzAxNDU3NjkxNjc4MzY3MjI4OTAxNDU3NzQ5MTgwMzg3NzQwNTk1NTAyMTU0MzMwNTYzOTk0MzIwNzA1NDgzNDI3NjUzMzcyNDg4ODYyMjgxNjU3MjIyMjIxMjAwMjgxNzQzNDUyMTI0NzAyOTEwMjk2MTE3MTAzODEzMTQ5MTAxNjk5MzY4Mzk0NTk1ODQyMjkwNDk1MTk2Nzk3MjI0MjcyMTgxNTUxNTk1Njk1MTY4NzkxNDc4MzQ1NTUzMjgxNzQxMjE0MDQ5NzgyMDI2MTU4NzA1NzIyMjA3NDYwMjUzNTU5ODI3NzQ5MTU3MzkwMTQ2Njc4OTg1ODExMjI4NTU1NjYzNjQ2MzkzMTA0MzIwMjg3MDUwOTgzNTA4MjM0ODAxNjg0OTM0Njg3MTgyMjQxNzM1NTg1MTkzODg3NzgzNTQ3MzE2MjE2NzU0MTk2MzAyNzc4MzcxNDExMDM2OTY2ODI4ODMxODY1NTAzNDE1MzY3NTYyMTAwMDg3MjA5OTg3OTQ0MjYwMDgzNTYxODA4MzY2MDE4NzE3ODIyNTY4NTM5MTExOTUzODc5Mzg5NTkxODk4ODY5MDk1MSIsIm1hc3Rlcl9zZWNyZXQiOiIzODAxODEwMTUxOTkyMTM2NDcyNzY2MzM2ODgxMTYxODM2NDk2MTE5ODQzOTgyODc3Mzc3NDk2MzgzNzgwODY5MTMwMDM4OTA5OTA3MzY0MTE3MTE3MzQwNTk3MjI1NTM5MDI5Nzc0MzU5MTIyNjEyNzE5ODI0MzI2OTA0MDQ0MDM5MTMzMTM4MjAwNTQxOTcyMzM4NjQ2MDcyMzUwNzUwODc0ODEzNDMyNjIxNTIxODEwODA3OTQ4Nzc0NzMxMDY4OTY1NTcxOTgzMDIyMDIzMzAzODg3MDM5NTg1MTIwMDYxNTQ2Nzk3Njk4ODQ3OTM2NDYxNzk0NTc0NDAwOTE3NTM4MDI1NTE3ODI5MTQ0MzMxNjgzNzQwMDA2NTc3ODE3NDUyNTY3MTU1NTU1NDg1ODg0Njk2MzY2MDc1NDI3MzA0OTkwMDI1ODU0MDc4OTc1MDQ5MDY1OTU2NTU5NjA2Njc5NjE0NDYwOTE5NTkzMzUzMjM2NTczMjIyOTIwNTE3NjY0OTk0MzE4Njc1MzY5MDM4ODI3MzY0ODYxMzg4Mzg0NzA3NzU0MzQzNjkzOTQ0NzcyNDE0NDMxMTA1MzcxMzYyMDMxMzQ3ODkyMjkzOTQzMzA1MjI1MDE1OTcwNDgxMzAxOTkzMTQ3MDYxMTEzNzkxMjg0NTYwNDc2MTk1NDA1NjI3NDUxNjQ5OTE2MzI1NjIxMjU4OTQyNDAwMzQxODgzNjAxNjI3MDUxMzQ1MjQwNjUyMzYzNDc3NjE5MjIxNDk2Nzc5NTM1OTY1NTc1MjU4NTg1NTQyMTkwMzQwODgxMTUwNDgyMCIsIm5hbWUiOiIzNjk3Mjg4MTIyNzY3ODIyNjQ0MDUyNDc5OTgzNDcxNTQ0OTI3MjkwNTA2ODE1MjI5NjA0MTU5ODI5ODY1NjM0NDg2ODgyMzQyNTgyMjE4MjE0Mjc5NTM0MTQ0NDUyMTc5MjQ4OTQ4Njg2NTg2NzY3ODQyMDQwNjcwNzgxMzM2NjYwMTIyNTMxMDA2ODk3MzkxNjMxNDI5NDQ5NjQwOTg4ODU3ODA5ODEzNzQ2NjMyMTAzNzMyOTE4MzMyMjEwNTY2MTM0NjQ0NTA1NzA3NDc3NTk1MjIyNjk4MDMwNjgwNzc1NjMxODgyMDkwODE4MDk4OTU1MzI2MTI4MDM3MzIwOTQyNzE0NDU4OTI4MTcyNDQyNzU1MDMzNDQ5NDA1MTQxODkwODQ2MjkzNjQzNDI0OTkyNDQyNTAxNDkzODEzNTM2NTY4MzAyOTQ3MzM2Nzg1MjQ5NDM4ODc3MTcwMTY5MDQ5OTU1NTYyNzI1OTYwMjE2MzY5NDE2NTA0ODcwMzQwNDk3ODk0MzM4NzY4MTI3NDYzMjkzNDg3OTA5NDUyMDk2MzcxMTM1NDQ5OTAwOTk0NTYzNDM0ODI3MTM5MjQzMzY0NzYwMzk5NTMyNzQ4ODA3MTcyMzgxNDQxMzY1NDQyMDExNjk4NDUwMDA3MTYyMjAyMjgzODY1Mjg2NTExNzI2NDY4OTE5MTQwMjU5MzkwMzY4NjEzODEwNTUzMTMwOTMxNzM0ODg1ODY4ODA2MDQzMTU1NDE1NTkzNTkzMjg1ODI0MDE1NTUyOTQ3ODQ5NTIyNzU1MTY3MzE0OTY1OTU4Mzg3ODM2NyIsInVuaXZlcnNpdHkiOiI4NTExNjg4NjAwOTI4MzAxNjU4NzIyODgzNzU4NTE4NTMxMTgwMTU4OTIzNDA3MjUzMjA2MDE3OTMzOTE2MjA1NTY5MTg5NjI1OTM0MDk3MzQ2NDM3ODIyNzExNjE3MzkyMTU4OTU3NDE0MzA3OTM2ODE3MDM4MDA2NDE0MzMxNTk2MTEwNDQ2NDczNzgwNTI1NzEwNDM3MTIyNzU3Mzk4NzYzMjExODAyMTE0OTU5NjM0NjMzNjEwNjk3OTIyMzA0NjcyNDUwNzI0OTI0MzcyOTI5ODYwOTU4Nzk3NjQ4NDU5MTE3OTk3NDE0MTIxOTQzNzA3MjY2Mjc5ODM0ODA0NDYyMDk4NTMwMjk4NzU4NTcxMTUxNTc2MzIzMDc4MzMwNDEwMjUwOTQyNTM1MjM4NTA4ODgxMDk4ODEzMDg1NjE1MzE0NTc3NzY4MDMzMjE4OTk3MTQwOTUyMjIzMzI3NzAzNzYyMTQ5MzA3NTUzODc1MTE3OTEwMjAwMjE3NDQ2MjgyMjg2NDAzMzUyMDAxODg2ODg5NjA3NTA1ODkyNjE1MzM0MDkwNTE2NjY3NzM4MDI4NDA0MDMzNjMwNDIwNDExNjQzNDMyMzQwMDQxNTYzNjM4MDY2MjEwMTA3MDgwODI0NDYyMjU3NDk1ODM1Mzk0Mjg4OTA2MDUwNjQwMDAwNTEwMzE5OTgxMDc2NDYwNTg5NDc1NjMwNDA5MDEyMTIwMzI2MjUxNTU1NzczMDc4ODQ2ODE4OTc2MzQxNzI4MDU1ODgwMTA4NTk2OTQ1NTQ4ODEzNzY2NzAzMjEzODQyNjQ5OTI1OCJ9LCJyY3R4dCI6IjcyNjI2MTkyMjM1ODU2OTk1NzEzMjczODc4NTg4NjM1ODc1NTAzNDgxMTU2MjI4MzY5ODM1Nzk4MjIzNjgyNTk1ODYyODk2NDk1OTI3NTk5NDc4Nzg1NjkxNDU2Mzg2NzMyOTYxNjk5OTYzNDQyMTkxNzkwNTIxMzUxNTQ2ODQ3ODkzODQyNTQ0MzMxMjg0NTc3NDY2NjU1MzIyOTAwMzkwNTQ2Njc0MDgxMDMwMzg3Mzc0MTk0MDcwMTAwMzY3OTQ0ODA4MTUyNTA0ODU3OTkwODk2MzI0MjQwMDg1NjA4ODMzMjg5NTYwODgwNzAxMTA5NDA5OTY2NTAyMTc4ODg0NTAyOTIyOTY3MjU5MDAxNTM4MjYyMDI4MTAwODQwMzg4MzM1Mzk4MTUwMTc1Mjk2NDYxNzA0NzE3NjQwOTg3NTYwMjgwNzc2MTE3NDA0MTA4NDc1MzYyODE0NzA5MjI4MjMzMTg3MTcxODA0ODUxMDUzNzc4NDYwNDkxNDQwMTA0OTc4MjY2MTc1MTIzMTA2NTQyODI3Njc0MTEwNjA3NDM3MjIyNjYzMzAwNDczNzc0ODg0NTMwNzYyOTQyMjk5MzE3MjMyOTAwMDE3MDYyNzQxODIwMTk1MTM2OTIyOTM4MTg4MjE1OTI3MDkwODg4Mjc4Mzk5MDY1MjI5NTUyNzg1NDE0NTg1MjQwNzM2ODA4MTMzNTQ1NTg2NjkzODM5MzMxNjQ3NjkyMDMwMDQ0MjY5NjAzMDcyMTQyMTg2MjkxNTU4MzM3NTI1OTE3Mjc3Njk5MzQ0OTUyNTgzMTQ0NzI5NjI1ODIxIiwicyI6IjgxMDE1NTU0NjAyMDQ2MjYxMTcwMTk0NDQxNzY2NTkzNzEzNDAyNjUyOTUzNDAwMzUwODcwNTY1MTE0MDMyNzcwMTAxNDQ5MTk0Mjk3NzI5NjcwOTcyNDc3MDAyMTc0NTgyNDg1NDM0MTA4MzcxNTQyMDcwOTc3NjE3NTU3NTUwMTIxMjgzNjkwMDcwMTU0MDAzMTUzNDY1MTI3MTQyNDEyNDkyOTQ3Nzk2NjIxNjA0NjAwNjEwOTQzNDIwNjA4MDIxOTk2NDI4NDUyMTUwMjA3NjE2NTY5MDczNjk3OTkwNTE5ODU0NTU3NDc0MjY4ODcyNjA5NzYzODI3NzE1MzcxMjM0MDE0Njc1OTk5MTQ4OTI1NzU4MTkyNTEwODA5Mjk4ODQ2MzczNDU5NDYzODk3NTY5NjEzMjQzOTg3ODM2NDEzMTA2NDQ0MTMwMDc5ODI3OTkxODU2NDA3MTA4NjYxODMwNDU1NjM2MTIzMTQwOTc5NTk1MDgwODM1NDIwNjczODcyNDM4NjQzOTcwOTAyNjM3NTg3NDA4NjE2NTg3Nzc0NDc2MzY5MzExMzEyNzAyNjM4Njc4Mzk5MDkxMjA5MzA5MDYyNDE3MzY1ODcyNDQ1NTM1OTM1ODc4NzMxODkyMjA5OTA4OTYxNzA0MDM4NTIyNjAwMDA0MjQ2MTAwNjAwOTcxNjA5ODY4Njc5NjM1MzgyMjk1MTU1ODU1MjQ1Nzk2NzY2ODExMzYwMzI2Mjc1MzU2MTQxODk5ODEwMjQzNzc1MDY1OTIwMTk5MzQ5MjY4NjUwMjY4MDYzOTA1OTkzNTk1ODgwIiwieiI6IjUxNDA1MzA3MzQ5MzQ0NDczMDY3NTQzNDI2MTQwNDY4MjUwMDkyOTc4ODU1MzkxNDg3ODM3MDQ3OTE5MTU5NDQ4NDA4MzA2MDYyNzQyNDg4OTc3MzY2MzcxNDY2NTc5NzA2ODc1NTk5MjIwMDY5NzU3NDc5NTM1MzY3MjA4MjEzNTEyODI4MzgxNjA4NTQ0OTEyMjA4MjgzNDkyNDEwODM3Nzg0Nzg3NzgyNzYyNjQyNjQyODYxNDU2NzM1OTE0NTkxMzk1MDEyMDkwNDMxMTkyODY2NzEwNTY4OTI0NjIzMjIyMTM2MjY4MjA0MTEyMDM1MDY3NjYyOTUzMTA0MjU3MjEwNTQ2ODU1NjYzNDc0MjkyNTUxODk5MDcyNTkxMzAxNjMwMzIyOTMwMjAzMzQ5MzU0MDkxMTY4OTEyNDQzMjE0NTEyMDQwNTIwNDgwOTgzMDE4NzM1NDQ4ODExOTM1NjcyNjc5OTA1NTA2MjI1ODcxNzQ0ODk4Mzg1NDY1MDg0NDM0MjQ3MTM1MDI1NDEzOTc3MTM3NDEzMjI3NDY3MzM5MjA5MTQ0MjQ3MDk5Mjk2ODYzMzYwODk1Njc5ODk1MzYzMDk2MTc4NTY0NzcwMjkxMDcxMDE3OTA0NzI5ODIxMjM2MDAzMzg2MDMyMzY1MDUwNzkzMzkyMzIwMjQwOTYyOTYwMzI3NjUwNDg2NTE2NTM2MjAxNjc2MTk2MjgwMjY1MDU3MDkwMzM5NjAwNTE1ODc3NjkxMzk3MzM4NDE2NjkzMjM5MzA1NDA2NDY1Mjk3MDQ2NTc4MTkxNjI5MzQ1NjY4MjA2In19ffjxoNPSP24JsVps7QufK62cHm4MLrVBpYu1VMlThcJrixajoFiHYK69G3VM22wpOgdo++T8vpiatvplsRjwGewwYJACgKDAQxK1RpIpFb8a3Dz2ZzDFhSsUNJVfjkOhoPtHMxbhrICgwDNthfqgNkQUeYeFg+tc40ZJfJNVDhpusCPyR4Gi8K6g4Szt8zqF22990QYL2QT79AgN5zWTeWQvUfakse0mY56AgICAgICgSPFxE7GIAdYVFQHY6GY9m5Fi6UqwOZuEC3Vx+Yrja9GAoDs6GXxRL8inD2b3RY1v\\/ufksDHNqfFKaK2MEIjNIZwagA=="}}}'
parse_get_cred_def_response: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99ef83750>
do_call: >>> name: indy_parse_get_cred_def_response, args: (c_char_p(94095652686800), <CFunctionType object at 0x7fd99ef83750>)
do_call: Function indy_parse_get_cred_def_response returned err: 0
do_call: <<< <Future pending>
	src/services/ledger/mod.rs:458 | parse_response() => Ok(ReplyV0(ReplyV0 { result: GetCredDefReplyResultV0(GetCredDefResultV0 { identifier: ShortDidValue("LibindyDid111111111111"), ref_: 10, seq_no: 12, signature_type: CL, origin: ShortDidValue("3jnXQcj9VLFjcUbtDVZZzV"), tag: Some("default"), data: CredentialDefinitionData { primary: CredentialPrimaryPublicKey { n: BigNumber { openssl_bn: 94395789918231228154091785586208843768578611847406303642651586891320930921222577081682230513612376731058197900820380914247688360049152906855525071639682048377145839103957609377714707719996675230706669321219428162692467324558094099599975868966359717071320779088929152605016542346699384011376930722440028896866096433708622612880431237575976995549426585399554650551399842593587963267758910127885708120359104171691736586089614188198196403067253458139734883446766648674330236607203272574691987391068966666586806995593618443807684047062115622841653991664284445314132632263661187734217623134159115481886205370089744580113873 }, s: BigNumber { openssl_bn: 81015554602046261170194441766593713402652953400350870565114032770101449194297729670972477002174582485434108371542070977617557550121283690070154003153465127142412492947796621604600610943420608021996428452150207616569073697990519854557474268872609763827715371234014675999148925758192510809298846373459463897569613243987836413106444130079827991856407108661830455636123140979595080835420673872438643970902637587408616587774476369311312702638678399091209309062417365872445535935878731892209908961704038522600004246100600971609868679635382295155855245796766811360326275356141899810243775065920199349268650268063905993595880 }, r: {"dateissued": BigNumber { openssl_bn: 18859023741018797872038815229638117026310339435744972607910760746976197568986451324307784659205603164866675762626845593584383953972951170576488223929403145953405880160997837014576916783672289014577491803877405955021543305639943207054834276533724888622816572222212002817434521247029102961171038131491016993683945958422904951967972242721815515956951687914783455532817412140497820261587057222074602535598277491573901466789858112285556636463931043202870509835082348016849346871822417355851938877835473162167541963027783714110369668288318655034153675621000872099879442600835618083660187178225685391119538793895918988690951 }, "master_secret": BigNumber { openssl_bn: 38018101519921364727663368811618364961198439828773774963837808691300389099073641171173405972255390297743591226127198243269040440391331382005419723386460723507508748134326215218108079487747310689655719830220233038870395851200615467976988479364617945744009175380255178291443316837400065778174525671555554858846963660754273049900258540789750490659565596066796144609195933532365732229205176649943186753690388273648613883847077543436939447724144311053713620313478922939433052250159704813019931470611137912845604761954056274516499163256212589424003418836016270513452406523634776192214967795359655752585855421903408811504820 }, "name": BigNumber { openssl_bn: 36972881227678226440524799834715449272905068152296041598298656344868823425822182142795341444521792489486865867678420406707813366601225310068973916314294496409888578098137466321037329183322105661346445057074775952226980306807756318820908180989553261280373209427144589281724427550334494051418908462936434249924425014938135365683029473367852494388771701690499555627259602163694165048703404978943387681274632934879094520963711354499009945634348271392433647603995327488071723814413654420116984500071622022838652865117264689191402593903686138105531309317348858688060431554155935932858240155529478495227551673149659583878367 }, "university": BigNumber { openssl_bn: 85116886009283016587228837585185311801589234072532060179339162055691896259340973464378227116173921589574143079368170380064143315961104464737805257104371227573987632118021149596346336106979223046724507249243729298609587976484591179974141219437072662798348044620985302987585711515763230783304102509425352385088810988130856153145777680332189971409522233277037621493075538751179102002174462822864033520018868896075058926153340905166677380284040336304204116434323400415636380662101070808244622574958353942889060506400005103199810764605894756304090121203262515557730788468189763417280558801085969455488137667032138426499258 }}, rctxt: BigNumber { openssl_bn: 72626192235856995713273878588635875503481156228369835798223682595862896495927599478785691456386732961699963442191790521351546847893842544331284577466655322900390546674081030387374194070100367944808152504857990896324240085608833289560880701109409966502178884502922967259001538262028100840388335398150175296461704717640987560280776117404108475362814709228233187171804851053778460491440104978266175123106542827674110607437222663300473774884530762942299317232900017062741820195136922938188215927090888278399065229552785414585240736808133545586693839331647692030044269603072142186291558337525917277699344952583144729625821 }, z: BigNumber { openssl_bn: 51405307349344473067543426140468250092978855391487837047919159448408306062742488977366371466579706875599220069757479535367208213512828381608544912208283492410837784787782762642642861456735914591395012090431192866710568924623222136268204112035067662953104257210546855663474292551899072591301630322930203349354091168912443214512040520480983018735448811935672679905506225871744898385465084434247135025413977137413227467339209144247099296863360895679895363096178564770291071017904729821236003386032365050793392320240962960327650486516536201676196280265057090339600515877691397338416693239305406465297046578191629345668206 } }, revocation: None } }) }))
	src/services/ledger/mod.rs:293 | parse_get_cred_def_response() => Ok(("3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "{\"ver\":\"1.0\",\"id\":\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\",\"schemaId\":\"10\",\"type\":\"CL\",\"tag\":\"default\",\"value\":{\"primary\":{\"n\":\"94395789918231228154091785586208843768578611847406303642651586891320930921222577081682230513612376731058197900820380914247688360049152906855525071639682048377145839103957609377714707719996675230706669321219428162692467324558094099599975868966359717071320779088929152605016542346699384011376930722440028896866096433708622612880431237575976995549426585399554650551399842593587963267758910127885708120359104171691736586089614188198196403067253458139734883446766648674330236607203272574691987391068966666586806995593618443807684047062115622841653991664284445314132632263661187734217623134159115481886205370089744580113873\",\"s\":\"81015554602046261170194441766593713402652953400350870565114032770101449194297729670972477002174582485434108371542070977617557550121283690070154003153465127142412492947796621604600610943420608021996428452150207616569073697990519854557474268872609763827715371234014675999148925758192510809298846373459463897569613243987836413106444130079827991856407108661830455636123140979595080835420673872438643970902637587408616587774476369311312702638678399091209309062417365872445535935878731892209908961704038522600004246100600971609868679635382295155855245796766811360326275356141899810243775065920199349268650268063905993595880\",\"r\":{\"dateissued\":\"18859023741018797872038815229638117026310339435744972607910760746976197568986451324307784659205603164866675762626845593584383953972951170576488223929403145953405880160997837014576916783672289014577491803877405955021543305639943207054834276533724888622816572222212002817434521247029102961171038131491016993683945958422904951967972242721815515956951687914783455532817412140497820261587057222074602535598277491573901466789858112285556636463931043202870509835082348016849346871822417355851938877835473162167541963027783714110369668288318655034153675621000872099879442600835618083660187178225685391119538793895918988690951\",\"master_secret\":\"38018101519921364727663368811618364961198439828773774963837808691300389099073641171173405972255390297743591226127198243269040440391331382005419723386460723507508748134326215218108079487747310689655719830220233038870395851200615467976988479364617945744009175380255178291443316837400065778174525671555554858846963660754273049900258540789750490659565596066796144609195933532365732229205176649943186753690388273648613883847077543436939447724144311053713620313478922939433052250159704813019931470611137912845604761954056274516499163256212589424003418836016270513452406523634776192214967795359655752585855421903408811504820\",\"name\":\"36972881227678226440524799834715449272905068152296041598298656344868823425822182142795341444521792489486865867678420406707813366601225310068973916314294496409888578098137466321037329183322105661346445057074775952226980306807756318820908180989553261280373209427144589281724427550334494051418908462936434249924425014938135365683029473367852494388771701690499555627259602163694165048703404978943387681274632934879094520963711354499009945634348271392433647603995327488071723814413654420116984500071622022838652865117264689191402593903686138105531309317348858688060431554155935932858240155529478495227551673149659583878367\",\"university\":\"85116886009283016587228837585185311801589234072532060179339162055691896259340973464378227116173921589574143079368170380064143315961104464737805257104371227573987632118021149596346336106979223046724507249243729298609587976484591179974141219437072662798348044620985302987585711515763230783304102509425352385088810988130856153145777680332189971409522233277037621493075538751179102002174462822864033520018868896075058926153340905166677380284040336304204116434323400415636380662101070808244622574958353942889060506400005103199810764605894756304090121203262515557730788468189763417280558801085969455488137667032138426499258\"},\"rctxt\":\"72626192235856995713273878588635875503481156228369835798223682595862896495927599478785691456386732961699963442191790521351546847893842544331284577466655322900390546674081030387374194070100367944808152504857990896324240085608833289560880701109409966502178884502922967259001538262028100840388335398150175296461704717640987560280776117404108475362814709228233187171804851053778460491440104978266175123106542827674110607437222663300473774884530762942299317232900017062741820195136922938188215927090888278399065229552785414585240736808133545586693839331647692030044269603072142186291558337525917277699344952583144729625821\",\"z\":\"51405307349344473067543426140468250092978855391487837047919159448408306062742488977366371466579706875599220069757479535367208213512828381608544912208283492410837784787782762642642861456735914591395012090431192866710568924623222136268204112035067662953104257210546855663474292551899072591301630322930203349354091168912443214512040520480983018735448811935672679905506225871744898385465084434247135025413977137413227467339209144247099296863360895679895363096178564770291071017904729821236003386032365050793392320240962960327650486516536201676196280265057090339600515877691397338416693239305406465297046578191629345668206\"}}}"))
_indy_callback: >>> command_handle: 87, err , args: (b'3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default', b'{"ver":"1.0","id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","schemaId":"10","type":"CL","tag":"default","value":{"primary":{"n":"94395789918231228154091785586208843768578611847406303642651586891320930921222577081682230513612376731058197900820380914247688360049152906855525071639682048377145839103957609377714707719996675230706669321219428162692467324558094099599975868966359717071320779088929152605016542346699384011376930722440028896866096433708622612880431237575976995549426585399554650551399842593587963267758910127885708120359104171691736586089614188198196403067253458139734883446766648674330236607203272574691987391068966666586806995593618443807684047062115622841653991664284445314132632263661187734217623134159115481886205370089744580113873","s":"81015554602046261170194441766593713402652953400350870565114032770101449194297729670972477002174582485434108371542070977617557550121283690070154003153465127142412492947796621604600610943420608021996428452150207616569073697990519854557474268872609763827715371234014675999148925758192510809298846373459463897569613243987836413106444130079827991856407108661830455636123140979595080835420673872438643970902637587408616587774476369311312702638678399091209309062417365872445535935878731892209908961704038522600004246100600971609868679635382295155855245796766811360326275356141899810243775065920199349268650268063905993595880","r":{"dateissued":"18859023741018797872038815229638117026310339435744972607910760746976197568986451324307784659205603164866675762626845593584383953972951170576488223929403145953405880160997837014576916783672289014577491803877405955021543305639943207054834276533724888622816572222212002817434521247029102961171038131491016993683945958422904951967972242721815515956951687914783455532817412140497820261587057222074602535598277491573901466789858112285556636463931043202870509835082348016849346871822417355851938877835473162167541963027783714110369668288318655034153675621000872099879442600835618083660187178225685391119538793895918988690951","master_secret":"38018101519921364727663368811618364961198439828773774963837808691300389099073641171173405972255390297743591226127198243269040440391331382005419723386460723507508748134326215218108079487747310689655719830220233038870395851200615467976988479364617945744009175380255178291443316837400065778174525671555554858846963660754273049900258540789750490659565596066796144609195933532365732229205176649943186753690388273648613883847077543436939447724144311053713620313478922939433052250159704813019931470611137912845604761954056274516499163256212589424003418836016270513452406523634776192214967795359655752585855421903408811504820","name":"36972881227678226440524799834715449272905068152296041598298656344868823425822182142795341444521792489486865867678420406707813366601225310068973916314294496409888578098137466321037329183322105661346445057074775952226980306807756318820908180989553261280373209427144589281724427550334494051418908462936434249924425014938135365683029473367852494388771701690499555627259602163694165048703404978943387681274632934879094520963711354499009945634348271392433647603995327488071723814413654420116984500071622022838652865117264689191402593903686138105531309317348858688060431554155935932858240155529478495227551673149659583878367","university":"85116886009283016587228837585185311801589234072532060179339162055691896259340973464378227116173921589574143079368170380064143315961104464737805257104371227573987632118021149596346336106979223046724507249243729298609587976484591179974141219437072662798348044620985302987585711515763230783304102509425352385088810988130856153145777680332189971409522233277037621493075538751179102002174462822864033520018868896075058926153340905166677380284040336304204116434323400415636380662101070808244622574958353942889060506400005103199810764605894756304090121203262515557730788468189763417280558801085969455488137667032138426499258"},"rctxt":"72626192235856995713273878588635875503481156228369835798223682595862896495927599478785691456386732961699963442191790521351546847893842544331284577466655322900390546674081030387374194070100367944808152504857990896324240085608833289560880701109409966502178884502922967259001538262028100840388335398150175296461704717640987560280776117404108475362814709228233187171804851053778460491440104978266175123106542827674110607437222663300473774884530762942299317232900017062741820195136922938188215927090888278399065229552785414585240736808133545586693839331647692030044269603072142186291558337525917277699344952583144729625821","z":"51405307349344473067543426140468250092978855391487837047919159448408306062742488977366371466579706875599220069757479535367208213512828381608544912208283492410837784787782762642642861456735914591395012090431192866710568924623222136268204112035067662953104257210546855663474292551899072591301630322930203349354091168912443214512040520480983018735448811935672679905506225871744898385465084434247135025413977137413227467339209144247099296863360895679895363096178564770291071017904729821236003386032365050793392320240962960327650486516536201676196280265057090339600515877691397338416693239305406465297046578191629345668206"}}}')
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 87, err , args: (b'3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default', b'{"ver":"1.0","id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","schemaId":"10","type":"CL","tag":"default","value":{"primary":{"n":"94395789918231228154091785586208843768578611847406303642651586891320930921222577081682230513612376731058197900820380914247688360049152906855525071639682048377145839103957609377714707719996675230706669321219428162692467324558094099599975868966359717071320779088929152605016542346699384011376930722440028896866096433708622612880431237575976995549426585399554650551399842593587963267758910127885708120359104171691736586089614188198196403067253458139734883446766648674330236607203272574691987391068966666586806995593618443807684047062115622841653991664284445314132632263661187734217623134159115481886205370089744580113873","s":"81015554602046261170194441766593713402652953400350870565114032770101449194297729670972477002174582485434108371542070977617557550121283690070154003153465127142412492947796621604600610943420608021996428452150207616569073697990519854557474268872609763827715371234014675999148925758192510809298846373459463897569613243987836413106444130079827991856407108661830455636123140979595080835420673872438643970902637587408616587774476369311312702638678399091209309062417365872445535935878731892209908961704038522600004246100600971609868679635382295155855245796766811360326275356141899810243775065920199349268650268063905993595880","r":{"dateissued":"18859023741018797872038815229638117026310339435744972607910760746976197568986451324307784659205603164866675762626845593584383953972951170576488223929403145953405880160997837014576916783672289014577491803877405955021543305639943207054834276533724888622816572222212002817434521247029102961171038131491016993683945958422904951967972242721815515956951687914783455532817412140497820261587057222074602535598277491573901466789858112285556636463931043202870509835082348016849346871822417355851938877835473162167541963027783714110369668288318655034153675621000872099879442600835618083660187178225685391119538793895918988690951","master_secret":"38018101519921364727663368811618364961198439828773774963837808691300389099073641171173405972255390297743591226127198243269040440391331382005419723386460723507508748134326215218108079487747310689655719830220233038870395851200615467976988479364617945744009175380255178291443316837400065778174525671555554858846963660754273049900258540789750490659565596066796144609195933532365732229205176649943186753690388273648613883847077543436939447724144311053713620313478922939433052250159704813019931470611137912845604761954056274516499163256212589424003418836016270513452406523634776192214967795359655752585855421903408811504820","name":"36972881227678226440524799834715449272905068152296041598298656344868823425822182142795341444521792489486865867678420406707813366601225310068973916314294496409888578098137466321037329183322105661346445057074775952226980306807756318820908180989553261280373209427144589281724427550334494051418908462936434249924425014938135365683029473367852494388771701690499555627259602163694165048703404978943387681274632934879094520963711354499009945634348271392433647603995327488071723814413654420116984500071622022838652865117264689191402593903686138105531309317348858688060431554155935932858240155529478495227551673149659583878367","university":"85116886009283016587228837585185311801589234072532060179339162055691896259340973464378227116173921589574143079368170380064143315961104464737805257104371227573987632118021149596346336106979223046724507249243729298609587976484591179974141219437072662798348044620985302987585711515763230783304102509425352385088810988130856153145777680332189971409522233277037621493075538751179102002174462822864033520018868896075058926153340905166677380284040336304204116434323400415636380662101070808244622574958353942889060506400005103199810764605894756304090121203262515557730788468189763417280558801085969455488137667032138426499258"},"rctxt":"72626192235856995713273878588635875503481156228369835798223682595862896495927599478785691456386732961699963442191790521351546847893842544331284577466655322900390546674081030387374194070100367944808152504857990896324240085608833289560880701109409966502178884502922967259001538262028100840388335398150175296461704717640987560280776117404108475362814709228233187171804851053778460491440104978266175123106542827674110607437222663300473774884530762942299317232900017062741820195136922938188215927090888278399065229552785414585240736808133545586693839331647692030044269603072142186291558337525917277699344952583144729625821","z":"51405307349344473067543426140468250092978855391487837047919159448408306062742488977366371466579706875599220069757479535367208213512828381608544912208283492410837784787782762642642861456735914591395012090431192866710568924623222136268204112035067662953104257210546855663474292551899072591301630322930203349354091168912443214512040520480983018735448811935672679905506225871744898385465084434247135025413977137413227467339209144247099296863360895679895363096178564770291071017904729821236003386032365050793392320240962960327650486516536201676196280265057090339600515877691397338416693239305406465297046578191629345668206"}}}')
_indy_loop_callback: Function returned (b'3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default', b'{"ver":"1.0","id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","schemaId":"10","type":"CL","tag":"default","value":{"primary":{"n":"94395789918231228154091785586208843768578611847406303642651586891320930921222577081682230513612376731058197900820380914247688360049152906855525071639682048377145839103957609377714707719996675230706669321219428162692467324558094099599975868966359717071320779088929152605016542346699384011376930722440028896866096433708622612880431237575976995549426585399554650551399842593587963267758910127885708120359104171691736586089614188198196403067253458139734883446766648674330236607203272574691987391068966666586806995593618443807684047062115622841653991664284445314132632263661187734217623134159115481886205370089744580113873","s":"81015554602046261170194441766593713402652953400350870565114032770101449194297729670972477002174582485434108371542070977617557550121283690070154003153465127142412492947796621604600610943420608021996428452150207616569073697990519854557474268872609763827715371234014675999148925758192510809298846373459463897569613243987836413106444130079827991856407108661830455636123140979595080835420673872438643970902637587408616587774476369311312702638678399091209309062417365872445535935878731892209908961704038522600004246100600971609868679635382295155855245796766811360326275356141899810243775065920199349268650268063905993595880","r":{"dateissued":"18859023741018797872038815229638117026310339435744972607910760746976197568986451324307784659205603164866675762626845593584383953972951170576488223929403145953405880160997837014576916783672289014577491803877405955021543305639943207054834276533724888622816572222212002817434521247029102961171038131491016993683945958422904951967972242721815515956951687914783455532817412140497820261587057222074602535598277491573901466789858112285556636463931043202870509835082348016849346871822417355851938877835473162167541963027783714110369668288318655034153675621000872099879442600835618083660187178225685391119538793895918988690951","master_secret":"38018101519921364727663368811618364961198439828773774963837808691300389099073641171173405972255390297743591226127198243269040440391331382005419723386460723507508748134326215218108079487747310689655719830220233038870395851200615467976988479364617945744009175380255178291443316837400065778174525671555554858846963660754273049900258540789750490659565596066796144609195933532365732229205176649943186753690388273648613883847077543436939447724144311053713620313478922939433052250159704813019931470611137912845604761954056274516499163256212589424003418836016270513452406523634776192214967795359655752585855421903408811504820","name":"36972881227678226440524799834715449272905068152296041598298656344868823425822182142795341444521792489486865867678420406707813366601225310068973916314294496409888578098137466321037329183322105661346445057074775952226980306807756318820908180989553261280373209427144589281724427550334494051418908462936434249924425014938135365683029473367852494388771701690499555627259602163694165048703404978943387681274632934879094520963711354499009945634348271392433647603995327488071723814413654420116984500071622022838652865117264689191402593903686138105531309317348858688060431554155935932858240155529478495227551673149659583878367","university":"85116886009283016587228837585185311801589234072532060179339162055691896259340973464378227116173921589574143079368170380064143315961104464737805257104371227573987632118021149596346336106979223046724507249243729298609587976484591179974141219437072662798348044620985302987585711515763230783304102509425352385088810988130856153145777680332189971409522233277037621493075538751179102002174462822864033520018868896075058926153340905166677380284040336304204116434323400415636380662101070808244622574958353942889060506400005103199810764605894756304090121203262515557730788468189763417280558801085969455488137667032138426499258"},"rctxt":"72626192235856995713273878588635875503481156228369835798223682595862896495927599478785691456386732961699963442191790521351546847893842544331284577466655322900390546674081030387374194070100367944808152504857990896324240085608833289560880701109409966502178884502922967259001538262028100840388335398150175296461704717640987560280776117404108475362814709228233187171804851053778460491440104978266175123106542827674110607437222663300473774884530762942299317232900017062741820195136922938188215927090888278399065229552785414585240736808133545586693839331647692030044269603072142186291558337525917277699344952583144729625821","z":"51405307349344473067543426140468250092978855391487837047919159448408306062742488977366371466579706875599220069757479535367208213512828381608544912208283492410837784787782762642642861456735914591395012090431192866710568924623222136268204112035067662953104257210546855663474292551899072591301630322930203349354091168912443214512040520480983018735448811935672679905506225871744898385465084434247135025413977137413227467339209144247099296863360895679895363096178564770291071017904729821236003386032365050793392320240962960327650486516536201676196280265057090339600515877691397338416693239305406465297046578191629345668206"}}}')
_indy_loop_callback <<<
parse_get_cred_def_response: <<< res: ('3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default', '{"ver":"1.0","id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","schemaId":"10","type":"CL","tag":"default","value":{"primary":{"n":"94395789918231228154091785586208843768578611847406303642651586891320930921222577081682230513612376731058197900820380914247688360049152906855525071639682048377145839103957609377714707719996675230706669321219428162692467324558094099599975868966359717071320779088929152605016542346699384011376930722440028896866096433708622612880431237575976995549426585399554650551399842593587963267758910127885708120359104171691736586089614188198196403067253458139734883446766648674330236607203272574691987391068966666586806995593618443807684047062115622841653991664284445314132632263661187734217623134159115481886205370089744580113873","s":"81015554602046261170194441766593713402652953400350870565114032770101449194297729670972477002174582485434108371542070977617557550121283690070154003153465127142412492947796621604600610943420608021996428452150207616569073697990519854557474268872609763827715371234014675999148925758192510809298846373459463897569613243987836413106444130079827991856407108661830455636123140979595080835420673872438643970902637587408616587774476369311312702638678399091209309062417365872445535935878731892209908961704038522600004246100600971609868679635382295155855245796766811360326275356141899810243775065920199349268650268063905993595880","r":{"dateissued":"18859023741018797872038815229638117026310339435744972607910760746976197568986451324307784659205603164866675762626845593584383953972951170576488223929403145953405880160997837014576916783672289014577491803877405955021543305639943207054834276533724888622816572222212002817434521247029102961171038131491016993683945958422904951967972242721815515956951687914783455532817412140497820261587057222074602535598277491573901466789858112285556636463931043202870509835082348016849346871822417355851938877835473162167541963027783714110369668288318655034153675621000872099879442600835618083660187178225685391119538793895918988690951","master_secret":"38018101519921364727663368811618364961198439828773774963837808691300389099073641171173405972255390297743591226127198243269040440391331382005419723386460723507508748134326215218108079487747310689655719830220233038870395851200615467976988479364617945744009175380255178291443316837400065778174525671555554858846963660754273049900258540789750490659565596066796144609195933532365732229205176649943186753690388273648613883847077543436939447724144311053713620313478922939433052250159704813019931470611137912845604761954056274516499163256212589424003418836016270513452406523634776192214967795359655752585855421903408811504820","name":"36972881227678226440524799834715449272905068152296041598298656344868823425822182142795341444521792489486865867678420406707813366601225310068973916314294496409888578098137466321037329183322105661346445057074775952226980306807756318820908180989553261280373209427144589281724427550334494051418908462936434249924425014938135365683029473367852494388771701690499555627259602163694165048703404978943387681274632934879094520963711354499009945634348271392433647603995327488071723814413654420116984500071622022838652865117264689191402593903686138105531309317348858688060431554155935932858240155529478495227551673149659583878367","university":"85116886009283016587228837585185311801589234072532060179339162055691896259340973464378227116173921589574143079368170380064143315961104464737805257104371227573987632118021149596346336106979223046724507249243729298609587976484591179974141219437072662798348044620985302987585711515763230783304102509425352385088810988130856153145777680332189971409522233277037621493075538751179102002174462822864033520018868896075058926153340905166677380284040336304204116434323400415636380662101070808244622574958353942889060506400005103199810764605894756304090121203262515557730788468189763417280558801085969455488137667032138426499258"},"rctxt":"72626192235856995713273878588635875503481156228369835798223682595862896495927599478785691456386732961699963442191790521351546847893842544331284577466655322900390546674081030387374194070100367944808152504857990896324240085608833289560880701109409966502178884502922967259001538262028100840388335398150175296461704717640987560280776117404108475362814709228233187171804851053778460491440104978266175123106542827674110607437222663300473774884530762942299317232900017062741820195136922938188215927090888278399065229552785414585240736808133545586693839331647692030044269603072142186291558337525917277699344952583144729625821","z":"51405307349344473067543426140468250092978855391487837047919159448408306062742488977366371466579706875599220069757479535367208213512828381608544912208283492410837784787782762642642861456735914591395012090431192866710568924623222136268204112035067662953104257210546855663474292551899072591301630322930203349354091168912443214512040520480983018735448811935672679905506225871744898385465084434247135025413977137413227467339209144247099296863360895679895363096178564770291071017904729821236003386032365050793392320240962960327650486516536201676196280265057090339600515877691397338416693239305406465297046578191629345668206"}}}')
prover_create_credential_req: >>> wallet_handle: 3, prover_did: 'Ss9L55FVLDVAE9wH9QUaLm', cred_offer_json: '{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "key_correctness_proof": {"c": "107747385423523632115836196578250990474250248043120793044857578887670452863909", "xz_cap": "1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694", "xr_cap": [["name", "2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993"], ["university", "405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652"], ["dateissued", "2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451"], ["master_secret", "1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202"]]}, "nonce": "598069920933476898638215"}', cred_def_json: '{"ver": "1.0", "id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "schemaId": "10", "type": "CL", "tag": "default", "value": {"primary": {"n": "94395789918231228154091785586208843768578611847406303642651586891320930921222577081682230513612376731058197900820380914247688360049152906855525071639682048377145839103957609377714707719996675230706669321219428162692467324558094099599975868966359717071320779088929152605016542346699384011376930722440028896866096433708622612880431237575976995549426585399554650551399842593587963267758910127885708120359104171691736586089614188198196403067253458139734883446766648674330236607203272574691987391068966666586806995593618443807684047062115622841653991664284445314132632263661187734217623134159115481886205370089744580113873", "s": "81015554602046261170194441766593713402652953400350870565114032770101449194297729670972477002174582485434108371542070977617557550121283690070154003153465127142412492947796621604600610943420608021996428452150207616569073697990519854557474268872609763827715371234014675999148925758192510809298846373459463897569613243987836413106444130079827991856407108661830455636123140979595080835420673872438643970902637587408616587774476369311312702638678399091209309062417365872445535935878731892209908961704038522600004246100600971609868679635382295155855245796766811360326275356141899810243775065920199349268650268063905993595880", "r": {"dateissued": "18859023741018797872038815229638117026310339435744972607910760746976197568986451324307784659205603164866675762626845593584383953972951170576488223929403145953405880160997837014576916783672289014577491803877405955021543305639943207054834276533724888622816572222212002817434521247029102961171038131491016993683945958422904951967972242721815515956951687914783455532817412140497820261587057222074602535598277491573901466789858112285556636463931043202870509835082348016849346871822417355851938877835473162167541963027783714110369668288318655034153675621000872099879442600835618083660187178225685391119538793895918988690951", "master_secret": "38018101519921364727663368811618364961198439828773774963837808691300389099073641171173405972255390297743591226127198243269040440391331382005419723386460723507508748134326215218108079487747310689655719830220233038870395851200615467976988479364617945744009175380255178291443316837400065778174525671555554858846963660754273049900258540789750490659565596066796144609195933532365732229205176649943186753690388273648613883847077543436939447724144311053713620313478922939433052250159704813019931470611137912845604761954056274516499163256212589424003418836016270513452406523634776192214967795359655752585855421903408811504820", "name": "36972881227678226440524799834715449272905068152296041598298656344868823425822182142795341444521792489486865867678420406707813366601225310068973916314294496409888578098137466321037329183322105661346445057074775952226980306807756318820908180989553261280373209427144589281724427550334494051418908462936434249924425014938135365683029473367852494388771701690499555627259602163694165048703404978943387681274632934879094520963711354499009945634348271392433647603995327488071723814413654420116984500071622022838652865117264689191402593903686138105531309317348858688060431554155935932858240155529478495227551673149659583878367", "university": "85116886009283016587228837585185311801589234072532060179339162055691896259340973464378227116173921589574143079368170380064143315961104464737805257104371227573987632118021149596346336106979223046724507249243729298609587976484591179974141219437072662798348044620985302987585711515763230783304102509425352385088810988130856153145777680332189971409522233277037621493075538751179102002174462822864033520018868896075058926153340905166677380284040336304204116434323400415636380662101070808244622574958353942889060506400005103199810764605894756304090121203262515557730788468189763417280558801085969455488137667032138426499258"}, "rctxt": "72626192235856995713273878588635875503481156228369835798223682595862896495927599478785691456386732961699963442191790521351546847893842544331284577466655322900390546674081030387374194070100367944808152504857990896324240085608833289560880701109409966502178884502922967259001538262028100840388335398150175296461704717640987560280776117404108475362814709228233187171804851053778460491440104978266175123106542827674110607437222663300473774884530762942299317232900017062741820195136922938188215927090888278399065229552785414585240736808133545586693839331647692030044269603072142186291558337525917277699344952583144729625821", "z": "51405307349344473067543426140468250092978855391487837047919159448408306062742488977366371466579706875599220069757479535367208213512828381608544912208283492410837784787782762642642861456735914591395012090431192866710568924623222136268204112035067662953104257210546855663474292551899072591301630322930203349354091168912443214512040520480983018735448811935672679905506225871744898385465084434247135025413977137413227467339209144247099296863360895679895363096178564770291071017904729821236003386032365050793392320240962960327650486516536201676196280265057090339600515877691397338416693239305406465297046578191629345668206"}}}', master_secret_id: 'Medic'
prover_create_credential_req: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99ef839a8>
do_call: >>> name: indy_prover_create_credential_req, args: (c_int(3), c_char_p(140573376557016), c_char_p(94095652598496), c_char_p(94095652633648), c_char_p(140573273221072), <CFunctionType object at 0x7fd99ef839a8>)
do_call: Function indy_prover_create_credential_req returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[100, 113, 48, 53, 106, 66, 78, 103, 108, 69, 82, 51, 67, 111, 114, 107, 116, 119, 90, 113, 113, 68, 104, 113, 122, 47, 100, 82, 122, 119, 104, 83, 88, 52, 78, 51, 98, 69, 48, 106, 72, 115, 71, 114, 77, 98, 100, 122, 101, 97, 54, 113, 49, 114, 110, 79, 72, 72, 87, 69, 110, 103, 61, 61], [47, 100, 108, 54, 104, 47, 82, 105, 102, 83, 78, 84, 105, 75, 105, 111, 113, 68, 107, 119, 87, 51, 47, 65, 53, 69, 74, 72, 86, 50, 71, 114, 85, 79, 81, 87, 55, 111, 112, 98, 69, 104, 57, 72], "Medic"]
_indy_callback: >>> command_handle: 88, err , args: (b'{"prover_did":"Ss9L55FVLDVAE9wH9QUaLm","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","blinded_ms":{"u":"9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526","ur":null,"hidden_attributes":["master_secret"],"committed_attributes":{}},"blinded_ms_correctness_proof":{"c":"8734654926560185522422668980289494278226532874472645869964441855250278027234","v_dash_cap":"325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385","m_caps":{"master_secret":"21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167"},"r_caps":{}},"nonce":"959712576749564225650409"}', b'{"master_secret_blinding_data":{"v_prime":"37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045","vr_prime":null},"nonce":"959712576749564225650409","master_secret_name":"Medic"}')
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 88, err , args: (b'{"prover_did":"Ss9L55FVLDVAE9wH9QUaLm","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","blinded_ms":{"u":"9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526","ur":null,"hidden_attributes":["master_secret"],"committed_attributes":{}},"blinded_ms_correctness_proof":{"c":"8734654926560185522422668980289494278226532874472645869964441855250278027234","v_dash_cap":"325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385","m_caps":{"master_secret":"21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167"},"r_caps":{}},"nonce":"959712576749564225650409"}', b'{"master_secret_blinding_data":{"v_prime":"37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045","vr_prime":null},"nonce":"959712576749564225650409","master_secret_name":"Medic"}')
_indy_loop_callback: Function returned (b'{"prover_did":"Ss9L55FVLDVAE9wH9QUaLm","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","blinded_ms":{"u":"9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526","ur":null,"hidden_attributes":["master_secret"],"committed_attributes":{}},"blinded_ms_correctness_proof":{"c":"8734654926560185522422668980289494278226532874472645869964441855250278027234","v_dash_cap":"325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385","m_caps":{"master_secret":"21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167"},"r_caps":{}},"nonce":"959712576749564225650409"}', b'{"master_secret_blinding_data":{"v_prime":"37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045","vr_prime":null},"nonce":"959712576749564225650409","master_secret_name":"Medic"}')
_indy_loop_callback <<<
prover_create_credential_req: <<< res: ('{"prover_did":"Ss9L55FVLDVAE9wH9QUaLm","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","blinded_ms":{"u":"9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526","ur":null,"hidden_attributes":["master_secret"],"committed_attributes":{}},"blinded_ms_correctness_proof":{"c":"8734654926560185522422668980289494278226532874472645869964441855250278027234","v_dash_cap":"325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385","m_caps":{"master_secret":"21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167"},"r_caps":{}},"nonce":"959712576749564225650409"}', '{"master_secret_blinding_data":{"v_prime":"37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045","vr_prime":null},"nonce":"959712576749564225650409","master_secret_name":"Medic"}')
Created credential request. credential_request_json={"prover_did":"Ss9L55FVLDVAE9wH9QUaLm","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","blinded_ms":{"u":"9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526","ur":null,"hidden_attributes":["master_secret"],"committed_attributes":{}},"blinded_ms_correctness_proof":{"c":"8734654926560185522422668980289494278226532874472645869964441855250278027234","v_dash_cap":"325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385","m_caps":{"master_secret":"21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167"},"r_caps":{}},"nonce":"959712576749564225650409"} credential_request_metadata_json={"master_secret_blinding_data":{"v_prime":"37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045","vr_prime":null},"nonce":"959712576749564225650409","master_secret_name":"Medic"}
update_wallet_record_value: >>> wallet_handle: 3, type_: 'credential_exchange_v10', id: '71bf4548-eca4-4e17-9234-f2a75f0a41ed', value: '{"thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "created_at": "2021-05-17 12:41:32.182428Z", "updated_at": "2021-05-17 12:41:44.267074Z", "connection_id": "f56b18ea-92e1-4f6d-a094-80da3fad398d", "credential_proposal_dict": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential", "@id": "11b76349-c461-401e-8668-d198a86f1988", "credential_proposal": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview", "attributes": [{"name": "Name", "value": "Will Abramson"}, {"name": "University", "value": "Edinburgh Medical School"}, {"name": "Date Issued", "value": "2021-05-17"}]}, "comment": "create automated credential exchange", "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default"}, "credential_offer_dict": null, "credential_offer": {"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "key_correctness_proof": {"c": "107747385423523632115836196578250990474250248043120793044857578887670452863909", "xz_cap": "1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694", "xr_cap": [["name", "2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993"], ["university", "405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652"], ["dateissued", "2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451"], ["master_secret", "1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202"]]}, "nonce": "598069920933476898638215"}, "credential_request": {"prover_did": "Ss9L55FVLDVAE9wH9QUaLm", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "blinded_ms": {"u": "9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526", "ur": null, "hidden_attributes": ["master_secret"], "committed_attributes": {}}, "blinded_ms_correctness_proof": {"c": "8734654926560185522422668980289494278226532874472645869964441855250278027234", "v_dash_cap": "325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385", "m_caps": {"master_secret": "21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167"}, "r_caps": {}}, "nonce": "959712576749564225650409"}, "credential_request_metadata": {"master_secret_blinding_data": {"v_prime": "37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045", "vr_prime": null}, "nonce": "959712576749564225650409", "master_secret_name": "Medic"}, "error_msg": null, "auto_offer": false, "auto_issue": false, "auto_remove": false, "raw_credential": null, "credential": null, "parent_thread_id": null, "initiator": "external", "credential_definition_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "credential_id": null, "revoc_reg_id": null, "revocation_id": null, "role": "holder", "state": "request_sent", "trace": true}'
do_call: >>> name: indy_update_wallet_record_value, args: (c_int(3), c_char_p(140572651735760), c_char_p(140572651855672), c_char_p(94095652694368), <CFunctionType object at 0x7fd99efcf110>)
do_call: Function indy_update_wallet_record_value returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s6`: UPDATE items SET value = $1, key = $2 WHERE type = $3 AND name = $4 AND wallet_id = $5
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [[98, 53, 165, 3, 255, 163, 147, 226, 109, 50, 102, 213, 30, 182, 111, 95, 12, 32, 237, 183, 99, 31, 94, 3, 163, 107, 182, 22, 142, 81, 16, 233, 46, 38, 132, 236, 138, 105, 226, 150, 32, 20, 198, 146, 90, 184, 252, 230, 179, 139, 218, 134, 189, 177, 150, 134, 113, 207, 88, 88, 191, 250, 220, 84, 95, 233, 104, 244, 183, 116, 65, 150, 70, 227, 59, 125, 197, 230, 183, 252, 181, 152, 167, 50, 188, 116, 52, 28, 185, 208, 55, 6, 112, 227, 11, 173, 179, 170, 153, 64, 34, 203, 102, 43, 202, 197, 185, 207, 52, 8, 239, 194, 39, 116, 38, 167, 207, 0, 216, 65, 129, 114, 20, 243, 165, 156, 212, 59, 54, 192, 21, 194, 238, 48, 103, 25, 190, 115, 1, 18, 2, 196, 196, 130, 20, 10, 214, 14, 49, 7, 227, 65, 200, 31, 30, 75, 192, 221, 126, 173, 182, 116, 43, 94, 178, 32, 124, 191, 122, 190, 115, 75, 153, 228, 193, 55, 72, 1, 217, 89, 190, 35, 143, 211, 237, 97, 197, 106, 130, 140, 141, 235, 4, 156, 233, 200, 35, 170, 180, 81, 219, 107, 109, 72, 0, 164, 89, 233, 132, 187, 172, 223, 183, 116, 27, 83, 244, 157, 186, 195, 184, 183, 173, 135, 128, 229, 14, 125, 247, 180, 73, 3, 241, 116, 191, 25, 86, 251, 173, 183, 78, 212, 101, 167, 238, 194, 136, 184, 90, 199, 60, 25, 226, 8, 79, 62, 255, 161, 100, 122, 14, 88, 121, 253, 216, 37, 117, 173, 92, 44, 111, 32, 17, 13, 109, 230, 32, 96, 49, 84, 237, 157, 55, 48, 44, 32, 151, 202, 170, 186, 165, 186, 210, 115, 149, 79, 39, 175, 94, 39, 111, 23, 184, 51, 170, 91, 192, 136, 252, 135, 72, 234, 234, 155, 76, 49, 38, 112, 108, 225, 84, 233, 70, 73, 3, 13, 68, 233, 208, 41, 66, 178, 208, 44, 210, 188, 185, 176, 103, 66, 165, 223, 95, 16, 122, 40, 116, 170, 141, 214, 159, 210, 227, 227, 183, 49, 153, 211, 50, 189, 6, 204, 161, 133, 133, 102, 196, 137, 45, 243, 53, 39, 80, 0, 66, 62, 61, 45, 128, 29, 147, 127, 75, 67, 60, 94, 238, 168, 177, 121, 239, 229, 128, 137, 121, 51, 55, 232, 103, 237, 2, 71, 16, 178, 1, 77, 180, 179, 93, 227, 185, 230, 6, 107, 255, 72, 141, 70, 144, 52, 116, 178, 148, 71, 180, 99, 253, 56, 14, 165, 148, 83, 189, 80, 236, 59, 253, 81, 129, 204, 113, 147, 160, 118, 179, 5, 192, 7, 137, 16, 112, 211, 80, 112, 139, 78, 112, 242, 37, 235, 220, 213, 231, 109, 208, 179, 90, 239, 32, 20, 0, 218, 56, 84, 11, 120, 10, 31, 245, 170, 14, 166, 230, 18, 108, 223, 62, 70, 232, 80, 174, 148, 43, 118, 226, 138, 218, 194, 122, 48, 240, 246, 6, 122, 99, 134, 230, 235, 151, 21, 41, 253, 142, 133, 12, 120, 45, 125, 166, 218, 237, 234, 244, 53, 206, 27, 210, 112, 230, 225, 223, 243, 43, 221, 159, 242, 243, 66, 18, 203, 47, 111, 67, 200, 229, 243, 70, 68, 58, 21, 203, 128, 87, 6, 80, 185, 31, 102, 16, 237, 187, 17, 196, 198, 21, 108, 68, 97, 46, 126, 55, 218, 67, 124, 26, 66, 130, 222, 130, 215, 244, 205, 68, 189, 155, 176, 138, 142, 101, 90, 16, 248, 205, 76, 189, 180, 92, 84, 186, 129, 77, 88, 65, 177, 168, 63, 3, 48, 216, 217, 150, 124, 228, 110, 37, 146, 165, 160, 250, 142, 15, 88, 148, 253, 67, 173, 214, 96, 94, 115, 163, 223, 60, 204, 97, 101, 239, 232, 68, 201, 118, 250, 217, 31, 85, 45, 59, 192, 189, 174, 84, 143, 84, 108, 243, 234, 142, 209, 193, 75, 86, 242, 205, 71, 128, 24, 169, 97, 10, 230, 195, 143, 168, 210, 226, 19, 252, 239, 29, 139, 54, 152, 175, 254, 130, 78, 128, 41, 54, 220, 45, 42, 213, 21, 91, 165, 137, 135, 203, 164, 158, 157, 12, 145, 25, 232, 125, 130, 32, 156, 237, 201, 235, 13, 221, 77, 187, 126, 79, 202, 70, 245, 240, 222, 123, 184, 38, 106, 191, 108, 238, 39, 19, 188, 13, 202, 76, 137, 212, 128, 71, 125, 249, 245, 132, 5, 246, 25, 103, 65, 233, 133, 75, 92, 157, 33, 119, 174, 124, 201, 67, 190, 0, 181, 130, 91, 245, 193, 255, 136, 61, 152, 5, 230, 126, 168, 150, 151, 79, 121, 8, 100, 110, 155, 182, 129, 182, 85, 139, 161, 165, 13, 50, 219, 32, 123, 152, 145, 11, 129, 203, 140, 195, 240, 138, 42, 98, 169, 228, 97, 232, 55, 149, 199, 6, 153, 110, 233, 193, 116, 8, 3, 66, 196, 129, 235, 193, 29, 100, 70, 138, 94, 40, 171, 137, 25, 164, 176, 45, 97, 111, 232, 76, 199, 133, 167, 216, 143, 17, 185, 52, 140, 12, 28, 194, 99, 189, 19, 72, 63, 235, 205, 92, 235, 138, 85, 217, 215, 144, 202, 29, 89, 240, 245, 25, 226, 54, 180, 242, 226, 74, 93, 254, 82, 20, 56, 143, 153, 48, 108, 193, 25, 199, 183, 40, 238, 255, 10, 7, 37, 218, 185, 176, 205, 43, 53, 244, 8, 98, 14, 125, 75, 248, 23, 86, 56, 80, 189, 183, 75, 63, 34, 169, 216, 188, 161, 191, 110, 226, 78, 104, 138, 235, 230, 162, 51, 161, 116, 218, 10, 90, 4, 182, 6, 22, 159, 229, 50, 178, 93, 232, 206, 166, 10, 194, 105, 102, 71, 153, 91, 73, 27, 84, 41, 166, 52, 120, 79, 109, 65, 100, 102, 118, 23, 210, 162, 95, 254, 175, 236, 2, 219, 211, 29, 66, 71, 236, 180, 197, 226, 122, 62, 78, 14, 212, 198, 1, 58, 48, 162, 200, 194, 58, 9, 57, 88, 46, 141, 172, 166, 87, 13, 222, 2, 252, 11, 126, 16, 135, 170, 7, 61, 197, 216, 49, 62, 168, 208, 145, 111, 218, 247, 202, 70, 14, 116, 11, 185, 69, 15, 221, 72, 129, 229, 86, 15, 18, 192, 73, 54, 14, 147, 8, 32, 197, 62, 170, 209, 115, 218, 164, 5, 203, 113, 156, 159, 22, 220, 200, 105, 112, 18, 87, 63, 180, 84, 113, 45, 52, 243, 61, 142, 16, 89, 191, 237, 31, 88, 8, 70, 118, 150, 15, 173, 39, 109, 17, 218, 73, 11, 176, 18, 230, 130, 240, 98, 227, 217, 138, 207, 221, 121, 99, 173, 252, 174, 148, 70, 255, 232, 123, 88, 133, 237, 19, 58, 24, 163, 239, 227, 200, 135, 123, 158, 222, 73, 116, 129, 201, 106, 60, 250, 214, 98, 114, 129, 69, 119, 174, 161, 0, 114, 204, 0, 170, 46, 91, 181, 119, 118, 123, 96, 75, 23, 105, 124, 141, 222, 98, 187, 23, 110, 65, 9, 34, 99, 26, 218, 123, 253, 59, 117, 130, 176, 228, 97, 104, 245, 207, 121, 232, 244, 231, 72, 155, 27, 19, 174, 56, 201, 156, 102, 46, 67, 39, 195, 222, 212, 5, 8, 246, 201, 210, 224, 117, 5, 219, 191, 57, 202, 0, 105, 221, 205, 30, 35, 174, 4, 73, 251, 89, 128, 56, 16, 119, 92, 11, 197, 19, 19, 82, 99, 16, 19, 220, 79, 117, 169, 226, 189, 57, 133, 124, 195, 139, 155, 129, 78, 196, 202, 178, 245, 12, 42, 230, 107, 55, 146, 17, 82, 132, 187, 164, 123, 131, 16, 76, 51, 19, 251, 104, 169, 58, 83, 57, 20, 164, 183, 143, 219, 153, 116, 228, 63, 52, 38, 10, 245, 253, 118, 96, 220, 238, 31, 33, 61, 154, 131, 240, 77, 244, 161, 14, 179, 167, 114, 210, 82, 231, 185, 22, 117, 58, 241, 212, 234, 142, 254, 68, 27, 193, 86, 67, 187, 63, 138, 34, 216, 190, 106, 160, 141, 79, 64, 173, 192, 60, 229, 98, 127, 72, 238, 201, 221, 135, 244, 160, 63, 95, 147, 232, 76, 253, 52, 190, 205, 210, 135, 210, 64, 238, 209, 230, 95, 178, 61, 70, 254, 234, 48, 188, 252, 216, 43, 19, 197, 12, 64, 77, 192, 227, 57, 152, 174, 145, 56, 209, 224, 114, 24, 50, 10, 47, 123, 122, 95, 173, 185, 7, 197, 108, 29, 201, 26, 219, 31, 181, 3, 46, 133, 131, 130, 115, 110, 106, 229, 242, 161, 139, 68, 173, 21, 218, 149, 57, 53, 191, 118, 124, 126, 92, 181, 6, 232, 147, 50, 247, 81, 58, 219, 31, 186, 197, 238, 18, 199, 147, 121, 218, 8, 181, 125, 29, 213, 253, 207, 71, 65, 201, 13, 95, 203, 26, 26, 38, 40, 31, 224, 212, 183, 27, 197, 209, 224, 68, 97, 165, 46, 229, 77, 96, 161, 248, 50, 212, 139, 39, 246, 150, 244, 138, 110, 149, 150, 127, 3, 78, 139, 33, 186, 106, 190, 152, 196, 8, 177, 4, 200, 60, 131, 254, 125, 11, 122, 242, 154, 199, 121, 95, 78, 121, 239, 180, 103, 255, 123, 167, 112, 46, 179, 249, 153, 127, 102, 97, 43, 36, 212, 79, 30, 212, 202, 105, 7, 117, 156, 176, 93, 151, 234, 165, 105, 201, 107, 216, 97, 248, 45, 237, 157, 244, 160, 19, 114, 81, 91, 226, 21, 9, 57, 29, 69, 184, 255, 82, 121, 243, 253, 170, 26, 62, 22, 10, 119, 156, 136, 56, 220, 86, 19, 204, 15, 161, 178, 167, 132, 26, 174, 79, 76, 83, 122, 120, 241, 163, 239, 42, 157, 134, 111, 250, 45, 16, 228, 82, 241, 77, 12, 54, 70, 244, 56, 31, 125, 81, 155, 160, 141, 150, 201, 43, 221, 254, 62, 107, 87, 173, 77, 44, 159, 15, 56, 175, 1, 108, 60, 66, 246, 213, 19, 204, 246, 215, 142, 245, 154, 152, 83, 241, 177, 237, 85, 236, 226, 54, 173, 70, 133, 21, 70, 112, 25, 98, 247, 3, 238, 205, 114, 86, 119, 229, 145, 66, 21, 210, 53, 51, 195, 161, 247, 135, 169, 33, 233, 194, 45, 11, 153, 123, 155, 176, 118, 64, 89, 10, 150, 255, 96, 191, 26, 86, 76, 93, 161, 124, 65, 65, 14, 69, 121, 86, 208, 209, 187, 47, 227, 204, 63, 184, 176, 128, 59, 20, 199, 9, 118, 41, 168, 191, 97, 166, 77, 205, 16, 96, 184, 182, 64, 18, 140, 171, 131, 186, 76, 79, 145, 105, 11, 178, 171, 160, 95, 134, 182, 191, 133, 247, 141, 169, 57, 57, 48, 1, 29, 133, 109, 148, 111, 64, 144, 85, 65, 130, 196, 94, 118, 208, 144, 221, 162, 22, 189, 88, 60, 66, 174, 50, 50, 246, 74, 11, 148, 63, 2, 169, 103, 121, 226, 138, 246, 175, 203, 194, 45, 209, 50, 201, 169, 34, 156, 14, 242, 151, 179, 120, 131, 112, 147, 11, 86, 249, 207, 41, 65, 208, 235, 98, 141, 60, 121, 64, 235, 241, 75, 185, 79, 6, 91, 15, 213, 140, 207, 175, 27, 254, 125, 232, 10, 94, 122, 189, 117, 4, 105, 95, 235, 141, 44, 129, 117, 4, 208, 1, 197, 221, 123, 18, 58, 79, 214, 161, 232, 212, 69, 118, 253, 137, 150, 168, 31, 51, 53, 96, 93, 66, 86, 222, 41, 10, 105, 11, 17, 235, 30, 114, 127, 208, 79, 175, 255, 103, 221, 181, 114, 214, 35, 86, 96, 27, 157, 42, 131, 134, 37, 57, 228, 24, 64, 31, 105, 150, 72, 175, 251, 113, 85, 48, 236, 232, 217, 67, 126, 81, 120, 174, 10, 83, 168, 170, 53, 219, 216, 165, 139, 171, 70, 58, 202, 145, 67, 159, 197, 99, 185, 108, 166, 195, 156, 76, 132, 35, 153, 162, 204, 74, 43, 69, 35, 190, 254, 83, 195, 59, 43, 96, 27, 105, 63, 155, 169, 199, 47, 217, 211, 141, 188, 79, 227, 52, 218, 237, 119, 13, 127, 220, 54, 67, 40, 189, 72, 138, 136, 10, 143, 149, 145, 196, 229, 249, 207, 209, 147, 166, 13, 140, 100, 3, 112, 194, 227, 208, 119, 55, 149, 69, 228, 119, 225, 104, 115, 227, 255, 223, 253, 17, 199, 144, 233, 249, 65, 188, 112, 69, 52, 54, 133, 13, 243, 91, 201, 166, 40, 73, 144, 68, 126, 215, 84, 64, 62, 124, 1, 210, 251, 2, 221, 95, 172, 61, 162, 96, 213, 165, 41, 21, 79, 112, 90, 104, 239, 166, 65, 202, 60, 193, 216, 103, 39, 243, 23, 92, 159, 34, 171, 185, 205, 85, 47, 136, 202, 31, 93, 141, 55, 82, 4, 110, 35, 58, 151, 0, 204, 70, 89, 61, 57, 154, 63, 91, 235, 78, 251, 61, 61, 117, 35, 197, 134, 158, 9, 250, 155, 234, 119, 204, 12, 27, 159, 111, 241, 59, 199, 84, 207, 144, 182, 148, 67, 66, 27, 195, 137, 120, 4, 246, 185, 3, 108, 242, 47, 183, 85, 189, 207, 96, 208, 41, 67, 90, 150, 63, 213, 213, 68, 155, 161, 117, 84, 48, 209, 111, 39, 211, 46, 199, 29, 183, 2, 213, 166, 164, 18, 133, 91, 134, 65, 150, 144, 179, 130, 250, 138, 239, 39, 41, 251, 53, 168, 22, 204, 208, 82, 231, 211, 188, 5, 142, 13, 203, 24, 26, 212, 97, 81, 41, 22, 114, 154, 19, 195, 49, 136, 211, 124, 210, 246, 84, 35, 218, 164, 235, 88, 207, 193, 214, 121, 221, 230, 38, 96, 56, 146, 128, 164, 73, 53, 37, 85, 159, 222, 11, 60, 248, 113, 245, 224, 21, 187, 37, 183, 6, 201, 199, 11, 28, 195, 160, 122, 148, 160, 97, 233, 108, 146, 220, 129, 205, 149, 85, 165, 205, 44, 214, 52, 230, 12, 28, 127, 98, 44, 84, 94, 191, 216, 32, 68, 208, 237, 232, 5, 93, 197, 116, 48, 88, 108, 59, 244, 224, 73, 248, 22, 181, 32, 18, 7, 166, 65, 71, 180, 104, 203, 206, 195, 118, 5, 151, 168, 81, 186, 213, 71, 34, 39, 246, 91, 45, 235, 248, 237, 20, 116, 93, 104, 133, 69, 47, 89, 12, 94, 144, 240, 55, 115, 97, 47, 46, 56, 236, 184, 71, 35, 247, 121, 62, 241, 6, 210, 90, 251, 232, 179, 29, 42, 134, 40, 237, 156, 128, 184, 136, 175, 188, 198, 44, 160, 205, 38, 84, 5, 84, 9, 35, 108, 84, 210, 18, 6, 68, 236, 13, 9, 13, 200, 252, 222, 163, 137, 47, 79, 170, 192, 23, 69, 241, 132, 213, 30, 213, 110, 99, 211, 141, 51, 150, 146, 6, 88, 26, 251, 213, 111, 132, 47, 144, 18, 146, 62, 48, 65, 77, 249, 88, 130, 79, 142, 139, 90, 94, 56, 76, 101, 158, 129, 38, 167, 195, 199, 99, 242, 228, 184, 86, 161, 79, 252, 219, 91, 235, 153, 172, 55, 205, 2, 31, 108, 57, 32, 113, 173, 234, 27, 79, 245, 232, 217, 165, 204, 223, 96, 226, 74, 13, 132, 222, 250, 84, 249, 238, 67, 192, 207, 72, 208, 187, 12, 35, 34, 220, 71, 168, 108, 122, 155, 202, 118, 207, 156, 92, 135, 23, 224, 150, 18, 116, 233, 126, 105, 191, 250, 94, 255, 168, 74, 241, 174, 133, 165, 91, 207, 71, 164, 54, 223, 206, 235, 51, 108, 232, 95, 248, 148, 9, 88, 170, 225, 211, 28, 99, 213, 173, 81, 133, 173, 223, 33, 58, 87, 70, 181, 247, 220, 141, 162, 162, 42, 51, 221, 55, 214, 204, 18, 223, 127, 120, 173, 153, 151, 242, 146, 177, 210, 81, 110, 51, 120, 57, 247, 5, 69, 35, 164, 219, 62, 87, 246, 31, 7, 239, 236, 2, 143, 90, 57, 51, 3, 166, 172, 123, 179, 197, 136, 43, 145, 230, 196, 167, 44, 66, 94, 161, 51, 128, 233, 151, 229, 193, 26, 204, 219, 170, 180, 221, 114, 85, 16, 83, 154, 63, 197, 8, 35, 206, 48, 100, 83, 12, 193, 184, 232, 225, 185, 248, 83, 195, 10, 194, 204, 242, 149, 171, 129, 250, 233, 172, 134, 106, 77, 214, 149, 111, 17, 9, 197, 241, 41, 52, 106, 55, 197, 79, 83, 136, 226, 39, 115, 50, 226, 75, 103, 89, 150, 120, 156, 121, 31, 88, 35, 91, 26, 46, 213, 123, 138, 194, 75, 127, 198, 20, 146, 147, 126, 63, 202, 98, 56, 238, 10, 239, 181, 170, 107, 146, 161, 230, 249, 6, 143, 63, 39, 208, 43, 4, 148, 179, 98, 168, 120, 144, 214, 34, 100, 105, 172, 237, 56, 254, 248, 61, 207, 247, 198, 110, 59, 171, 106, 9, 224, 141, 178, 176, 16, 166, 33, 184, 192, 58, 19, 6, 93, 234, 174, 175, 84, 27, 27, 249, 139, 220, 26, 238, 107, 133, 22, 15, 81, 64, 215, 128, 220, 158, 98, 114, 157, 152, 174, 228, 227, 66, 125, 43, 123, 60, 157, 249, 33, 215, 15, 134, 192, 97, 63, 240, 223, 234, 98, 178, 8, 83, 46, 172, 112, 88, 176, 101, 91, 45, 229, 138, 44, 220, 213, 108, 160, 24, 52, 234, 230, 222, 75, 7, 48, 100, 145, 29, 235, 31, 67, 26, 104, 124, 230, 223, 89, 123, 246, 247, 55, 128, 23, 114, 124, 23, 186, 151, 75, 189, 146, 253, 148, 5, 126, 254, 224, 82, 113, 81, 65, 59, 234, 199, 60, 128, 202, 7, 69, 249, 50, 177, 254, 125, 21, 144, 31, 47, 164, 118, 18, 245, 178, 254, 189, 212, 185, 25, 166, 113, 195, 21, 160, 193, 252, 146, 220, 226, 54, 255, 206, 34, 203, 204, 20, 227, 36, 158, 154, 214, 152, 75, 210, 221, 232, 234, 157, 59, 170, 62, 192, 202, 128, 156, 138, 79, 224, 220, 59, 9, 49, 84, 133, 3, 182, 238, 116, 85, 117, 3, 80, 175, 145, 58, 253, 161, 204, 190, 3, 222, 167, 1, 82, 48, 253, 191, 149, 129, 168, 17, 186, 128, 2, 154, 57, 103, 232, 226, 147, 112, 217, 44, 209, 118, 86, 153, 228, 133, 195, 156, 162, 193, 172, 50, 234, 110, 176, 48, 165, 191, 11, 245, 82, 69, 255, 38, 193, 141, 147, 2, 91, 119, 241, 94, 51, 203, 179, 158, 182, 150, 196, 211, 142, 158, 230, 93, 227, 44, 163, 251, 222, 163, 29, 193, 176, 178, 244, 120, 61, 24, 127, 63, 34, 245, 254, 226, 96, 250, 223, 120, 56, 171, 108, 109, 234, 20, 199, 239, 161, 49, 47, 241, 208, 103, 9, 47, 169, 81, 33, 56, 117, 62, 188, 167, 89, 64, 49, 211, 104, 113, 98, 143, 181, 104, 221, 35, 98, 234, 208, 158, 166, 12, 114, 122, 67, 22, 210, 79, 235, 54, 47, 65, 80, 24, 138, 31, 217, 88, 185, 6, 211, 225, 108, 1, 3, 57, 241, 38, 172, 60, 241, 170, 144, 239, 74, 48, 9, 171, 230, 91, 247, 40, 173, 158, 195, 255, 47, 35, 56, 192, 185, 226, 101, 109, 195, 151, 11, 36, 80, 6, 237, 108, 71, 121, 51, 1, 211, 195, 232, 59, 166, 177, 71, 66, 3, 35, 110, 22, 204, 175, 15, 52, 244, 131, 152, 99, 33, 93, 76, 20, 52, 205, 121, 114, 14, 103, 157, 118, 128, 175, 224, 160, 218, 115, 22, 72, 13, 66, 36, 224, 153, 159, 79, 203, 69, 214, 35, 201, 47, 218, 77, 252, 45, 235, 49, 204, 215, 226, 120, 185, 100, 242, 165, 0, 36, 132, 205, 234, 171, 89, 104, 245, 71, 184, 138, 97, 105, 184, 91, 54, 186, 36, 150, 63, 19, 251, 47, 103, 114, 153, 65, 213, 204, 48, 50, 150, 213, 124, 189, 159, 179, 228, 37, 110, 243, 181, 206, 6, 221, 4, 161, 160, 180, 59, 75, 124, 119, 106, 244, 90, 231, 1, 45, 13, 203, 140, 131, 191, 230, 42, 212, 158, 97, 192, 216, 151, 225, 236, 12, 204, 106, 180, 102, 18, 63, 41, 194, 147, 240, 148, 80, 39, 7, 148, 79, 84, 79, 179, 243, 37, 243, 117, 72, 91, 234, 134, 1, 136, 101, 20, 71, 71, 157, 38, 197, 243, 156, 182, 29, 204, 235, 255, 143, 77, 56, 23, 43, 240, 253, 170, 23, 207, 175, 210, 72, 11, 241, 87, 196, 171, 233, 231, 182, 210, 128, 207, 217, 52, 105, 183, 1, 111, 209, 223, 102, 116, 222, 48, 236, 15, 165, 0, 1, 85, 206, 157, 26, 0, 166, 79, 226, 77, 251, 155, 40, 231, 129, 0, 62, 164, 174, 70, 82, 98, 184, 231, 174, 96, 39, 216, 208, 28, 84, 4, 185, 20, 92, 223, 121, 71, 11, 223, 44, 154, 250, 191, 124, 32, 46, 201, 16, 255, 34, 201, 221, 90, 71, 211, 66, 48, 28, 146, 71, 39, 218, 80, 247, 82, 244, 8, 136, 122, 87, 18, 190, 224, 119, 26, 232, 37, 238, 103, 194, 181, 164, 14, 2, 209, 143, 212, 118, 134, 209, 53, 66, 157, 42, 174, 53, 180, 230, 225, 209, 201, 102, 202, 48, 46, 241, 246, 3, 68, 132, 49, 105, 159, 243, 188, 89, 60, 38, 103, 115, 81, 14, 107, 118, 75, 59, 96, 160, 75, 210, 65, 87, 179, 125, 73, 6, 249, 240, 49, 249, 15, 237, 214, 81, 179, 247, 115, 68, 23, 22, 57, 49, 250, 167, 23, 26, 183, 114, 226, 106, 92, 148, 24, 83, 96, 40, 106, 196, 8, 78, 125, 58, 38, 229, 103, 248, 251, 216, 16, 67, 22, 180, 44, 89, 100, 145, 46, 34, 252, 198, 25, 190, 76, 240, 147, 190, 27, 250, 147, 168, 164, 204, 192, 212, 242, 64, 219, 25, 241, 168, 132, 186, 250, 34, 179, 32, 253, 74, 71, 144, 244, 212, 214, 57, 165, 67, 22, 17, 93, 55, 144, 47, 125, 193, 230, 27, 123, 134, 175, 38, 149, 70, 168, 165, 226, 6, 141, 159, 22, 230, 127, 66, 51, 171, 28, 168, 25, 119, 106, 156, 208, 59, 152, 241, 6, 128, 183, 114, 111, 162, 210, 210, 151, 244, 80, 154, 58, 28, 76, 90, 54, 20, 50, 146, 108, 77, 3, 44, 199, 195, 189, 3, 175, 60, 64, 165, 31, 80, 149, 149, 101, 121, 227, 82, 131, 136, 239, 115, 97, 189, 92, 33, 172, 29, 47, 193, 24, 217, 206, 88, 28, 79, 23, 220, 153, 26, 77, 19, 156, 234, 39, 237, 17, 225, 224, 244, 182, 197, 178, 55, 242, 215, 206, 222, 202, 5, 10, 78, 122, 203, 106, 91, 191, 158, 101, 107, 242, 5, 136, 208, 1, 74, 90, 217, 195, 212, 22, 108, 243, 216, 197, 190, 180, 23, 120, 81, 245, 229, 213, 235, 63, 1, 135, 194, 164, 135, 204, 89, 99, 187, 175, 222, 200, 17, 103, 234, 201, 166, 182, 67, 98, 186, 219, 15, 219, 142, 81, 199, 144, 1, 52, 193, 221, 85, 199, 143, 210, 28, 35, 220, 54, 70, 142, 76, 194, 39, 22, 70, 179, 51, 101, 194, 245, 99, 12, 23, 108, 76, 251, 227, 7, 254, 138, 69, 93, 221, 245, 94, 234, 51, 99, 167, 248, 52, 49, 203, 12, 28, 44, 66, 198, 109, 110, 103, 163, 60, 114, 114, 227, 65, 61, 42, 19, 210, 149, 75, 84, 126, 140, 245, 123, 113, 235, 13, 4, 174, 119, 20, 9, 243, 54, 240, 12, 104, 56, 11, 185, 116, 208, 243, 202, 223, 138, 26, 184, 95, 100, 234, 242, 178, 47, 46, 159, 217, 255, 162, 188, 134, 7, 80, 217, 43, 49, 245, 118, 195, 97, 229, 52, 94, 60, 153, 205, 207, 153, 12, 210, 161, 38, 80, 1, 182, 233, 89, 212, 202, 32, 117, 254, 41, 48, 236, 19, 124, 78, 25, 103, 20, 42, 133, 118, 223, 148, 49, 97, 164, 145, 7, 164, 223, 115, 63, 71, 188, 65, 206, 95, 22, 143, 167, 195, 186, 17, 91, 251, 15, 24, 43, 150, 32, 36, 21, 118, 148, 220, 150, 247, 45, 104, 2, 201, 115, 162, 212, 23, 86, 3, 42, 142, 53, 188, 244, 111, 185, 105, 123, 222, 50, 223, 139, 252, 0, 157, 194, 214, 212, 95, 91, 254, 69, 254, 201, 100, 135, 255, 211, 184, 203, 142, 167, 173, 107, 194, 190, 218, 124, 88, 163, 224, 238, 234, 134, 210, 30, 99, 244, 119, 21, 108, 234, 208, 181, 232, 144, 71, 35, 101, 148, 137, 32, 77, 21, 23, 179, 51, 123, 113, 120, 31, 178, 46, 124, 201, 77, 16, 106, 124, 131, 30, 17, 202, 61, 15, 194, 116, 188, 5, 61, 170, 236, 150, 225, 154, 101, 58, 207, 122, 204, 203, 234, 101, 138, 136, 14, 10, 72, 174, 20, 163, 88, 93, 211, 73, 123, 7, 139, 84, 171, 11, 139, 160, 14, 245, 196, 131, 57, 194, 69, 28, 61, 193, 169, 243, 167, 182, 26, 140, 236, 106, 54, 123, 4, 162, 239, 9, 44, 49, 117, 244, 250, 25, 205, 83, 61, 177, 179, 191, 169, 13, 24, 17, 129, 194, 100, 245, 17, 62, 33, 40, 133, 24, 135, 84, 214, 20, 198, 218, 156, 43, 241, 246, 229, 215, 133, 64, 126, 221, 243, 240, 219, 60, 212, 243, 248, 140, 184, 129, 200, 62, 142, 132, 76, 75, 217, 2, 160, 99, 231, 207, 130, 146, 160, 17, 38, 139, 152, 212, 134, 236, 44, 232, 201, 135, 32, 77, 140, 155, 106, 140, 34, 47, 149, 172, 184, 102, 131, 129, 152, 238, 139, 135, 230, 3, 25, 201, 170, 27, 111, 223, 250, 48, 58, 51, 36, 192, 28, 255, 234, 241, 243, 204, 128, 88, 119, 58, 254, 66, 45, 231, 237, 70, 82, 51, 255, 47, 27, 28, 40, 160, 175, 238, 244, 244, 182, 11, 84, 7, 101, 218, 236, 74, 168, 29, 171, 139, 32, 243, 101, 35, 127, 103, 84, 169, 120, 9, 246, 55, 163, 92, 39, 177, 251, 65, 237, 99, 240, 182, 143, 59, 113, 141, 39, 201, 211, 236, 189, 14, 70, 223, 222, 205, 208, 217, 240, 87, 169, 120, 17, 131, 200, 179, 121, 158, 247, 172, 249, 126, 99, 20, 58, 211, 6, 84, 109, 139, 102, 136, 211, 80, 20, 181, 218, 25, 164, 54, 36, 131, 8, 87, 65, 123, 3, 3, 61, 36, 126, 4, 131, 155, 232, 246, 142, 245, 246, 105, 201, 59, 167, 90, 117, 97, 132, 59, 1, 194, 150, 142, 242, 2, 212, 248, 92, 58, 224, 175, 207, 92, 213, 41, 134, 126, 31, 133, 50, 54, 16, 128, 117, 129, 111, 46, 255, 148, 240, 180, 25, 1, 202, 108, 159, 10, 101, 162, 130, 226, 223, 51, 32, 252, 182, 111, 81, 216, 164, 168, 195, 253, 19, 197, 156, 53, 66, 228, 5, 216, 166, 18, 1, 141, 27, 86, 203, 124, 98, 27, 69, 145, 114, 248, 231, 32, 218, 195, 2, 38, 194, 179, 99, 192, 38, 1, 9, 170, 189, 193, 150, 234, 94, 167, 151, 186, 100, 214, 72, 176, 200, 160, 126, 146, 195, 63, 164, 160, 208, 222, 16, 220, 57, 89, 163, 190, 181, 252, 146, 85, 12, 25, 15, 198, 194, 6, 202, 192, 151, 192, 131, 0, 179, 107, 9, 37, 163, 91, 194, 18, 40, 186, 103, 8, 44, 205, 14, 248, 87, 114, 115, 190, 101, 6, 150, 59, 164, 205, 115, 219, 138, 45, 183, 84, 1, 85, 164, 46, 199, 7, 191, 121, 25, 112, 99, 75, 77, 40, 17, 194, 207, 20, 46, 124, 91, 48, 229, 28, 43, 104, 65, 31, 206, 46, 228, 142, 186, 49, 106, 228, 239, 51, 71, 119, 21, 232, 31, 209, 134, 112, 163, 121, 148, 93, 1, 212, 243, 109, 250, 191, 149, 47, 31, 31, 189, 179, 83, 119, 216, 221, 188, 94, 78, 83, 213, 169, 155, 110, 58, 43, 57, 245, 223, 200, 113, 196, 53, 255, 87, 20, 176, 22, 191, 137, 253, 40, 60, 56, 236, 228, 173, 143, 102, 235, 75, 94, 21, 180, 24, 172, 142, 63, 17, 173, 197, 142, 212, 58, 78, 125, 160, 112, 0, 217, 111, 168, 68, 111, 239, 61, 224, 56, 197, 216, 77, 2, 105, 254, 35, 219, 165, 227, 79, 77, 140, 41, 43, 63, 40, 130, 135, 65, 94, 104, 206, 233, 125, 42, 130, 57, 21, 84, 52, 165, 145, 94, 91, 250, 152, 196, 98, 245, 73, 21, 32, 44, 69, 105, 11, 4, 89, 9, 84, 143, 156, 104, 251, 88, 252, 169, 250, 84, 128, 90, 144, 0, 240, 136, 80, 101, 203, 233, 6, 245, 64, 139, 75, 116, 107, 31, 245, 248, 159, 156, 110, 158, 222, 183, 102, 97, 93, 239, 79, 116, 107, 253, 1, 135, 34, 5, 19, 241, 158, 161, 82, 91, 246, 168, 161, 137, 82, 29, 240, 94, 233, 190, 73, 49, 28, 185, 42, 5, 171, 226, 161, 238, 189, 82, 4, 160, 15, 116, 201, 24, 24, 237, 175, 174, 58, 108, 124, 44, 252, 209, 16, 227, 40, 115, 128, 174, 202, 237, 203, 167, 105, 17, 113, 3, 47, 51, 95, 184, 54, 238, 202, 1, 232, 23, 249, 150, 159, 125, 129, 212, 165, 134, 160, 227, 140, 49, 85, 40, 12, 187, 219, 234, 107, 243, 22, 236, 254, 245, 85, 79, 210, 98, 97, 206, 193, 162, 176, 120, 135, 66, 22, 199, 108, 116, 155, 233, 165, 227, 160, 243, 189, 202, 175, 43, 87, 71, 122, 211, 225, 169, 194, 91, 186, 71, 31, 174, 163, 182, 233, 136, 80, 252, 97, 98, 198, 188, 145, 224, 111, 41, 91, 177, 25, 30, 205, 223, 141, 192, 15, 180, 35, 48, 247, 152, 38, 62, 93, 175, 190, 146, 150, 145, 60, 159, 219, 182, 21, 44, 191, 217, 124, 41, 213, 185, 244, 191, 15, 15, 198, 128, 8, 34, 246, 53, 225, 30, 104, 58, 207, 105, 125, 167, 203, 164, 191, 32, 237, 55, 44, 104, 205, 43, 103, 250, 196, 109, 16, 204, 113, 203, 171, 141, 211, 144, 31, 109, 0, 22, 28, 45, 137, 60, 67, 202, 39, 32, 89, 125, 73, 64, 206, 193, 191, 45, 220, 97, 58, 200, 60, 66, 30, 44, 120, 69, 195, 144, 255, 33, 226, 103, 75, 137, 80, 186, 132, 196, 56, 226, 138, 88, 190, 12, 154, 12, 80, 236, 232, 221, 177, 186, 164, 142, 16, 71, 162, 24, 158, 160, 90, 81, 254, 107, 89, 227, 49, 229, 195, 211, 211, 39, 80, 96, 173, 75, 198, 226, 3, 202, 71, 159, 216, 60, 76, 247, 145, 175, 79, 200, 233, 167, 28, 214, 191, 140, 25, 238, 171, 221, 64, 41, 145, 65, 90, 211, 188, 182, 8, 227, 163, 38, 133, 172, 85, 68, 165, 226, 8, 82, 150, 176, 58, 8, 28, 41, 246, 18, 209, 28, 178, 102, 106, 211, 60, 198, 228, 229, 208, 42, 202, 241, 78, 94, 151, 169, 102, 75, 93, 128, 68, 167, 9, 110, 138, 60, 81, 216, 171, 67, 149, 33, 17, 116, 191, 219, 218, 228, 215, 72, 191, 15, 242, 23, 40, 42, 168, 156, 174, 239, 162, 52, 128, 146, 156, 233, 49, 161, 19, 81, 232, 107, 196, 217, 207, 192, 111, 11, 108, 78, 213, 151, 26, 161, 212, 131, 77, 162, 196, 126, 253, 197, 143, 9, 145, 80, 3, 173, 136, 131, 100, 82, 91, 0, 120, 28, 16, 91, 154, 139, 253, 58, 99, 234, 221, 116, 88, 158, 163, 49, 113, 141, 149, 177, 120, 243, 246, 210, 240, 82, 196, 64, 135, 48, 49, 224, 142, 49, 44, 110, 239, 18, 241, 208, 228, 242, 193, 211, 92, 139, 39, 134, 73, 76, 208, 106, 85, 59, 163, 166, 24, 56, 202, 175, 224, 38, 138, 115, 181, 80, 13, 195, 64, 156, 203, 219, 104, 160, 159, 152, 251, 164, 210, 169, 176, 54, 33, 101, 43, 155, 162, 92, 223, 148, 244, 13, 253, 31, 161, 218, 225, 179, 88, 219, 197, 191, 47, 53, 206, 225, 36, 100, 42, 182, 180, 29, 76, 3, 88, 71, 83, 192, 70, 125, 77, 121, 112, 126, 40, 43, 110, 179, 152, 43, 69, 153, 113, 221, 115, 144, 120, 6, 175, 240, 203, 202, 191, 139, 62, 79, 168, 32, 92, 142, 245, 33, 42, 92, 88, 213, 105, 206, 2, 227, 114, 154, 34, 72, 40, 178, 158, 171, 205, 231, 48, 20, 172, 244, 135, 10, 62, 68, 223, 157, 102, 94, 86, 138, 249, 117, 146, 203, 44, 0, 80, 100, 120, 150, 105, 205, 203, 149, 217, 153, 134, 20, 10, 169, 207, 42, 67, 245, 136, 46, 39, 248, 115, 250, 9, 48, 15, 1, 104, 169, 106, 143, 189, 37, 158, 84, 142, 5, 67, 4, 39, 237, 205, 182, 36, 56, 128, 194, 41, 68, 57, 30, 203, 240, 211, 129, 91, 90, 51, 22, 68, 146, 200, 67, 38, 132, 160, 13, 248, 212, 100, 112, 112, 47, 234, 197, 42, 138, 76, 123, 149, 247, 138, 228, 192, 247, 22, 188, 172, 68, 8, 171, 85, 58, 53, 21, 47, 94, 154, 40, 30, 166, 236, 67, 44, 58, 133, 116, 183, 174, 84, 53, 6, 114, 198, 190, 42, 26, 68, 253, 81, 79, 7, 56, 159, 179, 198, 249, 244, 134, 6, 193, 228, 75, 218, 184, 108, 136, 232, 213, 164, 227, 195, 237, 87, 99, 64, 223, 51, 59, 193, 237, 178, 176, 223, 108, 10, 154, 254, 201, 151, 92, 215, 21, 49, 40, 214, 79, 29, 147, 98, 184, 137, 116, 39, 131, 200, 0, 186, 151, 7, 180, 7, 138, 243, 105, 173, 151, 196, 75, 125, 139, 43, 184, 204, 53, 248, 53, 239, 166, 142, 109, 30, 110, 126, 212, 21, 243, 43, 63, 171, 56, 129, 117, 165, 12, 11, 120, 136, 101, 90, 33, 182, 247, 125, 40, 171, 180, 149, 250, 1, 15, 232, 187, 140, 161, 245, 174, 252, 103, 96, 59, 29, 53, 90, 30, 39, 181, 229, 67, 133, 182, 235, 252, 179, 128, 34, 180, 185, 58, 59, 161, 255, 12, 179, 208, 208, 233, 99, 34, 236, 59, 160, 109, 168, 126, 152, 168, 62, 18, 165, 250, 25, 154, 254, 119, 124, 203, 35, 92, 217, 9, 43, 128, 88, 58, 247, 185, 113, 36, 117, 85, 250, 125, 102, 152, 206, 49, 40, 104, 145, 103, 23, 138, 141, 65, 196, 90, 156, 207, 78, 81, 140, 8, 70, 99, 23, 1, 123, 177, 135, 158, 79, 41, 86, 239, 239, 50, 110, 55, 255, 16, 100, 41, 88, 126, 122, 248, 110, 229, 230, 104, 93, 62, 151, 73, 148, 191, 250, 186, 103, 93, 119, 242, 164, 107, 206, 56, 10, 160, 227, 43, 9, 238, 177, 144, 235, 251, 19, 104, 16, 183, 34, 66, 171, 102, 79, 99, 114, 176, 27, 154, 118, 119, 204, 42, 77, 69, 199, 213, 20, 108, 11, 67, 27, 207, 15, 114, 205, 46, 137, 89, 192, 82, 115, 179, 44, 177, 200, 196, 25, 217, 86, 81, 98, 243, 13, 111, 164, 246, 148, 80, 247, 190, 59, 105, 83, 39, 73, 84, 237, 72, 63, 125, 84, 169, 109, 143, 118, 42, 157, 134, 197, 69, 100, 197, 224, 223, 31, 146, 246, 155, 228, 126, 102, 9, 4, 228, 92, 55, 255, 213, 26, 254, 243, 84, 90, 54, 189, 249, 152, 97, 240, 148, 184, 204, 242, 180, 246, 122, 213, 65, 250, 186, 241, 206, 127, 151, 195, 188, 33, 43, 62, 167, 228, 188, 48, 174, 165, 50, 229, 68, 79, 29, 174, 150, 108, 133, 187, 231, 34, 85, 83, 108, 68, 180, 132, 252, 251, 181, 13, 214, 19, 69, 80, 173, 109, 99, 69, 17, 46, 101, 201, 50, 141, 83, 252, 39, 121, 251, 146, 97, 128, 176, 35, 91, 185, 187, 140, 220, 136, 115, 100, 188, 39, 49, 110, 198, 152, 70, 248, 190, 243, 169, 236, 50, 55, 25, 79, 119, 140, 18, 94, 202, 191, 255, 111, 88, 184, 243, 128, 253, 69, 59, 45, 174, 182, 25, 35, 12, 93, 141, 213, 1, 243, 101, 22, 204, 14, 39, 169, 232, 115, 44, 158, 180, 224, 199, 115, 198, 104, 153, 96, 110, 102, 144, 76, 174, 247, 22, 50, 2, 70, 189, 211, 26, 28, 91, 20, 66, 109, 125, 219, 48, 15, 110, 75, 217, 196, 5, 66, 106, 104, 218, 33, 169, 219, 60, 224, 195, 94, 26, 83, 51, 197, 146, 165, 26, 147, 221, 140, 25, 214, 38, 183, 227, 153, 146, 85, 148, 137, 119, 82, 5, 85, 5, 172, 240, 187, 207, 22, 80, 64, 21, 179, 16, 157, 205, 111, 109, 96, 45, 210, 39, 40, 68, 177, 22, 8, 68, 79, 233, 19, 76, 16, 114, 50, 228, 233, 120, 113, 223, 184, 179, 200, 154, 178, 147, 8, 151, 181, 86, 245, 98, 242, 177, 150, 12, 37, 187, 16, 194, 95, 212, 115, 44, 249, 208, 110, 123, 10, 148, 199, 233, 233, 146, 239, 165, 58, 46, 98, 187, 84, 48, 75, 211, 161, 131, 69, 12, 61, 180, 58, 251, 97, 254, 152, 232, 48, 206, 194, 178, 86, 160, 100, 10, 207, 99, 198, 245, 20, 32, 84, 241, 130, 127, 124, 191, 49, 24, 146, 87, 56, 154, 85, 78, 222, 218, 36, 205, 37, 58, 90, 53, 63, 209, 208, 126, 149, 107, 44, 88, 175, 194, 74, 60, 37, 62, 112, 234, 180, 107, 46, 26, 151, 193, 173, 36, 49, 17, 52, 10, 23, 131, 148, 87, 216, 179, 94, 112, 119, 219, 9, 229, 189, 95, 203, 101, 133, 48, 149, 91, 61, 140, 233, 135, 203, 243, 15, 57, 169, 244, 75, 93, 241, 185, 178, 7, 76, 251, 153, 250, 201, 199, 178, 91, 242, 36, 88, 174, 65, 12, 59, 99, 12, 5, 191, 59, 184, 240, 203, 217, 221, 185, 129, 93, 34, 138, 167, 2, 126, 120, 168, 67, 78, 151, 241, 226, 143, 210, 249, 132, 130, 203, 94, 120, 89, 88, 88, 4, 171, 233, 212, 40, 20, 64, 108, 214, 250, 164, 28, 67, 177, 200, 152, 134, 55, 38, 73, 23, 239, 99, 12, 193, 54, 140, 83, 77, 96, 42, 123, 52, 61, 50, 234, 91, 33, 103, 237, 59, 232, 7, 215, 190, 173, 244, 85, 19, 117, 69, 203, 218, 145, 11, 138, 153, 172, 253, 222, 26, 38, 187, 218, 13, 87, 106, 228, 54, 189, 106, 37, 187, 94, 24, 168, 247, 175, 163, 192, 144, 25, 75, 210, 115, 10, 48, 212, 37, 9, 198, 109, 80, 219, 107, 209, 227, 142, 33, 78, 12, 192, 29, 148, 242, 106, 128, 165, 251, 254, 71, 82, 51, 246, 188, 113, 171, 246, 39, 57, 38, 35, 146, 101, 97, 10, 125, 239, 129, 80, 91, 117, 170, 123, 38, 178, 3, 43, 91, 60, 94, 78, 171, 53, 57, 130, 97, 178, 225, 226, 129, 135, 137, 247, 64, 75, 101, 145, 119, 200, 141, 243, 121, 121, 92, 167, 224, 234, 150, 151, 225, 58, 138, 32, 198, 22, 114, 105, 122, 209, 52, 98, 13, 87, 37, 5, 173, 215, 203, 188, 34, 251, 255, 106, 219, 57, 191, 183, 17, 97, 4, 165, 8, 113, 134, 46, 169, 100, 51, 85, 148, 252, 102, 17, 117, 51, 254, 93, 82, 208, 195, 94, 255, 154, 34, 29, 180, 121, 202, 169, 119, 89, 118, 235, 238, 19, 191, 155, 192, 148, 32, 252, 36, 206, 59, 247, 105, 26, 77, 70, 37, 199, 110, 219, 145, 27, 184, 249, 3, 243, 16, 83, 186, 136, 209, 251, 59, 0, 199, 35, 103, 253, 86, 14, 161, 17, 73, 52, 45, 102, 86, 117, 18, 0, 242, 38, 23, 82, 233, 93, 32, 173, 135, 209, 86, 17, 122, 80, 112, 222, 130, 215, 112, 198, 250, 219, 230, 62, 81, 104, 233, 63, 74, 145, 245, 240, 71, 100, 112, 22, 250, 225, 245, 237, 200, 223, 186, 166, 99, 231, 59, 251, 179, 151, 255, 8, 76, 91, 194, 77, 229, 20, 224, 197, 89, 213, 2, 159, 197, 11, 111, 48, 99, 33, 117, 137, 48, 153, 112, 218, 85, 138, 180, 68, 171, 46, 98, 224, 174, 209, 81, 102, 146, 218, 241, 245, 242, 227, 128, 215, 162, 254, 170, 11, 95, 96, 24, 225, 233, 89, 234, 227, 198, 249, 184, 192, 16, 147, 137, 190, 197, 93, 122, 81, 205, 139, 162, 255, 116, 76, 57, 152, 19, 32, 218, 223, 29, 48, 234, 40, 1, 232, 232, 179, 8, 166, 14, 125, 98, 121, 79, 113, 200, 133, 35, 144, 85, 117, 115, 227, 247, 237, 185, 228, 163, 74, 200, 164, 136, 50, 51, 91, 130, 10, 93, 168, 64, 88, 48, 210, 56, 213, 85, 160, 139, 73, 73, 84, 168, 22, 93, 198, 68, 65, 219, 11, 41, 123, 153, 11, 111, 183, 163, 171, 3, 2, 166, 218, 173, 19, 248, 133, 241, 208, 97, 93, 245, 82, 71, 87, 110, 150, 66, 87, 143, 100, 41, 35, 152, 197, 114, 45, 173, 52, 216, 242, 198, 221, 220, 31, 58, 54, 96, 50, 104, 85, 179, 59, 44, 82, 87, 80, 44, 227, 98, 73, 14, 246, 222, 113, 98, 118, 157, 24, 8, 82, 54, 47, 220, 219, 122, 169, 71, 54, 34, 254, 16, 156, 53, 6, 87, 245, 16, 126, 93, 21, 251, 165, 44, 53, 132, 125, 159, 62, 188, 200, 185, 248, 80, 75, 121, 160, 239, 150, 114, 44, 196, 171, 92, 178, 145, 127, 109, 91, 231, 100, 14, 236, 21, 46, 36, 138, 130, 14, 253, 210, 249, 186, 112, 108, 27, 110, 187, 161, 98, 113, 96, 203, 13, 200, 243, 75, 72, 91, 193, 150, 207, 128, 23, 2, 61, 56, 89, 210, 222, 40, 183, 189, 99, 63, 198, 41, 28, 100, 55, 50, 70, 255, 69, 253, 59, 183, 67, 185, 161, 15, 57, 102, 128, 84, 126, 198, 110, 185, 183, 126, 115, 5, 71, 115, 183, 31, 44, 243, 47, 52, 40, 170, 78, 181, 95, 17, 14, 94, 232, 1, 127, 170, 81, 17, 170, 23, 243, 242, 113, 84, 98, 93, 138, 200, 100, 180, 203, 215, 98, 198, 160, 20, 14, 34, 222, 203, 220, 9, 8, 201, 44, 70, 157, 16, 81, 49, 63, 141, 114, 128, 157, 62, 200, 19, 51, 247, 1, 5, 212, 184, 145, 219, 107, 55, 45, 172, 225, 246, 164, 144, 99, 229, 138, 46, 45, 151, 116, 69, 185, 106, 236, 11, 253, 10, 22, 92, 172, 212, 161, 215, 197, 162, 54, 38, 19, 7, 181, 3, 235, 13, 142, 250, 22, 39, 226, 130, 160, 166, 76, 29, 146, 114, 160, 87, 20, 0, 141, 100, 211, 120, 159, 39, 57, 122, 112, 219, 121, 5, 126, 254, 22, 251, 53, 145, 21, 236, 18, 250, 98, 183, 177, 220, 138, 127, 124, 76, 218, 11, 221, 3, 50, 226, 100, 35, 227, 225, 178, 202, 167, 59, 34, 87, 69, 21, 186, 224, 88, 45, 212, 115, 96, 228, 192, 20, 223, 31, 14, 61, 219, 0, 112, 61, 101, 85, 170, 136, 221, 184, 212, 11, 128, 59, 81, 188, 162, 48, 192, 19, 62, 13, 112, 19, 154, 139, 199, 142, 193, 113, 244, 229, 88, 155, 93, 6, 204, 126, 80, 85, 78, 87, 170, 16, 222, 106, 199, 181, 222, 16, 72, 174, 76, 127, 242, 245, 67, 111, 120, 253, 172, 169, 151, 194, 239, 240, 139, 254, 208, 140, 205, 145, 10, 224, 207, 141, 89, 90, 134, 244, 222, 35, 216, 98, 48, 27, 137, 99, 121, 221, 81, 139, 47, 68, 136, 42, 79, 139, 172, 17, 161, 220, 153, 222, 88, 207, 224, 7, 254, 252, 195, 241, 155, 217, 232, 82, 209, 85, 240, 111, 18, 52, 114, 12, 245, 243, 10, 105, 130, 53, 97, 20, 254, 238, 185, 134, 93, 222, 102, 40, 72, 12, 160, 108, 175, 118, 113, 120, 31, 119, 166, 193, 33, 197, 42, 65, 66, 162, 87, 150, 217, 232, 31, 123, 246, 126, 128, 91, 181, 81, 207, 251, 127, 15, 2, 68, 73, 149, 49, 59, 172, 89, 168, 251, 19, 128, 39, 89, 245, 207, 162, 77, 157, 76, 233, 141, 182, 151, 175, 102, 4, 104, 151, 136, 209, 76, 198, 74, 4, 35, 232, 146, 249, 210, 210, 147, 11, 130, 148, 206, 171, 160, 245, 109, 138, 183, 77, 104, 182, 31, 36, 203, 51, 13, 41, 187, 55, 205, 55, 222, 247, 190, 170, 90, 226, 78, 226, 221, 76, 144, 19, 143, 189, 11, 46, 227, 37, 120, 227, 31, 183, 98, 181, 186, 208, 228, 230, 101, 108, 88, 209, 162, 120, 22, 100, 133, 232, 158, 41, 5, 166, 45, 172, 130, 201, 19, 26, 212, 168, 201, 142, 169, 228, 78, 245, 230, 129, 250, 225, 154, 143, 82, 4, 215, 84, 158, 99, 245, 13, 182, 11, 97, 94, 254, 178, 15, 174, 164, 192, 114, 202, 137, 154, 54, 67, 22, 133, 58, 114, 134, 84, 233, 139, 130, 92, 108, 50, 219, 1, 209, 108, 183, 67, 205, 213, 41, 101, 71, 196, 92, 243, 169, 141, 205, 133, 63, 184, 53, 44, 157, 166, 120, 76, 12, 12, 146, 189, 1, 12, 53, 39, 253, 91, 74, 127, 127, 131, 157, 84, 16, 109, 103, 124, 238, 220, 100, 145, 235, 176, 153, 195, 39, 115, 46, 172, 64, 193, 168, 222, 144, 38, 187, 36, 206, 220, 175, 43, 147, 225, 13, 15, 236, 96, 162, 174, 107, 217, 69, 249, 223, 103, 24, 190, 201, 255, 84, 130, 87, 19, 67, 248, 142, 182, 235, 13, 208, 43, 144, 70, 79, 15, 5, 85, 94, 122, 30, 162, 167, 135, 231, 199, 7, 152, 142, 103, 104, 34, 131, 148, 165, 185, 187, 81, 129, 42, 123, 185, 142, 137, 215, 199, 213, 16, 195, 219, 211, 63, 2, 82, 177, 215, 112, 69, 191, 211, 76, 123, 136, 98, 92, 95, 197, 136, 5, 62, 220, 248, 44, 27, 152, 181, 3, 145, 235, 93, 128, 98, 67, 59, 142, 46, 1, 201, 26, 198, 123, 129, 153, 180, 78, 63, 40, 191, 0, 185, 61, 214, 47, 68, 69, 225, 186, 163, 113, 110, 128, 86, 169, 31, 113, 203, 197, 210, 176, 93, 20, 12, 96, 253, 228, 36, 73, 197, 48, 210, 139, 180, 173, 113, 114, 99, 54, 219, 131, 174, 37, 251, 157, 151, 83, 65, 187, 76, 42, 55, 153, 241, 24, 243, 121, 168, 119, 132, 144, 148, 26, 108, 114, 78, 237, 199, 92, 132, 26, 84, 171, 100, 39, 165, 78, 235, 46, 148, 133, 167, 106, 246, 158, 146, 191, 67, 101, 240, 73, 78, 188, 99, 107, 20, 99, 34, 234, 104, 206, 155, 152, 34, 215, 178, 17, 146, 27, 155, 215, 174, 34, 86, 59, 69, 123, 48, 54, 41, 111, 218, 207, 161, 25, 255, 112, 59, 217, 51, 140, 239, 196, 231, 134, 77, 65, 63, 46, 65, 205, 104, 105, 140, 143, 98, 95, 129, 51, 126, 211, 57, 202, 116, 203, 102, 78, 54, 101, 114, 84, 173, 127, 211, 3, 40, 119, 164, 205, 110, 183, 35, 154, 86, 235, 125, 113, 44, 181, 95, 41, 255, 106, 170, 222, 156, 99, 13, 168, 196, 182, 72, 10, 53, 135, 7, 15, 89, 177, 45, 195, 65, 3, 6, 225, 28, 253, 95, 142, 227, 34, 244, 207, 91, 199, 117, 75, 123, 120, 228, 123], [132, 87, 239, 164, 55, 71, 181, 1, 179, 129, 119, 154, 253, 62, 142, 23, 213, 234, 112, 15, 244, 86, 205, 134, 219, 144, 238, 233, 143, 234, 159, 88, 9, 118, 244, 119, 15, 134, 114, 135, 155, 0, 26, 245, 157, 155, 172, 220, 94, 146, 246, 68, 83, 130, 21, 71, 56, 169, 159, 148], [68, 120, 77, 86, 78, 80, 76, 102, 86, 83, 78, 57, 84, 105, 75, 104, 99, 116, 77, 66, 79, 86, 78, 98, 89, 80, 104, 71, 111, 67, 102, 101, 101, 90, 86, 81, 69, 119, 120, 47, 105, 102, 52, 90, 79, 105, 82, 112, 106, 50, 88, 119, 53, 113, 118, 66, 114, 84, 103, 80, 122, 78, 77, 82, 88, 109, 119, 89], [119, 56, 101, 122, 118, 50, 99, 121, 73, 74, 77, 100, 81, 81, 102, 49, 90, 120, 115, 109, 79, 119, 78, 107, 74, 81, 109, 52, 43, 110, 74, 87, 88, 54, 97, 121, 43, 110, 57, 56, 43, 48, 51, 121, 104, 81, 105, 68, 98, 55, 51, 97, 79, 98, 102, 54, 115, 48, 79, 108, 75, 118, 56, 119, 81, 68, 65, 85, 71, 122, 55, 105, 43, 102, 49, 67, 73, 97, 122, 52, 78, 122, 69, 115, 84, 119, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 89, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 89, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_value: <<< res: None
update_wallet_record_tags: >>> wallet_handle: 3, type_: 'credential_exchange_v10', id: '71bf4548-eca4-4e17-9234-f2a75f0a41ed', tags_json: '{"thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc"}'
do_call: >>> name: indy_update_wallet_record_tags, args: (c_int(3), c_char_p(140572651735760), c_char_p(140572651855672), c_char_p(140572651915760), <CFunctionType object at 0x7fd99efcf368>)
do_call: Function indy_update_wallet_record_tags returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s7`: SELECT id FROM items WHERE type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s7 with parameters: [[68, 120, 77, 86, 78, 80, 76, 102, 86, 83, 78, 57, 84, 105, 75, 104, 99, 116, 77, 66, 79, 86, 78, 98, 89, 80, 104, 71, 111, 67, 102, 101, 101, 90, 86, 81, 69, 119, 120, 47, 105, 102, 52, 90, 79, 105, 82, 112, 106, 50, 88, 119, 53, 113, 118, 66, 114, 84, 103, 80, 122, 78, 77, 82, 88, 109, 119, 89], [119, 56, 101, 122, 118, 50, 99, 121, 73, 74, 77, 100, 81, 81, 102, 49, 90, 120, 115, 109, 79, 119, 78, 107, 74, 81, 109, 52, 43, 110, 74, 87, 88, 54, 97, 121, 43, 110, 57, 56, 43, 48, 51, 121, 104, 81, 105, 68, 98, 55, 51, 97, 79, 98, 102, 54, 115, 48, 79, 108, 75, 118, 56, 119, 81, 68, 65, 85, 71, 122, 55, 105, 43, 102, 49, 67, 73, 97, 122, 52, 78, 122, 69, 115, 84, 119, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_encrypted WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [8, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_plaintext WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [8, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s2 with parameters: [8, [63, 214, 72, 222, 130, 103, 146, 158, 195, 194, 230, 74, 26, 53, 129, 230, 232, 7, 33, 137, 227, 21, 72, 88, 62, 97, 106, 31, 62, 194, 84, 80, 193, 83, 183, 11, 35], [118, 216, 161, 255, 225, 241, 243, 209, 149, 17, 79, 48, 71, 125, 4, 107, 229, 121, 155, 216, 246, 172, 55, 66, 121, 145, 13, 223, 39, 217, 43, 81, 45, 74, 27, 120, 65, 214, 59, 253, 245, 44, 99, 110, 118, 85, 225, 130, 132, 109, 86, 191, 168, 17, 154, 24, 121, 233, 212, 3, 131, 86, 68, 17], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 90, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 90, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_tags: <<< res: None
  {"msg_id": "N/A", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "dict:Exchange", "timestamp": 1621255304.2847378, "str_time": "2021-05-17 12:41:44.284738", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://medic-business-logic:3010/topic/issue_credential/"}
  {"msg_id": "N/A", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "dict:Exchange", "timestamp": 1621255304.2850878, "str_time": "2021-05-17 12:41:44.285088", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.END.http://medic-business-logic:3010/topic/issue_credential/"}
get_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'f56b18ea-92e1-4f6d-a094-80da3fad398d', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573273867616), c_char_p(140572626236264), c_char_p(140573273513192), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
do_call: <<< <Future pending>
Posting to http://medic-business-logic:3010/topic/issue_credential/; Data: {"credential_proposal_dict": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential", "@id": "11b76349-c461-401e-8668-d198a86f1988", "credential_proposal": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview", "attributes": [{"name": "Name", "value": "Will Abramson"}, {"name": "University", "value": "Edinburgh Medical School"}, {"name": "Date Issued", "value": "2021-05-17"}]}, "comment": "create automated credential exchange", "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default"}, "credential_offer": {"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "key_correctness_proof": {"c": "107747385423523632115836196578250990474250248043120793044857578887670452863909", "xz_cap": "1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694", "xr_cap": [["name", "2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993"], ["university", "405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652"], ["dateissued", "2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451"], ["master_secret", "1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202"]]}, "nonce": "598069920933476898638215"}, "credential_definition_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "initiator": "external", "auto_remove": false, "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "credential_exchange_id": "71bf4548-eca4-4e17-9234-f2a75f0a41ed", "role": "holder", "auto_issue": false, "state": "request_sent", "auto_offer": false, "trace": true, "created_at": "2021-05-17 12:41:32.182428Z", "credential_request": {"prover_did": "Ss9L55FVLDVAE9wH9QUaLm", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "blinded_ms": {"u": "9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526", "ur": null, "hidden_attributes": ["master_secret"], "committed_attributes": {}}, "blinded_ms_correctness_proof": {"c": "8734654926560185522422668980289494278226532874472645869964441855250278027234", "v_dash_cap": "325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385", "m_caps": {"master_secret": "21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167"}, "r_caps": {}}, "nonce": "959712576749564225650409"}, "connection_id": "f56b18ea-92e1-4f6d-a094-80da3fad398d", "credential_request_metadata": {"master_secret_blinding_data": {"v_prime": "37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045", "vr_prime": null}, "nonce": "959712576749564225650409", "master_secret_name": "Medic"}, "updated_at": "2021-05-17 12:41:44.267074Z"}; Headers: {'Content-Type': 'application/json'}
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [120, 99, 101, 86, 104, 116, 110, 103, 56, 75, 112, 113, 55, 105, 55, 47, 101, 106, 66, 77, 104, 76, 90, 102, 98, 69, 80, 98, 116, 98, 69, 114, 78, 67, 114, 109, 116, 118, 104, 85, 108, 65, 71, 107, 71, 78, 105, 52, 67, 54, 116, 117, 88, 105, 74, 47, 50, 108, 116, 118, 83, 102, 74, 77, 116, 106, 72, 119, 105, 51, 72, 105, 55, 82, 112, 79, 114, 67, 69, 70, 85, 84, 72, 122, 122, 81, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 91, err , args: (b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 91, err , args: (b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
get_my_did_with_meta: >>> wallet_handle: 3, did: 'Ss9L55FVLDVAE9wH9QUaLm'
do_call: >>> name: indy_get_my_did_with_meta, args: (c_int(3), c_char_p(140572651919968), <CFunctionType object at 0x7fd99efcf4f8>)
do_call: Function indy_get_my_did_with_meta returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], [88, 89, 85, 105, 72, 49, 70, 85, 113, 67, 72, 76, 117, 65, 55, 114, 71, 52, 50, 82, 51, 78, 107, 86, 79, 69, 67, 72, 86, 48, 49, 83, 67, 100, 98, 89, 74, 71, 80, 70, 48, 98, 119, 100, 47, 48, 73, 49, 72, 106, 69, 87, 100, 54, 111, 71, 84, 43, 109, 72, 114, 83, 73, 105, 48, 65, 103, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], [88, 89, 85, 105, 72, 49, 70, 85, 113, 67, 72, 76, 117, 65, 55, 114, 71, 52, 50, 82, 51, 78, 107, 86, 79, 69, 67, 72, 86, 48, 49, 83, 67, 100, 98, 89, 74, 71, 80, 70, 48, 98, 119, 100, 47, 48, 73, 49, 72, 106, 69, 87, 100, 54, 111, 71, 84, 43, 109, 72, 114, 83, 73, 105, 48, 65, 103, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], [88, 89, 85, 105, 72, 49, 70, 85, 113, 67, 72, 76, 117, 65, 55, 114, 71, 52, 50, 82, 51, 78, 107, 86, 79, 69, 67, 72, 86, 48, 49, 83, 67, 100, 98, 89, 74, 71, 80, 70, 48, 98, 119, 100, 47, 48, 73, 49, 72, 106, 69, 87, 100, 54, 111, 71, 84, 43, 109, 72, 114, 83, 73, 105, 48, 65, 103, 61], "Medic"]
_indy_callback: >>> command_handle: 92, err , args: (b'{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 92, err , args: (b'{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}',)
_indy_loop_callback: Function returned b'{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}'
_indy_loop_callback <<<
get_my_did_with_meta: <<< res: '{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}'
open_wallet_search: >>> wallet_handle: 3, type_: 'did_doc', query_json: '{"did": "QxkFnUxMqbSZbC91on4s4x"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": true}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140572651893776), c_char_p(140572626236552), c_char_p(140573275299664), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s2`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: SELECT name, value from tags_plaintext where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: SELECT name, value from tags_encrypted where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s2 with parameters: [[77, 85, 81, 56, 56, 50, 111, 87, 117, 47, 43, 110, 108, 54, 77, 79, 67, 109, 79, 115, 111, 120, 56, 72, 81, 120, 72, 101, 87, 76, 105, 66, 43, 82, 83, 87, 99, 99, 71, 90, 69, 77, 77, 69, 120, 43, 107, 61], [33, 18, 52, 163, 210, 24, 37, 66, 106, 67, 212, 175, 233, 149, 190, 158, 181, 229, 125, 4, 126, 116, 61, 127, 247, 85, 218, 130, 29, 17, 97], [69, 87, 72, 224, 12, 143, 215, 241, 201, 197, 41, 92, 1, 82, 146, 108, 12, 23, 11, 140, 253, 19, 32, 94, 228, 185, 78, 179, 129, 251, 56, 148, 50, 161, 38, 53, 216, 19, 160, 146, 242, 171, 93, 159, 17, 87, 154, 36, 26, 59], "Medic", "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [6, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [6, "Medic"]
_indy_callback: >>> command_handle: 93, err , args: (24,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 93, err , args: (24,)
_indy_loop_callback: Function returned 24
_indy_loop_callback <<<
open_wallet_search: <<< res: 24
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 24, count: 2
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(24), c_uint(2), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 94, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"354ce0984d1143a1960b70e6ceadca07","value":"{\\"@context\\": \\"https://w3id.org/did/v1\\", \\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x\\", \\"publicKey\\": [{\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x#1\\", \\"type\\": \\"Ed25519VerificationKey2018\\", \\"controller\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x\\", \\"publicKeyBase58\\": \\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"}], \\"authentication\\": [{\\"type\\": \\"Ed25519SignatureAuthentication2018\\", \\"publicKey\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x#1\\"}], \\"service\\": [{\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x;indy\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"], \\"serviceEndpoint\\": \\"http://22d18366b61a.ngrok.io\\"}, {\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x;indy1\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"], \\"serviceEndpoint\\": \\"ws://22d18366b61a.ngrok.io\\"}]}","tags":{"did":"QxkFnUxMqbSZbC91on4s4x"}}]}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 94, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"354ce0984d1143a1960b70e6ceadca07","value":"{\\"@context\\": \\"https://w3id.org/did/v1\\", \\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x\\", \\"publicKey\\": [{\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x#1\\", \\"type\\": \\"Ed25519VerificationKey2018\\", \\"controller\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x\\", \\"publicKeyBase58\\": \\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"}], \\"authentication\\": [{\\"type\\": \\"Ed25519SignatureAuthentication2018\\", \\"publicKey\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x#1\\"}], \\"service\\": [{\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x;indy\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"], \\"serviceEndpoint\\": \\"http://22d18366b61a.ngrok.io\\"}, {\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x;indy1\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"], \\"serviceEndpoint\\": \\"ws://22d18366b61a.ngrok.io\\"}]}","tags":{"did":"QxkFnUxMqbSZbC91on4s4x"}}]}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":[{"type":null,"id":"354ce0984d1143a1960b70e6ceadca07","value":"{\\"@context\\": \\"https://w3id.org/did/v1\\", \\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x\\", \\"publicKey\\": [{\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x#1\\", \\"type\\": \\"Ed25519VerificationKey2018\\", \\"controller\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x\\", \\"publicKeyBase58\\": \\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"}], \\"authentication\\": [{\\"type\\": \\"Ed25519SignatureAuthentication2018\\", \\"publicKey\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x#1\\"}], \\"service\\": [{\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x;indy\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"], \\"serviceEndpoint\\": \\"http://22d18366b61a.ngrok.io\\"}, {\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x;indy1\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"], \\"serviceEndpoint\\": \\"ws://22d18366b61a.ngrok.io\\"}]}","tags":{"did":"QxkFnUxMqbSZbC91on4s4x"}}]}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":[{"type":null,"id":"354ce0984d1143a1960b70e6ceadca07","value":"{\\"@context\\": \\"https://w3id.org/did/v1\\", \\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x\\", \\"publicKey\\": [{\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x#1\\", \\"type\\": \\"Ed25519VerificationKey2018\\", \\"controller\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x\\", \\"publicKeyBase58\\": \\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"}], \\"authentication\\": [{\\"type\\": \\"Ed25519SignatureAuthentication2018\\", \\"publicKey\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x#1\\"}], \\"service\\": [{\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x;indy\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"], \\"serviceEndpoint\\": \\"http://22d18366b61a.ngrok.io\\"}, {\\"id\\": \\"did:sov:QxkFnUxMqbSZbC91on4s4x;indy1\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm\\"], \\"serviceEndpoint\\": \\"ws://22d18366b61a.ngrok.io\\"}]}","tags":{"did":"QxkFnUxMqbSZbC91on4s4x"}}]}'
close_wallet_search: >>> wallet_search_handle: 24
do_call: >>> name: indy_close_wallet_search, args: (c_int(24), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 95, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 95, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
  {"msg_id": "18e34e97-b62f-4ca8-9af5-d8ed16f04c1e", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/request-credential", "timestamp": 1621255304.3134418, "str_time": "2021-05-17 12:41:44.313442", "handler": "Medic", "ellapsed_milli": 439, "outcome": "credential_exchange_send_request.END"}
  {"msg_id": "18e34e97-b62f-4ca8-9af5-d8ed16f04c1e", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/request-credential", "timestamp": 1621255304.314192, "str_time": "2021-05-17 12:41:44.314192", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.ENCODE.START"}
  {"msg_id": "18e34e97-b62f-4ca8-9af5-d8ed16f04c1e", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/request-credential", "timestamp": 1621255304.3145523, "str_time": "2021-05-17 12:41:44.314552", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.ENCODE.END"}
192.168.208.6 [17/May/2021:12:41:43 +0000] "POST /issue-credential/records/71bf4548-eca4-4e17-9234-f2a75f0a41ed/send-request HTTP/1.1" 200 7997 "-" "Python/3.7 aiohttp/3.7.4.post0"
pack_message: >>> wallet_handle: 3, message: '{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/request-credential", "@id": "18e34e97-b62f-4ca8-9af5-d8ed16f04c1e", "~thread": {"thid": "756497eb-22b7-4c6d-9b38-052a58a9e6bc"}, "~trace": {"target": "log", "full_thread": true, "trace_reports": []}, "requests~attach": [{"@id": "libindy-cred-request-0", "mime-type": "application/json", "data": {"base64": "eyJwcm92ZXJfZGlkIjogIlNzOUw1NUZWTERWQUU5d0g5UVVhTG0iLCAiY3JlZF9kZWZfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjozOkNMOjEwOmRlZmF1bHQiLCAiYmxpbmRlZF9tcyI6IHsidSI6ICI5MjI0Mjk3MzAwMzYxNzEzMjA2MzQ1MjA1MjQyNTgxNTI1NDI1ODc2MjcxMTkyOTk2MzIwNDU4NjQxMjY4NDUzODA2OTkzMjg0NzQ0NDMzMDQxODU1OTUxMjMyMzAyNDE2MTA4NjQ5ODA3ODUyNDkzODgwNDE2NTM2NDc5MDAyMjE3NjYyNjI2MDY0MjUxOTg3OTYyNjIwNzkyNDMzNzExNjk2Nzc1MjQ4MzEwNzQzNDQyMDU5NjY3NjA3Mjk4NTU1NDcyNzg3OTEyMDE5NjU4NTQ5MTc0ODAzNDMwOTU0NTE4ODg1NzAwNjI2MDA1Mjg3MDQxMzIyOTA0NDI2OTQ2MzAzOTYyMDY1MDU2OTMxNzA2OTA4ODg4Nzg3OTM5NzA0NzI2MTc0NDMyODA4MjE2OTI3Njg1ODg3MTA5NjY2NTg3Njc0NDQ0MDU2MTkyNTUwNjYwNzE3NDIzMjI3OTI3NjI0NDUzNDg2MjgyMzQxMzE0MTQ5NDc1NzUxMDAyOTEwNDUxNTU2MDM2NTE0MzA3NzkzMDk1MzMyMTI4NTU4NzQ4ODYzMDY2OTM4NTQ3MTY4MTAwOTUxMzc3NjQ5OTMyOTEzNjc1ODM4NDQ3NTk4MDQ1MzU2Nzk5NTU1OTUxMjAxMzk4MzYxOTEyNjU4NTI0NDM1MjE3NDI1NTkxMjEwNTQxNTIxMzg5MTAwMzk2NDA4MjU0NTE5OTczMzg0NDQ3ODUxMjU5OTkxOTg5MTk1MzM3ODkyMTU5NjI2OTY0ODQ0MjIwMzIxODg5Nzg4NDEyMjA5NjUwNjEwNDczNjUyNTk1MzEzNTI2IiwgInVyIjogbnVsbCwgImhpZGRlbl9hdHRyaWJ1dGVzIjogWyJtYXN0ZXJfc2VjcmV0Il0sICJjb21taXR0ZWRfYXR0cmlidXRlcyI6IHt9fSwgImJsaW5kZWRfbXNfY29ycmVjdG5lc3NfcHJvb2YiOiB7ImMiOiAiODczNDY1NDkyNjU2MDE4NTUyMjQyMjY2ODk4MDI4OTQ5NDI3ODIyNjUzMjg3NDQ3MjY0NTg2OTk2NDQ0MTg1NTI1MDI3ODAyNzIzNCIsICJ2X2Rhc2hfY2FwIjogIjMyNTA3NzAwMTg5NTg2OTQwMTUwMjQxNTg0Mjc1MTA3NTMwODAyMzA1MTA3MDg4MzUzMDE0ODIxNjEwODc4OTU1NTE1MTAwMTU0MTc5MTE5NjEwMzQ3MzgxODc3ODk1OTg3Mjk4MTUyNzM4NjQ5MjgxNDc1NzcxNzMyODk5MDgzMDg1MzY1OTA3MDYyMTA0MDU5NjI0MzkxOTY1NDIwMjgzMzk5NDU3OTMyNjgxMTE3MDYxMDY0MjYxMDA5NTA4NjIyMzQyNjI1MzA2ODIyMzUwMjg1Mzg0OTU5MTU1NjIzNTU0ODIyNTIxODU3OTI3MDg3OTk5MDI4OTkyMDA2Njg5MDcwMDA5NTk1MjkzMDU5NjY5NDk1ODAwMzEzMjk0MjE4MjE4MjIzMTQ3Nzg5MjE2MTkzOTU2OTU1NzY2OTQ5Mjk2OTk3MjU5MTkwODQyNDExMDM0NDgzMjUwMzMwMTgxODc1MTM1MTEzMjkzNjE3MDU5NzI1NDI0NzU2MjM5Nzk1MzA0NTcxMzMxODMyMTU1NTM5MTE3MTkxMDAwOTI3MTY3MTU3MzIyOTA3NjEzODcyMjM3NTcyODgyMjgzNzg2MzYxNjAzODg1OTU2MzcwNTU4OTM0MDI0ODkyODc1NTU5MTUwODU4MDUzMDQwMjQ2NDYyMjIwNDE3ODY4MTIyMzIzODgyNTQzNjg0OTEzMzQ1MTkyNDEzMTQ2NjMxOTA2MDgwMDA3NzU5OTM0Mjg1NzY5NDIyMzQwODUxNDE0NzIwNDc3MzAxMTMwOTEzODAwODczMzA1ODA4MzQ3MzIyNDg1NjA5Mzg4MjEyOTY2MjgwNjkxNjY3Nzg3ODk5NDUyNTkwNDQ2NzYzODM5OTIzNDM2MzI2ODc5ODY1NTQwNDMwNDY5Mjc1OTMwMDYzNTU2Mjk2ODk5NTkxMDQwMDA2MDQ2NTYxMTMzMzM4NSIsICJtX2NhcHMiOiB7Im1hc3Rlcl9zZWNyZXQiOiAiMjE4NDI3MTQ0MDczMDQ5OTg0MjkyMTA2MDAzNzM4MjY1NDYzMDYxNDU3MzcyOTU0NjI2NzEzODEwOTA4NjUzNzAzOTg5Mzg4OTAzOTk2MDAwNjY2NzQyNTA0NTM3OTkzMTAzOTc0MDA4OTIwMjQ2MDAzMTE2NDMzMTQ0NDk3NDc1NzEzNTAyNDg5NTkwOTg0MjM1NzA1ODMyNTE5ODc1MDA2ODc5NTM4MjY4ODg2MjIxNjcifSwgInJfY2FwcyI6IHt9fSwgIm5vbmNlIjogIjk1OTcxMjU3Njc0OTU2NDIyNTY1MDQwOSJ9"}}]}', recipient_verkeys: ['E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm'], sender_verkey: 'F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq'
do_call: >>> name: indy_pack_message, args: (c_int(3), b'{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/request-credential", "@id": "18e34e97-b62f-4ca8-9af5-d8ed16f04c1e", "~thread": {"thid": "756497eb-22b7-4c6d-9b38-052a58a9e6bc"}, "~trace": {"target": "log", "full_thread": true, "trace_reports": []}, "requests~attach": [{"@id": "libindy-cred-request-0", "mime-type": "application/json", "data": {"base64": "eyJwcm92ZXJfZGlkIjogIlNzOUw1NUZWTERWQUU5d0g5UVVhTG0iLCAiY3JlZF9kZWZfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjozOkNMOjEwOmRlZmF1bHQiLCAiYmxpbmRlZF9tcyI6IHsidSI6ICI5MjI0Mjk3MzAwMzYxNzEzMjA2MzQ1MjA1MjQyNTgxNTI1NDI1ODc2MjcxMTkyOTk2MzIwNDU4NjQxMjY4NDUzODA2OTkzMjg0NzQ0NDMzMDQxODU1OTUxMjMyMzAyNDE2MTA4NjQ5ODA3ODUyNDkzODgwNDE2NTM2NDc5MDAyMjE3NjYyNjI2MDY0MjUxOTg3OTYyNjIwNzkyNDMzNzExNjk2Nzc1MjQ4MzEwNzQzNDQyMDU5NjY3NjA3Mjk4NTU1NDcyNzg3OTEyMDE5NjU4NTQ5MTc0ODAzNDMwOTU0NTE4ODg1NzAwNjI2MDA1Mjg3MDQxMzIyOTA0NDI2OTQ2MzAzOTYyMDY1MDU2OTMxNzA2OTA4ODg4Nzg3OTM5NzA0NzI2MTc0NDMyODA4MjE2OTI3Njg1ODg3MTA5NjY2NTg3Njc0NDQ0MDU2MTkyNTUwNjYwNzE3NDIzMjI3OTI3NjI0NDUzNDg2MjgyMzQxMzE0MTQ5NDc1NzUxMDAyOTEwNDUxNTU2MDM2NTE0MzA3NzkzMDk1MzMyMTI4NTU4NzQ4ODYzMDY2OTM4NTQ3MTY4MTAwOTUxMzc3NjQ5OTMyOTEzNjc1ODM4NDQ3NTk4MDQ1MzU2Nzk5NTU1OTUxMjAxMzk4MzYxOTEyNjU4NTI0NDM1MjE3NDI1NTkxMjEwNTQxNTIxMzg5MTAwMzk2NDA4MjU0NTE5OTczMzg0NDQ3ODUxMjU5OTkxOTg5MTk1MzM3ODkyMTU5NjI2OTY0ODQ0MjIwMzIxODg5Nzg4NDEyMjA5NjUwNjEwNDczNjUyNTk1MzEzNTI2IiwgInVyIjogbnVsbCwgImhpZGRlbl9hdHRyaWJ1dGVzIjogWyJtYXN0ZXJfc2VjcmV0Il0sICJjb21taXR0ZWRfYXR0cmlidXRlcyI6IHt9fSwgImJsaW5kZWRfbXNfY29ycmVjdG5lc3NfcHJvb2YiOiB7ImMiOiAiODczNDY1NDkyNjU2MDE4NTUyMjQyMjY2ODk4MDI4OTQ5NDI3ODIyNjUzMjg3NDQ3MjY0NTg2OTk2NDQ0MTg1NTI1MDI3ODAyNzIzNCIsICJ2X2Rhc2hfY2FwIjogIjMyNTA3NzAwMTg5NTg2OTQwMTUwMjQxNTg0Mjc1MTA3NTMwODAyMzA1MTA3MDg4MzUzMDE0ODIxNjEwODc4OTU1NTE1MTAwMTU0MTc5MTE5NjEwMzQ3MzgxODc3ODk1OTg3Mjk4MTUyNzM4NjQ5MjgxNDc1NzcxNzMyODk5MDgzMDg1MzY1OTA3MDYyMTA0MDU5NjI0MzkxOTY1NDIwMjgzMzk5NDU3OTMyNjgxMTE3MDYxMDY0MjYxMDA5NTA4NjIyMzQyNjI1MzA2ODIyMzUwMjg1Mzg0OTU5MTU1NjIzNTU0ODIyNTIxODU3OTI3MDg3OTk5MDI4OTkyMDA2Njg5MDcwMDA5NTk1MjkzMDU5NjY5NDk1ODAwMzEzMjk0MjE4MjE4MjIzMTQ3Nzg5MjE2MTkzOTU2OTU1NzY2OTQ5Mjk2OTk3MjU5MTkwODQyNDExMDM0NDgzMjUwMzMwMTgxODc1MTM1MTEzMjkzNjE3MDU5NzI1NDI0NzU2MjM5Nzk1MzA0NTcxMzMxODMyMTU1NTM5MTE3MTkxMDAwOTI3MTY3MTU3MzIyOTA3NjEzODcyMjM3NTcyODgyMjgzNzg2MzYxNjAzODg1OTU2MzcwNTU4OTM0MDI0ODkyODc1NTU5MTUwODU4MDUzMDQwMjQ2NDYyMjIwNDE3ODY4MTIyMzIzODgyNTQzNjg0OTEzMzQ1MTkyNDEzMTQ2NjMxOTA2MDgwMDA3NzU5OTM0Mjg1NzY5NDIyMzQwODUxNDE0NzIwNDc3MzAxMTMwOTEzODAwODczMzA1ODA4MzQ3MzIyNDg1NjA5Mzg4MjEyOTY2MjgwNjkxNjY3Nzg3ODk5NDUyNTkwNDQ2NzYzODM5OTIzNDM2MzI2ODc5ODY1NTQwNDMwNDY5Mjc1OTMwMDYzNTU2Mjk2ODk5NTkxMDQwMDA2MDQ2NTYxMTMzMzM4NSIsICJtX2NhcHMiOiB7Im1hc3Rlcl9zZWNyZXQiOiAiMjE4NDI3MTQ0MDczMDQ5OTg0MjkyMTA2MDAzNzM4MjY1NDYzMDYxNDU3MzcyOTU0NjI2NzEzODEwOTA4NjUzNzAzOTg5Mzg4OTAzOTk2MDAwNjY2NzQyNTA0NTM3OTkzMTAzOTc0MDA4OTIwMjQ2MDAzMTE2NDMzMTQ0NDk3NDc1NzEzNTAyNDg5NTkwOTg0MjM1NzA1ODMyNTE5ODc1MDA2ODc5NTM4MjY4ODg2MjIxNjcifSwgInJfY2FwcyI6IHt9fSwgIm5vbmNlIjogIjk1OTcxMjU3Njc0OTU2NDIyNTY1MDQwOSJ9"}}]}', c_uint(2960), c_char_p(140573273287680), c_char_p(140573273149840), <CFunctionType object at 0x7fd99efcfc00>)
do_call: Function indy_pack_message returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [97, 50, 75, 52, 116, 48, 101, 118, 65, 65, 104, 120, 49, 89, 87, 57, 53, 111, 118, 53, 55, 69, 87, 51, 50, 53, 50, 120, 50, 112, 114, 121, 122, 119, 122, 49, 78, 68, 106, 114, 78, 43, 71, 57, 56, 121, 120, 90, 65, 88, 114, 72, 110, 116, 114, 97, 101, 75, 99, 57, 87, 114, 84, 106, 56, 49, 77, 48, 72, 77, 98, 67, 66, 97, 77, 70, 43, 73, 98, 43, 51, 116, 112, 82, 116, 56, 52, 97, 115, 121, 83, 98, 113, 71, 52, 65], "Medic"]
_indy_callback: >>> command_handle: 96, err , args: (b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJJTmk4Qk5iVW1SX2NDSFB3NXhXbzFLTjEyQ0d5WWRZSFgzMFhCUVFndlF4MjhXM3RrQS1lT2EwVHF3WTRlNnlqIiwiaGVhZGVyIjp7ImtpZCI6IkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIiwiaXYiOiJMRG9NZGRYSjVXVG8wekxObmlOQmJHZlZ2YkpONjRuMiIsInNlbmRlciI6IlZleGczemdpb1pWSFFZd1hVbjlkcEhudFdOY2xkQ19VXzMyOXlhd2R5M3lhVnNTeEhZaTZlV3haa1Z2T0ZXLUFBMENUcXk1Zk9sM2FqTnR1VlN1SDdFT04xaTZCY1hfLUphVHdVTnZNem9sNHVoNElkQVFsOTV5SEJ5cz0ifX1dfQ==","iv":"WxzK7CBHPXmgPUyU","ciphertext":"WOrjs_tGRWTCCJatsLkl5g23jetPVb3xLpUNGcN0i8BMhMMgraC7cgjOh5YYDPaSCzs72UcZPz2tQXCbuTSpHeYLNCs0XW-t4hH4Geb_I2rJjnRUxYeHERqjHW1xSd762_V0EvUiktMJ9Fxu7FtfZaws50ivs2zrtiM9UXH484Zpx8qg-ExFQAr7na-pynohtP_DNOQdqAwBqqww7oo10jpv2eWUlNHu1mdrco9Hrxkm0qA2pR9R1Rj0dqqlDsQf89EPaHWlWTMyvvX4tRWdAiZMLU5KWDrxVg4GLLDeZpbcIVBa3Amldbbr-xPrW2rYt-tgAR3t9Co5Ty1o0k_B2_mWlZk7c10pbgWNLtyAwf1iyxOVOmTo5Ld_8rspOGVf7DdgEEcxedW69hnusLgeFVTgd3KXnnrwyx_WQOTe6hGQDQH6ExQY9_1_NipVZORIs6DM4NU8hNl49jlY0Frf5vGKg9Kg2B8bEzXdB9e4ZC2py0UiHrUMTGntOXc6HLbkSaGJgScwyqxkAs9BXtUUPd3X1zOo4st4i-2sxAHuZU0WVN7EbxzrIgBz8jds1n0TGfFIBTEtIOiofk5rZrOcNQsvy2_d27eCGu_szbe43wG2hQ7tWNPhqArOOSKZnrNvstV25jHJh4W0lrx1xDV4y5bNfs02jTWNyjLZ3k7Jxfe-20gsx56LfSwkBjQ4vGKII9Jc17nRiNv8iqn3fig4afGOHeCok8Cc5u1Bb8QJBI2IZJClYrOY5aLAdxyrIl39Lyq0F1cv58xzinKgI5x1i4iNhS9hvMFnKH8sBFu-bcGZJ4bjIxPGch2IkMg86Ea6V5jUG4-QcNZTYfLA_gjNu5OYGfXITTB6O452yDN0PFuTCc6C7qzwpR4MMx7arkiFbzTpLUhxUgbJLQ3ii3ZECn9TCbChOCSvzRCA7PRw-G6sPLos4oI5Qki2fXFxDRkGHNYP89C4PQ0v5EZhq9pOu5-2j2xJiD1ccj2t0hSu0zCGgEMVIMZEpjrUMj1co9r29XZAlDoU_sXvtVVgdaYtIdIJY_1pnpktRo9ItnkHREJa3kHLmA-uOKW1oH--4Lv3MdJw3u-CkPDW3_erPrN-qRGqzzgcaBp0kpAGoX2evT7JfOl_7-MCewiBy3na9IVI_fu16Se91RqpuJdt5AGstL5p3j4r5NuSeuldFnV9mC7vKNVQ9n48nTfm0bl7CU7Kjt9Ar8dQXWSQpfceNXSqFfmOJhPxmfBRgXZVxgBjkK_Ixl8oaX3Wj9cpV56O-gUqBaJ_xL8EQAgReI5Pn_KFgNvZwQytWkgRVYwf6-jhLkt2qSg2r1REW4BrKTHOqwwa0pvLJm0nRrzQDNIKx8g4_3gdluHq3RreQWXM-Q7Hh-4lO3RPki6NxLFvNpEwKUADjv0mKG1T_mV7yOLM0BzsVZ3Z3qouMHqCFyhUzts-LwzShYMJSwxHFEcwFDUIt1alvRjMcRT8uBk8XuL5I5lns-VfokAnDBFB-oYM89EKWYuYs0el907guGCNVTHfFFTT9pQ8c_h-PWsZuJF1uhOUSnKDw-dcff7kf3IQ65Ui6-MfANS1mi0VshG9AdaQE1g6EX5hJjz4suZ2geE6PxcRq6eyijs2Y-DaD9LUZnSRu6tWd1dWsdL0sfY-72iqMcNaoGtKHIXmf3Lw_xXaBJowAKWDAVf0rdvhkxCrKJTl8FhLYitbBy6LKt6q902ZdXMQH1IInm1S9CWI10l7A0KNMqgIr9I20Npsm85qBPIRNBY3oCXTTWJfracBrY0XjbsFHDdAoYM9f9A_KW9dNmP-CpQNlWJqlviYaUg6kiUHexqJNFQP6Qvwbbt2l-3BTRHs3kIPV2kNQ409DQfaachQMPvvPo6q5vcm_wab8qNEEMchtVXkUUhIuX8bFuUnEPvGas1Mlb397FuBmmBt3vDK8RvPUEVWszXqqZmc1PBKZRUbthVRslvtlhLbv_xZTMNnXEvt9EOBWX0N9Z8XIRaByq_WiD_2HW0WOxoTS1e0ZvEWxVAsclzl8aF2S_rFXgbYvdRT6hji2Zn0DzEkaC8rVpf6aKl3vDfxAF5AUQcYDmStQOYswZKU3FWFPzoKqXAbYhw2b-CNLakPIXERKyGsIi9GFrHqZK8g6fO7UduVDI5V7OUjtRiPLKfnxgnvlJVV4249IX9qO-von27uQWA3gKswPjoxva2dGEiALwXKPDNRqk1qU2twG7E_UCD766R-yNvYI8s5DmOqDQt5tS5_Yg1swWBUeXkeBhI66clgsSzJPXZ9RYrbRgExcAAA1SsTss8VUicRpZOlbD7JsNWpZDmSt80DxTZ5UImekZzFLzDxDRtjrTGvn6twxKonyvWcEXLlAHqXjGH5paV5UP60ziEXMRyeZZTsFtgtwKjhdqoNMy680kAHxfhZsDJy-72PGG5zsZ-VemFUDuCbvvlukcYdqzGbv-WhrqRWvr2HOjtuRvseB_a-PEZxK09CmGqM5zLS0ujExTgLDbUO5Jqf7o0AqbL99GnZUJ0NnihX_3nP-zhDutsPKDXdpB8XNrEWWimY0CN2iDZ7zVjp7zmvGtaoHIzgaQfvcY_PIqmI6hbZlrKP_fBTdo-uu82XqxeHHdpQ9w6FIfylh6MnHKjNVN4JepXiumtfwl7LFsOaORtPZk_uraPfntRDC-SEHzVdkpnVQx-D_IIumM0g0dLAHODWABR_12bkdXeDrkzHkV7EzhdpQwccoW75Ikwk7KhyXeNgrgBIIjUmjYedxn2hP3JIk236Xlh5YC1KyWGRG3kBGBw083sZajk7m1NRjgIabUCT3P_NCknCDBdmatuxmRVGH2t8RZclT2Ryxa-jRNbxaph2xVRJxM-XFmU2GcM9teJPKXoyY1ohCoTAsPqC5UGKHCaW_XLRt3hSatfeufQOHxbuKpCzH3H9lq7goFwbEmRYQ1A60Uvo2QVRURWWpwpwMj-tye6bQtmL3Gk7LDuhBim6rbniHkk3sXmadOpqte7rG-_3pRG3YojDmgHiCvMGZKchjuy0T0uA1bux3xT37cd0pbsh6NrkPRfZ_l2mEFGJyxR-wBXBYYXWTnTRSYLwRjYwERC_IuHT0QxK9MqKQSvibf8VGIrxllf5Ql1P1Z0CYGbqDHdBiWIe7vyr61s1-Zx5Ra6R268--LdgxcuKoUlB2Jspq92x0dUQpeFKaXhmB5AYHXZIAh2OWpAMYMQImO35l5fp9yLORWKbkbINaxvsW8IjOIYHKCm6aEAIltFs-pxh-u5hfiaYupn7KPrU1Xw2fcdj9IhtLLTv9XS_bTLSvW0aFG1p5zocmTRvoBKKvAlqBU9AIjthvPkw3uDTqjdFfEZubmuUec2S4w9Hvcha5BTvu2kNSuORTPGPcXDAamvEn7kx6KA3TLUw_FOy89E9h2M5xt8CeytP29NsJcshv7sptyX40XTFSkAfJ6d9UPPXCIvH6K9-m1A683GEkr53sYhZfJ-lcAtY18FM80DQFhB3jRLMfDPPA9yhjPN6lWrJi3rHwPRY6GlDcduJ4zYwNxuBR31tzXbTTpnIh3CFbFdh9FLxjbYT3_029hkC3D6zl3R2CAedfx1VsbjuhYjq4FyRjP_lUDUJVRJNyIWCpRheUCoUe9JJ8YyfAuQaWIFO_drH88rLkOuePkAyofZ9IRel9AXU6WRksfcmgRT-dMU3HShVSmdGM2b_GSz8sVJn-RwomiwbIv-PX7a_4M-5drt92sMnSGJDqHNTKmEO1LxdeyDxZEyrEzr1ck2UppmEB2uo1HtNJq-gysGIQqnw4CoFd-mqEzxhDvrxgLqoI5Dg1SUOccgpiKOZ9RIYM-rmCT2HD8BnG-AE3a2WeK8sUqHyjnD2SyJGFhY6sa_h-QGsyw_jyP0aDWj1hmvZzJjOPTXxd0qnYaPxmJfKUrMeMU0AQ4CJxhrpyvE=","tag":"ZdWzOtzWrK7G_lI35hZK_A=="}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 96, err , args: (b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJJTmk4Qk5iVW1SX2NDSFB3NXhXbzFLTjEyQ0d5WWRZSFgzMFhCUVFndlF4MjhXM3RrQS1lT2EwVHF3WTRlNnlqIiwiaGVhZGVyIjp7ImtpZCI6IkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIiwiaXYiOiJMRG9NZGRYSjVXVG8wekxObmlOQmJHZlZ2YkpONjRuMiIsInNlbmRlciI6IlZleGczemdpb1pWSFFZd1hVbjlkcEhudFdOY2xkQ19VXzMyOXlhd2R5M3lhVnNTeEhZaTZlV3haa1Z2T0ZXLUFBMENUcXk1Zk9sM2FqTnR1VlN1SDdFT04xaTZCY1hfLUphVHdVTnZNem9sNHVoNElkQVFsOTV5SEJ5cz0ifX1dfQ==","iv":"WxzK7CBHPXmgPUyU","ciphertext":"WOrjs_tGRWTCCJatsLkl5g23jetPVb3xLpUNGcN0i8BMhMMgraC7cgjOh5YYDPaSCzs72UcZPz2tQXCbuTSpHeYLNCs0XW-t4hH4Geb_I2rJjnRUxYeHERqjHW1xSd762_V0EvUiktMJ9Fxu7FtfZaws50ivs2zrtiM9UXH484Zpx8qg-ExFQAr7na-pynohtP_DNOQdqAwBqqww7oo10jpv2eWUlNHu1mdrco9Hrxkm0qA2pR9R1Rj0dqqlDsQf89EPaHWlWTMyvvX4tRWdAiZMLU5KWDrxVg4GLLDeZpbcIVBa3Amldbbr-xPrW2rYt-tgAR3t9Co5Ty1o0k_B2_mWlZk7c10pbgWNLtyAwf1iyxOVOmTo5Ld_8rspOGVf7DdgEEcxedW69hnusLgeFVTgd3KXnnrwyx_WQOTe6hGQDQH6ExQY9_1_NipVZORIs6DM4NU8hNl49jlY0Frf5vGKg9Kg2B8bEzXdB9e4ZC2py0UiHrUMTGntOXc6HLbkSaGJgScwyqxkAs9BXtUUPd3X1zOo4st4i-2sxAHuZU0WVN7EbxzrIgBz8jds1n0TGfFIBTEtIOiofk5rZrOcNQsvy2_d27eCGu_szbe43wG2hQ7tWNPhqArOOSKZnrNvstV25jHJh4W0lrx1xDV4y5bNfs02jTWNyjLZ3k7Jxfe-20gsx56LfSwkBjQ4vGKII9Jc17nRiNv8iqn3fig4afGOHeCok8Cc5u1Bb8QJBI2IZJClYrOY5aLAdxyrIl39Lyq0F1cv58xzinKgI5x1i4iNhS9hvMFnKH8sBFu-bcGZJ4bjIxPGch2IkMg86Ea6V5jUG4-QcNZTYfLA_gjNu5OYGfXITTB6O452yDN0PFuTCc6C7qzwpR4MMx7arkiFbzTpLUhxUgbJLQ3ii3ZECn9TCbChOCSvzRCA7PRw-G6sPLos4oI5Qki2fXFxDRkGHNYP89C4PQ0v5EZhq9pOu5-2j2xJiD1ccj2t0hSu0zCGgEMVIMZEpjrUMj1co9r29XZAlDoU_sXvtVVgdaYtIdIJY_1pnpktRo9ItnkHREJa3kHLmA-uOKW1oH--4Lv3MdJw3u-CkPDW3_erPrN-qRGqzzgcaBp0kpAGoX2evT7JfOl_7-MCewiBy3na9IVI_fu16Se91RqpuJdt5AGstL5p3j4r5NuSeuldFnV9mC7vKNVQ9n48nTfm0bl7CU7Kjt9Ar8dQXWSQpfceNXSqFfmOJhPxmfBRgXZVxgBjkK_Ixl8oaX3Wj9cpV56O-gUqBaJ_xL8EQAgReI5Pn_KFgNvZwQytWkgRVYwf6-jhLkt2qSg2r1REW4BrKTHOqwwa0pvLJm0nRrzQDNIKx8g4_3gdluHq3RreQWXM-Q7Hh-4lO3RPki6NxLFvNpEwKUADjv0mKG1T_mV7yOLM0BzsVZ3Z3qouMHqCFyhUzts-LwzShYMJSwxHFEcwFDUIt1alvRjMcRT8uBk8XuL5I5lns-VfokAnDBFB-oYM89EKWYuYs0el907guGCNVTHfFFTT9pQ8c_h-PWsZuJF1uhOUSnKDw-dcff7kf3IQ65Ui6-MfANS1mi0VshG9AdaQE1g6EX5hJjz4suZ2geE6PxcRq6eyijs2Y-DaD9LUZnSRu6tWd1dWsdL0sfY-72iqMcNaoGtKHIXmf3Lw_xXaBJowAKWDAVf0rdvhkxCrKJTl8FhLYitbBy6LKt6q902ZdXMQH1IInm1S9CWI10l7A0KNMqgIr9I20Npsm85qBPIRNBY3oCXTTWJfracBrY0XjbsFHDdAoYM9f9A_KW9dNmP-CpQNlWJqlviYaUg6kiUHexqJNFQP6Qvwbbt2l-3BTRHs3kIPV2kNQ409DQfaachQMPvvPo6q5vcm_wab8qNEEMchtVXkUUhIuX8bFuUnEPvGas1Mlb397FuBmmBt3vDK8RvPUEVWszXqqZmc1PBKZRUbthVRslvtlhLbv_xZTMNnXEvt9EOBWX0N9Z8XIRaByq_WiD_2HW0WOxoTS1e0ZvEWxVAsclzl8aF2S_rFXgbYvdRT6hji2Zn0DzEkaC8rVpf6aKl3vDfxAF5AUQcYDmStQOYswZKU3FWFPzoKqXAbYhw2b-CNLakPIXERKyGsIi9GFrHqZK8g6fO7UduVDI5V7OUjtRiPLKfnxgnvlJVV4249IX9qO-von27uQWA3gKswPjoxva2dGEiALwXKPDNRqk1qU2twG7E_UCD766R-yNvYI8s5DmOqDQt5tS5_Yg1swWBUeXkeBhI66clgsSzJPXZ9RYrbRgExcAAA1SsTss8VUicRpZOlbD7JsNWpZDmSt80DxTZ5UImekZzFLzDxDRtjrTGvn6twxKonyvWcEXLlAHqXjGH5paV5UP60ziEXMRyeZZTsFtgtwKjhdqoNMy680kAHxfhZsDJy-72PGG5zsZ-VemFUDuCbvvlukcYdqzGbv-WhrqRWvr2HOjtuRvseB_a-PEZxK09CmGqM5zLS0ujExTgLDbUO5Jqf7o0AqbL99GnZUJ0NnihX_3nP-zhDutsPKDXdpB8XNrEWWimY0CN2iDZ7zVjp7zmvGtaoHIzgaQfvcY_PIqmI6hbZlrKP_fBTdo-uu82XqxeHHdpQ9w6FIfylh6MnHKjNVN4JepXiumtfwl7LFsOaORtPZk_uraPfntRDC-SEHzVdkpnVQx-D_IIumM0g0dLAHODWABR_12bkdXeDrkzHkV7EzhdpQwccoW75Ikwk7KhyXeNgrgBIIjUmjYedxn2hP3JIk236Xlh5YC1KyWGRG3kBGBw083sZajk7m1NRjgIabUCT3P_NCknCDBdmatuxmRVGH2t8RZclT2Ryxa-jRNbxaph2xVRJxM-XFmU2GcM9teJPKXoyY1ohCoTAsPqC5UGKHCaW_XLRt3hSatfeufQOHxbuKpCzH3H9lq7goFwbEmRYQ1A60Uvo2QVRURWWpwpwMj-tye6bQtmL3Gk7LDuhBim6rbniHkk3sXmadOpqte7rG-_3pRG3YojDmgHiCvMGZKchjuy0T0uA1bux3xT37cd0pbsh6NrkPRfZ_l2mEFGJyxR-wBXBYYXWTnTRSYLwRjYwERC_IuHT0QxK9MqKQSvibf8VGIrxllf5Ql1P1Z0CYGbqDHdBiWIe7vyr61s1-Zx5Ra6R268--LdgxcuKoUlB2Jspq92x0dUQpeFKaXhmB5AYHXZIAh2OWpAMYMQImO35l5fp9yLORWKbkbINaxvsW8IjOIYHKCm6aEAIltFs-pxh-u5hfiaYupn7KPrU1Xw2fcdj9IhtLLTv9XS_bTLSvW0aFG1p5zocmTRvoBKKvAlqBU9AIjthvPkw3uDTqjdFfEZubmuUec2S4w9Hvcha5BTvu2kNSuORTPGPcXDAamvEn7kx6KA3TLUw_FOy89E9h2M5xt8CeytP29NsJcshv7sptyX40XTFSkAfJ6d9UPPXCIvH6K9-m1A683GEkr53sYhZfJ-lcAtY18FM80DQFhB3jRLMfDPPA9yhjPN6lWrJi3rHwPRY6GlDcduJ4zYwNxuBR31tzXbTTpnIh3CFbFdh9FLxjbYT3_029hkC3D6zl3R2CAedfx1VsbjuhYjq4FyRjP_lUDUJVRJNyIWCpRheUCoUe9JJ8YyfAuQaWIFO_drH88rLkOuePkAyofZ9IRel9AXU6WRksfcmgRT-dMU3HShVSmdGM2b_GSz8sVJn-RwomiwbIv-PX7a_4M-5drt92sMnSGJDqHNTKmEO1LxdeyDxZEyrEzr1ck2UppmEB2uo1HtNJq-gysGIQqnw4CoFd-mqEzxhDvrxgLqoI5Dg1SUOccgpiKOZ9RIYM-rmCT2HD8BnG-AE3a2WeK8sUqHyjnD2SyJGFhY6sa_h-QGsyw_jyP0aDWj1hmvZzJjOPTXxd0qnYaPxmJfKUrMeMU0AQ4CJxhrpyvE=","tag":"ZdWzOtzWrK7G_lI35hZK_A=="}',)
_indy_loop_callback: Function returned b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJJTmk4Qk5iVW1SX2NDSFB3NXhXbzFLTjEyQ0d5WWRZSFgzMFhCUVFndlF4MjhXM3RrQS1lT2EwVHF3WTRlNnlqIiwiaGVhZGVyIjp7ImtpZCI6IkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIiwiaXYiOiJMRG9NZGRYSjVXVG8wekxObmlOQmJHZlZ2YkpONjRuMiIsInNlbmRlciI6IlZleGczemdpb1pWSFFZd1hVbjlkcEhudFdOY2xkQ19VXzMyOXlhd2R5M3lhVnNTeEhZaTZlV3haa1Z2T0ZXLUFBMENUcXk1Zk9sM2FqTnR1VlN1SDdFT04xaTZCY1hfLUphVHdVTnZNem9sNHVoNElkQVFsOTV5SEJ5cz0ifX1dfQ==","iv":"WxzK7CBHPXmgPUyU","ciphertext":"WOrjs_tGRWTCCJatsLkl5g23jetPVb3xLpUNGcN0i8BMhMMgraC7cgjOh5YYDPaSCzs72UcZPz2tQXCbuTSpHeYLNCs0XW-t4hH4Geb_I2rJjnRUxYeHERqjHW1xSd762_V0EvUiktMJ9Fxu7FtfZaws50ivs2zrtiM9UXH484Zpx8qg-ExFQAr7na-pynohtP_DNOQdqAwBqqww7oo10jpv2eWUlNHu1mdrco9Hrxkm0qA2pR9R1Rj0dqqlDsQf89EPaHWlWTMyvvX4tRWdAiZMLU5KWDrxVg4GLLDeZpbcIVBa3Amldbbr-xPrW2rYt-tgAR3t9Co5Ty1o0k_B2_mWlZk7c10pbgWNLtyAwf1iyxOVOmTo5Ld_8rspOGVf7DdgEEcxedW69hnusLgeFVTgd3KXnnrwyx_WQOTe6hGQDQH6ExQY9_1_NipVZORIs6DM4NU8hNl49jlY0Frf5vGKg9Kg2B8bEzXdB9e4ZC2py0UiHrUMTGntOXc6HLbkSaGJgScwyqxkAs9BXtUUPd3X1zOo4st4i-2sxAHuZU0WVN7EbxzrIgBz8jds1n0TGfFIBTEtIOiofk5rZrOcNQsvy2_d27eCGu_szbe43wG2hQ7tWNPhqArOOSKZnrNvstV25jHJh4W0lrx1xDV4y5bNfs02jTWNyjLZ3k7Jxfe-20gsx56LfSwkBjQ4vGKII9Jc17nRiNv8iqn3fig4afGOHeCok8Cc5u1Bb8QJBI2IZJClYrOY5aLAdxyrIl39Lyq0F1cv58xzinKgI5x1i4iNhS9hvMFnKH8sBFu-bcGZJ4bjIxPGch2IkMg86Ea6V5jUG4-QcNZTYfLA_gjNu5OYGfXITTB6O452yDN0PFuTCc6C7qzwpR4MMx7arkiFbzTpLUhxUgbJLQ3ii3ZECn9TCbChOCSvzRCA7PRw-G6sPLos4oI5Qki2fXFxDRkGHNYP89C4PQ0v5EZhq9pOu5-2j2xJiD1ccj2t0hSu0zCGgEMVIMZEpjrUMj1co9r29XZAlDoU_sXvtVVgdaYtIdIJY_1pnpktRo9ItnkHREJa3kHLmA-uOKW1oH--4Lv3MdJw3u-CkPDW3_erPrN-qRGqzzgcaBp0kpAGoX2evT7JfOl_7-MCewiBy3na9IVI_fu16Se91RqpuJdt5AGstL5p3j4r5NuSeuldFnV9mC7vKNVQ9n48nTfm0bl7CU7Kjt9Ar8dQXWSQpfceNXSqFfmOJhPxmfBRgXZVxgBjkK_Ixl8oaX3Wj9cpV56O-gUqBaJ_xL8EQAgReI5Pn_KFgNvZwQytWkgRVYwf6-jhLkt2qSg2r1REW4BrKTHOqwwa0pvLJm0nRrzQDNIKx8g4_3gdluHq3RreQWXM-Q7Hh-4lO3RPki6NxLFvNpEwKUADjv0mKG1T_mV7yOLM0BzsVZ3Z3qouMHqCFyhUzts-LwzShYMJSwxHFEcwFDUIt1alvRjMcRT8uBk8XuL5I5lns-VfokAnDBFB-oYM89EKWYuYs0el907guGCNVTHfFFTT9pQ8c_h-PWsZuJF1uhOUSnKDw-dcff7kf3IQ65Ui6-MfANS1mi0VshG9AdaQE1g6EX5hJjz4suZ2geE6PxcRq6eyijs2Y-DaD9LUZnSRu6tWd1dWsdL0sfY-72iqMcNaoGtKHIXmf3Lw_xXaBJowAKWDAVf0rdvhkxCrKJTl8FhLYitbBy6LKt6q902ZdXMQH1IInm1S9CWI10l7A0KNMqgIr9I20Npsm85qBPIRNBY3oCXTTWJfracBrY0XjbsFHDdAoYM9f9A_KW9dNmP-CpQNlWJqlviYaUg6kiUHexqJNFQP6Qvwbbt2l-3BTRHs3kIPV2kNQ409DQfaachQMPvvPo6q5vcm_wab8qNEEMchtVXkUUhIuX8bFuUnEPvGas1Mlb397FuBmmBt3vDK8RvPUEVWszXqqZmc1PBKZRUbthVRslvtlhLbv_xZTMNnXEvt9EOBWX0N9Z8XIRaByq_WiD_2HW0WOxoTS1e0ZvEWxVAsclzl8aF2S_rFXgbYvdRT6hji2Zn0DzEkaC8rVpf6aKl3vDfxAF5AUQcYDmStQOYswZKU3FWFPzoKqXAbYhw2b-CNLakPIXERKyGsIi9GFrHqZK8g6fO7UduVDI5V7OUjtRiPLKfnxgnvlJVV4249IX9qO-von27uQWA3gKswPjoxva2dGEiALwXKPDNRqk1qU2twG7E_UCD766R-yNvYI8s5DmOqDQt5tS5_Yg1swWBUeXkeBhI66clgsSzJPXZ9RYrbRgExcAAA1SsTss8VUicRpZOlbD7JsNWpZDmSt80DxTZ5UImekZzFLzDxDRtjrTGvn6twxKonyvWcEXLlAHqXjGH5paV5UP60ziEXMRyeZZTsFtgtwKjhdqoNMy680kAHxfhZsDJy-72PGG5zsZ-VemFUDuCbvvlukcYdqzGbv-WhrqRWvr2HOjtuRvseB_a-PEZxK09CmGqM5zLS0ujExTgLDbUO5Jqf7o0AqbL99GnZUJ0NnihX_3nP-zhDutsPKDXdpB8XNrEWWimY0CN2iDZ7zVjp7zmvGtaoHIzgaQfvcY_PIqmI6hbZlrKP_fBTdo-uu82XqxeHHdpQ9w6FIfylh6MnHKjNVN4JepXiumtfwl7LFsOaORtPZk_uraPfntRDC-SEHzVdkpnVQx-D_IIumM0g0dLAHODWABR_12bkdXeDrkzHkV7EzhdpQwccoW75Ikwk7KhyXeNgrgBIIjUmjYedxn2hP3JIk236Xlh5YC1KyWGRG3kBGBw083sZajk7m1NRjgIabUCT3P_NCknCDBdmatuxmRVGH2t8RZclT2Ryxa-jRNbxaph2xVRJxM-XFmU2GcM9teJPKXoyY1ohCoTAsPqC5UGKHCaW_XLRt3hSatfeufQOHxbuKpCzH3H9lq7goFwbEmRYQ1A60Uvo2QVRURWWpwpwMj-tye6bQtmL3Gk7LDuhBim6rbniHkk3sXmadOpqte7rG-_3pRG3YojDmgHiCvMGZKchjuy0T0uA1bux3xT37cd0pbsh6NrkPRfZ_l2mEFGJyxR-wBXBYYXWTnTRSYLwRjYwERC_IuHT0QxK9MqKQSvibf8VGIrxllf5Ql1P1Z0CYGbqDHdBiWIe7vyr61s1-Zx5Ra6R268--LdgxcuKoUlB2Jspq92x0dUQpeFKaXhmB5AYHXZIAh2OWpAMYMQImO35l5fp9yLORWKbkbINaxvsW8IjOIYHKCm6aEAIltFs-pxh-u5hfiaYupn7KPrU1Xw2fcdj9IhtLLTv9XS_bTLSvW0aFG1p5zocmTRvoBKKvAlqBU9AIjthvPkw3uDTqjdFfEZubmuUec2S4w9Hvcha5BTvu2kNSuORTPGPcXDAamvEn7kx6KA3TLUw_FOy89E9h2M5xt8CeytP29NsJcshv7sptyX40XTFSkAfJ6d9UPPXCIvH6K9-m1A683GEkr53sYhZfJ-lcAtY18FM80DQFhB3jRLMfDPPA9yhjPN6lWrJi3rHwPRY6GlDcduJ4zYwNxuBR31tzXbTTpnIh3CFbFdh9FLxjbYT3_029hkC3D6zl3R2CAedfx1VsbjuhYjq4FyRjP_lUDUJVRJNyIWCpRheUCoUe9JJ8YyfAuQaWIFO_drH88rLkOuePkAyofZ9IRel9AXU6WRksfcmgRT-dMU3HShVSmdGM2b_GSz8sVJn-RwomiwbIv-PX7a_4M-5drt92sMnSGJDqHNTKmEO1LxdeyDxZEyrEzr1ck2UppmEB2uo1HtNJq-gysGIQqnw4CoFd-mqEzxhDvrxgLqoI5Dg1SUOccgpiKOZ9RIYM-rmCT2HD8BnG-AE3a2WeK8sUqHyjnD2SyJGFhY6sa_h-QGsyw_jyP0aDWj1hmvZzJjOPTXxd0qnYaPxmJfKUrMeMU0AQ4CJxhrpyvE=","tag":"ZdWzOtzWrK7G_lI35hZK_A=="}'
_indy_loop_callback <<<
pack_message: <<< res: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJJTmk4Qk5iVW1SX2NDSFB3NXhXbzFLTjEyQ0d5WWRZSFgzMFhCUVFndlF4MjhXM3RrQS1lT2EwVHF3WTRlNnlqIiwiaGVhZGVyIjp7ImtpZCI6IkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIiwiaXYiOiJMRG9NZGRYSjVXVG8wekxObmlOQmJHZlZ2YkpONjRuMiIsInNlbmRlciI6IlZleGczemdpb1pWSFFZd1hVbjlkcEhudFdOY2xkQ19VXzMyOXlhd2R5M3lhVnNTeEhZaTZlV3haa1Z2T0ZXLUFBMENUcXk1Zk9sM2FqTnR1VlN1SDdFT04xaTZCY1hfLUphVHdVTnZNem9sNHVoNElkQVFsOTV5SEJ5cz0ifX1dfQ==","iv":"WxzK7CBHPXmgPUyU","ciphertext":"WOrjs_tGRWTCCJatsLkl5g23jetPVb3xLpUNGcN0i8BMhMMgraC7cgjOh5YYDPaSCzs72UcZPz2tQXCbuTSpHeYLNCs0XW-t4hH4Geb_I2rJjnRUxYeHERqjHW1xSd762_V0EvUiktMJ9Fxu7FtfZaws50ivs2zrtiM9UXH484Zpx8qg-ExFQAr7na-pynohtP_DNOQdqAwBqqww7oo10jpv2eWUlNHu1mdrco9Hrxkm0qA2pR9R1Rj0dqqlDsQf89EPaHWlWTMyvvX4tRWdAiZMLU5KWDrxVg4GLLDeZpbcIVBa3Amldbbr-xPrW2rYt-tgAR3t9Co5Ty1o0k_B2_mWlZk7c10pbgWNLtyAwf1iyxOVOmTo5Ld_8rspOGVf7DdgEEcxedW69hnusLgeFVTgd3KXnnrwyx_WQOTe6hGQDQH6ExQY9_1_NipVZORIs6DM4NU8hNl49jlY0Frf5vGKg9Kg2B8bEzXdB9e4ZC2py0UiHrUMTGntOXc6HLbkSaGJgScwyqxkAs9BXtUUPd3X1zOo4st4i-2sxAHuZU0WVN7EbxzrIgBz8jds1n0TGfFIBTEtIOiofk5rZrOcNQsvy2_d27eCGu_szbe43wG2hQ7tWNPhqArOOSKZnrNvstV25jHJh4W0lrx1xDV4y5bNfs02jTWNyjLZ3k7Jxfe-20gsx56LfSwkBjQ4vGKII9Jc17nRiNv8iqn3fig4afGOHeCok8Cc5u1Bb8QJBI2IZJClYrOY5aLAdxyrIl39Lyq0F1cv58xzinKgI5x1i4iNhS9hvMFnKH8sBFu-bcGZJ4bjIxPGch2IkMg86Ea6V5jUG4-QcNZTYfLA_gjNu5OYGfXITTB6O452yDN0PFuTCc6C7qzwpR4MMx7arkiFbzTpLUhxUgbJLQ3ii3ZECn9TCbChOCSvzRCA7PRw-G6sPLos4oI5Qki2fXFxDRkGHNYP89C4PQ0v5EZhq9pOu5-2j2xJiD1ccj2t0hSu0zCGgEMVIMZEpjrUMj1co9r29XZAlDoU_sXvtVVgdaYtIdIJY_1pnpktRo9ItnkHREJa3kHLmA-uOKW1oH--4Lv3MdJw3u-CkPDW3_erPrN-qRGqzzgcaBp0kpAGoX2evT7JfOl_7-MCewiBy3na9IVI_fu16Se91RqpuJdt5AGstL5p3j4r5NuSeuldFnV9mC7vKNVQ9n48nTfm0bl7CU7Kjt9Ar8dQXWSQpfceNXSqFfmOJhPxmfBRgXZVxgBjkK_Ixl8oaX3Wj9cpV56O-gUqBaJ_xL8EQAgReI5Pn_KFgNvZwQytWkgRVYwf6-jhLkt2qSg2r1REW4BrKTHOqwwa0pvLJm0nRrzQDNIKx8g4_3gdluHq3RreQWXM-Q7Hh-4lO3RPki6NxLFvNpEwKUADjv0mKG1T_mV7yOLM0BzsVZ3Z3qouMHqCFyhUzts-LwzShYMJSwxHFEcwFDUIt1alvRjMcRT8uBk8XuL5I5lns-VfokAnDBFB-oYM89EKWYuYs0el907guGCNVTHfFFTT9pQ8c_h-PWsZuJF1uhOUSnKDw-dcff7kf3IQ65Ui6-MfANS1mi0VshG9AdaQE1g6EX5hJjz4suZ2geE6PxcRq6eyijs2Y-DaD9LUZnSRu6tWd1dWsdL0sfY-72iqMcNaoGtKHIXmf3Lw_xXaBJowAKWDAVf0rdvhkxCrKJTl8FhLYitbBy6LKt6q902ZdXMQH1IInm1S9CWI10l7A0KNMqgIr9I20Npsm85qBPIRNBY3oCXTTWJfracBrY0XjbsFHDdAoYM9f9A_KW9dNmP-CpQNlWJqlviYaUg6kiUHexqJNFQP6Qvwbbt2l-3BTRHs3kIPV2kNQ409DQfaachQMPvvPo6q5vcm_wab8qNEEMchtVXkUUhIuX8bFuUnEPvGas1Mlb397FuBmmBt3vDK8RvPUEVWszXqqZmc1PBKZRUbthVRslvtlhLbv_xZTMNnXEvt9EOBWX0N9Z8XIRaByq_WiD_2HW0WOxoTS1e0ZvEWxVAsclzl8aF2S_rFXgbYvdRT6hji2Zn0DzEkaC8rVpf6aKl3vDfxAF5AUQcYDmStQOYswZKU3FWFPzoKqXAbYhw2b-CNLakPIXERKyGsIi9GFrHqZK8g6fO7UduVDI5V7OUjtRiPLKfnxgnvlJVV4249IX9qO-von27uQWA3gKswPjoxva2dGEiALwXKPDNRqk1qU2twG7E_UCD766R-yNvYI8s5DmOqDQt5tS5_Yg1swWBUeXkeBhI66clgsSzJPXZ9RYrbRgExcAAA1SsTss8VUicRpZOlbD7JsNWpZDmSt80DxTZ5UImekZzFLzDxDRtjrTGvn6twxKonyvWcEXLlAHqXjGH5paV5UP60ziEXMRyeZZTsFtgtwKjhdqoNMy680kAHxfhZsDJy-72PGG5zsZ-VemFUDuCbvvlukcYdqzGbv-WhrqRWvr2HOjtuRvseB_a-PEZxK09CmGqM5zLS0ujExTgLDbUO5Jqf7o0AqbL99GnZUJ0NnihX_3nP-zhDutsPKDXdpB8XNrEWWimY0CN2iDZ7zVjp7zmvGtaoHIzgaQfvcY_PIqmI6hbZlrKP_fBTdo-uu82XqxeHHdpQ9w6FIfylh6MnHKjNVN4JepXiumtfwl7LFsOaORtPZk_uraPfntRDC-SEHzVdkpnVQx-D_IIumM0g0dLAHODWABR_12bkdXeDrkzHkV7EzhdpQwccoW75Ikwk7KhyXeNgrgBIIjUmjYedxn2hP3JIk236Xlh5YC1KyWGRG3kBGBw083sZajk7m1NRjgIabUCT3P_NCknCDBdmatuxmRVGH2t8RZclT2Ryxa-jRNbxaph2xVRJxM-XFmU2GcM9teJPKXoyY1ohCoTAsPqC5UGKHCaW_XLRt3hSatfeufQOHxbuKpCzH3H9lq7goFwbEmRYQ1A60Uvo2QVRURWWpwpwMj-tye6bQtmL3Gk7LDuhBim6rbniHkk3sXmadOpqte7rG-_3pRG3YojDmgHiCvMGZKchjuy0T0uA1bux3xT37cd0pbsh6NrkPRfZ_l2mEFGJyxR-wBXBYYXWTnTRSYLwRjYwERC_IuHT0QxK9MqKQSvibf8VGIrxllf5Ql1P1Z0CYGbqDHdBiWIe7vyr61s1-Zx5Ra6R268--LdgxcuKoUlB2Jspq92x0dUQpeFKaXhmB5AYHXZIAh2OWpAMYMQImO35l5fp9yLORWKbkbINaxvsW8IjOIYHKCm6aEAIltFs-pxh-u5hfiaYupn7KPrU1Xw2fcdj9IhtLLTv9XS_bTLSvW0aFG1p5zocmTRvoBKKvAlqBU9AIjthvPkw3uDTqjdFfEZubmuUec2S4w9Hvcha5BTvu2kNSuORTPGPcXDAamvEn7kx6KA3TLUw_FOy89E9h2M5xt8CeytP29NsJcshv7sptyX40XTFSkAfJ6d9UPPXCIvH6K9-m1A683GEkr53sYhZfJ-lcAtY18FM80DQFhB3jRLMfDPPA9yhjPN6lWrJi3rHwPRY6GlDcduJ4zYwNxuBR31tzXbTTpnIh3CFbFdh9FLxjbYT3_029hkC3D6zl3R2CAedfx1VsbjuhYjq4FyRjP_lUDUJVRJNyIWCpRheUCoUe9JJ8YyfAuQaWIFO_drH88rLkOuePkAyofZ9IRel9AXU6WRksfcmgRT-dMU3HShVSmdGM2b_GSz8sVJn-RwomiwbIv-PX7a_4M-5drt92sMnSGJDqHNTKmEO1LxdeyDxZEyrEzr1ck2UppmEB2uo1HtNJq-gysGIQqnw4CoFd-mqEzxhDvrxgLqoI5Dg1SUOccgpiKOZ9RIYM-rmCT2HD8BnG-AE3a2WeK8sUqHyjnD2SyJGFhY6sa_h-QGsyw_jyP0aDWj1hmvZzJjOPTXxd0qnYaPxmJfKUrMeMU0AQ4CJxhrpyvE=","tag":"ZdWzOtzWrK7G_lI35hZK_A=="}'
  {"msg_id": "18e34e97-b62f-4ca8-9af5-d8ed16f04c1e", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/request-credential", "timestamp": 1621255304.323228, "str_time": "2021-05-17 12:41:44.323228", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://22d18366b61a.ngrok.io"}
  {"msg_id": "18e34e97-b62f-4ca8-9af5-d8ed16f04c1e", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/request-credential", "timestamp": 1621255304.323975, "str_time": "2021-05-17 12:41:44.323975", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.END.http://22d18366b61a.ngrok.io"}
Posting to http://22d18366b61a.ngrok.io; Data: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJJTmk4Qk5iVW1SX2NDSFB3NXhXbzFLTjEyQ0d5WWRZSFgzMFhCUVFndlF4MjhXM3RrQS1lT2EwVHF3WTRlNnlqIiwiaGVhZGVyIjp7ImtpZCI6IkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIiwiaXYiOiJMRG9NZGRYSjVXVG8wekxObmlOQmJHZlZ2YkpONjRuMiIsInNlbmRlciI6IlZleGczemdpb1pWSFFZd1hVbjlkcEhudFdOY2xkQ19VXzMyOXlhd2R5M3lhVnNTeEhZaTZlV3haa1Z2T0ZXLUFBMENUcXk1Zk9sM2FqTnR1VlN1SDdFT04xaTZCY1hfLUphVHdVTnZNem9sNHVoNElkQVFsOTV5SEJ5cz0ifX1dfQ==","iv":"WxzK7CBHPXmgPUyU","ciphertext":"WOrjs_tGRWTCCJatsLkl5g23jetPVb3xLpUNGcN0i8BMhMMgraC7cgjOh5YYDPaSCzs72UcZPz2tQXCbuTSpHeYLNCs0XW-t4hH4Geb_I2rJjnRUxYeHERqjHW1xSd762_V0EvUiktMJ9Fxu7FtfZaws50ivs2zrtiM9UXH484Zpx8qg-ExFQAr7na-pynohtP_DNOQdqAwBqqww7oo10jpv2eWUlNHu1mdrco9Hrxkm0qA2pR9R1Rj0dqqlDsQf89EPaHWlWTMyvvX4tRWdAiZMLU5KWDrxVg4GLLDeZpbcIVBa3Amldbbr-xPrW2rYt-tgAR3t9Co5Ty1o0k_B2_mWlZk7c10pbgWNLtyAwf1iyxOVOmTo5Ld_8rspOGVf7DdgEEcxedW69hnusLgeFVTgd3KXnnrwyx_WQOTe6hGQDQH6ExQY9_1_NipVZORIs6DM4NU8hNl49jlY0Frf5vGKg9Kg2B8bEzXdB9e4ZC2py0UiHrUMTGntOXc6HLbkSaGJgScwyqxkAs9BXtUUPd3X1zOo4st4i-2sxAHuZU0WVN7EbxzrIgBz8jds1n0TGfFIBTEtIOiofk5rZrOcNQsvy2_d27eCGu_szbe43wG2hQ7tWNPhqArOOSKZnrNvstV25jHJh4W0lrx1xDV4y5bNfs02jTWNyjLZ3k7Jxfe-20gsx56LfSwkBjQ4vGKII9Jc17nRiNv8iqn3fig4afGOHeCok8Cc5u1Bb8QJBI2IZJClYrOY5aLAdxyrIl39Lyq0F1cv58xzinKgI5x1i4iNhS9hvMFnKH8sBFu-bcGZJ4bjIxPGch2IkMg86Ea6V5jUG4-QcNZTYfLA_gjNu5OYGfXITTB6O452yDN0PFuTCc6C7qzwpR4MMx7arkiFbzTpLUhxUgbJLQ3ii3ZECn9TCbChOCSvzRCA7PRw-G6sPLos4oI5Qki2fXFxDRkGHNYP89C4PQ0v5EZhq9pOu5-2j2xJiD1ccj2t0hSu0zCGgEMVIMZEpjrUMj1co9r29XZAlDoU_sXvtVVgdaYtIdIJY_1pnpktRo9ItnkHREJa3kHLmA-uOKW1oH--4Lv3MdJw3u-CkPDW3_erPrN-qRGqzzgcaBp0kpAGoX2evT7JfOl_7-MCewiBy3na9IVI_fu16Se91RqpuJdt5AGstL5p3j4r5NuSeuldFnV9mC7vKNVQ9n48nTfm0bl7CU7Kjt9Ar8dQXWSQpfceNXSqFfmOJhPxmfBRgXZVxgBjkK_Ixl8oaX3Wj9cpV56O-gUqBaJ_xL8EQAgReI5Pn_KFgNvZwQytWkgRVYwf6-jhLkt2qSg2r1REW4BrKTHOqwwa0pvLJm0nRrzQDNIKx8g4_3gdluHq3RreQWXM-Q7Hh-4lO3RPki6NxLFvNpEwKUADjv0mKG1T_mV7yOLM0BzsVZ3Z3qouMHqCFyhUzts-LwzShYMJSwxHFEcwFDUIt1alvRjMcRT8uBk8XuL5I5lns-VfokAnDBFB-oYM89EKWYuYs0el907guGCNVTHfFFTT9pQ8c_h-PWsZuJF1uhOUSnKDw-dcff7kf3IQ65Ui6-MfANS1mi0VshG9AdaQE1g6EX5hJjz4suZ2geE6PxcRq6eyijs2Y-DaD9LUZnSRu6tWd1dWsdL0sfY-72iqMcNaoGtKHIXmf3Lw_xXaBJowAKWDAVf0rdvhkxCrKJTl8FhLYitbBy6LKt6q902ZdXMQH1IInm1S9CWI10l7A0KNMqgIr9I20Npsm85qBPIRNBY3oCXTTWJfracBrY0XjbsFHDdAoYM9f9A_KW9dNmP-CpQNlWJqlviYaUg6kiUHexqJNFQP6Qvwbbt2l-3BTRHs3kIPV2kNQ409DQfaachQMPvvPo6q5vcm_wab8qNEEMchtVXkUUhIuX8bFuUnEPvGas1Mlb397FuBmmBt3vDK8RvPUEVWszXqqZmc1PBKZRUbthVRslvtlhLbv_xZTMNnXEvt9EOBWX0N9Z8XIRaByq_WiD_2HW0WOxoTS1e0ZvEWxVAsclzl8aF2S_rFXgbYvdRT6hji2Zn0DzEkaC8rVpf6aKl3vDfxAF5AUQcYDmStQOYswZKU3FWFPzoKqXAbYhw2b-CNLakPIXERKyGsIi9GFrHqZK8g6fO7UduVDI5V7OUjtRiPLKfnxgnvlJVV4249IX9qO-von27uQWA3gKswPjoxva2dGEiALwXKPDNRqk1qU2twG7E_UCD766R-yNvYI8s5DmOqDQt5tS5_Yg1swWBUeXkeBhI66clgsSzJPXZ9RYrbRgExcAAA1SsTss8VUicRpZOlbD7JsNWpZDmSt80DxTZ5UImekZzFLzDxDRtjrTGvn6twxKonyvWcEXLlAHqXjGH5paV5UP60ziEXMRyeZZTsFtgtwKjhdqoNMy680kAHxfhZsDJy-72PGG5zsZ-VemFUDuCbvvlukcYdqzGbv-WhrqRWvr2HOjtuRvseB_a-PEZxK09CmGqM5zLS0ujExTgLDbUO5Jqf7o0AqbL99GnZUJ0NnihX_3nP-zhDutsPKDXdpB8XNrEWWimY0CN2iDZ7zVjp7zmvGtaoHIzgaQfvcY_PIqmI6hbZlrKP_fBTdo-uu82XqxeHHdpQ9w6FIfylh6MnHKjNVN4JepXiumtfwl7LFsOaORtPZk_uraPfntRDC-SEHzVdkpnVQx-D_IIumM0g0dLAHODWABR_12bkdXeDrkzHkV7EzhdpQwccoW75Ikwk7KhyXeNgrgBIIjUmjYedxn2hP3JIk236Xlh5YC1KyWGRG3kBGBw083sZajk7m1NRjgIabUCT3P_NCknCDBdmatuxmRVGH2t8RZclT2Ryxa-jRNbxaph2xVRJxM-XFmU2GcM9teJPKXoyY1ohCoTAsPqC5UGKHCaW_XLRt3hSatfeufQOHxbuKpCzH3H9lq7goFwbEmRYQ1A60Uvo2QVRURWWpwpwMj-tye6bQtmL3Gk7LDuhBim6rbniHkk3sXmadOpqte7rG-_3pRG3YojDmgHiCvMGZKchjuy0T0uA1bux3xT37cd0pbsh6NrkPRfZ_l2mEFGJyxR-wBXBYYXWTnTRSYLwRjYwERC_IuHT0QxK9MqKQSvibf8VGIrxllf5Ql1P1Z0CYGbqDHdBiWIe7vyr61s1-Zx5Ra6R268--LdgxcuKoUlB2Jspq92x0dUQpeFKaXhmB5AYHXZIAh2OWpAMYMQImO35l5fp9yLORWKbkbINaxvsW8IjOIYHKCm6aEAIltFs-pxh-u5hfiaYupn7KPrU1Xw2fcdj9IhtLLTv9XS_bTLSvW0aFG1p5zocmTRvoBKKvAlqBU9AIjthvPkw3uDTqjdFfEZubmuUec2S4w9Hvcha5BTvu2kNSuORTPGPcXDAamvEn7kx6KA3TLUw_FOy89E9h2M5xt8CeytP29NsJcshv7sptyX40XTFSkAfJ6d9UPPXCIvH6K9-m1A683GEkr53sYhZfJ-lcAtY18FM80DQFhB3jRLMfDPPA9yhjPN6lWrJi3rHwPRY6GlDcduJ4zYwNxuBR31tzXbTTpnIh3CFbFdh9FLxjbYT3_029hkC3D6zl3R2CAedfx1VsbjuhYjq4FyRjP_lUDUJVRJNyIWCpRheUCoUe9JJ8YyfAuQaWIFO_drH88rLkOuePkAyofZ9IRel9AXU6WRksfcmgRT-dMU3HShVSmdGM2b_GSz8sVJn-RwomiwbIv-PX7a_4M-5drt92sMnSGJDqHNTKmEO1LxdeyDxZEyrEzr1ck2UppmEB2uo1HtNJq-gysGIQqnw4CoFd-mqEzxhDvrxgLqoI5Dg1SUOccgpiKOZ9RIYM-rmCT2HD8BnG-AE3a2WeK8sUqHyjnD2SyJGFhY6sa_h-QGsyw_jyP0aDWj1hmvZzJjOPTXxd0qnYaPxmJfKUrMeMU0AQ4CJxhrpyvE=","tag":"ZdWzOtzWrK7G_lI35hZK_A=="}'; Headers: {'Content-Type': 'application/ssi-agent-wire'}
unpack_message: >>> wallet_handle: 3, jwe: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiItb0cyWHhJS1ZzRUoxTHVwSTJuck83bzFBWmpwcG1DUDJ1RUU4V05leWFYZjBmaVNCR0dtZkQ5RmI1dk10TkVjIiwiaGVhZGVyIjp7ImtpZCI6IkY2ZFZvUkpNeEQyZnJFbjZKazFWNGE4TGNYaGNTTExhbU5DZXZacHBVMVBxIiwiaXYiOiJNX3d4TXlUby1XZ0xtTTRwN0NMSENLTUhfVER6T2gzVCIsInNlbmRlciI6InAxQk5qRmNYc2twQ2JoeGR4TU1iY1ZQeEVfSTFZQnJWXzdpdXVhWjZpRlp0MzZUeEhuMDNOWEZHZzJpaDFiU1lOWWdyMEFLcWpodE9ObFE4WXl5X3QzT2lLTjNPNWZpTU42enB6NFQwUk9VQWFnanBYLWx1Q0VQMmI4bz0ifX1dfQ==","iv":"tnB8kDkO3s93C73K","ciphertext":"1NWKu9xAHwQr92OCK4r-nr0EWR6V35F1NGwcbhHk3p1V9GTvLLe12HZG13ZJiU6RQ0F4z_sLXcs0NzN_nNRSE-eXLtle5g0wpBcOO_fZPDxIZqL3WKEtQ7IVXIW_A0xjvwQoVXpJOEIJYuyWzoLAd--yP6-eHQXNRUDY3oMaXKUvAJLxK9ci2QBI7kPpDSgdY5GmJWLU4_aqbis7cYJTGy_wEj1ylYDUfgFJK6E1UNNolF-0Yy-1PlCcdqpuk1vdAaU3xkUiwlYxwfpvnHol-StjiUEKIEAADUzXZCnT2JNqcrfuwGkEm-YmKAIC-HdgaRK6bAVTaavEsaXI69dasZeq-jT1QI78dL6FVXDYDuK9deFBgs2OKubXjOY6BGDrdviW_3udIXp7ilR9pTQQ3g8A3ZRRr8P6E_Jy0dFiJsaUn-iiBTyujZ-mltxic0mw6fzO4-rst6TJAQDpg9YK3Ps8KIGu79KsQgDv_bLTfkJbz7O4TrNAah0K95FFYP0YyzDn3-IvP2q2KuWyP2GhDLBNZUIlyJnnJwkzpJfPzuBKV1vpeW8xRtBWUAiRCbvMSXOL1PnJ9uBn20RLwikIfuhRmlbnTMzd8eP6KGZgu1uM_-odZu-mL66exLod5yNllvvBly-4Wn9GkQofPauTLiZo0TJQ-9r17NAasIUk818UZ_3LHsdVBNSvAfbrci5h8z-tElUKqE8tTVfZ5bJDqPp3UrayRoT3gRIR6RY6VjkooWpmMVIj67KYhmjWjgA5XTy67G99K-hSdWKDxhufq_LHoAO6Lua8c_ajqvhjWqWb-C-x9XFqeb_9CPcmLJ8WC8KOqUl4cwineFZnMzopjV9WEsMTuq4MWnsoJ69CbEtW8eb4PiAJQBtRLuO9MAm5TC6wsj2YkuYyst2Y_xhh9HLyHmTWT6ZgJGqnk8YmgTTQ8OQRMq00g4G4NLzuJ8kzNVKgI71QR1HoX5O6RrpBh3QvRiEu7LpK7wbOY6rjfo5FKkPdC88saL4AYh_gBaEiRVFLhoZeWMdEKHAzHae7DWj7Ii0W09w9OQAyJC6CmJamf6pzjn5nlG6z9b_qoExo2Z9BU4613MveVY4kL2O7cGz6xqDMhyPO3VFQ5Zj-jWIk5AM7nDa9YomMWGIjll0sy94XnpYuH_uZMc6g9W7dYWAjOVKmuzgVZlfXMlw3IzH9GAtNlK7-lQAAcyU9GT8ScJExJJE9Jbi3WtP5W4Qflr4NFnhzN3Db0zVWpnamBpNZQNldqR3Muqr51lem-gGk0TtwZZbYwO9_qEa00apJyJ0JlNiMuqT-ZMZKIh5swVKw58y_BMQsktbNpKyu-nN1-CdGl_yWzF0_HVeeqH5atwbhd-HcwU0JNGpcnrAyk03xFpQA84Wg0WuFtAqD76TFYVSt-yLS-8WtAGLbPF4_WtgesAxQ4EcxFO0odqwA0BqWsCb3pVfxqsZjpPg7rIO3sH2oi2danuXB_P-OCzUPkpIR_ot41g_CwYQ8UsxkcLWn4XFcTZjtEz1k66sVSj6BaQvY6ckK2ALrVHEILcB_bqtnSl_-JmSydnf-9B9aV6BQtki7bSGN1DWzH135OeTWwHImPuWCbwaPdDnSTBxEolbKcxZ7O-zRSIz0J8GHrX-r7TjUZzYOik-lULZ2rCbceD1-XKCEA7CY951FAVDW6IPzl5mZqOfSEZdZ69YYOiyAHNAZ453QjqUgVCeimPDXFbL9HTAaaIzin4ybXAn0gNSWJaveuJ1-MSU_LJH0QAsAbwOfGMq0hZU3iyvLYwSFfWdzTmOqfyro9IF-FS6t5ySIsSitU1fTkU3yiqucOzChFG3f64EcMCrEvnsA0AofYbbftsbpXcUHZYE4Z18j3pLC-_iQdwANHSF4EmBh7DGCw4B7XTj9V3YdThB1Jvr6ieJKTJaNpn6DbtuXiknltBU3tWgjZDKEA9gDNZY4OZhCHuOXMZfmm37oAzqVIzrKhQM8XIGKObTSfntnqS5ownwWOb6GNwZTx40FIoiL2QHAdg90ar26xZjnBmh9T-dihYVb4YTkxL6l8sZcV8TfvXJS4uzbvH9tzoDoGtacrZbZwZzb3_YgrUqrmW0SmG0ad_f9RcqhxotTd7X1dDBU7DfgTbFnmKwxPKz8v60R9a_7j-e1Wmw8ueMODTd47L0KeqLUogKGYXsF4yNxtkLClTnKrArXzIWnatCsUKC4ZZB4QEzRNGPRLLe9WAUS3WKeTz9V75-tab2Si-4r9jx97EPYk0CqhjuXSELlfyLC_ogd0jYUiXZd0V-cgB1RXLsnbPlAi5P4BWBAKELi9IXLYuSV-z_G6Us4D8X2A29xmjoiRUk33x_xg27guOuSNp2NAhjTvuRGqE-PipvCwn0kJ6wxI1JgF2oyVPExCVKG28n-WV1JBCYX4u0ZYOOK5_GngOcR3aCghsynv5B2YP42-iG5BqIqewtvhc6Wgx-9FRJfOcaXEduootbHDxmYUAS_gFDxRq1NT02ndIw8bogtIwudsZPRgPJhdWTJa0r0e015Xolm6wibfcebcnGkX1M_FerYdCKX_RiNgfXtPSkQU5x3825T8lxoemx7l-Gsg0891Jbl6XOeAPPfqFXpYBWnGIKynI3-NSs1ri31g2wbhjhBq0V-9a87BSffFTsqbdIAZaDnUOIgpzwM-oZV4L71yXKZe4ihsrF5WeDx9QP4T7G4CS47eHT_5tVA4AP9p3acjNZObKVSWjMLG-_lw5749JPOtiQUld4ArIbbyKI9nMWOAQFSJg0R6bmTka4fN0EovS9eetI-ZjeWNlPH2xrH99_twyfeLK5ApijF4pNHcycuRlkIBYteyUMsKUVuG1mkfp0fKPPvqej4ZaDSJoxGu9On7h5APLMhEcTVcCONHUwlvAtBjZpEojdRJEzFHx7ZP6B6Pn-7BNK9vewWQOTPL9lk28wqQpWpEboblX8i3T47kY-DljXjit5kitH0Rd5ko41ZnoxDTmVB49QksCvOwfxkPgEpnSVvuOkJ2SietbjRQN9jNap7dJMkir3Y26WzzjvNd0nYvsa3tKpIiSWjIfoAsthVoiRsEctZHWi_plp1iWkSJ56mr8QxlFMRcD0pP8DcWpXuRUlnUOoqoY3zxeOzmrt-lCLEalwgN0xGrq1G1Xiitz6CiRCiiNcQwWBAV5dqe2BqwKsp9uhdsFtPs5LnvZcvSyjUR5X7BxfvXI99iurUmI1GMAuZF1zi70nawspYarlX7xTrvfj9_o-D_tbN-Sya-CWyTCki69BOEGnw_LSMvO_CB9xfBWbjX1MbpuztVBFpqM-iO6-gtDQyA1Ae4V1RvDv2gwc7839Yvuu1bs6RXRVsbxSXUPO6hSaSXVnzc-bLbWdJNrBlT0LPwb5JqAlZ-XHlIhqoj7a6ZG2EoUcxcLTwhz7YrVgo-52qBIBNV5Lr4lg3iTRTZBJXzqo-KrfWxVq7lgNTddcd4gjZrTtLjIKvwwb0-82s8T3JwEpPq4J8KzdDdT8WjpAqUgmjqfT_qGoLbYKblZikcQuUI2XQKBfRFWcz54z6CRvZDXaNpmx5x1lBR2QAh7lU0KWQNK8uVaOebbQlHZPtA5XPzDvi3xA82-IxZxjP47yWjOIZPqv-pyn6KRXuwZD_HUM_fsonuZ9RYuwOnzGbLaG8K6lssWK4mzzIb5PRDHUAwgx5K10mFH-bB1BsF3J88KKMoliZsvOgKmqPJOAEIKKoDE4Rg5USSe4lkZcPS_4xtqDPRvOy8CjejwCAVpPWVGFMCkOrS5Iw1FKb4fn9gygJnPigZX37X4x3uYg7u739zGEH1VbYV3j4SjziDVjGG5edY8l9QGGPScRvWL-UHzqXi9SEjkuwueRPlokhaS8nY_mMF2JZGzLDCGwx_2gfH38YHuvNGhDgqJS-xrCLlqJkQryodgzGT4kBOZUD6bmAQFTp0h4tKax5E_eHs7ZPLbyhlUkWhXylIZzvDuSZp36OkJVOqImdikdbJn2fkvMEmOXMaxyos2Vaiz8hAaRrmwulQh4k3QY08reuxcm8p62mdO2bZT--S_7mfntRd2DIEI_JT9guYIvl2MM1zKqpzJOGl96RrvN4JcEauj-eTJxN_56hCihimB1c9iHJ6qsScFe7crpVFNlRZQoVleLE0qmPVqntdyn4M58jFP-9VZcw_qHMeKa7qUK4serDY6737-7qzyCrYW0WYBE1_sGz2qKUgcKjwPW1T3PSlK_lVEq07NsB4KYcIg61QV7fYFYhyePaz9AOy0-9p-UlrMJo1BKGSs3yWhS2p3s2sJlCl3iKfuq35Tm7tf0nUb31ll97whOOW-KxmsoVo3JvVBxt9Qg5TXUr-nIp-aiovcJ7C_Zx0kalug64xjswmNCiu-teHOfg2dm0DSb2sc-RmqxgI2LXDc3yW_KVwea7c8AbkGinjOXxisLutnGnz9y7TrR3i1Da7SJe4ex3gHmKNCafyXsTJfxGoafMsta7DnMr6HWBzAATWoiB1PSO6ZqavYHC-7RDH2Gujo9ChbJ9NBuc3Hjw2MaLEG-uQ4ejqO-3gVaI_umN3XR5ZAtXdswD_UlbQ0-9eYSAVU1SJH_snTYhkK42IVm-3v6srbkPadJpSvcRwcVDvUj_CPeB_PngZ1ya3hn_2_Nvob47_4h_smMfACBijGpTNe_qqbgizFuRCq6Lkjx6AWu_9BIC0fLJI2_piSsoKzd_nQ9hRgAP1aeDH0wcVcdj_3f-L9Eolbnc_hcgvIIYjISlqwwlRz0qpFgZLFRBqvP3aPwbljXtiqeTAUrEauKVwjUiee9OPT-Vk40gKEGTk1OSWxNVJ5vATgkU7mpTtOyW3vSsSuHMYPdmQfs_vyweZfipZZpX2Ra98nShN_l_vu0TcctXEUV0fb2i4oEVVCFMK3Pui0GwfZozHFb-VcUKkQ5fvtcGqNKfydRbGyIwP2o2HbG7N5iDUxomjRm3AMNJQENm85Oj-LbxfAUYMm9eOMnJucEgow9hDZ8EiptkIOW-9AhWAVBDCnvz9ccH9l2gsSIX0y2Rn909fx__Md5rAz9OdD1hi0jtBMmbgHtsdGzdc2_WTrZfLzqQ11xC3UwwNIUKy9UyFA5JMWEj-wDu21SPPhLo9shwviqdYpnHYv8qT1TB3J9olZm12ouz5Bp7-rJM1rTeRiYPrEsjlKVCh9ViBV2w63KgWj2OnTa3oCLkWVSQgP3zWFkfEgsRF7Ba6FrPbTGQHHMIlWg8h5vhYxezBARdCSInF4bWy9fAL3KoMJA2VujgRenrILE3NbqFjOGpsRBt_E5w1ZhN4fstkdfAxT2vPfORota6jGMZmonMxJv4HAaNSryVztDsZ9BTM5Jp15XKfnq6Epdydg8RIu2Zw28EdrBzQGYZWWUcUBxSh_i5X0EXWkDcm5Gsktyl33RLDm27uOGk7_Xx--mM3fTfAcktZXyhsAVEsmaXvT7Vif6RcUfueVFLW7kFIJ3UX8iL4_11XXr8On6zCEZhLWYU3VEy8jnRJxxBiOa7_YRhwVtRipFSITCHQfSwADKDBkfCYHH5PBI-yI_ZJ2FWfdq-RF7jjIeYVSkznvT_0-CWM3wYIG88IMOtHeA3Vc7Guh4dzR0H8elxiZuSXzdmC-agKgivpTd_XUR15CIEgLcTtJ6kukkT1D0AXv4TK_I_8-yBRD1YJK3Qs9zkq8uDbfnT-yQS78ijorZMBfisDXr5IKscUV55cbl1AT_x3RKg8pD2TmyF2vOcxoXqqGUveIYUoYw-kn1lX7EArHQ_Ck-CzhHfUEpJRJFibnuplxeDVUl9BKpKZIs0zsKuRINOwLEzpgvOxDtbdRCLFm5g9FfpSMiJH3unNxL0rEebaU7z-TXJqOJAEa8GfqbqweX0v46cvwVv-CYUTStYEWFGWFkIBwr9QEVHPVtMDBwq0xq-TwJuW0LWmrEZgNBjdp4zMjtUSQxXrNal0zBr1vwoRV68qe5jfj1UVkEYFKgld_E2Tg1j4UxezIBnkd1TG212E6hTfq7b0uuYcmnM3CZwHpcoYHAVgX857HIrEkNJoEDOOL8MDWSgrmQVK_vgTb60s9EIczOFJ8LLt6z3Uw04ncibtHvI9M32iiaKGlHX3qjqzPsIlUsT6EaHmi77CfQT6JabZGBtWye2qBQR5-BmpPvCqekz57syPVe1iWcBlc9jrYAQkg==","tag":"a9VsPp4S9PVJKl6NXCXSIA=="}'
do_call: >>> name: indy_unpack_message, args: (c_int(3), b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiItb0cyWHhJS1ZzRUoxTHVwSTJuck83bzFBWmpwcG1DUDJ1RUU4V05leWFYZjBmaVNCR0dtZkQ5RmI1dk10TkVjIiwiaGVhZGVyIjp7ImtpZCI6IkY2ZFZvUkpNeEQyZnJFbjZKazFWNGE4TGNYaGNTTExhbU5DZXZacHBVMVBxIiwiaXYiOiJNX3d4TXlUby1XZ0xtTTRwN0NMSENLTUhfVER6T2gzVCIsInNlbmRlciI6InAxQk5qRmNYc2twQ2JoeGR4TU1iY1ZQeEVfSTFZQnJWXzdpdXVhWjZpRlp0MzZUeEhuMDNOWEZHZzJpaDFiU1lOWWdyMEFLcWpodE9ObFE4WXl5X3QzT2lLTjNPNWZpTU42enB6NFQwUk9VQWFnanBYLWx1Q0VQMmI4bz0ifX1dfQ==","iv":"tnB8kDkO3s93C73K","ciphertext":"1NWKu9xAHwQr92OCK4r-nr0EWR6V35F1NGwcbhHk3p1V9GTvLLe12HZG13ZJiU6RQ0F4z_sLXcs0NzN_nNRSE-eXLtle5g0wpBcOO_fZPDxIZqL3WKEtQ7IVXIW_A0xjvwQoVXpJOEIJYuyWzoLAd--yP6-eHQXNRUDY3oMaXKUvAJLxK9ci2QBI7kPpDSgdY5GmJWLU4_aqbis7cYJTGy_wEj1ylYDUfgFJK6E1UNNolF-0Yy-1PlCcdqpuk1vdAaU3xkUiwlYxwfpvnHol-StjiUEKIEAADUzXZCnT2JNqcrfuwGkEm-YmKAIC-HdgaRK6bAVTaavEsaXI69dasZeq-jT1QI78dL6FVXDYDuK9deFBgs2OKubXjOY6BGDrdviW_3udIXp7ilR9pTQQ3g8A3ZRRr8P6E_Jy0dFiJsaUn-iiBTyujZ-mltxic0mw6fzO4-rst6TJAQDpg9YK3Ps8KIGu79KsQgDv_bLTfkJbz7O4TrNAah0K95FFYP0YyzDn3-IvP2q2KuWyP2GhDLBNZUIlyJnnJwkzpJfPzuBKV1vpeW8xRtBWUAiRCbvMSXOL1PnJ9uBn20RLwikIfuhRmlbnTMzd8eP6KGZgu1uM_-odZu-mL66exLod5yNllvvBly-4Wn9GkQofPauTLiZo0TJQ-9r17NAasIUk818UZ_3LHsdVBNSvAfbrci5h8z-tElUKqE8tTVfZ5bJDqPp3UrayRoT3gRIR6RY6VjkooWpmMVIj67KYhmjWjgA5XTy67G99K-hSdWKDxhufq_LHoAO6Lua8c_ajqvhjWqWb-C-x9XFqeb_9CPcmLJ8WC8KOqUl4cwineFZnMzopjV9WEsMTuq4MWnsoJ69CbEtW8eb4PiAJQBtRLuO9MAm5TC6wsj2YkuYyst2Y_xhh9HLyHmTWT6ZgJGqnk8YmgTTQ8OQRMq00g4G4NLzuJ8kzNVKgI71QR1HoX5O6RrpBh3QvRiEu7LpK7wbOY6rjfo5FKkPdC88saL4AYh_gBaEiRVFLhoZeWMdEKHAzHae7DWj7Ii0W09w9OQAyJC6CmJamf6pzjn5nlG6z9b_qoExo2Z9BU4613MveVY4kL2O7cGz6xqDMhyPO3VFQ5Zj-jWIk5AM7nDa9YomMWGIjll0sy94XnpYuH_uZMc6g9W7dYWAjOVKmuzgVZlfXMlw3IzH9GAtNlK7-lQAAcyU9GT8ScJExJJE9Jbi3WtP5W4Qflr4NFnhzN3Db0zVWpnamBpNZQNldqR3Muqr51lem-gGk0TtwZZbYwO9_qEa00apJyJ0JlNiMuqT-ZMZKIh5swVKw58y_BMQsktbNpKyu-nN1-CdGl_yWzF0_HVeeqH5atwbhd-HcwU0JNGpcnrAyk03xFpQA84Wg0WuFtAqD76TFYVSt-yLS-8WtAGLbPF4_WtgesAxQ4EcxFO0odqwA0BqWsCb3pVfxqsZjpPg7rIO3sH2oi2danuXB_P-OCzUPkpIR_ot41g_CwYQ8UsxkcLWn4XFcTZjtEz1k66sVSj6BaQvY6ckK2ALrVHEILcB_bqtnSl_-JmSydnf-9B9aV6BQtki7bSGN1DWzH135OeTWwHImPuWCbwaPdDnSTBxEolbKcxZ7O-zRSIz0J8GHrX-r7TjUZzYOik-lULZ2rCbceD1-XKCEA7CY951FAVDW6IPzl5mZqOfSEZdZ69YYOiyAHNAZ453QjqUgVCeimPDXFbL9HTAaaIzin4ybXAn0gNSWJaveuJ1-MSU_LJH0QAsAbwOfGMq0hZU3iyvLYwSFfWdzTmOqfyro9IF-FS6t5ySIsSitU1fTkU3yiqucOzChFG3f64EcMCrEvnsA0AofYbbftsbpXcUHZYE4Z18j3pLC-_iQdwANHSF4EmBh7DGCw4B7XTj9V3YdThB1Jvr6ieJKTJaNpn6DbtuXiknltBU3tWgjZDKEA9gDNZY4OZhCHuOXMZfmm37oAzqVIzrKhQM8XIGKObTSfntnqS5ownwWOb6GNwZTx40FIoiL2QHAdg90ar26xZjnBmh9T-dihYVb4YTkxL6l8sZcV8TfvXJS4uzbvH9tzoDoGtacrZbZwZzb3_YgrUqrmW0SmG0ad_f9RcqhxotTd7X1dDBU7DfgTbFnmKwxPKz8v60R9a_7j-e1Wmw8ueMODTd47L0KeqLUogKGYXsF4yNxtkLClTnKrArXzIWnatCsUKC4ZZB4QEzRNGPRLLe9WAUS3WKeTz9V75-tab2Si-4r9jx97EPYk0CqhjuXSELlfyLC_ogd0jYUiXZd0V-cgB1RXLsnbPlAi5P4BWBAKELi9IXLYuSV-z_G6Us4D8X2A29xmjoiRUk33x_xg27guOuSNp2NAhjTvuRGqE-PipvCwn0kJ6wxI1JgF2oyVPExCVKG28n-WV1JBCYX4u0ZYOOK5_GngOcR3aCghsynv5B2YP42-iG5BqIqewtvhc6Wgx-9FRJfOcaXEduootbHDxmYUAS_gFDxRq1NT02ndIw8bogtIwudsZPRgPJhdWTJa0r0e015Xolm6wibfcebcnGkX1M_FerYdCKX_RiNgfXtPSkQU5x3825T8lxoemx7l-Gsg0891Jbl6XOeAPPfqFXpYBWnGIKynI3-NSs1ri31g2wbhjhBq0V-9a87BSffFTsqbdIAZaDnUOIgpzwM-oZV4L71yXKZe4ihsrF5WeDx9QP4T7G4CS47eHT_5tVA4AP9p3acjNZObKVSWjMLG-_lw5749JPOtiQUld4ArIbbyKI9nMWOAQFSJg0R6bmTka4fN0EovS9eetI-ZjeWNlPH2xrH99_twyfeLK5ApijF4pNHcycuRlkIBYteyUMsKUVuG1mkfp0fKPPvqej4ZaDSJoxGu9On7h5APLMhEcTVcCONHUwlvAtBjZpEojdRJEzFHx7ZP6B6Pn-7BNK9vewWQOTPL9lk28wqQpWpEboblX8i3T47kY-DljXjit5kitH0Rd5ko41ZnoxDTmVB49QksCvOwfxkPgEpnSVvuOkJ2SietbjRQN9jNap7dJMkir3Y26WzzjvNd0nYvsa3tKpIiSWjIfoAsthVoiRsEctZHWi_plp1iWkSJ56mr8QxlFMRcD0pP8DcWpXuRUlnUOoqoY3zxeOzmrt-lCLEalwgN0xGrq1G1Xiitz6CiRCiiNcQwWBAV5dqe2BqwKsp9uhdsFtPs5LnvZcvSyjUR5X7BxfvXI99iurUmI1GMAuZF1zi70nawspYarlX7xTrvfj9_o-D_tbN-Sya-CWyTCki69BOEGnw_LSMvO_CB9xfBWbjX1MbpuztVBFpqM-iO6-gtDQyA1Ae4V1RvDv2gwc7839Yvuu1bs6RXRVsbxSXUPO6hSaSXVnzc-bLbWdJNrBlT0LPwb5JqAlZ-XHlIhqoj7a6ZG2EoUcxcLTwhz7YrVgo-52qBIBNV5Lr4lg3iTRTZBJXzqo-KrfWxVq7lgNTddcd4gjZrTtLjIKvwwb0-82s8T3JwEpPq4J8KzdDdT8WjpAqUgmjqfT_qGoLbYKblZikcQuUI2XQKBfRFWcz54z6CRvZDXaNpmx5x1lBR2QAh7lU0KWQNK8uVaOebbQlHZPtA5XPzDvi3xA82-IxZxjP47yWjOIZPqv-pyn6KRXuwZD_HUM_fsonuZ9RYuwOnzGbLaG8K6lssWK4mzzIb5PRDHUAwgx5K10mFH-bB1BsF3J88KKMoliZsvOgKmqPJOAEIKKoDE4Rg5USSe4lkZcPS_4xtqDPRvOy8CjejwCAVpPWVGFMCkOrS5Iw1FKb4fn9gygJnPigZX37X4x3uYg7u739zGEH1VbYV3j4SjziDVjGG5edY8l9QGGPScRvWL-UHzqXi9SEjkuwueRPlokhaS8nY_mMF2JZGzLDCGwx_2gfH38YHuvNGhDgqJS-xrCLlqJkQryodgzGT4kBOZUD6bmAQFTp0h4tKax5E_eHs7ZPLbyhlUkWhXylIZzvDuSZp36OkJVOqImdikdbJn2fkvMEmOXMaxyos2Vaiz8hAaRrmwulQh4k3QY08reuxcm8p62mdO2bZT--S_7mfntRd2DIEI_JT9guYIvl2MM1zKqpzJOGl96RrvN4JcEauj-eTJxN_56hCihimB1c9iHJ6qsScFe7crpVFNlRZQoVleLE0qmPVqntdyn4M58jFP-9VZcw_qHMeKa7qUK4serDY6737-7qzyCrYW0WYBE1_sGz2qKUgcKjwPW1T3PSlK_lVEq07NsB4KYcIg61QV7fYFYhyePaz9AOy0-9p-UlrMJo1BKGSs3yWhS2p3s2sJlCl3iKfuq35Tm7tf0nUb31ll97whOOW-KxmsoVo3JvVBxt9Qg5TXUr-nIp-aiovcJ7C_Zx0kalug64xjswmNCiu-teHOfg2dm0DSb2sc-RmqxgI2LXDc3yW_KVwea7c8AbkGinjOXxisLutnGnz9y7TrR3i1Da7SJe4ex3gHmKNCafyXsTJfxGoafMsta7DnMr6HWBzAATWoiB1PSO6ZqavYHC-7RDH2Gujo9ChbJ9NBuc3Hjw2MaLEG-uQ4ejqO-3gVaI_umN3XR5ZAtXdswD_UlbQ0-9eYSAVU1SJH_snTYhkK42IVm-3v6srbkPadJpSvcRwcVDvUj_CPeB_PngZ1ya3hn_2_Nvob47_4h_smMfACBijGpTNe_qqbgizFuRCq6Lkjx6AWu_9BIC0fLJI2_piSsoKzd_nQ9hRgAP1aeDH0wcVcdj_3f-L9Eolbnc_hcgvIIYjISlqwwlRz0qpFgZLFRBqvP3aPwbljXtiqeTAUrEauKVwjUiee9OPT-Vk40gKEGTk1OSWxNVJ5vATgkU7mpTtOyW3vSsSuHMYPdmQfs_vyweZfipZZpX2Ra98nShN_l_vu0TcctXEUV0fb2i4oEVVCFMK3Pui0GwfZozHFb-VcUKkQ5fvtcGqNKfydRbGyIwP2o2HbG7N5iDUxomjRm3AMNJQENm85Oj-LbxfAUYMm9eOMnJucEgow9hDZ8EiptkIOW-9AhWAVBDCnvz9ccH9l2gsSIX0y2Rn909fx__Md5rAz9OdD1hi0jtBMmbgHtsdGzdc2_WTrZfLzqQ11xC3UwwNIUKy9UyFA5JMWEj-wDu21SPPhLo9shwviqdYpnHYv8qT1TB3J9olZm12ouz5Bp7-rJM1rTeRiYPrEsjlKVCh9ViBV2w63KgWj2OnTa3oCLkWVSQgP3zWFkfEgsRF7Ba6FrPbTGQHHMIlWg8h5vhYxezBARdCSInF4bWy9fAL3KoMJA2VujgRenrILE3NbqFjOGpsRBt_E5w1ZhN4fstkdfAxT2vPfORota6jGMZmonMxJv4HAaNSryVztDsZ9BTM5Jp15XKfnq6Epdydg8RIu2Zw28EdrBzQGYZWWUcUBxSh_i5X0EXWkDcm5Gsktyl33RLDm27uOGk7_Xx--mM3fTfAcktZXyhsAVEsmaXvT7Vif6RcUfueVFLW7kFIJ3UX8iL4_11XXr8On6zCEZhLWYU3VEy8jnRJxxBiOa7_YRhwVtRipFSITCHQfSwADKDBkfCYHH5PBI-yI_ZJ2FWfdq-RF7jjIeYVSkznvT_0-CWM3wYIG88IMOtHeA3Vc7Guh4dzR0H8elxiZuSXzdmC-agKgivpTd_XUR15CIEgLcTtJ6kukkT1D0AXv4TK_I_8-yBRD1YJK3Qs9zkq8uDbfnT-yQS78ijorZMBfisDXr5IKscUV55cbl1AT_x3RKg8pD2TmyF2vOcxoXqqGUveIYUoYw-kn1lX7EArHQ_Ck-CzhHfUEpJRJFibnuplxeDVUl9BKpKZIs0zsKuRINOwLEzpgvOxDtbdRCLFm5g9FfpSMiJH3unNxL0rEebaU7z-TXJqOJAEa8GfqbqweX0v46cvwVv-CYUTStYEWFGWFkIBwr9QEVHPVtMDBwq0xq-TwJuW0LWmrEZgNBjdp4zMjtUSQxXrNal0zBr1vwoRV68qe5jfj1UVkEYFKgld_E2Tg1j4UxezIBnkd1TG212E6hTfq7b0uuYcmnM3CZwHpcoYHAVgX857HIrEkNJoEDOOL8MDWSgrmQVK_vgTb60s9EIczOFJ8LLt6z3Uw04ncibtHvI9M32iiaKGlHX3qjqzPsIlUsT6EaHmi77CfQT6JabZGBtWye2qBQR5-BmpPvCqekz57syPVe1iWcBlc9jrYAQkg==","tag":"a9VsPp4S9PVJKl6NXCXSIA=="}', c_uint(6837), <CFunctionType object at 0x7fd99efcfe58>)
do_call: Function indy_unpack_message returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [97, 50, 75, 52, 116, 48, 101, 118, 65, 65, 104, 120, 49, 89, 87, 57, 53, 111, 118, 53, 55, 69, 87, 51, 50, 53, 50, 120, 50, 112, 114, 121, 122, 119, 122, 49, 78, 68, 106, 114, 78, 43, 71, 57, 56, 121, 120, 90, 65, 88, 114, 72, 110, 116, 114, 97, 101, 75, 99, 57, 87, 114, 84, 106, 56, 49, 77, 48, 72, 77, 98, 67, 66, 97, 77, 70, 43, 73, 98, 43, 51, 116, 112, 82, 116, 56, 52, 97, 115, 121, 83, 98, 113, 71, 52, 65], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [97, 50, 75, 52, 116, 48, 101, 118, 65, 65, 104, 120, 49, 89, 87, 57, 53, 111, 118, 53, 55, 69, 87, 51, 50, 53, 50, 120, 50, 112, 114, 121, 122, 119, 122, 49, 78, 68, 106, 114, 78, 43, 71, 57, 56, 121, 120, 90, 65, 88, 114, 72, 110, 116, 114, 97, 101, 75, 99, 57, 87, 114, 84, 106, 56, 49, 77, 48, 72, 77, 98, 67, 66, 97, 77, 70, 43, 73, 98, 43, 51, 116, 112, 82, 116, 56, 52, 97, 115, 121, 83, 98, 113, 71, 52, 65], "Medic"]
_indy_callback: >>> command_handle: 97, err , args: (b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/issue-credential\\", \\"@id\\": \\"4875f78a-fa55-4747-97b1-1434438bd878\\", \\"~thread\\": {\\"thid\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\"}, \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:41:44.569710Z\\", \\"out_time\\": \\"2021-05-17 12:41:45.122079Z\\"}, \\"credentials~attach\\": [{\\"@id\\": \\"libindy-cred-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgInJldl9yZWdfaWQiOiBudWxsLCAidmFsdWVzIjogeyJEYXRlIElzc3VlZCI6IHsicmF3IjogIjIwMjEtMDUtMTciLCAiZW5jb2RlZCI6ICIzMTkyODcwOTE2MzYwMDczNTQ0MTEwMTQ3NjY1ODgxNDIxNjg4NTM4ODI1MjE4OTgzODA1ODk3MzA3MDc5MjAyMjgwMTU5MTMzNjU3OSJ9LCAiTmFtZSI6IHsicmF3IjogIldpbGwgQWJyYW1zb24iLCAiZW5jb2RlZCI6ICI2NTAwNTU0ODkwNTAzNzc2NDc2NDUwMjM1MDA1MzgyNTc2OTkxNDg3NDA4MjY0ODc2MTIzMDQ1ODY3MDc5NjI0MTM5Mjg5MTY1OTYxMSJ9LCAiVW5pdmVyc2l0eSI6IHsicmF3IjogIkVkaW5idXJnaCBNZWRpY2FsIFNjaG9vbCIsICJlbmNvZGVkIjogIjU3OTYzMTI1NjQ4OTk0NjY2MzAwODc1MzYxNjIxNzI5MzEzMzUxMTU4MTU0NzQwMTM4MTczMTAzNDE1MDIwMzM0NTk0MDQzNjk0MzE3In19LCAic2lnbmF0dXJlIjogeyJwX2NyZWRlbnRpYWwiOiB7Im1fMiI6ICI2NDYxNDAyNzk1OTIzNzE0ODQwNjU3Nzg3NjY0MzU4MjE5MzY1NDE5NTc5ODE5OTY1OTY2MzU1OTU2NTMyNDA3NDQ3NDExMDg3NjQyNiIsICJhIjogIjI4MTk2NjU5MzQ5ODI4ODMzODQxODA2NTY4OTIyNTAwMzMxNDE5OTQzNzU2NzkzNDcyNTkyNTE1MjQ2MDcwNDcyMTY5MTgzMTAzNTU0OTQ0Mjc4MTk4MTUzODE2NTc0Mjc0MTQ5NzIwOTg3MDk1MTExNDg2MDY4OTMwMTY4MjE5NzE0OTIwMTk3NzQzNzk2MjA2NTMwNTYxNDM4NjEyNDc0NzE4NDk4MzE5NzQzMjg1MDc2NTYyNTk2MTY5MjEzNTQ1NDI5OTMwNjA5NDQxMjI5ODA4ODEwMTk4MzE0NTk1NTk4MjAyNjAwOTA0Mzc3ODc5NjE3MjY5NjE5MDA5OTk3ODg5OTIxMzY1NzI5MTY0MzIxOTg4MjQ2NDI1NzYwNTA3OTYyMDEzMjEzMTc5MzU2NDg5MTY1ODg2NDk1ODc5OTM3ODMwNzU3ODYwODEzNTUwNDg4NjUzMDkyMjcwMTgyMzE2NTkxNTU4MTA3Mzc3NTA1MDk0MDA1NDM4NjYyNDE0NTU2MDU4MjY4MTUxMzk0MzExNDg4MDM4MDM0MzcxOTQ1MDUwOTQ0ODMxNTcwNjI1OTk1NDEzMjI4MjkzNDE1OTE5MjAyMDU1OTc0Mjc2OTkwMDEzOTk0MTAyNzcyNTY2MTM3NzQ2MzIyMDQzMTA3MTQ3OTY1Njg5NTc3Nzk0NDg3NzcxNDI1NDI0NjA5MjcwNjM3NTI3MzM0NzEyMjQwNTgxOTQwMzM3NDM5MzQ4ODAxMTU1OTIzNDU2MTA1NjU2NDY4MzI4OTA0MjYzMzAyMTE0MTE4NTI2NTM3NTAxMDA3MTM5NjY5IiwgImUiOiAiMjU5MzQ0NzIzMDU1MDYyMDU5OTA3MDI1NDkxNDgwNjk3NTcxOTM4Mjc3ODg5NTE1MTUyMzA2MjQ5NzI4NTgzMTA1NjY1ODAwNzEzMzA2NzU5MTQ5OTgxNjkwNTU5MTkzOTg3MTQzMDEyMzY3OTEzMjA2Mjk5MzIzODk5Njk2OTQyMjEzMjM1OTU2NzQyOTMwMDQ2MDMxNjg2NTYxMjI5NDAzODQ0MzQ1MTEzNjE4NDIwMDI5IiwgInYiOiAiNjM1NDAyNjMzNjM4ODMwMTQwMTk4NjUyMTE1Mjg5MDk3MjI0OTcwOTYxODgxMzk2NDI0NTYwMjAzNzMzODMzMDY5ODczNDMxNDEzMDgyODAwNjc2NTYwMTU1NTIwMTcyODY3NjExNDM5MzU3MzczMjYwMjY5Mzg4Njk2NTg0OTM5MjEwNzg1NTYzMDI5NzM1MTg5MTY0MDgwMTI2OTk5MDAzNDY1OTc0NzkyNjA1MzE4NTA3MDA5ODIwMTU0MjQzMDUwODUxNTcwODg4OTI3MDgzMDI4MDM1ODIyMjg3NDUyMjg2NTE5MjM3ODMzNTgyMTc1MzQ4Nzk1NDI0NTQ5MTAwMjc2OTA1MzQ5MTIwNDIwODQ2NjYxOTUzMzE4NTE0MzUyNzAwMjY5OTMxMzAzMTgyNzI3NzY2MDcxNzA0Nzk3MjIzMzEyMDExOTQ2NTcwMjg0MTExMjk1NDc5ODY1NTA3MjIxMTQ2Nzg4OTkxNzM1OTcwOTk4MDMwOTE2MTEwMjQyNzU2MjUzNTc0MTA4MDA2MTA0NTExMzE4NTA3OTIwNTg1NDA1NjE5NjQwMzE4NTQyNjgwMzA1NjM0MjM1MTUyMzQ4NDk1NjIzNDE5MTEwNDI3NDU4Mzk4Nzg1NDczNDY0NjE4NDE3Njg5NzQwODM0NzE3MjIyMjc5MDU3NzcwODAxMDk2NDY3ODEwMTg0MjQwMDkwNDc4MTIzNzUzOTg5NTMzOTcwMjU5ODc3MTkxNjM0NTc0NTE2NzkwNTc5MTg3MDAyOTEyMTkxNzc0NTQwODI1MTA2NDE5OTE3NzIxMjk2NDEwNjU4NTcxNTgyNzA4NTY2ODM5OTMxNDQ1MzkwNDMwNjQ2MTYzMjUxODg3MzYxNTMwNTI2MjMyOTI3Njk5NzY0NDU5MzU1Njc0NTUzMDA4MDYwNzYzMTQwODIyNjUwNTQwMzkwMzAwNjkzMDYzODk4MjQzMDk5MzU4NzQzNDY1OTAzOTM3MzQwOTMxMjA3MDA3NzI1NzgxMDI5NjQyNDY4MzM2MTM4OTI5NTE2MDkzMjg5OTUxOTcxMDQyOTQ5NTk5NjU5MzQ5OTcyNzYwMSJ9LCAicl9jcmVkZW50aWFsIjogbnVsbH0sICJzaWduYXR1cmVfY29ycmVjdG5lc3NfcHJvb2YiOiB7InNlIjogIjE4Mjk2ODYzOTI3NTAwMTcyODA0MjkzMTA3ODQzMTc2NjU3NDMwMTIwMzE1OTUzNDg4NzMwMjQ2MzE1MDE2NjczNzQ4NzY0NDM1MzQ1NDkyOTc3NjQ0Njc4NjU5NjM0NjMzNjM5OTY2OTY2MTQ0ODE3MTk1MDI0MDc5Njg4MTY5MjA2NDExNzU1NDYyOTg4NTI5NzgyMDA1MDY1NDAxMjM1MzYxMTgzMzI1OTg0OTg3MDk2ODU3ODA0Nzc2NDcxODE4Mzc2MzkzMzI5NjczMDgxNDYyNDI3NzU0OTI5NjMxMjg3NDk3NDU4MDQzMTUwOTU1NTA2MjEyMzcxNjczMTA1Njk4ODA3MDcwNzk2NTQ3NjY4Mzc1NzA3NTU2ODE3ODMzMjk4Mzk0MjkwMjI4MTg4MTk3MTQzNTcyNzg4MTM1NzgyMzY4ODg3MDI5MTU0NjMzNTUyMDM2OTY3MzI5ODQ2NDQxMTQ1NDU5NzYwMTIxMDU1MDA4ODY3NzI1NzQ5MjM4ODA3NTQxNjMxNTIzOTY3NDAzMjA3MjA3NDkxMzAyNzgxODk1NDI3ODEyMzM4NzM1MTE1NTE3NjA2OTQ0ODE1MTQ4MTc1NjQ4NzM0NTIyNDg1NDM2ODg4NTE5Njg3ODE5Mjg2MDM3MDgyNjIzMDkwMDU4MjE2NjY3MDI4NTM3Mzg5MDgyMjIwOTI0MDAwMjU2NDg4MTkxMjAxNTc2MzEwODQ5OTQ4MzEwODAyNDU3ODI2NzA1MTc5MzMxNTA0OTg1OTMzMjY4NzMzMjA5NjU5NDk1MzY0MDgzMTIwNTI3ODkzMjIyMDQ2IiwgImMiOiAiMTAyNzgzMjU2NDE0MTE1NzczNzAyOTQ4MzgyNjMxNzQ3Nzk5MDk0ODk1MTAwNDkyMTQwNjcxOTI3NTQ3MDE3MTk4ODAzOTYzODk1OTcyIn0sICJyZXZfcmVnIjogbnVsbCwgIndpdG5lc3MiOiBudWxsfQ==\\"}}]}","recipient_verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","sender_verkey":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 97, err , args: (b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/issue-credential\\", \\"@id\\": \\"4875f78a-fa55-4747-97b1-1434438bd878\\", \\"~thread\\": {\\"thid\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\"}, \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:41:44.569710Z\\", \\"out_time\\": \\"2021-05-17 12:41:45.122079Z\\"}, \\"credentials~attach\\": [{\\"@id\\": \\"libindy-cred-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgInJldl9yZWdfaWQiOiBudWxsLCAidmFsdWVzIjogeyJEYXRlIElzc3VlZCI6IHsicmF3IjogIjIwMjEtMDUtMTciLCAiZW5jb2RlZCI6ICIzMTkyODcwOTE2MzYwMDczNTQ0MTEwMTQ3NjY1ODgxNDIxNjg4NTM4ODI1MjE4OTgzODA1ODk3MzA3MDc5MjAyMjgwMTU5MTMzNjU3OSJ9LCAiTmFtZSI6IHsicmF3IjogIldpbGwgQWJyYW1zb24iLCAiZW5jb2RlZCI6ICI2NTAwNTU0ODkwNTAzNzc2NDc2NDUwMjM1MDA1MzgyNTc2OTkxNDg3NDA4MjY0ODc2MTIzMDQ1ODY3MDc5NjI0MTM5Mjg5MTY1OTYxMSJ9LCAiVW5pdmVyc2l0eSI6IHsicmF3IjogIkVkaW5idXJnaCBNZWRpY2FsIFNjaG9vbCIsICJlbmNvZGVkIjogIjU3OTYzMTI1NjQ4OTk0NjY2MzAwODc1MzYxNjIxNzI5MzEzMzUxMTU4MTU0NzQwMTM4MTczMTAzNDE1MDIwMzM0NTk0MDQzNjk0MzE3In19LCAic2lnbmF0dXJlIjogeyJwX2NyZWRlbnRpYWwiOiB7Im1fMiI6ICI2NDYxNDAyNzk1OTIzNzE0ODQwNjU3Nzg3NjY0MzU4MjE5MzY1NDE5NTc5ODE5OTY1OTY2MzU1OTU2NTMyNDA3NDQ3NDExMDg3NjQyNiIsICJhIjogIjI4MTk2NjU5MzQ5ODI4ODMzODQxODA2NTY4OTIyNTAwMzMxNDE5OTQzNzU2NzkzNDcyNTkyNTE1MjQ2MDcwNDcyMTY5MTgzMTAzNTU0OTQ0Mjc4MTk4MTUzODE2NTc0Mjc0MTQ5NzIwOTg3MDk1MTExNDg2MDY4OTMwMTY4MjE5NzE0OTIwMTk3NzQzNzk2MjA2NTMwNTYxNDM4NjEyNDc0NzE4NDk4MzE5NzQzMjg1MDc2NTYyNTk2MTY5MjEzNTQ1NDI5OTMwNjA5NDQxMjI5ODA4ODEwMTk4MzE0NTk1NTk4MjAyNjAwOTA0Mzc3ODc5NjE3MjY5NjE5MDA5OTk3ODg5OTIxMzY1NzI5MTY0MzIxOTg4MjQ2NDI1NzYwNTA3OTYyMDEzMjEzMTc5MzU2NDg5MTY1ODg2NDk1ODc5OTM3ODMwNzU3ODYwODEzNTUwNDg4NjUzMDkyMjcwMTgyMzE2NTkxNTU4MTA3Mzc3NTA1MDk0MDA1NDM4NjYyNDE0NTU2MDU4MjY4MTUxMzk0MzExNDg4MDM4MDM0MzcxOTQ1MDUwOTQ0ODMxNTcwNjI1OTk1NDEzMjI4MjkzNDE1OTE5MjAyMDU1OTc0Mjc2OTkwMDEzOTk0MTAyNzcyNTY2MTM3NzQ2MzIyMDQzMTA3MTQ3OTY1Njg5NTc3Nzk0NDg3NzcxNDI1NDI0NjA5MjcwNjM3NTI3MzM0NzEyMjQwNTgxOTQwMzM3NDM5MzQ4ODAxMTU1OTIzNDU2MTA1NjU2NDY4MzI4OTA0MjYzMzAyMTE0MTE4NTI2NTM3NTAxMDA3MTM5NjY5IiwgImUiOiAiMjU5MzQ0NzIzMDU1MDYyMDU5OTA3MDI1NDkxNDgwNjk3NTcxOTM4Mjc3ODg5NTE1MTUyMzA2MjQ5NzI4NTgzMTA1NjY1ODAwNzEzMzA2NzU5MTQ5OTgxNjkwNTU5MTkzOTg3MTQzMDEyMzY3OTEzMjA2Mjk5MzIzODk5Njk2OTQyMjEzMjM1OTU2NzQyOTMwMDQ2MDMxNjg2NTYxMjI5NDAzODQ0MzQ1MTEzNjE4NDIwMDI5IiwgInYiOiAiNjM1NDAyNjMzNjM4ODMwMTQwMTk4NjUyMTE1Mjg5MDk3MjI0OTcwOTYxODgxMzk2NDI0NTYwMjAzNzMzODMzMDY5ODczNDMxNDEzMDgyODAwNjc2NTYwMTU1NTIwMTcyODY3NjExNDM5MzU3MzczMjYwMjY5Mzg4Njk2NTg0OTM5MjEwNzg1NTYzMDI5NzM1MTg5MTY0MDgwMTI2OTk5MDAzNDY1OTc0NzkyNjA1MzE4NTA3MDA5ODIwMTU0MjQzMDUwODUxNTcwODg4OTI3MDgzMDI4MDM1ODIyMjg3NDUyMjg2NTE5MjM3ODMzNTgyMTc1MzQ4Nzk1NDI0NTQ5MTAwMjc2OTA1MzQ5MTIwNDIwODQ2NjYxOTUzMzE4NTE0MzUyNzAwMjY5OTMxMzAzMTgyNzI3NzY2MDcxNzA0Nzk3MjIzMzEyMDExOTQ2NTcwMjg0MTExMjk1NDc5ODY1NTA3MjIxMTQ2Nzg4OTkxNzM1OTcwOTk4MDMwOTE2MTEwMjQyNzU2MjUzNTc0MTA4MDA2MTA0NTExMzE4NTA3OTIwNTg1NDA1NjE5NjQwMzE4NTQyNjgwMzA1NjM0MjM1MTUyMzQ4NDk1NjIzNDE5MTEwNDI3NDU4Mzk4Nzg1NDczNDY0NjE4NDE3Njg5NzQwODM0NzE3MjIyMjc5MDU3NzcwODAxMDk2NDY3ODEwMTg0MjQwMDkwNDc4MTIzNzUzOTg5NTMzOTcwMjU5ODc3MTkxNjM0NTc0NTE2NzkwNTc5MTg3MDAyOTEyMTkxNzc0NTQwODI1MTA2NDE5OTE3NzIxMjk2NDEwNjU4NTcxNTgyNzA4NTY2ODM5OTMxNDQ1MzkwNDMwNjQ2MTYzMjUxODg3MzYxNTMwNTI2MjMyOTI3Njk5NzY0NDU5MzU1Njc0NTUzMDA4MDYwNzYzMTQwODIyNjUwNTQwMzkwMzAwNjkzMDYzODk4MjQzMDk5MzU4NzQzNDY1OTAzOTM3MzQwOTMxMjA3MDA3NzI1NzgxMDI5NjQyNDY4MzM2MTM4OTI5NTE2MDkzMjg5OTUxOTcxMDQyOTQ5NTk5NjU5MzQ5OTcyNzYwMSJ9LCAicl9jcmVkZW50aWFsIjogbnVsbH0sICJzaWduYXR1cmVfY29ycmVjdG5lc3NfcHJvb2YiOiB7InNlIjogIjE4Mjk2ODYzOTI3NTAwMTcyODA0MjkzMTA3ODQzMTc2NjU3NDMwMTIwMzE1OTUzNDg4NzMwMjQ2MzE1MDE2NjczNzQ4NzY0NDM1MzQ1NDkyOTc3NjQ0Njc4NjU5NjM0NjMzNjM5OTY2OTY2MTQ0ODE3MTk1MDI0MDc5Njg4MTY5MjA2NDExNzU1NDYyOTg4NTI5NzgyMDA1MDY1NDAxMjM1MzYxMTgzMzI1OTg0OTg3MDk2ODU3ODA0Nzc2NDcxODE4Mzc2MzkzMzI5NjczMDgxNDYyNDI3NzU0OTI5NjMxMjg3NDk3NDU4MDQzMTUwOTU1NTA2MjEyMzcxNjczMTA1Njk4ODA3MDcwNzk2NTQ3NjY4Mzc1NzA3NTU2ODE3ODMzMjk4Mzk0MjkwMjI4MTg4MTk3MTQzNTcyNzg4MTM1NzgyMzY4ODg3MDI5MTU0NjMzNTUyMDM2OTY3MzI5ODQ2NDQxMTQ1NDU5NzYwMTIxMDU1MDA4ODY3NzI1NzQ5MjM4ODA3NTQxNjMxNTIzOTY3NDAzMjA3MjA3NDkxMzAyNzgxODk1NDI3ODEyMzM4NzM1MTE1NTE3NjA2OTQ0ODE1MTQ4MTc1NjQ4NzM0NTIyNDg1NDM2ODg4NTE5Njg3ODE5Mjg2MDM3MDgyNjIzMDkwMDU4MjE2NjY3MDI4NTM3Mzg5MDgyMjIwOTI0MDAwMjU2NDg4MTkxMjAxNTc2MzEwODQ5OTQ4MzEwODAyNDU3ODI2NzA1MTc5MzMxNTA0OTg1OTMzMjY4NzMzMjA5NjU5NDk1MzY0MDgzMTIwNTI3ODkzMjIyMDQ2IiwgImMiOiAiMTAyNzgzMjU2NDE0MTE1NzczNzAyOTQ4MzgyNjMxNzQ3Nzk5MDk0ODk1MTAwNDkyMTQwNjcxOTI3NTQ3MDE3MTk4ODAzOTYzODk1OTcyIn0sICJyZXZfcmVnIjogbnVsbCwgIndpdG5lc3MiOiBudWxsfQ==\\"}}]}","recipient_verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","sender_verkey":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}',)
_indy_loop_callback: Function returned b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/issue-credential\\", \\"@id\\": \\"4875f78a-fa55-4747-97b1-1434438bd878\\", \\"~thread\\": {\\"thid\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\"}, \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:41:44.569710Z\\", \\"out_time\\": \\"2021-05-17 12:41:45.122079Z\\"}, \\"credentials~attach\\": [{\\"@id\\": \\"libindy-cred-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgInJldl9yZWdfaWQiOiBudWxsLCAidmFsdWVzIjogeyJEYXRlIElzc3VlZCI6IHsicmF3IjogIjIwMjEtMDUtMTciLCAiZW5jb2RlZCI6ICIzMTkyODcwOTE2MzYwMDczNTQ0MTEwMTQ3NjY1ODgxNDIxNjg4NTM4ODI1MjE4OTgzODA1ODk3MzA3MDc5MjAyMjgwMTU5MTMzNjU3OSJ9LCAiTmFtZSI6IHsicmF3IjogIldpbGwgQWJyYW1zb24iLCAiZW5jb2RlZCI6ICI2NTAwNTU0ODkwNTAzNzc2NDc2NDUwMjM1MDA1MzgyNTc2OTkxNDg3NDA4MjY0ODc2MTIzMDQ1ODY3MDc5NjI0MTM5Mjg5MTY1OTYxMSJ9LCAiVW5pdmVyc2l0eSI6IHsicmF3IjogIkVkaW5idXJnaCBNZWRpY2FsIFNjaG9vbCIsICJlbmNvZGVkIjogIjU3OTYzMTI1NjQ4OTk0NjY2MzAwODc1MzYxNjIxNzI5MzEzMzUxMTU4MTU0NzQwMTM4MTczMTAzNDE1MDIwMzM0NTk0MDQzNjk0MzE3In19LCAic2lnbmF0dXJlIjogeyJwX2NyZWRlbnRpYWwiOiB7Im1fMiI6ICI2NDYxNDAyNzk1OTIzNzE0ODQwNjU3Nzg3NjY0MzU4MjE5MzY1NDE5NTc5ODE5OTY1OTY2MzU1OTU2NTMyNDA3NDQ3NDExMDg3NjQyNiIsICJhIjogIjI4MTk2NjU5MzQ5ODI4ODMzODQxODA2NTY4OTIyNTAwMzMxNDE5OTQzNzU2NzkzNDcyNTkyNTE1MjQ2MDcwNDcyMTY5MTgzMTAzNTU0OTQ0Mjc4MTk4MTUzODE2NTc0Mjc0MTQ5NzIwOTg3MDk1MTExNDg2MDY4OTMwMTY4MjE5NzE0OTIwMTk3NzQzNzk2MjA2NTMwNTYxNDM4NjEyNDc0NzE4NDk4MzE5NzQzMjg1MDc2NTYyNTk2MTY5MjEzNTQ1NDI5OTMwNjA5NDQxMjI5ODA4ODEwMTk4MzE0NTk1NTk4MjAyNjAwOTA0Mzc3ODc5NjE3MjY5NjE5MDA5OTk3ODg5OTIxMzY1NzI5MTY0MzIxOTg4MjQ2NDI1NzYwNTA3OTYyMDEzMjEzMTc5MzU2NDg5MTY1ODg2NDk1ODc5OTM3ODMwNzU3ODYwODEzNTUwNDg4NjUzMDkyMjcwMTgyMzE2NTkxNTU4MTA3Mzc3NTA1MDk0MDA1NDM4NjYyNDE0NTU2MDU4MjY4MTUxMzk0MzExNDg4MDM4MDM0MzcxOTQ1MDUwOTQ0ODMxNTcwNjI1OTk1NDEzMjI4MjkzNDE1OTE5MjAyMDU1OTc0Mjc2OTkwMDEzOTk0MTAyNzcyNTY2MTM3NzQ2MzIyMDQzMTA3MTQ3OTY1Njg5NTc3Nzk0NDg3NzcxNDI1NDI0NjA5MjcwNjM3NTI3MzM0NzEyMjQwNTgxOTQwMzM3NDM5MzQ4ODAxMTU1OTIzNDU2MTA1NjU2NDY4MzI4OTA0MjYzMzAyMTE0MTE4NTI2NTM3NTAxMDA3MTM5NjY5IiwgImUiOiAiMjU5MzQ0NzIzMDU1MDYyMDU5OTA3MDI1NDkxNDgwNjk3NTcxOTM4Mjc3ODg5NTE1MTUyMzA2MjQ5NzI4NTgzMTA1NjY1ODAwNzEzMzA2NzU5MTQ5OTgxNjkwNTU5MTkzOTg3MTQzMDEyMzY3OTEzMjA2Mjk5MzIzODk5Njk2OTQyMjEzMjM1OTU2NzQyOTMwMDQ2MDMxNjg2NTYxMjI5NDAzODQ0MzQ1MTEzNjE4NDIwMDI5IiwgInYiOiAiNjM1NDAyNjMzNjM4ODMwMTQwMTk4NjUyMTE1Mjg5MDk3MjI0OTcwOTYxODgxMzk2NDI0NTYwMjAzNzMzODMzMDY5ODczNDMxNDEzMDgyODAwNjc2NTYwMTU1NTIwMTcyODY3NjExNDM5MzU3MzczMjYwMjY5Mzg4Njk2NTg0OTM5MjEwNzg1NTYzMDI5NzM1MTg5MTY0MDgwMTI2OTk5MDAzNDY1OTc0NzkyNjA1MzE4NTA3MDA5ODIwMTU0MjQzMDUwODUxNTcwODg4OTI3MDgzMDI4MDM1ODIyMjg3NDUyMjg2NTE5MjM3ODMzNTgyMTc1MzQ4Nzk1NDI0NTQ5MTAwMjc2OTA1MzQ5MTIwNDIwODQ2NjYxOTUzMzE4NTE0MzUyNzAwMjY5OTMxMzAzMTgyNzI3NzY2MDcxNzA0Nzk3MjIzMzEyMDExOTQ2NTcwMjg0MTExMjk1NDc5ODY1NTA3MjIxMTQ2Nzg4OTkxNzM1OTcwOTk4MDMwOTE2MTEwMjQyNzU2MjUzNTc0MTA4MDA2MTA0NTExMzE4NTA3OTIwNTg1NDA1NjE5NjQwMzE4NTQyNjgwMzA1NjM0MjM1MTUyMzQ4NDk1NjIzNDE5MTEwNDI3NDU4Mzk4Nzg1NDczNDY0NjE4NDE3Njg5NzQwODM0NzE3MjIyMjc5MDU3NzcwODAxMDk2NDY3ODEwMTg0MjQwMDkwNDc4MTIzNzUzOTg5NTMzOTcwMjU5ODc3MTkxNjM0NTc0NTE2NzkwNTc5MTg3MDAyOTEyMTkxNzc0NTQwODI1MTA2NDE5OTE3NzIxMjk2NDEwNjU4NTcxNTgyNzA4NTY2ODM5OTMxNDQ1MzkwNDMwNjQ2MTYzMjUxODg3MzYxNTMwNTI2MjMyOTI3Njk5NzY0NDU5MzU1Njc0NTUzMDA4MDYwNzYzMTQwODIyNjUwNTQwMzkwMzAwNjkzMDYzODk4MjQzMDk5MzU4NzQzNDY1OTAzOTM3MzQwOTMxMjA3MDA3NzI1NzgxMDI5NjQyNDY4MzM2MTM4OTI5NTE2MDkzMjg5OTUxOTcxMDQyOTQ5NTk5NjU5MzQ5OTcyNzYwMSJ9LCAicl9jcmVkZW50aWFsIjogbnVsbH0sICJzaWduYXR1cmVfY29ycmVjdG5lc3NfcHJvb2YiOiB7InNlIjogIjE4Mjk2ODYzOTI3NTAwMTcyODA0MjkzMTA3ODQzMTc2NjU3NDMwMTIwMzE1OTUzNDg4NzMwMjQ2MzE1MDE2NjczNzQ4NzY0NDM1MzQ1NDkyOTc3NjQ0Njc4NjU5NjM0NjMzNjM5OTY2OTY2MTQ0ODE3MTk1MDI0MDc5Njg4MTY5MjA2NDExNzU1NDYyOTg4NTI5NzgyMDA1MDY1NDAxMjM1MzYxMTgzMzI1OTg0OTg3MDk2ODU3ODA0Nzc2NDcxODE4Mzc2MzkzMzI5NjczMDgxNDYyNDI3NzU0OTI5NjMxMjg3NDk3NDU4MDQzMTUwOTU1NTA2MjEyMzcxNjczMTA1Njk4ODA3MDcwNzk2NTQ3NjY4Mzc1NzA3NTU2ODE3ODMzMjk4Mzk0MjkwMjI4MTg4MTk3MTQzNTcyNzg4MTM1NzgyMzY4ODg3MDI5MTU0NjMzNTUyMDM2OTY3MzI5ODQ2NDQxMTQ1NDU5NzYwMTIxMDU1MDA4ODY3NzI1NzQ5MjM4ODA3NTQxNjMxNTIzOTY3NDAzMjA3MjA3NDkxMzAyNzgxODk1NDI3ODEyMzM4NzM1MTE1NTE3NjA2OTQ0ODE1MTQ4MTc1NjQ4NzM0NTIyNDg1NDM2ODg4NTE5Njg3ODE5Mjg2MDM3MDgyNjIzMDkwMDU4MjE2NjY3MDI4NTM3Mzg5MDgyMjIwOTI0MDAwMjU2NDg4MTkxMjAxNTc2MzEwODQ5OTQ4MzEwODAyNDU3ODI2NzA1MTc5MzMxNTA0OTg1OTMzMjY4NzMzMjA5NjU5NDk1MzY0MDgzMTIwNTI3ODkzMjIyMDQ2IiwgImMiOiAiMTAyNzgzMjU2NDE0MTE1NzczNzAyOTQ4MzgyNjMxNzQ3Nzk5MDk0ODk1MTAwNDkyMTQwNjcxOTI3NTQ3MDE3MTk4ODAzOTYzODk1OTcyIn0sICJyZXZfcmVnIjogbnVsbCwgIndpdG5lc3MiOiBudWxsfQ==\\"}}]}","recipient_verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","sender_verkey":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}'
_indy_loop_callback <<<
unpack_message: <<< res: b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/issue-credential\\", \\"@id\\": \\"4875f78a-fa55-4747-97b1-1434438bd878\\", \\"~thread\\": {\\"thid\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\"}, \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:41:44.569710Z\\", \\"out_time\\": \\"2021-05-17 12:41:45.122079Z\\"}, \\"credentials~attach\\": [{\\"@id\\": \\"libindy-cred-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgInJldl9yZWdfaWQiOiBudWxsLCAidmFsdWVzIjogeyJEYXRlIElzc3VlZCI6IHsicmF3IjogIjIwMjEtMDUtMTciLCAiZW5jb2RlZCI6ICIzMTkyODcwOTE2MzYwMDczNTQ0MTEwMTQ3NjY1ODgxNDIxNjg4NTM4ODI1MjE4OTgzODA1ODk3MzA3MDc5MjAyMjgwMTU5MTMzNjU3OSJ9LCAiTmFtZSI6IHsicmF3IjogIldpbGwgQWJyYW1zb24iLCAiZW5jb2RlZCI6ICI2NTAwNTU0ODkwNTAzNzc2NDc2NDUwMjM1MDA1MzgyNTc2OTkxNDg3NDA4MjY0ODc2MTIzMDQ1ODY3MDc5NjI0MTM5Mjg5MTY1OTYxMSJ9LCAiVW5pdmVyc2l0eSI6IHsicmF3IjogIkVkaW5idXJnaCBNZWRpY2FsIFNjaG9vbCIsICJlbmNvZGVkIjogIjU3OTYzMTI1NjQ4OTk0NjY2MzAwODc1MzYxNjIxNzI5MzEzMzUxMTU4MTU0NzQwMTM4MTczMTAzNDE1MDIwMzM0NTk0MDQzNjk0MzE3In19LCAic2lnbmF0dXJlIjogeyJwX2NyZWRlbnRpYWwiOiB7Im1fMiI6ICI2NDYxNDAyNzk1OTIzNzE0ODQwNjU3Nzg3NjY0MzU4MjE5MzY1NDE5NTc5ODE5OTY1OTY2MzU1OTU2NTMyNDA3NDQ3NDExMDg3NjQyNiIsICJhIjogIjI4MTk2NjU5MzQ5ODI4ODMzODQxODA2NTY4OTIyNTAwMzMxNDE5OTQzNzU2NzkzNDcyNTkyNTE1MjQ2MDcwNDcyMTY5MTgzMTAzNTU0OTQ0Mjc4MTk4MTUzODE2NTc0Mjc0MTQ5NzIwOTg3MDk1MTExNDg2MDY4OTMwMTY4MjE5NzE0OTIwMTk3NzQzNzk2MjA2NTMwNTYxNDM4NjEyNDc0NzE4NDk4MzE5NzQzMjg1MDc2NTYyNTk2MTY5MjEzNTQ1NDI5OTMwNjA5NDQxMjI5ODA4ODEwMTk4MzE0NTk1NTk4MjAyNjAwOTA0Mzc3ODc5NjE3MjY5NjE5MDA5OTk3ODg5OTIxMzY1NzI5MTY0MzIxOTg4MjQ2NDI1NzYwNTA3OTYyMDEzMjEzMTc5MzU2NDg5MTY1ODg2NDk1ODc5OTM3ODMwNzU3ODYwODEzNTUwNDg4NjUzMDkyMjcwMTgyMzE2NTkxNTU4MTA3Mzc3NTA1MDk0MDA1NDM4NjYyNDE0NTU2MDU4MjY4MTUxMzk0MzExNDg4MDM4MDM0MzcxOTQ1MDUwOTQ0ODMxNTcwNjI1OTk1NDEzMjI4MjkzNDE1OTE5MjAyMDU1OTc0Mjc2OTkwMDEzOTk0MTAyNzcyNTY2MTM3NzQ2MzIyMDQzMTA3MTQ3OTY1Njg5NTc3Nzk0NDg3NzcxNDI1NDI0NjA5MjcwNjM3NTI3MzM0NzEyMjQwNTgxOTQwMzM3NDM5MzQ4ODAxMTU1OTIzNDU2MTA1NjU2NDY4MzI4OTA0MjYzMzAyMTE0MTE4NTI2NTM3NTAxMDA3MTM5NjY5IiwgImUiOiAiMjU5MzQ0NzIzMDU1MDYyMDU5OTA3MDI1NDkxNDgwNjk3NTcxOTM4Mjc3ODg5NTE1MTUyMzA2MjQ5NzI4NTgzMTA1NjY1ODAwNzEzMzA2NzU5MTQ5OTgxNjkwNTU5MTkzOTg3MTQzMDEyMzY3OTEzMjA2Mjk5MzIzODk5Njk2OTQyMjEzMjM1OTU2NzQyOTMwMDQ2MDMxNjg2NTYxMjI5NDAzODQ0MzQ1MTEzNjE4NDIwMDI5IiwgInYiOiAiNjM1NDAyNjMzNjM4ODMwMTQwMTk4NjUyMTE1Mjg5MDk3MjI0OTcwOTYxODgxMzk2NDI0NTYwMjAzNzMzODMzMDY5ODczNDMxNDEzMDgyODAwNjc2NTYwMTU1NTIwMTcyODY3NjExNDM5MzU3MzczMjYwMjY5Mzg4Njk2NTg0OTM5MjEwNzg1NTYzMDI5NzM1MTg5MTY0MDgwMTI2OTk5MDAzNDY1OTc0NzkyNjA1MzE4NTA3MDA5ODIwMTU0MjQzMDUwODUxNTcwODg4OTI3MDgzMDI4MDM1ODIyMjg3NDUyMjg2NTE5MjM3ODMzNTgyMTc1MzQ4Nzk1NDI0NTQ5MTAwMjc2OTA1MzQ5MTIwNDIwODQ2NjYxOTUzMzE4NTE0MzUyNzAwMjY5OTMxMzAzMTgyNzI3NzY2MDcxNzA0Nzk3MjIzMzEyMDExOTQ2NTcwMjg0MTExMjk1NDc5ODY1NTA3MjIxMTQ2Nzg4OTkxNzM1OTcwOTk4MDMwOTE2MTEwMjQyNzU2MjUzNTc0MTA4MDA2MTA0NTExMzE4NTA3OTIwNTg1NDA1NjE5NjQwMzE4NTQyNjgwMzA1NjM0MjM1MTUyMzQ4NDk1NjIzNDE5MTEwNDI3NDU4Mzk4Nzg1NDczNDY0NjE4NDE3Njg5NzQwODM0NzE3MjIyMjc5MDU3NzcwODAxMDk2NDY3ODEwMTg0MjQwMDkwNDc4MTIzNzUzOTg5NTMzOTcwMjU5ODc3MTkxNjM0NTc0NTE2NzkwNTc5MTg3MDAyOTEyMTkxNzc0NTQwODI1MTA2NDE5OTE3NzIxMjk2NDEwNjU4NTcxNTgyNzA4NTY2ODM5OTMxNDQ1MzkwNDMwNjQ2MTYzMjUxODg3MzYxNTMwNTI2MjMyOTI3Njk5NzY0NDU5MzU1Njc0NTUzMDA4MDYwNzYzMTQwODIyNjUwNTQwMzkwMzAwNjkzMDYzODk4MjQzMDk5MzU4NzQzNDY1OTAzOTM3MzQwOTMxMjA3MDA3NzI1NzgxMDI5NjQyNDY4MzM2MTM4OTI5NTE2MDkzMjg5OTUxOTcxMDQyOTQ5NTk5NjU5MzQ5OTcyNzYwMSJ9LCAicl9jcmVkZW50aWFsIjogbnVsbH0sICJzaWduYXR1cmVfY29ycmVjdG5lc3NfcHJvb2YiOiB7InNlIjogIjE4Mjk2ODYzOTI3NTAwMTcyODA0MjkzMTA3ODQzMTc2NjU3NDMwMTIwMzE1OTUzNDg4NzMwMjQ2MzE1MDE2NjczNzQ4NzY0NDM1MzQ1NDkyOTc3NjQ0Njc4NjU5NjM0NjMzNjM5OTY2OTY2MTQ0ODE3MTk1MDI0MDc5Njg4MTY5MjA2NDExNzU1NDYyOTg4NTI5NzgyMDA1MDY1NDAxMjM1MzYxMTgzMzI1OTg0OTg3MDk2ODU3ODA0Nzc2NDcxODE4Mzc2MzkzMzI5NjczMDgxNDYyNDI3NzU0OTI5NjMxMjg3NDk3NDU4MDQzMTUwOTU1NTA2MjEyMzcxNjczMTA1Njk4ODA3MDcwNzk2NTQ3NjY4Mzc1NzA3NTU2ODE3ODMzMjk4Mzk0MjkwMjI4MTg4MTk3MTQzNTcyNzg4MTM1NzgyMzY4ODg3MDI5MTU0NjMzNTUyMDM2OTY3MzI5ODQ2NDQxMTQ1NDU5NzYwMTIxMDU1MDA4ODY3NzI1NzQ5MjM4ODA3NTQxNjMxNTIzOTY3NDAzMjA3MjA3NDkxMzAyNzgxODk1NDI3ODEyMzM4NzM1MTE1NTE3NjA2OTQ0ODE1MTQ4MTc1NjQ4NzM0NTIyNDg1NDM2ODg4NTE5Njg3ODE5Mjg2MDM3MDgyNjIzMDkwMDU4MjE2NjY3MDI4NTM3Mzg5MDgyMjIwOTI0MDAwMjU2NDg4MTkxMjAxNTc2MzEwODQ5OTQ4MzEwODAyNDU3ODI2NzA1MTc5MzMxNTA0OTg1OTMzMjY4NzMzMjA5NjU5NDk1MzY0MDgzMTIwNTI3ODkzMjIyMDQ2IiwgImMiOiAiMTAyNzgzMjU2NDE0MTE1NzczNzAyOTQ4MzgyNjMxNzQ3Nzk5MDk0ODk1MTAwNDkyMTQwNjcxOTI3NTQ3MDE3MTk4ODAzOTYzODk1OTcyIn0sICJyZXZfcmVnIjogbnVsbCwgIndpdG5lc3MiOiBudWxsfQ==\\"}}]}","recipient_verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","sender_verkey":"E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm"}'
Expanded message: {'@type': 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/issue-credential', '@id': '4875f78a-fa55-4747-97b1-1434438bd878', '~thread': {'thid': '756497eb-22b7-4c6d-9b38-052a58a9e6bc'}, '~trace': {'target': 'log', 'full_thread': True, 'trace_reports': []}, '~timing': {'in_time': '2021-05-17 12:41:44.569710Z', 'out_time': '2021-05-17 12:41:45.122079Z'}, 'credentials~attach': [{'@id': 'libindy-cred-0', 'mime-type': 'application/json', 'data': {'base64': 'eyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgInJldl9yZWdfaWQiOiBudWxsLCAidmFsdWVzIjogeyJEYXRlIElzc3VlZCI6IHsicmF3IjogIjIwMjEtMDUtMTciLCAiZW5jb2RlZCI6ICIzMTkyODcwOTE2MzYwMDczNTQ0MTEwMTQ3NjY1ODgxNDIxNjg4NTM4ODI1MjE4OTgzODA1ODk3MzA3MDc5MjAyMjgwMTU5MTMzNjU3OSJ9LCAiTmFtZSI6IHsicmF3IjogIldpbGwgQWJyYW1zb24iLCAiZW5jb2RlZCI6ICI2NTAwNTU0ODkwNTAzNzc2NDc2NDUwMjM1MDA1MzgyNTc2OTkxNDg3NDA4MjY0ODc2MTIzMDQ1ODY3MDc5NjI0MTM5Mjg5MTY1OTYxMSJ9LCAiVW5pdmVyc2l0eSI6IHsicmF3IjogIkVkaW5idXJnaCBNZWRpY2FsIFNjaG9vbCIsICJlbmNvZGVkIjogIjU3OTYzMTI1NjQ4OTk0NjY2MzAwODc1MzYxNjIxNzI5MzEzMzUxMTU4MTU0NzQwMTM4MTczMTAzNDE1MDIwMzM0NTk0MDQzNjk0MzE3In19LCAic2lnbmF0dXJlIjogeyJwX2NyZWRlbnRpYWwiOiB7Im1fMiI6ICI2NDYxNDAyNzk1OTIzNzE0ODQwNjU3Nzg3NjY0MzU4MjE5MzY1NDE5NTc5ODE5OTY1OTY2MzU1OTU2NTMyNDA3NDQ3NDExMDg3NjQyNiIsICJhIjogIjI4MTk2NjU5MzQ5ODI4ODMzODQxODA2NTY4OTIyNTAwMzMxNDE5OTQzNzU2NzkzNDcyNTkyNTE1MjQ2MDcwNDcyMTY5MTgzMTAzNTU0OTQ0Mjc4MTk4MTUzODE2NTc0Mjc0MTQ5NzIwOTg3MDk1MTExNDg2MDY4OTMwMTY4MjE5NzE0OTIwMTk3NzQzNzk2MjA2NTMwNTYxNDM4NjEyNDc0NzE4NDk4MzE5NzQzMjg1MDc2NTYyNTk2MTY5MjEzNTQ1NDI5OTMwNjA5NDQxMjI5ODA4ODEwMTk4MzE0NTk1NTk4MjAyNjAwOTA0Mzc3ODc5NjE3MjY5NjE5MDA5OTk3ODg5OTIxMzY1NzI5MTY0MzIxOTg4MjQ2NDI1NzYwNTA3OTYyMDEzMjEzMTc5MzU2NDg5MTY1ODg2NDk1ODc5OTM3ODMwNzU3ODYwODEzNTUwNDg4NjUzMDkyMjcwMTgyMzE2NTkxNTU4MTA3Mzc3NTA1MDk0MDA1NDM4NjYyNDE0NTU2MDU4MjY4MTUxMzk0MzExNDg4MDM4MDM0MzcxOTQ1MDUwOTQ0ODMxNTcwNjI1OTk1NDEzMjI4MjkzNDE1OTE5MjAyMDU1OTc0Mjc2OTkwMDEzOTk0MTAyNzcyNTY2MTM3NzQ2MzIyMDQzMTA3MTQ3OTY1Njg5NTc3Nzk0NDg3NzcxNDI1NDI0NjA5MjcwNjM3NTI3MzM0NzEyMjQwNTgxOTQwMzM3NDM5MzQ4ODAxMTU1OTIzNDU2MTA1NjU2NDY4MzI4OTA0MjYzMzAyMTE0MTE4NTI2NTM3NTAxMDA3MTM5NjY5IiwgImUiOiAiMjU5MzQ0NzIzMDU1MDYyMDU5OTA3MDI1NDkxNDgwNjk3NTcxOTM4Mjc3ODg5NTE1MTUyMzA2MjQ5NzI4NTgzMTA1NjY1ODAwNzEzMzA2NzU5MTQ5OTgxNjkwNTU5MTkzOTg3MTQzMDEyMzY3OTEzMjA2Mjk5MzIzODk5Njk2OTQyMjEzMjM1OTU2NzQyOTMwMDQ2MDMxNjg2NTYxMjI5NDAzODQ0MzQ1MTEzNjE4NDIwMDI5IiwgInYiOiAiNjM1NDAyNjMzNjM4ODMwMTQwMTk4NjUyMTE1Mjg5MDk3MjI0OTcwOTYxODgxMzk2NDI0NTYwMjAzNzMzODMzMDY5ODczNDMxNDEzMDgyODAwNjc2NTYwMTU1NTIwMTcyODY3NjExNDM5MzU3MzczMjYwMjY5Mzg4Njk2NTg0OTM5MjEwNzg1NTYzMDI5NzM1MTg5MTY0MDgwMTI2OTk5MDAzNDY1OTc0NzkyNjA1MzE4NTA3MDA5ODIwMTU0MjQzMDUwODUxNTcwODg4OTI3MDgzMDI4MDM1ODIyMjg3NDUyMjg2NTE5MjM3ODMzNTgyMTc1MzQ4Nzk1NDI0NTQ5MTAwMjc2OTA1MzQ5MTIwNDIwODQ2NjYxOTUzMzE4NTE0MzUyNzAwMjY5OTMxMzAzMTgyNzI3NzY2MDcxNzA0Nzk3MjIzMzEyMDExOTQ2NTcwMjg0MTExMjk1NDc5ODY1NTA3MjIxMTQ2Nzg4OTkxNzM1OTcwOTk4MDMwOTE2MTEwMjQyNzU2MjUzNTc0MTA4MDA2MTA0NTExMzE4NTA3OTIwNTg1NDA1NjE5NjQwMzE4NTQyNjgwMzA1NjM0MjM1MTUyMzQ4NDk1NjIzNDE5MTEwNDI3NDU4Mzk4Nzg1NDczNDY0NjE4NDE3Njg5NzQwODM0NzE3MjIyMjc5MDU3NzcwODAxMDk2NDY3ODEwMTg0MjQwMDkwNDc4MTIzNzUzOTg5NTMzOTcwMjU5ODc3MTkxNjM0NTc0NTE2NzkwNTc5MTg3MDAyOTEyMTkxNzc0NTQwODI1MTA2NDE5OTE3NzIxMjk2NDEwNjU4NTcxNTgyNzA4NTY2ODM5OTMxNDQ1MzkwNDMwNjQ2MTYzMjUxODg3MzYxNTMwNTI2MjMyOTI3Njk5NzY0NDU5MzU1Njc0NTUzMDA4MDYwNzYzMTQwODIyNjUwNTQwMzkwMzAwNjkzMDYzODk4MjQzMDk5MzU4NzQzNDY1OTAzOTM3MzQwOTMxMjA3MDA3NzI1NzgxMDI5NjQyNDY4MzM2MTM4OTI5NTE2MDkzMjg5OTUxOTcxMDQyOTQ5NTk5NjU5MzQ5OTcyNzYwMSJ9LCAicl9jcmVkZW50aWFsIjogbnVsbH0sICJzaWduYXR1cmVfY29ycmVjdG5lc3NfcHJvb2YiOiB7InNlIjogIjE4Mjk2ODYzOTI3NTAwMTcyODA0MjkzMTA3ODQzMTc2NjU3NDMwMTIwMzE1OTUzNDg4NzMwMjQ2MzE1MDE2NjczNzQ4NzY0NDM1MzQ1NDkyOTc3NjQ0Njc4NjU5NjM0NjMzNjM5OTY2OTY2MTQ0ODE3MTk1MDI0MDc5Njg4MTY5MjA2NDExNzU1NDYyOTg4NTI5NzgyMDA1MDY1NDAxMjM1MzYxMTgzMzI1OTg0OTg3MDk2ODU3ODA0Nzc2NDcxODE4Mzc2MzkzMzI5NjczMDgxNDYyNDI3NzU0OTI5NjMxMjg3NDk3NDU4MDQzMTUwOTU1NTA2MjEyMzcxNjczMTA1Njk4ODA3MDcwNzk2NTQ3NjY4Mzc1NzA3NTU2ODE3ODMzMjk4Mzk0MjkwMjI4MTg4MTk3MTQzNTcyNzg4MTM1NzgyMzY4ODg3MDI5MTU0NjMzNTUyMDM2OTY3MzI5ODQ2NDQxMTQ1NDU5NzYwMTIxMDU1MDA4ODY3NzI1NzQ5MjM4ODA3NTQxNjMxNTIzOTY3NDAzMjA3MjA3NDkxMzAyNzgxODk1NDI3ODEyMzM4NzM1MTE1NTE3NjA2OTQ0ODE1MTQ4MTc1NjQ4NzM0NTIyNDg1NDM2ODg4NTE5Njg3ODE5Mjg2MDM3MDgyNjIzMDkwMDU4MjE2NjY3MDI4NTM3Mzg5MDgyMjIwOTI0MDAwMjU2NDg4MTkxMjAxNTc2MzEwODQ5OTQ4MzEwODAyNDU3ODI2NzA1MTc5MzMxNTA0OTg1OTMzMjY4NzMzMjA5NjU5NDk1MzY0MDgzMTIwNTI3ODkzMjIyMDQ2IiwgImMiOiAiMTAyNzgzMjU2NDE0MTE1NzczNzAyOTQ4MzgyNjMxNzQ3Nzk5MDk0ODk1MTAwNDkyMTQwNjcxOTI3NTQ3MDE3MTk4ODAzOTYzODk1OTcyIn0sICJyZXZfcmVnIjogbnVsbCwgIndpdG5lc3MiOiBudWxsfQ=='}}]}
  {"msg_id": "4875f78a-fa55-4747-97b1-1434438bd878", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/issue-credential", "timestamp": 1621255305.508749, "str_time": "2021-05-17 12:41:45.508749", "handler": "Medic", "ellapsed_milli": 0, "outcome": "Dispatcher.handle_message.START"}
get_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'f56b18ea-92e1-4f6d-a094-80da3fad398d', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573352774544), c_char_p(140572651877296), c_char_p(140573273900648), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
192.168.208.2 [17/May/2021:12:41:45 +0000] "POST / HTTP/1.1" 200 149 "-" "Python/3.6 aiohttp/3.6.3"
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [120, 99, 101, 86, 104, 116, 110, 103, 56, 75, 112, 113, 55, 105, 55, 47, 101, 106, 66, 77, 104, 76, 90, 102, 98, 69, 80, 98, 116, 98, 69, 114, 78, 67, 114, 109, 116, 118, 104, 85, 108, 65, 71, 107, 71, 78, 105, 52, 67, 54, 116, 117, 88, 105, 74, 47, 50, 108, 116, 118, 83, 102, 74, 77, 116, 106, 72, 119, 105, 51, 72, 105, 55, 82, 112, 79, 114, 67, 69, 70, 85, 84, 72, 122, 122, 81, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 98, err , args: (b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 98, err , args: (b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
CredentialHandler called with context <RequestContext(_connection_ready=True, _connection_record=<ConnRecord(_id='f56b18ea-92e1-4f6d-a094-80da3fad398d', _last_state='active', state='active', created_at='2021-05-17 12:41:06.885367Z', updated_at='2021-05-17 12:41:08.369600Z', my_did='Ss9L55FVLDVAE9wH9QUaLm', their_did='QxkFnUxMqbSZbC91on4s4x', their_label='Edinburgh Medical School', their_role='inviter', invitation_key='5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP', invitation_msg_id=None, request_id='5c86d714-9808-4bc8-a653-6abb4c381dab', error_msg=None, inbound_connection_id=None, routing_state='none', accept='auto', invitation_mode='once', alias=None, their_public_did=None)>, _context=<aries_cloudagent.config.injection_context.InjectionContext object at 0x7fd99efb9a90>, _message=<CredentialIssue(_message_id='4875f78a-fa55-4747-97b1-1434438bd878', _message_new_id=False, _message_decorators=<DecoratorSet{~thread: <ThreadDecorator(_thid='756497eb-22b7-4c6d-9b38-052a58a9e6bc', _pthid=None, _sender_order=None, _received_orders=None)>, ~trace: <TraceDecorator(_target='log', _full_thread=True, _trace_reports=None)>, ~timing: <TimingDecorator(in_time='2021-05-17 12:41:44.569710Z', out_time='2021-05-17 12:41:45.122079Z', stale_time=None, expires_time=None, delay_milli=None, wait_until_time=None)>}>, comment=None, credentials_attach=[<AttachDecorator(ident='libindy-cred-0', description=None, filename=None, mime_type='application/json', lastmod_time=None, byte_count=None, data=<AttachDecoratorData(base64_='eyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgInJldl9yZWdfaWQiOiBudWxsLCAidmFsdWVzIjogeyJEYXRlIElzc3VlZCI6IHsicmF3IjogIjIwMjEtMDUtMTciLCAiZW5jb2RlZCI6ICIzMTkyODcwOTE2MzYwMDczNTQ0MTEwMTQ3NjY1ODgxNDIxNjg4NTM4ODI1MjE4OTgzODA1ODk3MzA3MDc5MjAyMjgwMTU5MTMzNjU3OSJ9LCAiTmFtZSI6IHsicmF3IjogIldpbGwgQWJyYW1zb24iLCAiZW5jb2RlZCI6ICI2NTAwNTU0ODkwNTAzNzc2NDc2NDUwMjM1MDA1MzgyNTc2OTkxNDg3NDA4MjY0ODc2MTIzMDQ1ODY3MDc5NjI0MTM5Mjg5MTY1OTYxMSJ9LCAiVW5pdmVyc2l0eSI6IHsicmF3IjogIkVkaW5idXJnaCBNZWRpY2FsIFNjaG9vbCIsICJlbmNvZGVkIjogIjU3OTYzMTI1NjQ4OTk0NjY2MzAwODc1MzYxNjIxNzI5MzEzMzUxMTU4MTU0NzQwMTM4MTczMTAzNDE1MDIwMzM0NTk0MDQzNjk0MzE3In19LCAic2lnbmF0dXJlIjogeyJwX2NyZWRlbnRpYWwiOiB7Im1fMiI6ICI2NDYxNDAyNzk1OTIzNzE0ODQwNjU3Nzg3NjY0MzU4MjE5MzY1NDE5NTc5ODE5OTY1OTY2MzU1OTU2NTMyNDA3NDQ3NDExMDg3NjQyNiIsICJhIjogIjI4MTk2NjU5MzQ5ODI4ODMzODQxODA2NTY4OTIyNTAwMzMxNDE5OTQzNzU2NzkzNDcyNTkyNTE1MjQ2MDcwNDcyMTY5MTgzMTAzNTU0OTQ0Mjc4MTk4MTUzODE2NTc0Mjc0MTQ5NzIwOTg3MDk1MTExNDg2MDY4OTMwMTY4MjE5NzE0OTIwMTk3NzQzNzk2MjA2NTMwNTYxNDM4NjEyNDc0NzE4NDk4MzE5NzQzMjg1MDc2NTYyNTk2MTY5MjEzNTQ1NDI5OTMwNjA5NDQxMjI5ODA4ODEwMTk4MzE0NTk1NTk4MjAyNjAwOTA0Mzc3ODc5NjE3MjY5NjE5MDA5OTk3ODg5OTIxMzY1NzI5MTY0MzIxOTg4MjQ2NDI1NzYwNTA3OTYyMDEzMjEzMTc5MzU2NDg5MTY1ODg2NDk1ODc5OTM3ODMwNzU3ODYwODEzNTUwNDg4NjUzMDkyMjcwMTgyMzE2NTkxNTU4MTA3Mzc3NTA1MDk0MDA1NDM4NjYyNDE0NTU2MDU4MjY4MTUxMzk0MzExNDg4MDM4MDM0MzcxOTQ1MDUwOTQ0ODMxNTcwNjI1OTk1NDEzMjI4MjkzNDE1OTE5MjAyMDU1OTc0Mjc2OTkwMDEzOTk0MTAyNzcyNTY2MTM3NzQ2MzIyMDQzMTA3MTQ3OTY1Njg5NTc3Nzk0NDg3NzcxNDI1NDI0NjA5MjcwNjM3NTI3MzM0NzEyMjQwNTgxOTQwMzM3NDM5MzQ4ODAxMTU1OTIzNDU2MTA1NjU2NDY4MzI4OTA0MjYzMzAyMTE0MTE4NTI2NTM3NTAxMDA3MTM5NjY5IiwgImUiOiAiMjU5MzQ0NzIzMDU1MDYyMDU5OTA3MDI1NDkxNDgwNjk3NTcxOTM4Mjc3ODg5NTE1MTUyMzA2MjQ5NzI4NTgzMTA1NjY1ODAwNzEzMzA2NzU5MTQ5OTgxNjkwNTU5MTkzOTg3MTQzMDEyMzY3OTEzMjA2Mjk5MzIzODk5Njk2OTQyMjEzMjM1OTU2NzQyOTMwMDQ2MDMxNjg2NTYxMjI5NDAzODQ0MzQ1MTEzNjE4NDIwMDI5IiwgInYiOiAiNjM1NDAyNjMzNjM4ODMwMTQwMTk4NjUyMTE1Mjg5MDk3MjI0OTcwOTYxODgxMzk2NDI0NTYwMjAzNzMzODMzMDY5ODczNDMxNDEzMDgyODAwNjc2NTYwMTU1NTIwMTcyODY3NjExNDM5MzU3MzczMjYwMjY5Mzg4Njk2NTg0OTM5MjEwNzg1NTYzMDI5NzM1MTg5MTY0MDgwMTI2OTk5MDAzNDY1OTc0NzkyNjA1MzE4NTA3MDA5ODIwMTU0MjQzMDUwODUxNTcwODg4OTI3MDgzMDI4MDM1ODIyMjg3NDUyMjg2NTE5MjM3ODMzNTgyMTc1MzQ4Nzk1NDI0NTQ5MTAwMjc2OTA1MzQ5MTIwNDIwODQ2NjYxOTUzMzE4NTE0MzUyNzAwMjY5OTMxMzAzMTgyNzI3NzY2MDcxNzA0Nzk3MjIzMzEyMDExOTQ2NTcwMjg0MTExMjk1NDc5ODY1NTA3MjIxMTQ2Nzg4OTkxNzM1OTcwOTk4MDMwOTE2MTEwMjQyNzU2MjUzNTc0MTA4MDA2MTA0NTExMzE4NTA3OTIwNTg1NDA1NjE5NjQwMzE4NTQyNjgwMzA1NjM0MjM1MTUyMzQ4NDk1NjIzNDE5MTEwNDI3NDU4Mzk4Nzg1NDczNDY0NjE4NDE3Njg5NzQwODM0NzE3MjIyMjc5MDU3NzcwODAxMDk2NDY3ODEwMTg0MjQwMDkwNDc4MTIzNzUzOTg5NTMzOTcwMjU5ODc3MTkxNjM0NTc0NTE2NzkwNTc5MTg3MDAyOTEyMTkxNzc0NTQwODI1MTA2NDE5OTE3NzIxMjk2NDEwNjU4NTcxNTgyNzA4NTY2ODM5OTMxNDQ1MzkwNDMwNjQ2MTYzMjUxODg3MzYxNTMwNTI2MjMyOTI3Njk5NzY0NDU5MzU1Njc0NTUzMDA4MDYwNzYzMTQwODIyNjUwNTQwMzkwMzAwNjkzMDYzODk4MjQzMDk5MzU4NzQzNDY1OTAzOTM3MzQwOTMxMjA3MDA3NzI1NzgxMDI5NjQyNDY4MzM2MTM4OTI5NTE2MDkzMjg5OTUxOTcxMDQyOTQ5NTk5NjU5MzQ5OTcyNzYwMSJ9LCAicl9jcmVkZW50aWFsIjogbnVsbH0sICJzaWduYXR1cmVfY29ycmVjdG5lc3NfcHJvb2YiOiB7InNlIjogIjE4Mjk2ODYzOTI3NTAwMTcyODA0MjkzMTA3ODQzMTc2NjU3NDMwMTIwMzE1OTUzNDg4NzMwMjQ2MzE1MDE2NjczNzQ4NzY0NDM1MzQ1NDkyOTc3NjQ0Njc4NjU5NjM0NjMzNjM5OTY2OTY2MTQ0ODE3MTk1MDI0MDc5Njg4MTY5MjA2NDExNzU1NDYyOTg4NTI5NzgyMDA1MDY1NDAxMjM1MzYxMTgzMzI1OTg0OTg3MDk2ODU3ODA0Nzc2NDcxODE4Mzc2MzkzMzI5NjczMDgxNDYyNDI3NzU0OTI5NjMxMjg3NDk3NDU4MDQzMTUwOTU1NTA2MjEyMzcxNjczMTA1Njk4ODA3MDcwNzk2NTQ3NjY4Mzc1NzA3NTU2ODE3ODMzMjk4Mzk0MjkwMjI4MTg4MTk3MTQzNTcyNzg4MTM1NzgyMzY4ODg3MDI5MTU0NjMzNTUyMDM2OTY3MzI5ODQ2NDQxMTQ1NDU5NzYwMTIxMDU1MDA4ODY3NzI1NzQ5MjM4ODA3NTQxNjMxNTIzOTY3NDAzMjA3MjA3NDkxMzAyNzgxODk1NDI3ODEyMzM4NzM1MTE1NTE3NjA2OTQ0ODE1MTQ4MTc1NjQ4NzM0NTIyNDg1NDM2ODg4NTE5Njg3ODE5Mjg2MDM3MDgyNjIzMDkwMDU4MjE2NjY3MDI4NTM3Mzg5MDgyMjIwOTI0MDAwMjU2NDg4MTkxMjAxNTc2MzEwODQ5OTQ4MzEwODAyNDU3ODI2NzA1MTc5MzMxNTA0OTg1OTMzMjY4NzMzMjA5NjU5NDk1MzY0MDgzMTIwNTI3ODkzMjIyMDQ2IiwgImMiOiAiMTAyNzgzMjU2NDE0MTE1NzczNzAyOTQ4MzgyNjMxNzQ3Nzk5MDk0ODk1MTAwNDkyMTQwNjcxOTI3NTQ3MDE3MTk4ODAzOTYzODk1OTcyIn0sICJyZXZfcmVnIjogbnVsbCwgIndpdG5lc3MiOiBudWxsfQ==')>)>])>, _message_receipt=<MessageReceipt(_connection_id=None, _direct_response_mode=None, _in_time='2021-05-17 12:41:45.477324Z', _raw_message='{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/issue-credential", "@id": "4875f78a-fa55-4747-97b1-1434438bd878", "~thread": {"thid": "756497eb-22b7-4c6d-9b38-052a58a9e6bc"}, "~trace": {"target": "log", "full_thread": true, "trace_reports": []}, "~timing": {"in_time": "2021-05-17 12:41:44.569710Z", "out_time": "2021-05-17 12:41:45.122079Z"}, "credentials~attach": [{"@id": "libindy-cred-0", "mime-type": "application/json", "data": {"base64": "eyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgInJldl9yZWdfaWQiOiBudWxsLCAidmFsdWVzIjogeyJEYXRlIElzc3VlZCI6IHsicmF3IjogIjIwMjEtMDUtMTciLCAiZW5jb2RlZCI6ICIzMTkyODcwOTE2MzYwMDczNTQ0MTEwMTQ3NjY1ODgxNDIxNjg4NTM4ODI1MjE4OTgzODA1ODk3MzA3MDc5MjAyMjgwMTU5MTMzNjU3OSJ9LCAiTmFtZSI6IHsicmF3IjogIldpbGwgQWJyYW1zb24iLCAiZW5jb2RlZCI6ICI2NTAwNTU0ODkwNTAzNzc2NDc2NDUwMjM1MDA1MzgyNTc2OTkxNDg3NDA4MjY0ODc2MTIzMDQ1ODY3MDc5NjI0MTM5Mjg5MTY1OTYxMSJ9LCAiVW5pdmVyc2l0eSI6IHsicmF3IjogIkVkaW5idXJnaCBNZWRpY2FsIFNjaG9vbCIsICJlbmNvZGVkIjogIjU3OTYzMTI1NjQ4OTk0NjY2MzAwODc1MzYxNjIxNzI5MzEzMzUxMTU4MTU0NzQwMTM4MTczMTAzNDE1MDIwMzM0NTk0MDQzNjk0MzE3In19LCAic2lnbmF0dXJlIjogeyJwX2NyZWRlbnRpYWwiOiB7Im1fMiI6ICI2NDYxNDAyNzk1OTIzNzE0ODQwNjU3Nzg3NjY0MzU4MjE5MzY1NDE5NTc5ODE5OTY1OTY2MzU1OTU2NTMyNDA3NDQ3NDExMDg3NjQyNiIsICJhIjogIjI4MTk2NjU5MzQ5ODI4ODMzODQxODA2NTY4OTIyNTAwMzMxNDE5OTQzNzU2NzkzNDcyNTkyNTE1MjQ2MDcwNDcyMTY5MTgzMTAzNTU0OTQ0Mjc4MTk4MTUzODE2NTc0Mjc0MTQ5NzIwOTg3MDk1MTExNDg2MDY4OTMwMTY4MjE5NzE0OTIwMTk3NzQzNzk2MjA2NTMwNTYxNDM4NjEyNDc0NzE4NDk4MzE5NzQzMjg1MDc2NTYyNTk2MTY5MjEzNTQ1NDI5OTMwNjA5NDQxMjI5ODA4ODEwMTk4MzE0NTk1NTk4MjAyNjAwOTA0Mzc3ODc5NjE3MjY5NjE5MDA5OTk3ODg5OTIxMzY1NzI5MTY0MzIxOTg4MjQ2NDI1NzYwNTA3OTYyMDEzMjEzMTc5MzU2NDg5MTY1ODg2NDk1ODc5OTM3ODMwNzU3ODYwODEzNTUwNDg4NjUzMDkyMjcwMTgyMzE2NTkxNTU4MTA3Mzc3NTA1MDk0MDA1NDM4NjYyNDE0NTU2MDU4MjY4MTUxMzk0MzExNDg4MDM4MDM0MzcxOTQ1MDUwOTQ0ODMxNTcwNjI1OTk1NDEzMjI4MjkzNDE1OTE5MjAyMDU1OTc0Mjc2OTkwMDEzOTk0MTAyNzcyNTY2MTM3NzQ2MzIyMDQzMTA3MTQ3OTY1Njg5NTc3Nzk0NDg3NzcxNDI1NDI0NjA5MjcwNjM3NTI3MzM0NzEyMjQwNTgxOTQwMzM3NDM5MzQ4ODAxMTU1OTIzNDU2MTA1NjU2NDY4MzI4OTA0MjYzMzAyMTE0MTE4NTI2NTM3NTAxMDA3MTM5NjY5IiwgImUiOiAiMjU5MzQ0NzIzMDU1MDYyMDU5OTA3MDI1NDkxNDgwNjk3NTcxOTM4Mjc3ODg5NTE1MTUyMzA2MjQ5NzI4NTgzMTA1NjY1ODAwNzEzMzA2NzU5MTQ5OTgxNjkwNTU5MTkzOTg3MTQzMDEyMzY3OTEzMjA2Mjk5MzIzODk5Njk2OTQyMjEzMjM1OTU2NzQyOTMwMDQ2MDMxNjg2NTYxMjI5NDAzODQ0MzQ1MTEzNjE4NDIwMDI5IiwgInYiOiAiNjM1NDAyNjMzNjM4ODMwMTQwMTk4NjUyMTE1Mjg5MDk3MjI0OTcwOTYxODgxMzk2NDI0NTYwMjAzNzMzODMzMDY5ODczNDMxNDEzMDgyODAwNjc2NTYwMTU1NTIwMTcyODY3NjExNDM5MzU3MzczMjYwMjY5Mzg4Njk2NTg0OTM5MjEwNzg1NTYzMDI5NzM1MTg5MTY0MDgwMTI2OTk5MDAzNDY1OTc0NzkyNjA1MzE4NTA3MDA5ODIwMTU0MjQzMDUwODUxNTcwODg4OTI3MDgzMDI4MDM1ODIyMjg3NDUyMjg2NTE5MjM3ODMzNTgyMTc1MzQ4Nzk1NDI0NTQ5MTAwMjc2OTA1MzQ5MTIwNDIwODQ2NjYxOTUzMzE4NTE0MzUyNzAwMjY5OTMxMzAzMTgyNzI3NzY2MDcxNzA0Nzk3MjIzMzEyMDExOTQ2NTcwMjg0MTExMjk1NDc5ODY1NTA3MjIxMTQ2Nzg4OTkxNzM1OTcwOTk4MDMwOTE2MTEwMjQyNzU2MjUzNTc0MTA4MDA2MTA0NTExMzE4NTA3OTIwNTg1NDA1NjE5NjQwMzE4NTQyNjgwMzA1NjM0MjM1MTUyMzQ4NDk1NjIzNDE5MTEwNDI3NDU4Mzk4Nzg1NDczNDY0NjE4NDE3Njg5NzQwODM0NzE3MjIyMjc5MDU3NzcwODAxMDk2NDY3ODEwMTg0MjQwMDkwNDc4MTIzNzUzOTg5NTMzOTcwMjU5ODc3MTkxNjM0NTc0NTE2NzkwNTc5MTg3MDAyOTEyMTkxNzc0NTQwODI1MTA2NDE5OTE3NzIxMjk2NDEwNjU4NTcxNTgyNzA4NTY2ODM5OTMxNDQ1MzkwNDMwNjQ2MTYzMjUxODg3MzYxNTMwNTI2MjMyOTI3Njk5NzY0NDU5MzU1Njc0NTUzMDA4MDYwNzYzMTQwODIyNjUwNTQwMzkwMzAwNjkzMDYzODk4MjQzMDk5MzU4NzQzNDY1OTAzOTM3MzQwOTMxMjA3MDA3NzI1NzgxMDI5NjQyNDY4MzM2MTM4OTI5NTE2MDkzMjg5OTUxOTcxMDQyOTQ5NTk5NjU5MzQ5OTcyNzYwMSJ9LCAicl9jcmVkZW50aWFsIjogbnVsbH0sICJzaWduYXR1cmVfY29ycmVjdG5lc3NfcHJvb2YiOiB7InNlIjogIjE4Mjk2ODYzOTI3NTAwMTcyODA0MjkzMTA3ODQzMTc2NjU3NDMwMTIwMzE1OTUzNDg4NzMwMjQ2MzE1MDE2NjczNzQ4NzY0NDM1MzQ1NDkyOTc3NjQ0Njc4NjU5NjM0NjMzNjM5OTY2OTY2MTQ0ODE3MTk1MDI0MDc5Njg4MTY5MjA2NDExNzU1NDYyOTg4NTI5NzgyMDA1MDY1NDAxMjM1MzYxMTgzMzI1OTg0OTg3MDk2ODU3ODA0Nzc2NDcxODE4Mzc2MzkzMzI5NjczMDgxNDYyNDI3NzU0OTI5NjMxMjg3NDk3NDU4MDQzMTUwOTU1NTA2MjEyMzcxNjczMTA1Njk4ODA3MDcwNzk2NTQ3NjY4Mzc1NzA3NTU2ODE3ODMzMjk4Mzk0MjkwMjI4MTg4MTk3MTQzNTcyNzg4MTM1NzgyMzY4ODg3MDI5MTU0NjMzNTUyMDM2OTY3MzI5ODQ2NDQxMTQ1NDU5NzYwMTIxMDU1MDA4ODY3NzI1NzQ5MjM4ODA3NTQxNjMxNTIzOTY3NDAzMjA3MjA3NDkxMzAyNzgxODk1NDI3ODEyMzM4NzM1MTE1NTE3NjA2OTQ0ODE1MTQ4MTc1NjQ4NzM0NTIyNDg1NDM2ODg4NTE5Njg3ODE5Mjg2MDM3MDgyNjIzMDkwMDU4MjE2NjY3MDI4NTM3Mzg5MDgyMjIwOTI0MDAwMjU2NDg4MTkxMjAxNTc2MzEwODQ5OTQ4MzEwODAyNDU3ODI2NzA1MTc5MzMxNTA0OTg1OTMzMjY4NzMzMjA5NjU5NDk1MzY0MDgzMTIwNTI3ODkzMjIyMDQ2IiwgImMiOiAiMTAyNzgzMjU2NDE0MTE1NzczNzAyOTQ4MzgyNjMxNzQ3Nzk5MDk0ODk1MTAwNDkyMTQwNjcxOTI3NTQ3MDE3MTk4ODAzOTYzODk1OTcyIn0sICJyZXZfcmVnIjogbnVsbCwgIndpdG5lc3MiOiBudWxsfQ=="}}]}', _recipient_verkey='F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq', _recipient_did='Ss9L55FVLDVAE9wH9QUaLm', _recipient_did_public=None, _sender_did='QxkFnUxMqbSZbC91on4s4x', _sender_verkey='E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm', _thread_id='756497eb-22b7-4c6d-9b38-052a58a9e6bc')>, _profile=<IndySdkProfile(backend=indy, name=Medic)>)>
Received credential message: {"@type":"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/issue-credential","@id":"4875f78a-fa55-4747-97b1-1434438bd878","~thread":{"thid":"756497eb-22b7-4c6d-9b38-052a58a9e6bc"},"~trace":{"target":"log","full_thread":true,"trace_reports":[]},"~timing":{"in_time":"2021-05-17 12:41:44.569710Z","out_time":"2021-05-17 12:41:45.122079Z"},"credentials~attach":[{"@id":"libindy-cred-0","mime-type":"application/json","data":{"base64":"eyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgInJldl9yZWdfaWQiOiBudWxsLCAidmFsdWVzIjogeyJEYXRlIElzc3VlZCI6IHsicmF3IjogIjIwMjEtMDUtMTciLCAiZW5jb2RlZCI6ICIzMTkyODcwOTE2MzYwMDczNTQ0MTEwMTQ3NjY1ODgxNDIxNjg4NTM4ODI1MjE4OTgzODA1ODk3MzA3MDc5MjAyMjgwMTU5MTMzNjU3OSJ9LCAiTmFtZSI6IHsicmF3IjogIldpbGwgQWJyYW1zb24iLCAiZW5jb2RlZCI6ICI2NTAwNTU0ODkwNTAzNzc2NDc2NDUwMjM1MDA1MzgyNTc2OTkxNDg3NDA4MjY0ODc2MTIzMDQ1ODY3MDc5NjI0MTM5Mjg5MTY1OTYxMSJ9LCAiVW5pdmVyc2l0eSI6IHsicmF3IjogIkVkaW5idXJnaCBNZWRpY2FsIFNjaG9vbCIsICJlbmNvZGVkIjogIjU3OTYzMTI1NjQ4OTk0NjY2MzAwODc1MzYxNjIxNzI5MzEzMzUxMTU4MTU0NzQwMTM4MTczMTAzNDE1MDIwMzM0NTk0MDQzNjk0MzE3In19LCAic2lnbmF0dXJlIjogeyJwX2NyZWRlbnRpYWwiOiB7Im1fMiI6ICI2NDYxNDAyNzk1OTIzNzE0ODQwNjU3Nzg3NjY0MzU4MjE5MzY1NDE5NTc5ODE5OTY1OTY2MzU1OTU2NTMyNDA3NDQ3NDExMDg3NjQyNiIsICJhIjogIjI4MTk2NjU5MzQ5ODI4ODMzODQxODA2NTY4OTIyNTAwMzMxNDE5OTQzNzU2NzkzNDcyNTkyNTE1MjQ2MDcwNDcyMTY5MTgzMTAzNTU0OTQ0Mjc4MTk4MTUzODE2NTc0Mjc0MTQ5NzIwOTg3MDk1MTExNDg2MDY4OTMwMTY4MjE5NzE0OTIwMTk3NzQzNzk2MjA2NTMwNTYxNDM4NjEyNDc0NzE4NDk4MzE5NzQzMjg1MDc2NTYyNTk2MTY5MjEzNTQ1NDI5OTMwNjA5NDQxMjI5ODA4ODEwMTk4MzE0NTk1NTk4MjAyNjAwOTA0Mzc3ODc5NjE3MjY5NjE5MDA5OTk3ODg5OTIxMzY1NzI5MTY0MzIxOTg4MjQ2NDI1NzYwNTA3OTYyMDEzMjEzMTc5MzU2NDg5MTY1ODg2NDk1ODc5OTM3ODMwNzU3ODYwODEzNTUwNDg4NjUzMDkyMjcwMTgyMzE2NTkxNTU4MTA3Mzc3NTA1MDk0MDA1NDM4NjYyNDE0NTU2MDU4MjY4MTUxMzk0MzExNDg4MDM4MDM0MzcxOTQ1MDUwOTQ0ODMxNTcwNjI1OTk1NDEzMjI4MjkzNDE1OTE5MjAyMDU1OTc0Mjc2OTkwMDEzOTk0MTAyNzcyNTY2MTM3NzQ2MzIyMDQzMTA3MTQ3OTY1Njg5NTc3Nzk0NDg3NzcxNDI1NDI0NjA5MjcwNjM3NTI3MzM0NzEyMjQwNTgxOTQwMzM3NDM5MzQ4ODAxMTU1OTIzNDU2MTA1NjU2NDY4MzI4OTA0MjYzMzAyMTE0MTE4NTI2NTM3NTAxMDA3MTM5NjY5IiwgImUiOiAiMjU5MzQ0NzIzMDU1MDYyMDU5OTA3MDI1NDkxNDgwNjk3NTcxOTM4Mjc3ODg5NTE1MTUyMzA2MjQ5NzI4NTgzMTA1NjY1ODAwNzEzMzA2NzU5MTQ5OTgxNjkwNTU5MTkzOTg3MTQzMDEyMzY3OTEzMjA2Mjk5MzIzODk5Njk2OTQyMjEzMjM1OTU2NzQyOTMwMDQ2MDMxNjg2NTYxMjI5NDAzODQ0MzQ1MTEzNjE4NDIwMDI5IiwgInYiOiAiNjM1NDAyNjMzNjM4ODMwMTQwMTk4NjUyMTE1Mjg5MDk3MjI0OTcwOTYxODgxMzk2NDI0NTYwMjAzNzMzODMzMDY5ODczNDMxNDEzMDgyODAwNjc2NTYwMTU1NTIwMTcyODY3NjExNDM5MzU3MzczMjYwMjY5Mzg4Njk2NTg0OTM5MjEwNzg1NTYzMDI5NzM1MTg5MTY0MDgwMTI2OTk5MDAzNDY1OTc0NzkyNjA1MzE4NTA3MDA5ODIwMTU0MjQzMDUwODUxNTcwODg4OTI3MDgzMDI4MDM1ODIyMjg3NDUyMjg2NTE5MjM3ODMzNTgyMTc1MzQ4Nzk1NDI0NTQ5MTAwMjc2OTA1MzQ5MTIwNDIwODQ2NjYxOTUzMzE4NTE0MzUyNzAwMjY5OTMxMzAzMTgyNzI3NzY2MDcxNzA0Nzk3MjIzMzEyMDExOTQ2NTcwMjg0MTExMjk1NDc5ODY1NTA3MjIxMTQ2Nzg4OTkxNzM1OTcwOTk4MDMwOTE2MTEwMjQyNzU2MjUzNTc0MTA4MDA2MTA0NTExMzE4NTA3OTIwNTg1NDA1NjE5NjQwMzE4NTQyNjgwMzA1NjM0MjM1MTUyMzQ4NDk1NjIzNDE5MTEwNDI3NDU4Mzk4Nzg1NDczNDY0NjE4NDE3Njg5NzQwODM0NzE3MjIyMjc5MDU3NzcwODAxMDk2NDY3ODEwMTg0MjQwMDkwNDc4MTIzNzUzOTg5NTMzOTcwMjU5ODc3MTkxNjM0NTc0NTE2NzkwNTc5MTg3MDAyOTEyMTkxNzc0NTQwODI1MTA2NDE5OTE3NzIxMjk2NDEwNjU4NTcxNTgyNzA4NTY2ODM5OTMxNDQ1MzkwNDMwNjQ2MTYzMjUxODg3MzYxNTMwNTI2MjMyOTI3Njk5NzY0NDU5MzU1Njc0NTUzMDA4MDYwNzYzMTQwODIyNjUwNTQwMzkwMzAwNjkzMDYzODk4MjQzMDk5MzU4NzQzNDY1OTAzOTM3MzQwOTMxMjA3MDA3NzI1NzgxMDI5NjQyNDY4MzM2MTM4OTI5NTE2MDkzMjg5OTUxOTcxMDQyOTQ5NTk5NjU5MzQ5OTcyNzYwMSJ9LCAicl9jcmVkZW50aWFsIjogbnVsbH0sICJzaWduYXR1cmVfY29ycmVjdG5lc3NfcHJvb2YiOiB7InNlIjogIjE4Mjk2ODYzOTI3NTAwMTcyODA0MjkzMTA3ODQzMTc2NjU3NDMwMTIwMzE1OTUzNDg4NzMwMjQ2MzE1MDE2NjczNzQ4NzY0NDM1MzQ1NDkyOTc3NjQ0Njc4NjU5NjM0NjMzNjM5OTY2OTY2MTQ0ODE3MTk1MDI0MDc5Njg4MTY5MjA2NDExNzU1NDYyOTg4NTI5NzgyMDA1MDY1NDAxMjM1MzYxMTgzMzI1OTg0OTg3MDk2ODU3ODA0Nzc2NDcxODE4Mzc2MzkzMzI5NjczMDgxNDYyNDI3NzU0OTI5NjMxMjg3NDk3NDU4MDQzMTUwOTU1NTA2MjEyMzcxNjczMTA1Njk4ODA3MDcwNzk2NTQ3NjY4Mzc1NzA3NTU2ODE3ODMzMjk4Mzk0MjkwMjI4MTg4MTk3MTQzNTcyNzg4MTM1NzgyMzY4ODg3MDI5MTU0NjMzNTUyMDM2OTY3MzI5ODQ2NDQxMTQ1NDU5NzYwMTIxMDU1MDA4ODY3NzI1NzQ5MjM4ODA3NTQxNjMxNTIzOTY3NDAzMjA3MjA3NDkxMzAyNzgxODk1NDI3ODEyMzM4NzM1MTE1NTE3NjA2OTQ0ODE1MTQ4MTc1NjQ4NzM0NTIyNDg1NDM2ODg4NTE5Njg3ODE5Mjg2MDM3MDgyNjIzMDkwMDU4MjE2NjY3MDI4NTM3Mzg5MDgyMjIwOTI0MDAwMjU2NDg4MTkxMjAxNTc2MzEwODQ5OTQ4MzEwODAyNDU3ODI2NzA1MTc5MzMxNTA0OTg1OTMzMjY4NzMzMjA5NjU5NDk1MzY0MDgzMTIwNTI3ODkzMjIyMDQ2IiwgImMiOiAiMTAyNzgzMjU2NDE0MTE1NzczNzAyOTQ4MzgyNjMxNzQ3Nzk5MDk0ODk1MTAwNDkyMTQwNjcxOTI3NTQ3MDE3MTk4ODAzOTYzODk1OTcyIn0sICJyZXZfcmVnIjogbnVsbCwgIndpdG5lc3MiOiBudWxsfQ=="}}]}
open_wallet_search: >>> wallet_handle: 3, type_: 'credential_exchange_v10', query_json: '{"thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140572651968952), c_char_p(140572651913384), c_char_p(140573275299664), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s3`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s3 with parameters: [[68, 120, 77, 86, 78, 80, 76, 102, 86, 83, 78, 57, 84, 105, 75, 104, 99, 116, 77, 66, 79, 86, 78, 98, 89, 80, 104, 71, 111, 67, 102, 101, 101, 90, 86, 81, 69, 119, 120, 47, 105, 102, 52, 90, 79, 105, 82, 112, 106, 50, 88, 119, 53, 113, 118, 66, 114, 84, 103, 80, 122, 78, 77, 82, 88, 109, 119, 89], [63, 214, 72, 222, 130, 103, 146, 158, 195, 194, 230, 74, 26, 53, 129, 230, 232, 7, 33, 137, 227, 21, 72, 88, 62, 97, 106, 31, 62, 194, 84, 80, 193, 83, 183, 11, 35], [118, 216, 161, 255, 225, 241, 243, 209, 149, 17, 79, 48, 71, 125, 4, 107, 229, 121, 155, 216, 246, 172, 55, 66, 121, 145, 13, 223, 39, 217, 43, 81, 45, 74, 27, 120, 65, 214, 59, 253, 245, 44, 99, 110, 118, 85, 225, 130, 132, 109, 86, 191, 168, 17, 154, 24, 121, 233, 212, 3, 131, 86, 68, 17], "Medic", "Medic"]
_indy_callback: >>> command_handle: 99, err , args: (25,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 99, err , args: (25,)
_indy_loop_callback: Function returned 25
_indy_loop_callback <<<
open_wallet_search: <<< res: 25
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 25, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(25), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 100, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"71bf4548-eca4-4e17-9234-f2a75f0a41ed","value":"{\\"thread_id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"created_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"updated_at\\": \\"2021-05-17 12:41:44.267074Z\\", \\"connection_id\\": \\"f56b18ea-92e1-4f6d-a094-80da3fad398d\\", \\"credential_proposal_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential\\", \\"@id\\": \\"11b76349-c461-401e-8668-d198a86f1988\\", \\"credential_proposal\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"comment\\": \\"create automated credential exchange\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\"}, \\"credential_offer_dict\\": null, \\"credential_offer\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"key_correctness_proof\\": {\\"c\\": \\"107747385423523632115836196578250990474250248043120793044857578887670452863909\\", \\"xz_cap\\": \\"1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694\\", \\"xr_cap\\": [[\\"name\\", \\"2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993\\"], [\\"university\\", \\"405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652\\"], [\\"dateissued\\", \\"2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451\\"], [\\"master_secret\\", \\"1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202\\"]]}, \\"nonce\\": \\"598069920933476898638215\\"}, \\"credential_request\\": {\\"prover_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"blinded_ms\\": {\\"u\\": \\"9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526\\", \\"ur\\": null, \\"hidden_attributes\\": [\\"master_secret\\"], \\"committed_attributes\\": {}}, \\"blinded_ms_correctness_proof\\": {\\"c\\": \\"8734654926560185522422668980289494278226532874472645869964441855250278027234\\", \\"v_dash_cap\\": \\"325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385\\", \\"m_caps\\": {\\"master_secret\\": \\"21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167\\"}, \\"r_caps\\": {}}, \\"nonce\\": \\"959712576749564225650409\\"}, \\"credential_request_metadata\\": {\\"master_secret_blinding_data\\": {\\"v_prime\\": \\"37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045\\", \\"vr_prime\\": null}, \\"nonce\\": \\"959712576749564225650409\\", \\"master_secret_name\\": \\"Medic\\"}, \\"error_msg\\": null, \\"auto_offer\\": false, \\"auto_issue\\": false, \\"auto_remove\\": false, \\"raw_credential\\": null, \\"credential\\": null, \\"parent_thread_id\\": null, \\"initiator\\": \\"external\\", \\"credential_definition_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"credential_id\\": null, \\"revoc_reg_id\\": null, \\"revocation_id\\": null, \\"role\\": \\"holder\\", \\"state\\": \\"request_sent\\", \\"trace\\": true}","tags":null}]}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 100, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"71bf4548-eca4-4e17-9234-f2a75f0a41ed","value":"{\\"thread_id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"created_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"updated_at\\": \\"2021-05-17 12:41:44.267074Z\\", \\"connection_id\\": \\"f56b18ea-92e1-4f6d-a094-80da3fad398d\\", \\"credential_proposal_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential\\", \\"@id\\": \\"11b76349-c461-401e-8668-d198a86f1988\\", \\"credential_proposal\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"comment\\": \\"create automated credential exchange\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\"}, \\"credential_offer_dict\\": null, \\"credential_offer\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"key_correctness_proof\\": {\\"c\\": \\"107747385423523632115836196578250990474250248043120793044857578887670452863909\\", \\"xz_cap\\": \\"1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694\\", \\"xr_cap\\": [[\\"name\\", \\"2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993\\"], [\\"university\\", \\"405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652\\"], [\\"dateissued\\", \\"2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451\\"], [\\"master_secret\\", \\"1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202\\"]]}, \\"nonce\\": \\"598069920933476898638215\\"}, \\"credential_request\\": {\\"prover_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"blinded_ms\\": {\\"u\\": \\"9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526\\", \\"ur\\": null, \\"hidden_attributes\\": [\\"master_secret\\"], \\"committed_attributes\\": {}}, \\"blinded_ms_correctness_proof\\": {\\"c\\": \\"8734654926560185522422668980289494278226532874472645869964441855250278027234\\", \\"v_dash_cap\\": \\"325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385\\", \\"m_caps\\": {\\"master_secret\\": \\"21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167\\"}, \\"r_caps\\": {}}, \\"nonce\\": \\"959712576749564225650409\\"}, \\"credential_request_metadata\\": {\\"master_secret_blinding_data\\": {\\"v_prime\\": \\"37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045\\", \\"vr_prime\\": null}, \\"nonce\\": \\"959712576749564225650409\\", \\"master_secret_name\\": \\"Medic\\"}, \\"error_msg\\": null, \\"auto_offer\\": false, \\"auto_issue\\": false, \\"auto_remove\\": false, \\"raw_credential\\": null, \\"credential\\": null, \\"parent_thread_id\\": null, \\"initiator\\": \\"external\\", \\"credential_definition_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"credential_id\\": null, \\"revoc_reg_id\\": null, \\"revocation_id\\": null, \\"role\\": \\"holder\\", \\"state\\": \\"request_sent\\", \\"trace\\": true}","tags":null}]}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":[{"type":null,"id":"71bf4548-eca4-4e17-9234-f2a75f0a41ed","value":"{\\"thread_id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"created_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"updated_at\\": \\"2021-05-17 12:41:44.267074Z\\", \\"connection_id\\": \\"f56b18ea-92e1-4f6d-a094-80da3fad398d\\", \\"credential_proposal_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential\\", \\"@id\\": \\"11b76349-c461-401e-8668-d198a86f1988\\", \\"credential_proposal\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"comment\\": \\"create automated credential exchange\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\"}, \\"credential_offer_dict\\": null, \\"credential_offer\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"key_correctness_proof\\": {\\"c\\": \\"107747385423523632115836196578250990474250248043120793044857578887670452863909\\", \\"xz_cap\\": \\"1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694\\", \\"xr_cap\\": [[\\"name\\", \\"2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993\\"], [\\"university\\", \\"405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652\\"], [\\"dateissued\\", \\"2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451\\"], [\\"master_secret\\", \\"1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202\\"]]}, \\"nonce\\": \\"598069920933476898638215\\"}, \\"credential_request\\": {\\"prover_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"blinded_ms\\": {\\"u\\": \\"9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526\\", \\"ur\\": null, \\"hidden_attributes\\": [\\"master_secret\\"], \\"committed_attributes\\": {}}, \\"blinded_ms_correctness_proof\\": {\\"c\\": \\"8734654926560185522422668980289494278226532874472645869964441855250278027234\\", \\"v_dash_cap\\": \\"325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385\\", \\"m_caps\\": {\\"master_secret\\": \\"21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167\\"}, \\"r_caps\\": {}}, \\"nonce\\": \\"959712576749564225650409\\"}, \\"credential_request_metadata\\": {\\"master_secret_blinding_data\\": {\\"v_prime\\": \\"37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045\\", \\"vr_prime\\": null}, \\"nonce\\": \\"959712576749564225650409\\", \\"master_secret_name\\": \\"Medic\\"}, \\"error_msg\\": null, \\"auto_offer\\": false, \\"auto_issue\\": false, \\"auto_remove\\": false, \\"raw_credential\\": null, \\"credential\\": null, \\"parent_thread_id\\": null, \\"initiator\\": \\"external\\", \\"credential_definition_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"credential_id\\": null, \\"revoc_reg_id\\": null, \\"revocation_id\\": null, \\"role\\": \\"holder\\", \\"state\\": \\"request_sent\\", \\"trace\\": true}","tags":null}]}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":[{"type":null,"id":"71bf4548-eca4-4e17-9234-f2a75f0a41ed","value":"{\\"thread_id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"created_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"updated_at\\": \\"2021-05-17 12:41:44.267074Z\\", \\"connection_id\\": \\"f56b18ea-92e1-4f6d-a094-80da3fad398d\\", \\"credential_proposal_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential\\", \\"@id\\": \\"11b76349-c461-401e-8668-d198a86f1988\\", \\"credential_proposal\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"comment\\": \\"create automated credential exchange\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\"}, \\"credential_offer_dict\\": null, \\"credential_offer\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"key_correctness_proof\\": {\\"c\\": \\"107747385423523632115836196578250990474250248043120793044857578887670452863909\\", \\"xz_cap\\": \\"1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694\\", \\"xr_cap\\": [[\\"name\\", \\"2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993\\"], [\\"university\\", \\"405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652\\"], [\\"dateissued\\", \\"2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451\\"], [\\"master_secret\\", \\"1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202\\"]]}, \\"nonce\\": \\"598069920933476898638215\\"}, \\"credential_request\\": {\\"prover_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"blinded_ms\\": {\\"u\\": \\"9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526\\", \\"ur\\": null, \\"hidden_attributes\\": [\\"master_secret\\"], \\"committed_attributes\\": {}}, \\"blinded_ms_correctness_proof\\": {\\"c\\": \\"8734654926560185522422668980289494278226532874472645869964441855250278027234\\", \\"v_dash_cap\\": \\"325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385\\", \\"m_caps\\": {\\"master_secret\\": \\"21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167\\"}, \\"r_caps\\": {}}, \\"nonce\\": \\"959712576749564225650409\\"}, \\"credential_request_metadata\\": {\\"master_secret_blinding_data\\": {\\"v_prime\\": \\"37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045\\", \\"vr_prime\\": null}, \\"nonce\\": \\"959712576749564225650409\\", \\"master_secret_name\\": \\"Medic\\"}, \\"error_msg\\": null, \\"auto_offer\\": false, \\"auto_issue\\": false, \\"auto_remove\\": false, \\"raw_credential\\": null, \\"credential\\": null, \\"parent_thread_id\\": null, \\"initiator\\": \\"external\\", \\"credential_definition_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"credential_id\\": null, \\"revoc_reg_id\\": null, \\"revocation_id\\": null, \\"role\\": \\"holder\\", \\"state\\": \\"request_sent\\", \\"trace\\": true}","tags":null}]}'
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 25, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(25), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 101, err , args: (b'{"totalCount":null,"records":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 101, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 25
do_call: >>> name: indy_close_wallet_search, args: (c_int(25), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 102, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 102, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
update_wallet_record_value: >>> wallet_handle: 3, type_: 'credential_exchange_v10', id: '71bf4548-eca4-4e17-9234-f2a75f0a41ed', value: '{"thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "created_at": "2021-05-17 12:41:32.182428Z", "updated_at": "2021-05-17 12:41:45.557037Z", "connection_id": "f56b18ea-92e1-4f6d-a094-80da3fad398d", "credential_proposal_dict": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential", "@id": "11b76349-c461-401e-8668-d198a86f1988", "credential_proposal": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview", "attributes": [{"name": "Name", "value": "Will Abramson"}, {"name": "University", "value": "Edinburgh Medical School"}, {"name": "Date Issued", "value": "2021-05-17"}]}, "comment": "create automated credential exchange", "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default"}, "credential_offer_dict": null, "credential_offer": {"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "key_correctness_proof": {"c": "107747385423523632115836196578250990474250248043120793044857578887670452863909", "xz_cap": "1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694", "xr_cap": [["name", "2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993"], ["university", "405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652"], ["dateissued", "2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451"], ["master_secret", "1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202"]]}, "nonce": "598069920933476898638215"}, "credential_request": {"prover_did": "Ss9L55FVLDVAE9wH9QUaLm", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "blinded_ms": {"u": "9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526", "ur": null, "hidden_attributes": ["master_secret"], "committed_attributes": {}}, "blinded_ms_correctness_proof": {"c": "8734654926560185522422668980289494278226532874472645869964441855250278027234", "v_dash_cap": "325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385", "m_caps": {"master_secret": "21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167"}, "r_caps": {}}, "nonce": "959712576749564225650409"}, "credential_request_metadata": {"master_secret_blinding_data": {"v_prime": "37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045", "vr_prime": null}, "nonce": "959712576749564225650409", "master_secret_name": "Medic"}, "error_msg": null, "auto_offer": false, "auto_issue": false, "auto_remove": false, "raw_credential": {"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "rev_reg_id": null, "values": {"Date Issued": {"raw": "2021-05-17", "encoded": "31928709163600735441101476658814216885388252189838058973070792022801591336579"}, "Name": {"raw": "Will Abramson", "encoded": "65005548905037764764502350053825769914874082648761230458670796241392891659611"}, "University": {"raw": "Edinburgh Medical School", "encoded": "57963125648994666300875361621729313351158154740138173103415020334594043694317"}}, "signature": {"p_credential": {"m_2": "64614027959237148406577876643582193654195798199659663559565324074474110876426", "a": "28196659349828833841806568922500331419943756793472592515246070472169183103554944278198153816574274149720987095111486068930168219714920197743796206530561438612474718498319743285076562596169213545429930609441229808810198314595598202600904377879617269619009997889921365729164321988246425760507962013213179356489165886495879937830757860813550488653092270182316591558107377505094005438662414556058268151394311488038034371945050944831570625995413228293415919202055974276990013994102772566137746322043107147965689577794487771425424609270637527334712240581940337439348801155923456105656468328904263302114118526537501007139669", "e": "259344723055062059907025491480697571938277889515152306249728583105665800713306759149981690559193987143012367913206299323899696942213235956742930046031686561229403844345113618420029", "v": "6354026336388301401986521152890972249709618813964245602037338330698734314130828006765601555201728676114393573732602693886965849392107855630297351891640801269990034659747926053185070098201542430508515708889270830280358222874522865192378335821753487954245491002769053491204208466619533185143527002699313031827277660717047972233120119465702841112954798655072211467889917359709980309161102427562535741080061045113185079205854056196403185426803056342351523484956234191104274583987854734646184176897408347172222790577708010964678101842400904781237539895339702598771916345745167905791870029121917745408251064199177212964106585715827085668399314453904306461632518873615305262329276997644593556745530080607631408226505403903006930638982430993587434659039373409312070077257810296424683361389295160932899519710429495996593499727601"}, "r_credential": null}, "signature_correctness_proof": {"se": "18296863927500172804293107843176657430120315953488730246315016673748764435345492977644678659634633639966966144817195024079688169206411755462988529782005065401235361183325984987096857804776471818376393329673081462427754929631287497458043150955506212371673105698807070796547668375707556817833298394290228188197143572788135782368887029154633552036967329846441145459760121055008867725749238807541631523967403207207491302781895427812338735115517606944815148175648734522485436888519687819286037082623090058216667028537389082220924000256488191201576310849948310802457826705179331504985933268733209659495364083120527893222046", "c": "102783256414115773702948382631747799094895100492140671927547017198803963895972"}, "rev_reg": null, "witness": null}, "credential": null, "parent_thread_id": null, "initiator": "external", "credential_definition_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "credential_id": null, "revoc_reg_id": null, "revocation_id": null, "role": "holder", "state": "credential_received", "trace": true}'
do_call: >>> name: indy_update_wallet_record_value, args: (c_int(3), c_char_p(140573273121912), c_char_p(140572651972368), c_char_p(94095652745856), <CFunctionType object at 0x7fd99efcf110>)
do_call: Function indy_update_wallet_record_value returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s4`: UPDATE items SET value = $1, key = $2 WHERE type = $3 AND name = $4 AND wallet_id = $5
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s4 with parameters: [[193, 134, 172, 192, 91, 248, 253, 19, 185, 83, 163, 135, 112, 112, 142, 241, 130, 124, 181, 187, 126, 101, 234, 106, 19, 5, 251, 60, 9, 52, 251, 123, 243, 167, 66, 109, 54, 55, 240, 226, 217, 158, 131, 139, 28, 152, 126, 107, 245, 32, 56, 8, 212, 61, 232, 125, 246, 77, 81, 64, 248, 171, 150, 167, 226, 136, 82, 110, 240, 251, 193, 118, 107, 214, 222, 23, 179, 167, 16, 245, 247, 120, 162, 178, 245, 227, 247, 40, 26, 139, 224, 73, 250, 156, 51, 234, 136, 179, 5, 126, 173, 80, 149, 206, 200, 25, 130, 136, 164, 251, 178, 51, 235, 248, 255, 40, 213, 187, 95, 26, 72, 218, 62, 192, 8, 47, 168, 208, 41, 99, 49, 10, 150, 112, 250, 77, 35, 2, 89, 56, 23, 10, 146, 231, 44, 216, 74, 14, 157, 74, 141, 11, 10, 179, 26, 84, 74, 61, 105, 115, 128, 251, 50, 139, 198, 147, 161, 193, 107, 189, 206, 249, 36, 72, 51, 137, 179, 204, 132, 106, 0, 59, 59, 224, 5, 114, 225, 109, 205, 62, 248, 251, 97, 138, 148, 232, 27, 192, 194, 3, 36, 199, 227, 150, 80, 43, 28, 198, 29, 87, 77, 164, 29, 3, 240, 38, 118, 78, 39, 102, 144, 81, 125, 194, 149, 68, 86, 189, 169, 27, 252, 111, 16, 173, 230, 228, 162, 229, 49, 174, 186, 194, 70, 142, 130, 195, 104, 238, 165, 191, 33, 222, 136, 12, 171, 61, 212, 215, 193, 31, 209, 62, 161, 255, 178, 168, 66, 66, 168, 72, 73, 177, 92, 107, 47, 169, 234, 72, 49, 201, 204, 152, 90, 98, 138, 88, 136, 128, 121, 27, 189, 6, 192, 226, 222, 244, 89, 117, 242, 211, 184, 204, 241, 87, 142, 142, 53, 225, 202, 221, 67, 246, 131, 220, 8, 8, 88, 80, 148, 156, 163, 149, 211, 203, 81, 24, 254, 80, 72, 242, 38, 132, 63, 20, 123, 99, 94, 134, 159, 17, 14, 67, 133, 71, 238, 102, 108, 184, 115, 205, 189, 78, 98, 127, 153, 220, 3, 146, 235, 106, 106, 173, 86, 91, 1, 236, 218, 63, 90, 228, 13, 60, 138, 231, 230, 203, 219, 163, 233, 224, 220, 91, 159, 39, 107, 181, 104, 73, 165, 81, 140, 48, 39, 201, 127, 179, 34, 58, 130, 217, 134, 224, 186, 77, 195, 84, 104, 112, 158, 72, 97, 40, 36, 20, 22, 20, 146, 117, 215, 120, 179, 111, 143, 64, 56, 10, 13, 65, 111, 238, 65, 80, 201, 151, 215, 237, 129, 185, 170, 125, 6, 250, 4, 234, 174, 99, 56, 137, 16, 156, 37, 249, 229, 63, 234, 167, 75, 224, 95, 151, 211, 7, 41, 70, 193, 140, 217, 221, 232, 54, 193, 112, 246, 104, 126, 13, 9, 62, 158, 117, 218, 196, 147, 69, 24, 171, 102, 210, 191, 57, 241, 244, 221, 85, 254, 0, 207, 179, 169, 22, 135, 177, 103, 7, 141, 160, 134, 250, 166, 225, 120, 86, 181, 0, 220, 140, 236, 24, 116, 56, 110, 119, 79, 137, 90, 230, 65, 140, 45, 229, 128, 56, 14, 181, 184, 102, 208, 14, 160, 61, 247, 3, 217, 115, 15, 210, 179, 120, 126, 192, 100, 50, 236, 59, 91, 97, 123, 225, 139, 221, 147, 59, 140, 103, 185, 246, 82, 194, 88, 176, 106, 1, 134, 156, 235, 26, 67, 153, 175, 26, 130, 55, 65, 207, 72, 251, 35, 63, 42, 128, 121, 26, 43, 172, 209, 127, 79, 176, 170, 191, 36, 96, 240, 123, 118, 154, 77, 240, 124, 162, 78, 156, 72, 203, 17, 166, 110, 248, 218, 24, 184, 86, 206, 40, 72, 243, 65, 77, 3, 51, 133, 153, 6, 126, 99, 92, 254, 219, 103, 4, 232, 125, 219, 188, 92, 155, 119, 163, 195, 4, 215, 63, 47, 242, 229, 187, 56, 239, 232, 235, 85, 90, 117, 23, 60, 13, 218, 127, 168, 173, 23, 176, 71, 71, 184, 253, 84, 38, 71, 14, 155, 117, 9, 227, 70, 73, 134, 36, 35, 160, 62, 145, 39, 194, 140, 202, 84, 231, 236, 151, 120, 150, 120, 61, 238, 97, 254, 68, 2, 207, 209, 141, 117, 77, 76, 114, 239, 221, 226, 24, 145, 209, 54, 222, 129, 253, 70, 186, 232, 207, 93, 123, 164, 83, 19, 105, 144, 211, 0, 109, 50, 65, 1, 82, 11, 80, 122, 113, 144, 12, 168, 16, 4, 215, 211, 236, 189, 32, 242, 119, 148, 35, 138, 70, 123, 223, 179, 93, 20, 252, 2, 67, 14, 57, 140, 34, 9, 97, 130, 239, 25, 25, 208, 94, 216, 83, 152, 76, 167, 207, 108, 103, 255, 180, 108, 160, 81, 13, 254, 221, 69, 54, 114, 116, 35, 7, 163, 149, 251, 51, 172, 151, 26, 40, 212, 69, 10, 46, 87, 21, 8, 136, 146, 37, 20, 92, 134, 130, 60, 171, 60, 0, 225, 133, 232, 76, 252, 10, 90, 153, 79, 33, 51, 253, 11, 131, 131, 165, 9, 112, 23, 33, 232, 44, 251, 107, 153, 27, 183, 73, 168, 47, 222, 110, 148, 73, 13, 14, 233, 61, 187, 111, 212, 3, 51, 116, 152, 5, 99, 85, 214, 51, 99, 44, 150, 164, 216, 255, 125, 113, 146, 7, 57, 84, 156, 94, 56, 21, 202, 207, 126, 94, 184, 237, 192, 202, 137, 73, 228, 206, 65, 31, 97, 243, 115, 221, 163, 18, 109, 229, 87, 122, 87, 79, 57, 1, 130, 45, 115, 75, 126, 119, 37, 125, 126, 255, 0, 136, 19, 50, 75, 219, 181, 132, 179, 6, 87, 0, 254, 197, 76, 46, 6, 86, 61, 22, 54, 151, 89, 208, 193, 18, 207, 139, 30, 171, 167, 155, 49, 89, 106, 26, 199, 215, 27, 214, 242, 158, 212, 65, 247, 159, 202, 30, 228, 15, 128, 9, 105, 140, 90, 29, 20, 232, 48, 24, 107, 37, 205, 51, 66, 16, 253, 25, 43, 171, 193, 148, 243, 175, 149, 179, 92, 106, 144, 200, 59, 252, 63, 218, 8, 175, 170, 236, 90, 239, 35, 35, 163, 83, 236, 228, 249, 1, 184, 114, 46, 247, 204, 220, 101, 131, 130, 22, 102, 89, 138, 188, 18, 150, 41, 147, 120, 2, 216, 216, 168, 230, 228, 42, 212, 181, 118, 125, 108, 223, 192, 223, 251, 129, 204, 229, 163, 119, 30, 15, 227, 129, 169, 210, 186, 214, 41, 141, 16, 116, 161, 73, 188, 238, 48, 240, 149, 105, 160, 138, 172, 55, 103, 235, 228, 245, 120, 208, 222, 81, 52, 173, 18, 97, 152, 52, 137, 115, 222, 42, 233, 229, 116, 214, 233, 42, 59, 107, 252, 201, 19, 15, 132, 140, 162, 254, 97, 85, 176, 133, 42, 196, 227, 41, 123, 0, 26, 0, 135, 99, 235, 36, 114, 210, 85, 239, 248, 4, 113, 3, 73, 213, 83, 229, 45, 107, 159, 236, 139, 25, 94, 236, 146, 225, 170, 207, 114, 37, 29, 138, 62, 237, 27, 136, 108, 77, 136, 112, 32, 112, 225, 251, 101, 14, 3, 100, 176, 169, 79, 174, 117, 129, 212, 239, 84, 126, 36, 185, 73, 243, 184, 152, 101, 237, 113, 126, 0, 72, 228, 71, 18, 79, 132, 21, 247, 131, 240, 134, 232, 114, 124, 197, 65, 62, 174, 177, 190, 37, 30, 34, 0, 44, 205, 103, 20, 255, 3, 38, 217, 107, 11, 250, 167, 218, 212, 42, 16, 85, 90, 82, 31, 231, 54, 202, 206, 254, 187, 120, 247, 153, 238, 15, 231, 185, 95, 91, 234, 106, 114, 77, 6, 243, 212, 209, 192, 7, 168, 168, 68, 205, 247, 199, 46, 119, 153, 254, 170, 241, 196, 7, 190, 147, 166, 34, 76, 177, 194, 26, 121, 6, 233, 63, 70, 226, 120, 60, 130, 230, 20, 80, 246, 1, 19, 161, 142, 18, 43, 37, 217, 120, 191, 222, 8, 108, 198, 155, 71, 250, 212, 141, 56, 47, 57, 221, 104, 134, 132, 138, 231, 217, 80, 218, 161, 100, 166, 149, 227, 133, 125, 100, 2, 198, 244, 212, 207, 73, 222, 117, 192, 138, 9, 234, 52, 18, 229, 90, 208, 152, 134, 27, 69, 220, 47, 108, 156, 10, 212, 242, 131, 1, 104, 37, 1, 172, 205, 210, 29, 246, 98, 183, 155, 196, 167, 170, 24, 136, 77, 127, 91, 226, 252, 188, 5, 126, 23, 12, 137, 66, 10, 57, 184, 226, 102, 37, 89, 192, 221, 24, 22, 250, 52, 88, 181, 154, 208, 186, 182, 136, 195, 206, 206, 227, 234, 77, 103, 29, 124, 202, 251, 213, 254, 32, 104, 70, 23, 13, 88, 215, 17, 102, 177, 172, 140, 213, 28, 151, 246, 33, 167, 85, 179, 175, 137, 166, 152, 140, 156, 4, 70, 144, 98, 152, 155, 201, 137, 233, 205, 221, 62, 143, 167, 30, 113, 249, 251, 93, 131, 68, 170, 225, 8, 233, 10, 123, 4, 254, 225, 153, 71, 148, 88, 130, 227, 53, 181, 159, 236, 6, 140, 197, 9, 90, 59, 231, 34, 0, 229, 238, 72, 109, 134, 62, 120, 167, 116, 166, 196, 183, 181, 60, 187, 111, 111, 239, 248, 112, 170, 25, 129, 157, 12, 113, 235, 118, 99, 22, 59, 123, 79, 123, 23, 110, 94, 213, 108, 81, 51, 169, 182, 29, 127, 108, 146, 82, 186, 249, 97, 133, 15, 136, 80, 110, 102, 243, 215, 83, 145, 40, 190, 2, 232, 107, 75, 9, 224, 199, 112, 63, 53, 132, 138, 220, 179, 2, 157, 223, 145, 196, 112, 250, 215, 135, 19, 209, 94, 188, 133, 98, 63, 81, 236, 91, 150, 139, 29, 20, 62, 106, 2, 247, 171, 125, 21, 98, 27, 114, 252, 78, 142, 159, 25, 133, 189, 199, 75, 112, 185, 124, 158, 18, 97, 185, 71, 251, 38, 54, 203, 105, 224, 51, 121, 37, 0, 142, 25, 86, 214, 168, 17, 168, 79, 25, 108, 232, 199, 102, 97, 149, 122, 222, 92, 48, 226, 238, 175, 171, 7, 124, 38, 241, 106, 224, 226, 187, 229, 143, 126, 191, 191, 63, 94, 205, 162, 171, 22, 182, 115, 200, 40, 236, 29, 188, 102, 55, 32, 102, 244, 196, 156, 78, 195, 193, 210, 200, 226, 214, 96, 207, 218, 111, 3, 161, 183, 205, 205, 164, 35, 65, 121, 216, 194, 160, 133, 74, 231, 225, 241, 140, 121, 103, 129, 226, 170, 165, 131, 48, 148, 221, 232, 174, 206, 130, 156, 161, 84, 23, 218, 8, 144, 160, 217, 226, 198, 229, 57, 159, 90, 80, 178, 184, 120, 138, 179, 184, 73, 243, 211, 162, 27, 14, 227, 151, 20, 17, 131, 4, 219, 68, 201, 127, 126, 174, 166, 123, 16, 121, 128, 20, 151, 38, 145, 213, 200, 67, 10, 88, 245, 167, 193, 13, 41, 213, 54, 130, 210, 59, 119, 233, 153, 109, 84, 43, 86, 159, 96, 107, 1, 45, 144, 65, 117, 255, 249, 61, 106, 42, 61, 68, 62, 237, 20, 46, 118, 219, 148, 48, 20, 179, 152, 37, 43, 184, 173, 45, 91, 1, 228, 206, 151, 130, 40, 202, 23, 67, 1, 206, 78, 80, 165, 236, 194, 169, 120, 209, 193, 2, 171, 233, 168, 103, 50, 120, 210, 31, 228, 20, 101, 108, 13, 164, 133, 206, 238, 130, 93, 244, 160, 81, 174, 165, 154, 254, 69, 119, 187, 215, 71, 65, 213, 168, 73, 109, 200, 54, 95, 215, 86, 116, 74, 158, 199, 146, 37, 144, 172, 100, 46, 170, 215, 17, 139, 13, 142, 134, 196, 179, 136, 189, 63, 176, 104, 159, 13, 214, 171, 221, 43, 121, 77, 151, 94, 181, 224, 228, 165, 251, 141, 75, 246, 115, 31, 52, 124, 240, 90, 227, 72, 188, 36, 33, 221, 108, 176, 160, 159, 220, 209, 61, 214, 99, 182, 224, 55, 141, 179, 44, 46, 250, 36, 7, 77, 9, 207, 69, 194, 25, 63, 110, 26, 16, 194, 182, 28, 169, 125, 92, 85, 83, 109, 195, 63, 67, 121, 213, 117, 2, 202, 249, 166, 190, 224, 13, 20, 131, 138, 193, 194, 124, 251, 19, 142, 231, 87, 209, 247, 109, 206, 168, 65, 198, 28, 193, 22, 238, 94, 15, 39, 98, 186, 42, 78, 224, 52, 211, 20, 192, 0, 31, 91, 140, 30, 106, 215, 168, 129, 54, 126, 175, 212, 156, 123, 2, 33, 203, 216, 137, 193, 14, 78, 2, 154, 126, 241, 231, 46, 123, 89, 113, 210, 209, 172, 3, 168, 111, 224, 228, 239, 18, 69, 179, 143, 228, 191, 141, 153, 118, 178, 132, 81, 141, 195, 155, 5, 126, 200, 225, 105, 130, 34, 195, 52, 201, 85, 153, 66, 179, 144, 82, 216, 208, 96, 92, 175, 74, 128, 87, 241, 227, 21, 158, 167, 89, 170, 80, 255, 67, 36, 163, 74, 218, 146, 18, 84, 249, 101, 138, 189, 121, 205, 16, 117, 121, 235, 193, 175, 178, 164, 24, 185, 223, 238, 105, 30, 59, 129, 55, 173, 104, 249, 173, 25, 38, 52, 57, 5, 62, 153, 205, 148, 188, 17, 107, 126, 169, 46, 2, 182, 142, 17, 75, 208, 231, 188, 36, 248, 253, 107, 171, 144, 85, 149, 53, 193, 2, 28, 156, 94, 135, 135, 219, 165, 253, 42, 209, 24, 178, 42, 202, 9, 13, 247, 29, 204, 105, 240, 222, 24, 29, 22, 130, 251, 53, 156, 180, 36, 128, 158, 1, 58, 176, 188, 114, 59, 103, 240, 242, 104, 92, 45, 186, 241, 123, 144, 42, 48, 104, 155, 198, 198, 177, 107, 245, 63, 206, 32, 24, 190, 46, 253, 68, 26, 78, 158, 138, 247, 141, 209, 78, 118, 67, 107, 253, 31, 106, 91, 208, 13, 190, 25, 59, 158, 1, 67, 26, 176, 27, 113, 7, 126, 161, 100, 247, 96, 228, 223, 9, 113, 157, 126, 95, 117, 171, 195, 23, 133, 81, 251, 18, 21, 130, 60, 18, 246, 12, 139, 85, 132, 77, 107, 224, 173, 19, 81, 112, 10, 112, 38, 92, 191, 245, 125, 54, 46, 168, 67, 188, 234, 168, 229, 153, 219, 99, 111, 184, 217, 32, 145, 156, 223, 49, 162, 177, 151, 220, 253, 66, 82, 255, 245, 13, 180, 230, 135, 221, 83, 39, 138, 140, 111, 86, 0, 42, 243, 108, 13, 36, 169, 159, 16, 62, 202, 154, 100, 81, 181, 117, 133, 152, 4, 41, 149, 78, 132, 40, 67, 244, 134, 73, 11, 232, 182, 14, 4, 211, 154, 164, 93, 47, 54, 43, 28, 31, 38, 175, 165, 133, 213, 98, 96, 210, 17, 165, 115, 169, 158, 194, 173, 21, 218, 95, 116, 48, 225, 95, 73, 25, 211, 236, 229, 198, 195, 66, 20, 253, 108, 168, 20, 200, 101, 160, 204, 163, 108, 138, 172, 202, 238, 221, 64, 214, 252, 110, 146, 48, 183, 9, 130, 20, 57, 152, 48, 210, 67, 234, 187, 76, 196, 199, 86, 220, 220, 143, 6, 253, 162, 193, 64, 252, 77, 204, 70, 10, 55, 43, 224, 55, 114, 136, 212, 175, 63, 238, 81, 45, 6, 216, 127, 179, 22, 56, 49, 157, 43, 174, 178, 28, 131, 117, 169, 65, 255, 32, 162, 169, 219, 62, 94, 8, 151, 147, 73, 140, 146, 185, 120, 172, 231, 109, 118, 120, 99, 51, 221, 121, 164, 70, 18, 80, 176, 154, 132, 149, 120, 101, 53, 231, 227, 15, 83, 98, 94, 14, 243, 250, 85, 137, 224, 164, 89, 232, 190, 182, 48, 102, 233, 18, 111, 163, 9, 115, 135, 67, 54, 160, 2, 13, 0, 188, 17, 78, 23, 208, 161, 140, 143, 134, 176, 171, 173, 107, 198, 217, 209, 69, 17, 196, 204, 98, 104, 191, 166, 7, 28, 193, 2, 125, 18, 137, 94, 44, 216, 206, 92, 228, 17, 185, 122, 13, 148, 49, 65, 186, 245, 136, 125, 85, 217, 213, 154, 98, 210, 90, 23, 94, 41, 205, 32, 70, 93, 117, 175, 122, 25, 31, 107, 248, 237, 255, 234, 98, 152, 223, 192, 96, 99, 144, 255, 189, 98, 116, 27, 197, 39, 96, 225, 227, 219, 156, 141, 101, 118, 4, 158, 108, 52, 100, 142, 140, 107, 151, 148, 170, 232, 132, 142, 202, 251, 12, 73, 235, 95, 212, 216, 197, 88, 107, 28, 123, 78, 205, 101, 45, 157, 51, 25, 254, 50, 169, 162, 222, 71, 230, 113, 204, 195, 129, 243, 174, 10, 172, 28, 6, 222, 201, 10, 169, 107, 111, 1, 212, 208, 67, 10, 252, 224, 30, 147, 255, 159, 73, 185, 30, 154, 248, 60, 4, 154, 26, 148, 105, 205, 152, 169, 227, 122, 246, 222, 237, 87, 45, 183, 105, 119, 172, 23, 19, 195, 224, 39, 0, 50, 103, 192, 139, 76, 79, 77, 17, 178, 144, 58, 67, 32, 197, 221, 192, 207, 135, 19, 246, 180, 200, 45, 208, 153, 56, 71, 136, 42, 147, 233, 70, 102, 113, 238, 129, 204, 171, 174, 42, 134, 93, 159, 217, 140, 186, 2, 103, 180, 245, 254, 236, 234, 127, 137, 196, 123, 247, 107, 70, 148, 181, 28, 86, 39, 9, 0, 162, 170, 223, 167, 99, 32, 163, 50, 96, 102, 10, 210, 175, 225, 45, 58, 221, 110, 138, 216, 14, 160, 255, 207, 107, 250, 9, 54, 110, 194, 22, 22, 27, 108, 180, 246, 116, 240, 188, 209, 1, 96, 41, 152, 252, 58, 213, 117, 145, 230, 156, 26, 173, 220, 86, 172, 126, 189, 164, 243, 87, 74, 187, 159, 102, 39, 170, 139, 92, 191, 93, 39, 149, 240, 134, 252, 47, 34, 28, 75, 171, 212, 193, 152, 210, 218, 123, 122, 220, 65, 31, 244, 30, 216, 16, 149, 166, 178, 16, 179, 177, 47, 9, 188, 186, 125, 145, 17, 197, 78, 152, 57, 206, 148, 207, 190, 137, 221, 237, 36, 32, 46, 177, 234, 129, 245, 192, 249, 188, 202, 69, 80, 75, 85, 118, 160, 29, 136, 232, 212, 203, 37, 13, 55, 53, 45, 102, 116, 144, 224, 112, 50, 12, 245, 173, 246, 133, 195, 210, 41, 43, 193, 17, 251, 151, 121, 128, 51, 163, 153, 16, 129, 83, 227, 83, 165, 127, 226, 252, 239, 179, 63, 52, 77, 159, 194, 123, 100, 121, 216, 46, 116, 168, 236, 241, 62, 19, 180, 124, 72, 67, 151, 4, 120, 230, 115, 243, 78, 120, 76, 180, 73, 205, 151, 146, 9, 207, 26, 46, 199, 201, 92, 126, 32, 125, 137, 129, 185, 251, 11, 99, 253, 245, 65, 24, 235, 152, 99, 8, 39, 32, 10, 56, 161, 232, 146, 136, 94, 59, 228, 134, 61, 123, 101, 56, 182, 55, 23, 45, 126, 52, 160, 81, 203, 125, 21, 37, 168, 127, 130, 229, 95, 146, 108, 150, 245, 149, 152, 234, 116, 251, 127, 38, 150, 14, 221, 196, 15, 61, 230, 122, 106, 111, 222, 109, 30, 219, 219, 121, 119, 138, 254, 97, 103, 20, 85, 119, 136, 175, 22, 102, 184, 167, 13, 70, 239, 182, 193, 169, 156, 46, 82, 102, 43, 248, 106, 162, 80, 194, 12, 72, 179, 77, 240, 46, 203, 115, 159, 132, 135, 74, 98, 53, 162, 165, 215, 109, 16, 52, 34, 47, 203, 90, 4, 223, 28, 23, 145, 34, 49, 163, 7, 121, 144, 151, 95, 216, 85, 119, 67, 170, 100, 128, 61, 182, 209, 141, 95, 253, 6, 49, 222, 199, 209, 79, 11, 58, 119, 40, 30, 138, 78, 238, 99, 184, 168, 246, 180, 106, 250, 40, 188, 24, 14, 240, 87, 0, 142, 129, 187, 158, 171, 120, 1, 243, 153, 39, 55, 135, 156, 6, 73, 214, 79, 126, 63, 47, 109, 57, 7, 209, 57, 228, 125, 108, 139, 195, 221, 211, 193, 251, 251, 104, 200, 66, 53, 25, 136, 190, 129, 242, 123, 206, 176, 195, 198, 116, 228, 217, 175, 19, 105, 70, 38, 63, 26, 31, 73, 255, 255, 169, 27, 66, 186, 252, 39, 42, 210, 46, 31, 40, 3, 120, 95, 214, 64, 32, 115, 71, 152, 107, 34, 193, 19, 185, 208, 183, 104, 41, 232, 110, 237, 56, 107, 5, 151, 41, 144, 163, 175, 166, 115, 202, 19, 143, 192, 45, 6, 252, 125, 133, 245, 212, 60, 21, 20, 141, 224, 199, 170, 44, 244, 66, 52, 91, 125, 199, 253, 19, 90, 241, 174, 174, 249, 122, 63, 99, 98, 7, 193, 45, 25, 80, 130, 131, 193, 34, 94, 60, 114, 239, 141, 73, 225, 30, 163, 238, 14, 93, 50, 157, 131, 187, 96, 156, 66, 143, 91, 170, 26, 250, 112, 185, 129, 204, 108, 101, 129, 61, 13, 245, 125, 127, 196, 132, 131, 48, 169, 62, 195, 102, 53, 94, 156, 168, 144, 48, 98, 231, 57, 189, 163, 125, 86, 37, 158, 194, 125, 64, 162, 218, 167, 110, 184, 162, 169, 72, 243, 243, 232, 110, 84, 168, 124, 127, 109, 60, 234, 68, 128, 190, 10, 35, 189, 109, 254, 1, 49, 145, 35, 92, 58, 193, 53, 148, 252, 137, 162, 69, 168, 253, 144, 189, 159, 138, 37, 238, 159, 198, 16, 75, 183, 75, 135, 245, 132, 235, 75, 104, 188, 18, 236, 112, 218, 81, 160, 196, 16, 140, 101, 29, 178, 226, 198, 163, 100, 40, 124, 235, 239, 154, 205, 114, 81, 45, 85, 44, 80, 125, 47, 69, 164, 77, 115, 86, 121, 224, 64, 97, 226, 56, 88, 208, 247, 111, 57, 43, 91, 20, 124, 252, 57, 46, 42, 115, 92, 85, 179, 70, 21, 124, 174, 225, 17, 167, 198, 112, 224, 231, 8, 175, 54, 128, 217, 12, 149, 149, 79, 18, 217, 103, 54, 129, 147, 132, 54, 41, 82, 241, 186, 71, 195, 0, 173, 121, 44, 233, 92, 227, 118, 249, 54, 215, 37, 97, 61, 212, 129, 181, 85, 174, 74, 7, 90, 117, 204, 33, 136, 94, 142, 199, 223, 124, 76, 36, 142, 8, 30, 181, 237, 33, 209, 239, 116, 83, 135, 177, 36, 206, 162, 250, 119, 61, 149, 62, 239, 33, 200, 184, 26, 211, 40, 200, 188, 108, 79, 135, 99, 0, 161, 141, 220, 21, 122, 67, 244, 164, 171, 68, 91, 77, 136, 200, 83, 106, 142, 222, 250, 205, 209, 243, 29, 116, 204, 85, 20, 204, 106, 15, 49, 94, 228, 241, 63, 118, 49, 57, 60, 228, 104, 18, 92, 186, 134, 195, 34, 169, 157, 174, 20, 105, 123, 37, 222, 220, 77, 43, 242, 37, 86, 163, 132, 101, 117, 12, 20, 185, 186, 226, 211, 253, 224, 98, 77, 240, 211, 178, 48, 155, 65, 58, 67, 90, 221, 47, 4, 169, 81, 99, 198, 92, 251, 98, 70, 42, 45, 177, 193, 152, 182, 36, 55, 192, 156, 84, 132, 243, 223, 59, 190, 95, 71, 56, 2, 33, 47, 239, 114, 133, 211, 11, 167, 95, 13, 195, 96, 204, 249, 195, 118, 49, 80, 161, 131, 197, 136, 162, 165, 242, 244, 101, 158, 254, 54, 163, 36, 95, 133, 151, 3, 90, 237, 189, 31, 74, 214, 220, 201, 168, 154, 129, 169, 184, 121, 197, 189, 254, 141, 41, 88, 163, 36, 221, 197, 0, 216, 107, 4, 52, 160, 231, 77, 210, 197, 208, 246, 199, 98, 145, 166, 143, 247, 23, 188, 181, 7, 60, 141, 235, 170, 49, 21, 177, 169, 221, 222, 89, 82, 82, 24, 96, 81, 138, 212, 22, 191, 0, 186, 48, 27, 23, 72, 170, 194, 231, 41, 107, 239, 109, 223, 167, 49, 50, 242, 8, 228, 56, 66, 178, 173, 37, 0, 240, 215, 34, 177, 57, 224, 237, 189, 197, 185, 152, 141, 255, 184, 251, 163, 239, 92, 135, 98, 93, 230, 213, 208, 158, 130, 225, 18, 105, 207, 135, 230, 78, 102, 18, 102, 9, 86, 64, 240, 125, 16, 75, 240, 7, 159, 126, 13, 66, 252, 163, 6, 91, 114, 227, 0, 235, 246, 117, 48, 28, 204, 209, 130, 161, 109, 37, 80, 124, 222, 170, 145, 108, 242, 189, 213, 207, 79, 57, 29, 154, 88, 120, 125, 18, 243, 241, 66, 20, 44, 51, 241, 15, 7, 35, 9, 12, 93, 228, 181, 186, 236, 226, 152, 53, 176, 111, 124, 18, 63, 185, 107, 205, 186, 81, 42, 172, 167, 81, 136, 83, 171, 55, 126, 112, 38, 30, 61, 243, 33, 189, 110, 17, 109, 92, 38, 87, 21, 172, 125, 23, 144, 174, 82, 149, 134, 174, 146, 103, 44, 173, 25, 165, 74, 73, 156, 129, 249, 219, 210, 78, 106, 196, 100, 247, 73, 180, 50, 151, 122, 71, 202, 131, 165, 205, 161, 117, 162, 170, 191, 12, 34, 53, 192, 147, 37, 199, 83, 85, 174, 38, 153, 35, 150, 79, 151, 235, 174, 95, 213, 212, 183, 203, 103, 205, 253, 105, 245, 13, 216, 95, 147, 178, 103, 48, 218, 137, 145, 158, 114, 167, 240, 82, 218, 229, 234, 55, 212, 160, 186, 156, 59, 209, 239, 181, 132, 243, 122, 79, 25, 11, 127, 40, 186, 150, 194, 183, 147, 56, 82, 194, 50, 81, 8, 223, 56, 21, 235, 210, 11, 45, 214, 75, 82, 44, 101, 53, 114, 111, 26, 225, 126, 200, 115, 183, 20, 26, 175, 205, 179, 121, 35, 254, 209, 247, 86, 21, 33, 109, 164, 221, 160, 208, 252, 99, 105, 7, 63, 140, 55, 161, 46, 203, 97, 106, 126, 209, 45, 117, 8, 207, 133, 146, 134, 190, 16, 109, 235, 62, 168, 19, 121, 144, 149, 119, 117, 254, 173, 241, 31, 235, 219, 48, 85, 39, 14, 154, 68, 237, 158, 199, 156, 22, 198, 217, 85, 154, 208, 204, 119, 48, 246, 119, 87, 59, 159, 170, 222, 21, 95, 80, 129, 135, 199, 9, 98, 220, 80, 140, 119, 147, 80, 173, 219, 51, 94, 152, 42, 106, 167, 183, 192, 25, 30, 55, 235, 148, 58, 63, 235, 220, 97, 195, 213, 216, 101, 198, 219, 4, 144, 128, 33, 16, 100, 112, 185, 121, 27, 115, 163, 78, 41, 104, 246, 252, 181, 186, 215, 193, 105, 163, 66, 50, 37, 117, 57, 34, 67, 113, 231, 209, 236, 8, 99, 205, 22, 78, 210, 19, 66, 17, 111, 159, 160, 42, 219, 176, 187, 242, 93, 195, 0, 228, 232, 12, 64, 118, 56, 24, 125, 220, 71, 162, 46, 218, 161, 120, 88, 122, 116, 238, 141, 214, 254, 132, 172, 194, 5, 86, 54, 179, 73, 126, 66, 167, 4, 41, 146, 133, 195, 116, 222, 202, 109, 65, 192, 80, 19, 123, 29, 25, 21, 219, 184, 20, 212, 255, 181, 31, 46, 251, 77, 24, 206, 243, 31, 228, 180, 115, 225, 212, 97, 90, 21, 78, 130, 107, 107, 211, 25, 7, 162, 175, 189, 192, 236, 113, 148, 153, 152, 76, 102, 51, 130, 67, 18, 240, 7, 16, 17, 57, 84, 116, 89, 4, 206, 73, 103, 21, 42, 17, 133, 238, 195, 241, 166, 255, 241, 59, 173, 75, 246, 47, 202, 168, 81, 191, 221, 213, 212, 75, 186, 191, 242, 155, 41, 148, 21, 98, 1, 196, 219, 192, 114, 222, 177, 126, 144, 31, 186, 96, 188, 201, 14, 68, 15, 188, 150, 102, 17, 35, 114, 97, 5, 186, 196, 109, 107, 202, 229, 55, 199, 119, 45, 93, 240, 41, 20, 177, 96, 195, 244, 238, 6, 206, 97, 31, 11, 3, 151, 114, 212, 110, 80, 71, 14, 19, 116, 155, 175, 231, 138, 228, 60, 236, 81, 127, 56, 197, 114, 236, 132, 104, 207, 102, 238, 59, 101, 154, 241, 2, 169, 103, 59, 200, 219, 192, 231, 187, 233, 115, 2, 34, 48, 166, 57, 230, 176, 37, 214, 252, 199, 42, 196, 67, 141, 0, 157, 5, 52, 105, 14, 199, 175, 199, 119, 38, 48, 210, 102, 34, 33, 18, 78, 222, 38, 218, 155, 115, 173, 81, 12, 228, 57, 215, 51, 73, 125, 27, 77, 232, 143, 82, 161, 207, 171, 209, 48, 167, 214, 122, 106, 80, 119, 206, 57, 151, 155, 175, 205, 245, 141, 253, 37, 188, 31, 185, 166, 42, 68, 74, 46, 183, 65, 150, 46, 42, 48, 1, 114, 165, 45, 19, 236, 255, 154, 65, 223, 204, 239, 232, 49, 45, 100, 225, 96, 122, 175, 163, 137, 14, 133, 209, 106, 65, 253, 142, 28, 139, 45, 163, 122, 12, 86, 253, 119, 89, 19, 1, 11, 130, 162, 101, 227, 194, 79, 184, 122, 76, 21, 32, 81, 250, 169, 221, 41, 93, 42, 103, 230, 76, 96, 220, 248, 168, 123, 58, 205, 180, 24, 130, 152, 55, 161, 91, 232, 135, 253, 74, 234, 65, 140, 93, 12, 255, 37, 21, 155, 227, 203, 247, 7, 35, 117, 69, 223, 223, 122, 48, 132, 119, 65, 204, 82, 195, 127, 159, 11, 111, 254, 124, 74, 10, 208, 252, 180, 31, 195, 19, 247, 71, 58, 252, 181, 66, 84, 87, 98, 173, 186, 126, 24, 131, 37, 246, 170, 115, 89, 170, 188, 66, 237, 203, 152, 30, 245, 220, 222, 71, 112, 230, 235, 211, 63, 168, 100, 167, 207, 6, 204, 224, 54, 105, 237, 122, 184, 17, 140, 100, 254, 50, 129, 171, 81, 114, 31, 149, 245, 69, 88, 135, 176, 89, 222, 178, 92, 140, 50, 74, 174, 149, 232, 83, 65, 147, 10, 180, 252, 157, 13, 173, 77, 84, 13, 254, 4, 193, 143, 249, 18, 7, 225, 189, 222, 167, 67, 42, 47, 105, 75, 250, 254, 183, 67, 153, 38, 89, 215, 49, 84, 191, 120, 226, 10, 124, 235, 207, 101, 105, 53, 159, 106, 139, 167, 78, 39, 70, 225, 193, 140, 109, 249, 231, 98, 115, 49, 200, 232, 108, 239, 189, 152, 66, 182, 239, 84, 4, 43, 190, 247, 91, 203, 158, 75, 161, 72, 178, 64, 105, 161, 61, 163, 108, 88, 84, 74, 66, 17, 189, 45, 18, 48, 98, 33, 107, 94, 139, 6, 117, 208, 45, 97, 197, 170, 141, 187, 197, 68, 79, 116, 238, 160, 69, 40, 132, 138, 103, 51, 192, 232, 142, 29, 81, 137, 245, 134, 250, 169, 197, 179, 99, 167, 191, 246, 140, 29, 183, 93, 58, 200, 135, 143, 41, 205, 92, 232, 194, 16, 26, 163, 245, 246, 113, 152, 90, 69, 40, 223, 149, 125, 61, 38, 153, 33, 60, 201, 174, 56, 94, 80, 48, 102, 149, 20, 148, 86, 40, 65, 212, 50, 238, 169, 14, 11, 16, 149, 172, 252, 90, 109, 194, 168, 100, 5, 1, 61, 90, 120, 144, 105, 111, 212, 183, 162, 3, 41, 7, 23, 49, 119, 231, 41, 239, 25, 227, 195, 236, 8, 40, 21, 63, 84, 52, 212, 151, 121, 6, 224, 232, 127, 155, 82, 53, 55, 85, 90, 19, 135, 92, 134, 200, 111, 29, 218, 90, 62, 184, 105, 139, 136, 11, 184, 83, 47, 97, 1, 44, 48, 177, 228, 57, 12, 139, 133, 13, 29, 170, 204, 192, 71, 168, 226, 254, 253, 141, 230, 57, 11, 54, 149, 187, 33, 205, 223, 56, 45, 24, 10, 149, 27, 90, 158, 191, 205, 130, 34, 143, 37, 83, 105, 235, 190, 243, 210, 44, 102, 74, 87, 77, 12, 92, 83, 166, 8, 237, 207, 213, 193, 28, 172, 93, 87, 39, 225, 233, 137, 158, 241, 228, 248, 141, 85, 61, 208, 29, 204, 240, 78, 59, 218, 181, 234, 67, 248, 159, 90, 76, 6, 40, 214, 157, 168, 155, 231, 110, 174, 92, 124, 77, 206, 166, 170, 129, 168, 177, 140, 240, 22, 30, 105, 61, 63, 123, 152, 90, 81, 238, 254, 4, 91, 8, 107, 234, 231, 161, 146, 50, 148, 3, 37, 177, 129, 142, 171, 13, 253, 119, 72, 172, 174, 70, 131, 234, 169, 171, 169, 84, 212, 55, 176, 227, 184, 224, 218, 50, 48, 84, 150, 159, 106, 153, 161, 248, 12, 115, 83, 190, 146, 157, 149, 103, 110, 2, 152, 161, 131, 151, 60, 84, 104, 83, 251, 128, 123, 85, 17, 174, 239, 151, 238, 173, 222, 91, 80, 131, 106, 107, 2, 184, 137, 168, 186, 248, 64, 59, 182, 57, 201, 105, 190, 49, 54, 83, 190, 228, 193, 179, 189, 155, 127, 195, 81, 39, 98, 85, 234, 167, 185, 30, 11, 206, 99, 253, 251, 62, 249, 127, 175, 173, 223, 147, 92, 46, 12, 152, 29, 46, 183, 158, 56, 167, 146, 203, 57, 6, 152, 67, 241, 230, 27, 91, 248, 4, 63, 2, 33, 31, 80, 128, 10, 3, 251, 252, 197, 197, 193, 193, 64, 124, 111, 127, 192, 30, 55, 238, 243, 25, 172, 60, 197, 152, 254, 2, 144, 138, 233, 55, 236, 54, 150, 139, 35, 250, 46, 223, 223, 166, 22, 240, 118, 174, 211, 201, 244, 61, 254, 104, 10, 156, 214, 159, 221, 80, 91, 11, 202, 223, 4, 146, 69, 54, 133, 51, 224, 81, 172, 190, 59, 86, 168, 147, 223, 98, 191, 223, 146, 157, 231, 8, 24, 131, 122, 223, 164, 187, 11, 102, 180, 200, 110, 118, 69, 215, 121, 136, 237, 20, 151, 88, 26, 194, 94, 58, 118, 4, 166, 202, 36, 218, 185, 33, 137, 1, 37, 65, 236, 182, 153, 191, 8, 27, 238, 122, 241, 206, 38, 64, 237, 71, 65, 158, 89, 11, 39, 89, 64, 104, 237, 86, 11, 11, 25, 245, 248, 86, 109, 163, 14, 46, 21, 173, 176, 153, 61, 238, 62, 153, 54, 161, 211, 129, 70, 51, 97, 1, 41, 111, 92, 144, 159, 16, 75, 51, 60, 19, 129, 71, 110, 50, 107, 14, 200, 166, 223, 157, 67, 40, 158, 235, 11, 100, 43, 2, 188, 92, 186, 18, 204, 148, 146, 227, 38, 36, 38, 22, 96, 74, 154, 129, 218, 53, 148, 159, 136, 168, 62, 158, 213, 15, 240, 167, 78, 61, 254, 145, 254, 87, 87, 28, 43, 76, 176, 132, 130, 233, 47, 243, 201, 16, 87, 24, 191, 193, 178, 146, 29, 233, 127, 59, 176, 121, 136, 178, 51, 2, 80, 236, 118, 96, 247, 164, 93, 93, 254, 154, 3, 89, 157, 183, 183, 25, 61, 59, 131, 185, 92, 175, 192, 29, 224, 175, 232, 241, 28, 69, 251, 87, 69, 36, 226, 12, 190, 143, 128, 171, 244, 44, 18, 176, 65, 141, 42, 67, 109, 66, 18, 65, 200, 134, 138, 98, 200, 10, 231, 255, 238, 145, 192, 224, 106, 184, 187, 169, 201, 167, 109, 160, 185, 181, 172, 148, 72, 184, 112, 182, 6, 236, 167, 4, 170, 136, 28, 146, 62, 103, 3, 165, 196, 43, 49, 239, 207, 179, 167, 34, 60, 7, 170, 252, 99, 76, 123, 39, 137, 165, 40, 239, 89, 201, 117, 167, 222, 177, 0, 243, 138, 131, 177, 82, 236, 128, 105, 205, 18, 36, 47, 102, 8, 169, 133, 98, 186, 64, 150, 115, 173, 219, 69, 58, 200, 187, 35, 65, 172, 124, 12, 114, 251, 212, 55, 177, 184, 141, 164, 25, 52, 224, 50, 253, 225, 133, 70, 136, 139, 48, 60, 193, 139, 219, 238, 219, 124, 125, 106, 16, 66, 131, 153, 128, 188, 110, 178, 54, 146, 142, 37, 178, 80, 206, 126, 61, 69, 23, 18, 241, 173, 58, 59, 252, 38, 161, 95, 109, 87, 235, 22, 233, 33, 233, 196, 136, 46, 214, 0, 67, 145, 88, 40, 102, 23, 190, 200, 223, 135, 183, 56, 176, 15, 251, 235, 45, 213, 56, 152, 147, 21, 249, 18, 138, 239, 220, 74, 239, 18, 233, 102, 0, 59, 107, 215, 173, 185, 189, 180, 133, 244, 1, 56, 188, 97, 26, 139, 141, 160, 120, 58, 113, 244, 18, 80, 232, 32, 97, 175, 223, 134, 95, 33, 184, 83, 221, 104, 240, 5, 61, 229, 179, 4, 29, 21, 153, 57, 67, 32, 220, 33, 169, 236, 177, 51, 202, 63, 155, 200, 28, 200, 192, 128, 171, 171, 141, 157, 133, 219, 239, 196, 25, 16, 16, 227, 240, 220, 207, 105, 251, 241, 252, 88, 14, 214, 188, 93, 25, 53, 220, 73, 235, 195, 42, 11, 2, 84, 110, 11, 108, 73, 135, 230, 20, 56, 253, 85, 125, 215, 242, 70, 85, 109, 82, 227, 190, 248, 104, 62, 91, 155, 233, 183, 33, 153, 95, 240, 111, 28, 247, 206, 218, 148, 55, 188, 182, 20, 210, 215, 186, 77, 204, 106, 11, 87, 255, 11, 51, 114, 4, 133, 37, 21, 141, 23, 164, 208, 76, 102, 232, 33, 179, 216, 129, 25, 143, 205, 25, 48, 234, 188, 103, 224, 119, 39, 158, 213, 22, 42, 176, 174, 35, 128, 147, 186, 222, 139, 40, 10, 218, 151, 16, 112, 163, 167, 165, 127, 163, 216, 19, 192, 92, 98, 90, 189, 160, 168, 79, 16, 46, 217, 217, 72, 197, 29, 102, 55, 136, 180, 80, 99, 20, 179, 64, 2, 61, 71, 20, 213, 84, 33, 221, 230, 143, 34, 217, 125, 143, 252, 142, 50, 141, 227, 54, 41, 61, 222, 25, 19, 16, 184, 137, 226, 7, 164, 101, 120, 68, 162, 74, 218, 100, 145, 197, 160, 231, 55, 31, 97, 91, 201, 235, 211, 24, 208, 227, 30, 68, 179, 172, 81, 18, 45, 174, 249, 190, 112, 243, 35, 109, 85, 71, 74, 202, 178, 70, 175, 195, 49, 183, 185, 104, 175, 25, 92, 110, 153, 55, 239, 198, 84, 75, 212, 123, 250, 87, 180, 244, 155, 53, 60, 213, 25, 59, 185, 82, 216, 51, 37, 210, 156, 83, 79, 63, 204, 203, 244, 67, 205, 82, 114, 76, 222, 153, 76, 229, 184, 38, 212, 97, 138, 135, 89, 213, 2, 133, 165, 133, 124, 145, 123, 88, 134, 204, 144, 193, 176, 139, 73, 62, 73, 246, 135, 2, 102, 214, 132, 72, 68, 53, 202, 11, 93, 154, 6, 17, 198, 3, 113, 136, 103, 242, 193, 241, 82, 61, 219, 5, 13, 69, 176, 4, 42, 35, 238, 73, 56, 176, 120, 139, 134, 60, 113, 4, 117, 207, 199, 122, 240, 174, 210, 249, 213, 240, 159, 188, 138, 162, 214, 49, 118, 113, 25, 224, 69, 65, 77, 232, 237, 191, 67, 43, 133, 59, 102, 171, 232, 46, 17, 243, 58, 91, 216, 90, 249, 82, 22, 238, 218, 1, 137, 224, 45, 157, 53, 74, 129, 62, 55, 73, 134, 14, 138, 1, 9, 198, 115, 195, 152, 40, 123, 244, 150, 254, 241, 98, 5, 252, 42, 78, 42, 28, 56, 246, 223, 11, 93, 215, 192, 14, 162, 178, 202, 136, 51, 91, 92, 155, 239, 52, 24, 9, 170, 49, 11, 148, 206, 191, 161, 206, 128, 234, 66, 158, 237, 253, 48, 95, 2, 205, 160, 197, 23, 4, 148, 59, 97, 91, 77, 43, 161, 231, 157, 126, 39, 37, 110, 176, 74, 129, 35, 176, 69, 65, 110, 254, 50, 192, 111, 33, 17, 27, 112, 174, 78, 69, 195, 27, 97, 229, 216, 245, 2, 126, 87, 230, 221, 228, 97, 70, 149, 79, 255, 195, 17, 107, 239, 33, 58, 116, 35, 162, 214, 15, 201, 31, 125, 8, 192, 189, 253, 195, 174, 223, 27, 20, 138, 190, 99, 227, 148, 236, 91, 133, 146, 164, 237, 54, 58, 129, 249, 193, 147, 247, 21, 13, 109, 223, 54, 221, 141, 66, 138, 129, 22, 204, 204, 142, 97, 187, 124, 15, 98, 85, 54, 107, 205, 104, 205, 250, 187, 9, 156, 172, 77, 16, 91, 83, 206, 255, 229, 7, 45, 0, 213, 201, 68, 103, 63, 11, 179, 67, 40, 167, 222, 99, 196, 2, 235, 69, 45, 87, 5, 254, 1, 57, 85, 229, 110, 240, 85, 247, 25, 127, 255, 234, 144, 210, 74, 175, 172, 228, 181, 53, 200, 109, 13, 23, 192, 16, 202, 190, 6, 81, 247, 171, 151, 19, 166, 173, 27, 201, 209, 37, 0, 103, 183, 247, 207, 137, 148, 209, 145, 145, 120, 19, 231, 77, 234, 43, 3, 203, 94, 234, 199, 83, 232, 124, 223, 136, 132, 52, 166, 48, 228, 159, 154, 22, 136, 87, 26, 142, 91, 35, 38, 111, 89, 236, 92, 23, 108, 1, 139, 118, 69, 124, 250, 131, 58, 10, 162, 30, 74, 140, 184, 58, 69, 219, 86, 176, 17, 122, 60, 61, 173, 34, 0, 59, 108, 96, 79, 102, 141, 119, 153, 194, 116, 206, 11, 215, 228, 246, 200, 253, 57, 232, 160, 143, 216, 16, 104, 81, 25, 106, 196, 221, 153, 6, 2, 128, 243, 92, 35, 200, 24, 204, 1, 115, 158, 24, 122, 22, 253, 191, 236, 161, 215, 68, 241, 105, 240, 48, 102, 100, 207, 125, 173, 146, 255, 36, 112, 215, 24, 105, 140, 130, 32, 164, 114, 184, 109, 121, 126, 255, 11, 163, 245, 3, 218, 129, 49, 78, 47, 45, 35, 59, 102, 4, 69, 195, 171, 218, 152, 2, 249, 186, 107, 115, 129, 13, 181, 117, 176, 216, 79, 5, 249, 85, 252, 230, 74, 231, 41, 178, 81, 90, 105, 171, 93, 53, 173, 74, 6, 73, 119, 81, 33, 138, 68, 171, 2, 91, 168, 214, 152, 144, 126, 1, 190, 13, 113, 71, 54, 43, 136, 31, 16, 106, 147, 57, 2, 30, 154, 72, 152, 140, 143, 193, 19, 199, 100, 243, 104, 226, 12, 250, 199, 70, 17, 122, 76, 224, 138, 82, 155, 216, 68, 79, 112, 110, 76, 72, 142, 115, 106, 191, 29, 74, 219, 172, 254, 149, 1, 6, 122, 237, 200, 107, 241, 23, 154, 182, 21, 188, 65, 253, 30, 6, 252, 223, 180, 86, 181, 196, 233, 194, 205, 84, 40, 215, 47, 177, 211, 126, 96, 153, 12, 70, 138, 199, 162, 40, 84, 95, 122, 223, 41, 61, 213, 56, 215, 160, 124, 107, 67, 4, 96, 21, 101, 142, 120, 117, 31, 133, 193, 104, 136, 31, 17, 22, 109, 231, 174, 117, 145, 214, 108, 105, 250, 83, 130, 35, 187, 190, 82, 200, 127, 116, 116, 208, 179, 20, 113, 209, 4, 30, 250, 30, 27, 104, 130, 245, 66, 177, 233, 26, 58, 189, 148, 56, 164, 123, 109, 186, 140, 37, 189, 25, 37, 145, 237, 60, 233, 184, 241, 72, 39, 201, 173, 32, 88, 159, 7, 141, 33, 43, 113, 85, 32, 147, 155, 88, 129, 48, 175, 4, 188, 198, 231, 223, 80, 2, 217, 12, 240, 202, 27, 97, 111, 102, 52, 237, 88, 178, 52, 111, 55, 51, 154, 156, 249, 190, 48, 198, 232, 55, 84, 175, 79, 231, 110, 81, 174, 9, 190, 53, 37, 66, 248, 71, 164, 195, 138, 43, 120, 15, 228, 221, 58, 89, 142, 47, 45, 68, 178, 46, 66, 107, 72, 38, 167, 130, 159, 67, 189, 67, 214, 83, 14, 231, 250, 48, 236, 49, 85, 4, 165, 159, 252, 62, 120, 70, 199, 88, 222, 136, 0, 63, 225, 234, 89, 182, 18, 182, 43, 242, 61, 110, 111, 149, 92, 118, 5, 3, 65, 208, 137, 67, 143, 207, 177, 155, 32, 0, 231, 54, 140, 189, 21, 115, 160, 189, 68, 183, 151, 143, 150, 126, 64, 25, 86, 100, 76, 172, 57, 214, 31, 198, 211, 71, 18, 192, 239, 106, 41, 231, 148, 23, 30, 39, 44, 214, 181, 193, 145, 150, 140, 125, 184, 62, 11, 249, 233, 105, 9, 37, 224, 115, 39, 80, 30, 145, 121, 169, 18, 144, 41, 116, 153, 216, 61, 212, 43, 93, 215, 99, 40, 195, 37, 112, 201, 9, 162, 18, 181, 216, 64, 115, 166, 234, 54, 246, 201, 207, 204, 79, 87, 221, 49, 122, 150, 200, 148, 177, 253, 134, 119, 214, 156, 99, 86, 144, 65, 30, 50, 53, 82, 200, 238, 3, 10, 5, 163, 235, 89, 71, 14, 148, 133, 138, 241, 174, 36, 252, 219, 6, 160, 157, 110, 232, 143, 70, 60, 195, 79, 116, 39, 108, 28, 122, 134, 238, 64, 38, 60, 165, 75, 33, 49, 253, 9, 247, 162, 215, 46, 233, 28, 66, 161, 166, 12, 69, 141, 196, 162, 208, 129, 200, 211, 118, 182, 76, 176, 204, 188, 39, 98, 185, 36, 134, 232, 87, 209, 255, 194, 143, 180, 64, 39, 202, 63, 216, 26, 191, 141, 27, 34, 222, 87, 59, 59, 30, 252, 24, 93, 18, 192, 71, 228, 37, 53, 216, 248, 29, 183, 160, 144, 47, 85, 154, 50, 18, 197, 25, 151, 64, 36, 4, 208, 140, 84, 204, 195, 137, 73, 240, 175, 46, 98, 240, 106, 205, 212, 0, 126, 179, 250, 191, 213, 79, 25, 196, 161, 63, 89, 199, 228, 201, 155, 246, 42, 228, 238, 202, 59, 2, 55, 14, 65, 188, 200, 15, 68, 178, 82, 111, 213, 117, 10, 174, 82, 128, 159, 202, 71, 170, 255, 119, 190, 63, 27, 209, 10, 237, 82, 1, 243, 186, 188, 147, 228, 230, 102, 24, 106, 50, 35, 128, 174, 221, 91, 102, 196, 165, 16, 94, 114, 11, 176, 199, 171, 216, 53, 87, 153, 48, 249, 161, 25, 39, 76, 52, 15, 132, 183, 249, 30, 198, 148, 243, 60, 195, 50, 56, 14, 148, 189, 130, 61, 41, 184, 252, 157, 76, 231, 112, 221, 38, 197, 102, 75, 195, 173, 77, 119, 254, 145, 152, 135, 97, 116, 104, 172, 243, 248, 25, 25, 1, 80, 46, 148, 216, 124, 185, 114, 251, 116, 69, 20, 73, 215, 156, 82, 249, 23, 136, 213, 81, 113, 65, 30, 172, 35, 45, 44, 10, 207, 173, 156, 60, 140, 26, 207, 63, 255, 250, 175, 160, 133, 56, 54, 54, 234, 149, 206, 24, 145, 38, 34, 63, 211, 156, 215, 109, 117, 20, 67, 154, 80, 44, 59, 121, 178, 241, 32, 56, 138, 234, 19, 128, 128, 156, 159, 94, 179, 53, 93, 49, 205, 8, 183, 206, 143, 118, 105, 144, 194, 106, 230, 32, 255, 24, 242, 151, 190, 85, 196, 183, 151, 188, 174, 85, 38, 124, 197, 107, 112, 188, 65, 217, 96, 8, 170, 50, 255, 167, 39, 76, 178, 153, 231, 128, 249, 108, 117, 126, 207, 203, 224, 235, 105, 30, 40, 189, 11, 99, 84, 249, 93, 52, 99, 111, 33, 56, 106, 253, 181, 221, 148, 177, 231, 224, 22, 47, 30, 131, 210, 100, 27, 80, 117, 111, 26, 200, 73, 33, 194, 138, 74, 10, 2, 57, 68, 253, 113, 69, 69, 217, 98, 191, 144, 202, 77, 200, 17, 48, 85, 177, 45, 253, 57, 31, 201, 214, 46, 217, 194, 42, 37, 90, 198, 124, 175, 89, 111, 18, 220, 225, 156, 125, 212, 125, 141, 137, 156, 213, 239, 185, 179, 91, 109, 19, 21, 215, 62, 123, 180, 237, 17, 231, 27, 94, 198, 61, 245, 123, 6, 210, 51, 118, 224, 44, 112, 43, 219, 100, 221, 205, 105, 211, 119, 53, 133, 147, 17, 28, 176, 41, 79, 25, 209, 23, 114, 186, 209, 202, 88, 241, 176, 207, 205, 152, 96, 13, 71, 241, 17, 242, 113, 2, 32, 148, 60, 192, 140, 78, 38, 66, 181, 68, 240, 156, 16, 113, 205, 4, 79, 147, 230, 3, 138, 171, 105, 242, 117, 86, 3, 238, 66, 58, 125, 35, 53, 84, 243, 201, 86, 197, 72, 204, 64, 131, 28, 5, 105, 241, 170, 244, 213, 118, 10, 160, 225, 175, 213, 97, 48, 49, 37, 71, 253, 204, 108, 10, 188, 228, 102, 190, 70, 223, 111, 238, 229, 135, 86, 216, 43, 142, 153, 175, 236, 21, 13, 250, 162, 83, 51, 168, 45, 73, 164, 18, 110, 105, 242, 108, 114, 61, 186, 24, 88, 123, 121, 4, 51, 150, 73, 173, 211, 91, 46, 196, 35, 213, 36, 242, 9, 132, 247, 196, 134, 206, 136, 210, 215, 35, 11, 156, 194, 40, 238, 205, 171, 216, 197, 91, 200, 240, 208, 45, 134, 217, 90, 80, 233, 130, 138, 245, 229, 106, 160, 72, 50, 180, 141, 116, 144, 8, 234, 211, 136, 70, 122, 180, 164, 59, 17, 158, 99, 42, 19, 108, 181, 120, 106, 14, 23, 185, 9, 0, 225, 214, 102, 2, 55, 29, 236, 16, 64, 67, 218, 148, 153, 98, 128, 12, 199, 172, 251, 51, 242, 102, 56, 29, 101, 238, 161, 195, 20, 190, 174, 110, 27, 128, 221, 134, 5, 3, 181, 75, 43, 84, 155, 115, 199, 237, 159, 20, 158, 60, 161, 197, 41, 107, 126, 214, 125, 89, 234, 205, 145, 78, 72, 132, 226, 22, 211, 93, 235, 229, 151, 61, 133, 246, 187, 113, 99, 30, 69, 2, 201, 146, 62, 169, 188, 126, 225, 156, 252, 198, 52, 78, 215, 170, 40, 250, 100, 21, 83, 9, 214, 145, 129, 58, 227, 69, 212, 238, 70, 112, 108, 239, 211, 197, 102, 178, 27, 43, 56, 148, 9, 189, 111, 139, 203, 21, 8, 118, 225, 141, 103, 208, 20, 67, 35, 144, 45, 27, 199, 132, 24, 132, 122, 109, 167, 51, 14, 193, 2, 220, 237, 64, 186, 215, 193, 36, 119, 172, 120, 45, 215, 247, 176, 252, 134, 188, 80, 252, 101, 56, 153, 117, 48, 54, 5, 73, 49, 204, 80, 172, 129, 61, 165, 101, 150, 30, 217, 17, 100, 68, 121, 80, 100, 26, 75, 140, 132, 110, 245, 223, 253, 211, 6, 56, 91, 215, 51, 193, 26, 225, 113, 149, 182, 106, 2, 215, 47, 184, 122, 62, 75, 128, 71, 173, 163, 81, 202, 135, 82, 202, 139, 44, 240, 51, 40, 55, 185, 81, 106, 17, 210, 112, 44, 227, 237, 156, 65, 194, 243, 203, 71, 122, 185, 148, 76, 181, 25, 5, 204, 232, 214, 191, 21, 239, 80, 53, 33, 246, 176, 50, 23, 154, 233, 77, 78, 236, 178, 112, 154, 105, 81, 149, 247, 42, 108, 140, 217, 112, 158, 39, 170, 19, 177, 81, 103, 33, 238, 59, 86, 225, 241, 198, 0, 124, 236, 102, 234, 50, 69, 228, 192, 209, 69, 100, 127, 31, 226, 149, 87, 184, 240, 140, 140, 202, 164, 145, 36, 20, 143, 213, 163, 207, 172, 24, 230, 220, 142, 104, 168, 73, 34, 178, 216, 138, 0, 91, 18, 193, 36, 229, 97, 170, 148, 184, 240, 180, 10, 100, 90, 69, 63, 100, 168, 134, 94, 18, 73, 154, 189, 139, 32, 74, 159, 49, 88, 248, 164, 19, 15, 61, 84, 116, 97, 57, 251, 186, 135, 238, 111, 61, 215, 129, 4, 209, 146, 86, 169, 151, 161, 199, 107, 251, 171, 234, 144, 148, 106, 116, 141, 83, 8, 43, 62, 168, 231, 137, 236, 73, 197, 126, 22, 36, 3, 93, 152, 149, 149, 236, 189, 0, 245, 146, 33, 69, 32, 200, 105, 174, 87, 145, 122, 247, 148, 111, 57, 211, 156, 51, 196, 30, 46, 239, 66, 151, 82, 221, 54, 189, 117, 28, 115, 211, 238, 205, 141, 234, 143, 17, 3, 39, 218, 28, 253, 171, 213, 114, 169, 21, 225, 21, 39, 81, 151, 254, 208, 191, 221, 2, 6, 71, 88, 74, 252, 230, 141, 255, 11, 5, 67, 254, 66, 95, 113, 244, 138, 154, 134, 22, 168, 152, 14, 210, 59, 138, 219, 43, 203, 12, 188, 80, 99, 136, 198, 218, 150, 209, 129, 132, 68, 229, 141, 100, 244, 42, 6, 225, 214, 103, 170, 186, 252, 12, 246, 207, 239, 70, 223, 238, 23, 3, 146, 133, 196, 133, 113, 176, 247, 193, 125, 222, 41, 240, 68, 76, 81, 151, 119, 7, 50, 167, 70, 199, 92, 57, 84, 212, 59, 28, 223, 45, 194, 244, 235, 184, 13, 69, 44, 22, 206, 40, 42, 165, 180, 46, 45, 194, 131, 145, 68, 62, 25, 49, 151, 242, 247, 102, 68, 233, 12, 184, 111, 160, 250, 195, 78, 95, 113, 208, 80, 163, 76, 83, 103, 170, 127, 201, 82, 22, 113, 132, 146, 22, 107, 1, 112, 136, 106, 246, 93, 190, 7, 164, 186, 129, 121, 58, 89, 115, 104, 105, 74, 139, 104, 48, 18, 129, 34, 150, 161, 153, 26, 173, 126, 25, 217, 139, 126, 208, 49, 13, 192, 46, 20, 9, 156, 16, 106, 122, 168, 201, 227, 155, 53, 207, 144, 5, 110, 94, 160, 68, 205, 247, 204, 121, 27, 249, 67, 45, 2, 231, 241, 179, 64, 57, 175, 208, 10, 204, 171, 17, 8, 226, 187, 210, 214, 121, 22, 110, 178, 140, 39, 128, 112, 236, 37, 152, 181, 95, 165, 177, 185, 103, 164, 12, 187, 211, 249, 78, 109, 118, 89, 186, 254, 248, 24, 232, 90, 115, 208, 171, 92, 228, 193, 202, 104, 66, 206, 222, 37, 49, 234, 131, 33, 61, 106, 20, 206, 248, 200, 126, 223, 4, 131, 16, 29, 28, 56, 189, 95, 213, 107, 103, 214, 18, 72, 30, 238, 33, 133, 26, 231, 193, 255, 84, 138, 186, 214, 189, 121, 65, 173, 114, 24, 57, 39, 167, 27, 38, 122, 154, 78, 8, 193, 67, 119, 173, 249, 108, 52, 235, 65, 105, 238, 250, 213, 218, 249, 89, 57, 91, 91, 211, 174, 231, 181, 241, 215, 33, 233, 1, 173, 24, 140, 5, 192, 145, 44, 123, 110, 56, 118, 110, 118, 83, 203, 158, 227, 121, 89, 222, 150, 109, 131, 109, 105, 239, 128, 255, 110, 17, 221, 94, 244, 35, 112, 193, 31, 68, 62, 73, 250, 156, 199, 147, 131, 252, 132, 244, 8, 49, 78, 36, 87, 173, 34, 149, 196, 74, 162, 207, 1, 160, 250, 33, 99, 56, 77, 204, 23, 26, 207, 218, 95, 211, 79, 66, 94, 22, 154, 53, 32, 54, 66, 145, 97, 179, 92, 16, 23, 158, 7, 63, 206, 209, 229, 96, 129, 229, 182, 24, 213, 206, 0, 25, 14, 32, 36, 185, 239, 43, 78, 70, 156, 245, 166, 95, 83, 7, 158, 119, 99, 61, 31, 65, 118, 65, 80, 138, 204, 242, 153, 193, 150, 250, 241, 230, 60, 179, 115, 128, 24, 109, 147, 147, 142, 247, 224, 141, 241, 176, 72, 100, 100, 7, 219, 142, 90, 179, 85, 143, 214, 242, 183, 203, 218, 30, 29, 246, 211, 175, 79, 152, 151, 101, 172, 230, 237, 55, 120, 19, 103, 43, 179, 213, 38, 131, 246, 122, 126, 85, 138, 152, 167, 127, 239, 107, 191, 230, 71, 163, 12, 169, 84, 199, 252, 220, 175, 193, 61, 10, 55, 167, 97, 142, 226, 163, 163, 22, 105, 171, 128, 86, 199, 87, 235, 67, 4, 51, 15, 65, 102, 92, 131, 253, 136, 101, 144, 227, 255, 178, 216, 4, 140, 233, 33, 247, 183, 176, 7, 75, 106, 239, 57, 122, 226, 143, 101, 46, 41, 150, 34, 95, 222, 19, 89, 218, 76, 120, 27, 29, 96, 201, 181, 122, 32, 238, 249, 170, 33, 251, 87, 102, 37, 129, 179, 42, 128, 79, 84, 67, 41, 107, 153, 70, 138, 205, 224, 67, 207, 175, 80, 53, 152, 169, 110, 243, 33, 219, 93, 9, 224, 159, 104, 93, 218, 122, 7, 111, 123, 143, 103, 133, 169, 205, 203, 159, 27, 217, 223, 169, 108, 22, 107, 28, 115, 25, 224, 80, 235, 13, 185, 53, 118, 41, 52, 38, 5, 104, 55, 61, 143, 168, 250, 48, 253, 55, 223, 25, 22, 120, 134, 132, 209, 175, 172, 55, 243, 219, 112, 8, 209, 25, 167, 168, 100, 223, 83, 114, 147, 96, 109, 157, 251, 142, 27, 73, 115, 168, 227, 221, 78, 224, 74, 148, 113, 72, 12, 97, 30, 220, 167, 158, 208, 94, 106, 206, 38, 214, 167, 138, 19, 207, 216, 100, 192, 60, 231, 229, 44, 19, 60, 90, 198, 193, 108, 179, 157, 254, 50, 228, 252, 2, 71, 24, 127, 28, 246, 231, 158, 230, 240, 153, 72, 220, 160, 14, 146, 20, 73, 5, 133, 218, 77, 6, 241, 114, 191, 31, 31, 183, 244, 63, 200, 72, 220, 207, 117, 22, 122, 66, 254, 87, 253, 220, 10, 224, 215, 121, 37, 217, 142, 152, 168, 80, 40, 221, 37, 209, 72, 16, 42, 147, 197, 186, 57, 78, 204, 1, 130, 213, 7, 248, 113, 14, 233, 8, 156, 255, 155, 5, 72, 230, 138, 118, 174, 206, 65, 225, 230, 181, 184, 168, 120, 9, 231, 184, 53, 47, 20, 93, 219, 193, 85, 74, 230, 195, 27, 109, 199, 120, 46, 127, 197, 174, 206, 221, 141, 40, 1, 51, 110, 112, 1, 26, 184, 206, 2, 29, 100, 121, 238, 201, 23, 160, 20, 111, 97, 44, 236, 196, 107, 30, 41, 77, 16, 157, 177, 72, 42, 29, 247, 220, 118, 166, 147, 72, 6, 220, 156, 5, 158, 141, 58, 255, 75, 217, 28, 146, 130, 214, 155, 190, 101, 34, 48, 88, 105, 254, 81, 176, 35, 72, 200, 91, 238, 6, 174, 196, 177, 33, 170, 173, 91, 143, 115, 119, 58, 201, 68, 210, 224, 101, 66, 125, 105, 58, 14, 203, 134, 93, 32, 51, 161, 135, 212, 223, 137, 215, 129, 164, 74, 39, 240, 23, 93, 89, 85, 153, 187, 36, 235, 77, 42, 72, 175, 232, 220, 125, 39, 118, 202, 122, 233, 76, 197, 165, 189, 171, 79, 234, 134, 227, 144, 5, 159, 171, 94, 187, 40, 237, 176, 65, 211, 32, 233, 225, 60, 162, 106, 152, 123, 171, 254, 173, 226, 92, 122, 177, 196, 70, 244, 84, 253, 85, 14, 217, 75, 39, 160, 82, 73, 118, 103, 140, 77, 244, 82, 110, 65, 121, 17, 212, 81, 57, 128, 214, 76, 102, 172, 10, 21, 151, 149, 220, 75, 186, 158, 150, 192, 45, 71, 23, 114, 86, 82, 253, 58, 46, 84, 246, 130, 201, 103, 174, 120, 207, 168, 20, 247, 136, 17, 122, 49, 124, 84, 39, 252, 6, 251, 196, 21, 20, 193, 174, 215, 123, 112, 129, 42, 96, 176, 138, 117, 72, 24, 103, 3, 117, 253, 133, 88, 25, 96, 197, 175, 134, 178, 87, 251, 212, 205, 202, 7, 225, 43, 203, 83, 96, 9, 150, 40, 9, 50, 190, 202, 88, 114, 254, 184, 34, 64, 111, 10, 23, 75, 9, 154, 16, 217, 16, 34, 110, 172, 24, 101, 195, 159, 55, 48, 149, 160, 35, 21, 196, 123, 78, 185, 239, 68, 192, 191, 40, 195, 172, 242, 24, 25, 193, 148, 165, 80, 144, 161, 234, 113, 200, 182, 67, 213, 219, 1, 40, 117, 234, 186, 166, 16, 16, 119, 85, 126, 158, 15, 158, 139, 98, 125, 53, 204, 77, 198, 146, 132, 131, 53, 3, 247, 235, 72, 189, 46, 74, 168, 102, 131, 248, 87, 120, 141, 26, 5, 210, 165, 93, 227, 194, 34, 122, 95, 158, 233, 168, 121, 43, 180, 28, 162, 18, 58, 23, 94, 86, 33, 5, 123, 142, 217, 80, 57, 31, 48, 182, 201, 179, 44, 77, 91, 77, 115, 213, 195, 217, 86, 246, 157, 89, 98, 106, 176, 52, 86, 85, 85, 100, 212, 202, 105, 22, 22, 254, 168, 189, 107, 9, 125, 252, 55, 136, 42, 201, 15, 76, 88, 57, 225, 212, 250, 31, 108, 2, 87, 169, 83, 139, 214, 157, 175, 55, 77, 143, 52, 214, 178, 248, 59, 190, 114, 93, 135, 98, 62, 139, 162, 158, 92, 174, 97, 133, 70, 222, 35, 11, 36, 233, 127, 163, 223, 225, 255, 236, 214, 93, 192, 21, 78, 5, 179, 176, 254, 115, 134, 253, 109, 98, 25, 18, 210, 57, 153, 54, 38, 169, 125, 38, 96, 204, 157, 228, 12, 61, 76, 212, 28, 66, 10, 187, 107, 251, 217, 89, 108, 66, 70, 175, 35, 10, 34, 134, 6, 66, 217, 51, 202, 192, 163, 126, 211, 229, 219, 181, 180, 54, 80, 208, 42, 123, 128, 168, 193, 62, 60, 93, 92, 4, 83, 19, 150, 4, 28, 86, 3, 35, 76, 249, 194, 4, 228, 104, 219, 14, 69, 71, 133, 190, 125, 164, 192, 141, 158, 166, 232, 29, 94, 123, 157, 231, 182, 24, 161, 188, 28, 153, 103, 247, 15, 104, 227, 121, 198, 39, 254, 194, 104, 109, 85, 13, 129, 95, 226, 147, 37, 255, 6, 173, 42, 176, 108, 143, 73, 35, 105, 189, 161, 108, 48, 136, 7, 121, 21, 155, 119, 154, 202, 171, 162, 8, 222, 118, 2, 114, 176, 205, 218, 193, 77, 155, 190, 196, 205, 213, 241, 217, 191, 192, 43, 202, 107, 99, 212, 15, 144, 184, 128, 144, 223, 43, 112, 7, 255, 217, 13, 94, 111, 19, 7, 239, 155, 186, 245, 200, 220, 167, 73, 8, 50, 200, 82, 227, 166, 27, 117, 103, 253, 248, 45, 8, 65, 249, 8, 54, 9, 203, 147, 202, 24, 10, 125, 114, 105, 73, 0, 98, 43, 99, 173, 168, 212, 251, 221, 177, 156, 235, 248, 235, 57, 229, 81, 66, 219, 228, 116, 250, 243, 180, 41, 228, 233, 164, 28, 155, 23, 72, 33, 23, 64, 139, 23, 112, 231, 97, 49, 219, 140, 143, 175, 187, 72, 92, 50, 105, 183, 61, 205, 90, 90, 153, 53, 117, 141, 246, 7, 50, 223, 154, 196, 243, 80, 117, 173, 144, 161, 208, 90, 185, 84, 24, 171, 36, 19, 167, 137, 4, 90, 220, 23, 188, 173, 47, 244, 58, 125, 30, 128, 69, 68, 35, 55, 56, 240, 223, 157, 192, 116, 7, 8, 57, 110, 174, 236, 27, 220, 175, 241, 0, 52, 3, 105, 103, 27, 33, 63, 67, 33, 78, 71, 187, 32, 214, 126, 229, 74, 95, 108, 179, 169, 124, 31, 69, 78, 217, 138, 87, 246, 103, 194, 133, 229, 236, 22, 86, 129, 129, 191, 77, 210, 37, 119, 204, 211, 221, 16, 133, 244, 208, 11, 222, 23, 201, 9, 71, 61, 19, 195, 33, 40, 135, 209, 36, 8, 91, 96, 125, 79, 185, 16, 119, 13, 23, 228, 59, 188, 47, 149, 62, 13, 73, 241, 53, 75, 159, 5, 175, 137, 229, 92, 174, 212, 171, 226, 138, 2, 13, 97, 225, 22, 68, 205, 186, 193, 18, 233, 135, 9, 74, 196, 181, 152, 154, 0, 134, 237, 253, 202, 191, 148, 94, 206, 30, 133, 119, 41, 236, 176, 174, 237, 176, 195, 160, 25, 118, 209, 215, 178, 61, 91, 219, 1, 182, 5, 131, 133, 141, 84, 6, 251, 65, 254, 187, 105, 115, 230, 173, 41, 84, 186, 198, 34, 20, 246, 48, 119, 116, 159, 37, 135, 105, 129, 161, 213, 121, 219, 158, 103, 206, 64, 166, 30, 27, 237, 195, 165, 63, 216, 240, 2, 95, 133, 131, 210, 61, 99, 252, 235, 241, 205, 114, 219, 129, 193, 112, 242, 55, 137, 71, 222, 252, 54, 239, 73, 146, 255, 43, 26, 105, 162, 37, 37, 123, 36, 162, 250, 204, 132, 104, 202, 237, 29, 59, 140, 219, 186, 179, 80, 157, 143, 48, 91, 193, 144, 246, 127, 175, 204, 118, 42, 143, 235, 146, 52, 99, 219, 10, 149, 255, 224, 134, 66, 170, 201, 69, 92, 195, 205, 43, 123, 71, 60, 67, 119, 94, 101, 152, 217, 110, 129, 35, 144, 47, 167, 231, 203, 108, 158, 243, 189, 21, 146, 227, 195, 115, 242, 62, 186, 222, 22, 18, 164, 72, 44, 190, 71, 42, 64, 91, 70, 42, 73, 26, 132, 59, 50, 234, 43, 59, 84, 215, 230, 238, 203, 4, 169, 224, 115, 213, 45, 15, 172, 139, 55, 116, 221, 5, 105, 62, 229, 77, 24, 86, 183, 218, 17, 250, 105, 52, 53, 78, 26, 86, 245, 195, 78, 136, 21, 122, 188, 200, 113, 81, 254, 5, 222, 71, 224, 204, 175, 19, 123, 199, 106, 233, 22, 125, 94, 125, 143, 163, 165, 33, 253, 205, 204, 88, 147, 246, 165, 200, 79, 91, 105, 159, 21, 27, 26, 187, 192, 223, 175, 75, 251, 143, 50, 26, 88, 202, 102, 4, 182, 93, 36, 178, 46, 68, 165, 153, 187, 21, 171, 142, 26, 232, 14, 74, 98, 174, 93, 181, 137, 168, 138, 185, 67, 208, 115, 190, 185, 174, 185, 227, 147, 247, 180, 230, 96, 65, 98, 198, 21, 30, 232, 209, 88, 198, 161, 119, 212, 148, 98, 60, 229, 111, 252, 204, 20, 199, 10, 93, 31, 236, 204, 188, 165, 106, 121, 121, 28, 95, 5, 123, 105, 197, 101, 6, 129, 7, 233, 77, 227, 231, 228, 161, 93, 23, 148, 65, 203, 19, 195, 203, 101, 185, 126, 224, 153, 39, 184, 191, 252, 58, 226, 111, 54, 1, 133, 182, 1, 58, 228, 93, 201, 77, 233, 146, 16, 54, 221, 46, 49, 2, 120, 188, 74, 91, 239, 246, 56, 48, 244, 55, 189, 89, 3, 89, 102, 139, 10, 145, 19, 171, 170, 236, 222, 153, 202, 223, 28, 177, 220, 192, 2, 148, 220, 43, 146, 11, 13, 231, 7, 59, 207, 6, 141, 249, 18, 79, 197, 28, 13, 28, 207, 149, 65, 241, 6, 115, 229, 95, 107, 221, 104, 245, 116, 172, 240, 239, 159, 135, 135, 124, 227, 220, 90, 243, 97, 162, 150, 158, 109, 224, 43, 155, 182, 181, 98, 138, 144, 221, 20, 105, 33, 130, 198, 25, 189, 238, 74, 34, 152, 255, 168, 0, 72, 122, 253, 148, 59, 234, 164, 95, 207, 208, 100, 18, 7, 64, 182, 23, 116, 91, 19, 187, 226, 96, 104, 32, 26, 136, 144, 54, 85, 232, 247, 41, 30, 126, 123, 159, 156, 114, 163, 118, 13, 98, 244, 1, 146, 111, 106, 155, 253, 182, 86, 196, 191, 35, 89, 172, 54, 230, 36, 184, 61, 222, 3, 13, 64, 39, 96, 162, 161, 78, 31, 36, 143, 160, 112, 141, 73, 89, 8, 50, 9, 72, 181, 13, 77, 126, 151, 181, 37, 5, 104, 205, 188, 56, 109, 103, 150, 60, 118, 157, 250, 181, 77, 224, 10, 127, 201, 223, 179, 151, 202, 66, 78, 243, 247, 28, 89, 79, 122, 113, 168, 0, 121, 69, 238, 246, 53, 105, 191, 99, 17, 134, 149, 24, 137, 225, 26, 152, 200, 134, 87, 239, 11, 69, 59, 185, 65, 159, 105, 27, 63, 189, 145, 97, 107, 192, 21, 215, 232, 126, 226, 134, 69, 110, 30, 250, 116, 239, 46, 129, 105, 248, 200, 186, 213, 149, 160, 195, 243, 138, 168, 191, 42, 52, 49, 242, 90, 81, 97, 179, 125, 112, 200, 111, 60, 155, 154, 229, 214, 129, 7, 98, 115, 24], [181, 18, 251, 191, 128, 132, 240, 60, 22, 123, 43, 226, 229, 240, 124, 207, 76, 11, 174, 229, 73, 225, 203, 230, 75, 63, 58, 49, 78, 31, 229, 227, 221, 239, 208, 180, 124, 79, 248, 251, 91, 172, 237, 83, 130, 200, 36, 155, 156, 14, 53, 182, 245, 188, 140, 87, 175, 50, 207, 152], [68, 120, 77, 86, 78, 80, 76, 102, 86, 83, 78, 57, 84, 105, 75, 104, 99, 116, 77, 66, 79, 86, 78, 98, 89, 80, 104, 71, 111, 67, 102, 101, 101, 90, 86, 81, 69, 119, 120, 47, 105, 102, 52, 90, 79, 105, 82, 112, 106, 50, 88, 119, 53, 113, 118, 66, 114, 84, 103, 80, 122, 78, 77, 82, 88, 109, 119, 89], [119, 56, 101, 122, 118, 50, 99, 121, 73, 74, 77, 100, 81, 81, 102, 49, 90, 120, 115, 109, 79, 119, 78, 107, 74, 81, 109, 52, 43, 110, 74, 87, 88, 54, 97, 121, 43, 110, 57, 56, 43, 48, 51, 121, 104, 81, 105, 68, 98, 55, 51, 97, 79, 98, 102, 54, 115, 48, 79, 108, 75, 118, 56, 119, 81, 68, 65, 85, 71, 122, 55, 105, 43, 102, 49, 67, 73, 97, 122, 52, 78, 122, 69, 115, 84, 119, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 103, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 103, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_value: <<< res: None
update_wallet_record_tags: >>> wallet_handle: 3, type_: 'credential_exchange_v10', id: '71bf4548-eca4-4e17-9234-f2a75f0a41ed', tags_json: '{"thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc"}'
do_call: >>> name: indy_update_wallet_record_tags, args: (c_int(3), c_char_p(140573273121912), c_char_p(140572651972368), c_char_p(140572651915672), <CFunctionType object at 0x7fd99efcf368>)
do_call: Function indy_update_wallet_record_tags returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s5`: SELECT id FROM items WHERE type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s5 with parameters: [[68, 120, 77, 86, 78, 80, 76, 102, 86, 83, 78, 57, 84, 105, 75, 104, 99, 116, 77, 66, 79, 86, 78, 98, 89, 80, 104, 71, 111, 67, 102, 101, 101, 90, 86, 81, 69, 119, 120, 47, 105, 102, 52, 90, 79, 105, 82, 112, 106, 50, 88, 119, 53, 113, 118, 66, 114, 84, 103, 80, 122, 78, 77, 82, 88, 109, 119, 89], [119, 56, 101, 122, 118, 50, 99, 121, 73, 74, 77, 100, 81, 81, 102, 49, 90, 120, 115, 109, 79, 119, 78, 107, 74, 81, 109, 52, 43, 110, 74, 87, 88, 54, 97, 121, 43, 110, 57, 56, 43, 48, 51, 121, 104, 81, 105, 68, 98, 55, 51, 97, 79, 98, 102, 54, 115, 48, 79, 108, 75, 118, 56, 119, 81, 68, 65, 85, 71, 122, 55, 105, 43, 102, 49, 67, 73, 97, 122, 52, 78, 122, 69, 115, 84, 119, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_encrypted WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [8, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_plaintext WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [8, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s6`: INSERT INTO tags_encrypted (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s7`: INSERT INTO tags_plaintext (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [8, [63, 214, 72, 222, 130, 103, 146, 158, 195, 194, 230, 74, 26, 53, 129, 230, 232, 7, 33, 137, 227, 21, 72, 88, 62, 97, 106, 31, 62, 194, 84, 80, 193, 83, 183, 11, 35], [118, 216, 161, 255, 225, 241, 243, 209, 149, 17, 79, 48, 71, 125, 4, 107, 229, 121, 155, 216, 246, 172, 55, 66, 121, 145, 13, 223, 39, 217, 43, 81, 45, 74, 27, 120, 65, 214, 59, 253, 245, 44, 99, 110, 118, 85, 225, 130, 132, 109, 86, 191, 168, 17, 154, 24, 121, 233, 212, 3, 131, 86, 68, 17], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 104, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 104, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_tags: <<< res: None
  {"msg_id": "4875f78a-fa55-4747-97b1-1434438bd878", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/issue-credential", "timestamp": 1621255305.596063, "str_time": "2021-05-17 12:41:45.596063", "handler": "Medic", "ellapsed_milli": 71, "outcome": "CredentialIssueHandler.handle.END"}
  {"msg_id": "4875f78a-fa55-4747-97b1-1434438bd878", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/issue-credential", "timestamp": 1621255305.5971167, "str_time": "2021-05-17 12:41:45.597117", "handler": "Medic", "ellapsed_milli": 100, "outcome": "Dispatcher.handle_message.END"}
  {"msg_id": "N/A", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "dict:Exchange", "timestamp": 1621255305.5984225, "str_time": "2021-05-17 12:41:45.598423", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://medic-business-logic:3010/topic/issue_credential/"}
  {"msg_id": "N/A", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "dict:Exchange", "timestamp": 1621255305.599688, "str_time": "2021-05-17 12:41:45.599688", "handler": "Medic", "ellapsed_milli": 1, "outcome": "OutboundTransportManager.DELIVER.END.http://medic-business-logic:3010/topic/issue_credential/"}
Posting to http://medic-business-logic:3010/topic/issue_credential/; Data: {"credential_proposal_dict": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential", "@id": "11b76349-c461-401e-8668-d198a86f1988", "credential_proposal": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview", "attributes": [{"name": "Name", "value": "Will Abramson"}, {"name": "University", "value": "Edinburgh Medical School"}, {"name": "Date Issued", "value": "2021-05-17"}]}, "comment": "create automated credential exchange", "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default"}, "credential_offer": {"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "key_correctness_proof": {"c": "107747385423523632115836196578250990474250248043120793044857578887670452863909", "xz_cap": "1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694", "xr_cap": [["name", "2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993"], ["university", "405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652"], ["dateissued", "2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451"], ["master_secret", "1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202"]]}, "nonce": "598069920933476898638215"}, "credential_definition_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "initiator": "external", "auto_remove": false, "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "credential_exchange_id": "71bf4548-eca4-4e17-9234-f2a75f0a41ed", "role": "holder", "raw_credential": {"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "rev_reg_id": null, "values": {"Date Issued": {"raw": "2021-05-17", "encoded": "31928709163600735441101476658814216885388252189838058973070792022801591336579"}, "Name": {"raw": "Will Abramson", "encoded": "65005548905037764764502350053825769914874082648761230458670796241392891659611"}, "University": {"raw": "Edinburgh Medical School", "encoded": "57963125648994666300875361621729313351158154740138173103415020334594043694317"}}, "signature": {"p_credential": {"m_2": "64614027959237148406577876643582193654195798199659663559565324074474110876426", "a": "28196659349828833841806568922500331419943756793472592515246070472169183103554944278198153816574274149720987095111486068930168219714920197743796206530561438612474718498319743285076562596169213545429930609441229808810198314595598202600904377879617269619009997889921365729164321988246425760507962013213179356489165886495879937830757860813550488653092270182316591558107377505094005438662414556058268151394311488038034371945050944831570625995413228293415919202055974276990013994102772566137746322043107147965689577794487771425424609270637527334712240581940337439348801155923456105656468328904263302114118526537501007139669", "e": "259344723055062059907025491480697571938277889515152306249728583105665800713306759149981690559193987143012367913206299323899696942213235956742930046031686561229403844345113618420029", "v": "6354026336388301401986521152890972249709618813964245602037338330698734314130828006765601555201728676114393573732602693886965849392107855630297351891640801269990034659747926053185070098201542430508515708889270830280358222874522865192378335821753487954245491002769053491204208466619533185143527002699313031827277660717047972233120119465702841112954798655072211467889917359709980309161102427562535741080061045113185079205854056196403185426803056342351523484956234191104274583987854734646184176897408347172222790577708010964678101842400904781237539895339702598771916345745167905791870029121917745408251064199177212964106585715827085668399314453904306461632518873615305262329276997644593556745530080607631408226505403903006930638982430993587434659039373409312070077257810296424683361389295160932899519710429495996593499727601"}, "r_credential": null}, "signature_correctness_proof": {"se": "18296863927500172804293107843176657430120315953488730246315016673748764435345492977644678659634633639966966144817195024079688169206411755462988529782005065401235361183325984987096857804776471818376393329673081462427754929631287497458043150955506212371673105698807070796547668375707556817833298394290228188197143572788135782368887029154633552036967329846441145459760121055008867725749238807541631523967403207207491302781895427812338735115517606944815148175648734522485436888519687819286037082623090058216667028537389082220924000256488191201576310849948310802457826705179331504985933268733209659495364083120527893222046", "c": "102783256414115773702948382631747799094895100492140671927547017198803963895972"}, "rev_reg": null, "witness": null}, "auto_issue": false, "state": "credential_received", "auto_offer": false, "trace": true, "created_at": "2021-05-17 12:41:32.182428Z", "credential_request": {"prover_did": "Ss9L55FVLDVAE9wH9QUaLm", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "blinded_ms": {"u": "9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526", "ur": null, "hidden_attributes": ["master_secret"], "committed_attributes": {}}, "blinded_ms_correctness_proof": {"c": "8734654926560185522422668980289494278226532874472645869964441855250278027234", "v_dash_cap": "325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385", "m_caps": {"master_secret": "21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167"}, "r_caps": {}}, "nonce": "959712576749564225650409"}, "connection_id": "f56b18ea-92e1-4f6d-a094-80da3fad398d", "credential_request_metadata": {"master_secret_blinding_data": {"v_prime": "37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045", "vr_prime": null}, "nonce": "959712576749564225650409", "master_secret_name": "Medic"}, "updated_at": "2021-05-17 12:41:45.557037Z"}; Headers: {'Content-Type': 'application/json'}
Closing pool ledger after timeout
close_pool_ledger: >>> config_name: 21
do_call: >>> name: indy_close_pool_ledger, args: (c_int(21), <CFunctionType object at 0x7fd9c421b8e0>)
do_call: Function indy_close_pool_ledger returned err: 0
	src/services/pool/pool.rs:749 | Drop started
do_call: <<< <Future pending>
	src/services/pool/pool.rs:757 | Drop wait worker
	src/services/pool/pool.rs:760 | Drop finished
_indy_callback: >>> command_handle: 105, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 105, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_pool_ledger: <<< res: None
Incoming request: POST /issue-credential/records/71bf4548-eca4-4e17-9234-f2a75f0a41ed/store
Match info: <MatchInfo {'cred_ex_id': '71bf4548-eca4-4e17-9234-f2a75f0a41ed'}: <ResourceRoute [POST] <DynamicResource  /issue-credential/records/{cred_ex_id}/store> -> <function credential_exchange_store at 0x7fd9c41f6158>>
Body: {"credential_id": "PMQ"}
get_wallet_record: >>> wallet_handle: 3, type_: 'credential_exchange_v10', id: '71bf4548-eca4-4e17-9234-f2a75f0a41ed', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140572652188288), c_char_p(140572651912296), c_char_p(140572651803328), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[68, 120, 77, 86, 78, 80, 76, 102, 86, 83, 78, 57, 84, 105, 75, 104, 99, 116, 77, 66, 79, 86, 78, 98, 89, 80, 104, 71, 111, 67, 102, 101, 101, 90, 86, 81, 69, 119, 120, 47, 105, 102, 52, 90, 79, 105, 82, 112, 106, 50, 88, 119, 53, 113, 118, 66, 114, 84, 103, 80, 122, 78, 77, 82, 88, 109, 119, 89], [119, 56, 101, 122, 118, 50, 99, 121, 73, 74, 77, 100, 81, 81, 102, 49, 90, 120, 115, 109, 79, 119, 78, 107, 74, 81, 109, 52, 43, 110, 74, 87, 88, 54, 97, 121, 43, 110, 57, 56, 43, 48, 51, 121, 104, 81, 105, 68, 98, 55, 51, 97, 79, 98, 102, 54, 115, 48, 79, 108, 75, 118, 56, 119, 81, 68, 65, 85, 71, 122, 55, 105, 43, 102, 49, 67, 73, 97, 122, 52, 78, 122, 69, 115, 84, 119, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 106, err , args: (b'{"type":null,"id":"71bf4548-eca4-4e17-9234-f2a75f0a41ed","value":"{\\"thread_id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"created_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"updated_at\\": \\"2021-05-17 12:41:45.557037Z\\", \\"connection_id\\": \\"f56b18ea-92e1-4f6d-a094-80da3fad398d\\", \\"credential_proposal_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential\\", \\"@id\\": \\"11b76349-c461-401e-8668-d198a86f1988\\", \\"credential_proposal\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"comment\\": \\"create automated credential exchange\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\"}, \\"credential_offer_dict\\": null, \\"credential_offer\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"key_correctness_proof\\": {\\"c\\": \\"107747385423523632115836196578250990474250248043120793044857578887670452863909\\", \\"xz_cap\\": \\"1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694\\", \\"xr_cap\\": [[\\"name\\", \\"2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993\\"], [\\"university\\", \\"405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652\\"], [\\"dateissued\\", \\"2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451\\"], [\\"master_secret\\", \\"1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202\\"]]}, \\"nonce\\": \\"598069920933476898638215\\"}, \\"credential_request\\": {\\"prover_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"blinded_ms\\": {\\"u\\": \\"9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526\\", \\"ur\\": null, \\"hidden_attributes\\": [\\"master_secret\\"], \\"committed_attributes\\": {}}, \\"blinded_ms_correctness_proof\\": {\\"c\\": \\"8734654926560185522422668980289494278226532874472645869964441855250278027234\\", \\"v_dash_cap\\": \\"325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385\\", \\"m_caps\\": {\\"master_secret\\": \\"21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167\\"}, \\"r_caps\\": {}}, \\"nonce\\": \\"959712576749564225650409\\"}, \\"credential_request_metadata\\": {\\"master_secret_blinding_data\\": {\\"v_prime\\": \\"37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045\\", \\"vr_prime\\": null}, \\"nonce\\": \\"959712576749564225650409\\", \\"master_secret_name\\": \\"Medic\\"}, \\"error_msg\\": null, \\"auto_offer\\": false, \\"auto_issue\\": false, \\"auto_remove\\": false, \\"raw_credential\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"rev_reg_id\\": null, \\"values\\": {\\"Date Issued\\": {\\"raw\\": \\"2021-05-17\\", \\"encoded\\": \\"31928709163600735441101476658814216885388252189838058973070792022801591336579\\"}, \\"Name\\": {\\"raw\\": \\"Will Abramson\\", \\"encoded\\": \\"65005548905037764764502350053825769914874082648761230458670796241392891659611\\"}, \\"University\\": {\\"raw\\": \\"Edinburgh Medical School\\", \\"encoded\\": \\"57963125648994666300875361621729313351158154740138173103415020334594043694317\\"}}, \\"signature\\": {\\"p_credential\\": {\\"m_2\\": \\"64614027959237148406577876643582193654195798199659663559565324074474110876426\\", \\"a\\": \\"28196659349828833841806568922500331419943756793472592515246070472169183103554944278198153816574274149720987095111486068930168219714920197743796206530561438612474718498319743285076562596169213545429930609441229808810198314595598202600904377879617269619009997889921365729164321988246425760507962013213179356489165886495879937830757860813550488653092270182316591558107377505094005438662414556058268151394311488038034371945050944831570625995413228293415919202055974276990013994102772566137746322043107147965689577794487771425424609270637527334712240581940337439348801155923456105656468328904263302114118526537501007139669\\", \\"e\\": \\"259344723055062059907025491480697571938277889515152306249728583105665800713306759149981690559193987143012367913206299323899696942213235956742930046031686561229403844345113618420029\\", \\"v\\": \\"6354026336388301401986521152890972249709618813964245602037338330698734314130828006765601555201728676114393573732602693886965849392107855630297351891640801269990034659747926053185070098201542430508515708889270830280358222874522865192378335821753487954245491002769053491204208466619533185143527002699313031827277660717047972233120119465702841112954798655072211467889917359709980309161102427562535741080061045113185079205854056196403185426803056342351523484956234191104274583987854734646184176897408347172222790577708010964678101842400904781237539895339702598771916345745167905791870029121917745408251064199177212964106585715827085668399314453904306461632518873615305262329276997644593556745530080607631408226505403903006930638982430993587434659039373409312070077257810296424683361389295160932899519710429495996593499727601\\"}, \\"r_credential\\": null}, \\"signature_correctness_proof\\": {\\"se\\": \\"18296863927500172804293107843176657430120315953488730246315016673748764435345492977644678659634633639966966144817195024079688169206411755462988529782005065401235361183325984987096857804776471818376393329673081462427754929631287497458043150955506212371673105698807070796547668375707556817833298394290228188197143572788135782368887029154633552036967329846441145459760121055008867725749238807541631523967403207207491302781895427812338735115517606944815148175648734522485436888519687819286037082623090058216667028537389082220924000256488191201576310849948310802457826705179331504985933268733209659495364083120527893222046\\", \\"c\\": \\"102783256414115773702948382631747799094895100492140671927547017198803963895972\\"}, \\"rev_reg\\": null, \\"witness\\": null}, \\"credential\\": null, \\"parent_thread_id\\": null, \\"initiator\\": \\"external\\", \\"credential_definition_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"credential_id\\": null, \\"revoc_reg_id\\": null, \\"revocation_id\\": null, \\"role\\": \\"holder\\", \\"state\\": \\"credential_received\\", \\"trace\\": true}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 106, err , args: (b'{"type":null,"id":"71bf4548-eca4-4e17-9234-f2a75f0a41ed","value":"{\\"thread_id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"created_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"updated_at\\": \\"2021-05-17 12:41:45.557037Z\\", \\"connection_id\\": \\"f56b18ea-92e1-4f6d-a094-80da3fad398d\\", \\"credential_proposal_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential\\", \\"@id\\": \\"11b76349-c461-401e-8668-d198a86f1988\\", \\"credential_proposal\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"comment\\": \\"create automated credential exchange\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\"}, \\"credential_offer_dict\\": null, \\"credential_offer\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"key_correctness_proof\\": {\\"c\\": \\"107747385423523632115836196578250990474250248043120793044857578887670452863909\\", \\"xz_cap\\": \\"1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694\\", \\"xr_cap\\": [[\\"name\\", \\"2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993\\"], [\\"university\\", \\"405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652\\"], [\\"dateissued\\", \\"2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451\\"], [\\"master_secret\\", \\"1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202\\"]]}, \\"nonce\\": \\"598069920933476898638215\\"}, \\"credential_request\\": {\\"prover_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"blinded_ms\\": {\\"u\\": \\"9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526\\", \\"ur\\": null, \\"hidden_attributes\\": [\\"master_secret\\"], \\"committed_attributes\\": {}}, \\"blinded_ms_correctness_proof\\": {\\"c\\": \\"8734654926560185522422668980289494278226532874472645869964441855250278027234\\", \\"v_dash_cap\\": \\"325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385\\", \\"m_caps\\": {\\"master_secret\\": \\"21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167\\"}, \\"r_caps\\": {}}, \\"nonce\\": \\"959712576749564225650409\\"}, \\"credential_request_metadata\\": {\\"master_secret_blinding_data\\": {\\"v_prime\\": \\"37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045\\", \\"vr_prime\\": null}, \\"nonce\\": \\"959712576749564225650409\\", \\"master_secret_name\\": \\"Medic\\"}, \\"error_msg\\": null, \\"auto_offer\\": false, \\"auto_issue\\": false, \\"auto_remove\\": false, \\"raw_credential\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"rev_reg_id\\": null, \\"values\\": {\\"Date Issued\\": {\\"raw\\": \\"2021-05-17\\", \\"encoded\\": \\"31928709163600735441101476658814216885388252189838058973070792022801591336579\\"}, \\"Name\\": {\\"raw\\": \\"Will Abramson\\", \\"encoded\\": \\"65005548905037764764502350053825769914874082648761230458670796241392891659611\\"}, \\"University\\": {\\"raw\\": \\"Edinburgh Medical School\\", \\"encoded\\": \\"57963125648994666300875361621729313351158154740138173103415020334594043694317\\"}}, \\"signature\\": {\\"p_credential\\": {\\"m_2\\": \\"64614027959237148406577876643582193654195798199659663559565324074474110876426\\", \\"a\\": \\"28196659349828833841806568922500331419943756793472592515246070472169183103554944278198153816574274149720987095111486068930168219714920197743796206530561438612474718498319743285076562596169213545429930609441229808810198314595598202600904377879617269619009997889921365729164321988246425760507962013213179356489165886495879937830757860813550488653092270182316591558107377505094005438662414556058268151394311488038034371945050944831570625995413228293415919202055974276990013994102772566137746322043107147965689577794487771425424609270637527334712240581940337439348801155923456105656468328904263302114118526537501007139669\\", \\"e\\": \\"259344723055062059907025491480697571938277889515152306249728583105665800713306759149981690559193987143012367913206299323899696942213235956742930046031686561229403844345113618420029\\", \\"v\\": \\"6354026336388301401986521152890972249709618813964245602037338330698734314130828006765601555201728676114393573732602693886965849392107855630297351891640801269990034659747926053185070098201542430508515708889270830280358222874522865192378335821753487954245491002769053491204208466619533185143527002699313031827277660717047972233120119465702841112954798655072211467889917359709980309161102427562535741080061045113185079205854056196403185426803056342351523484956234191104274583987854734646184176897408347172222790577708010964678101842400904781237539895339702598771916345745167905791870029121917745408251064199177212964106585715827085668399314453904306461632518873615305262329276997644593556745530080607631408226505403903006930638982430993587434659039373409312070077257810296424683361389295160932899519710429495996593499727601\\"}, \\"r_credential\\": null}, \\"signature_correctness_proof\\": {\\"se\\": \\"18296863927500172804293107843176657430120315953488730246315016673748764435345492977644678659634633639966966144817195024079688169206411755462988529782005065401235361183325984987096857804776471818376393329673081462427754929631287497458043150955506212371673105698807070796547668375707556817833298394290228188197143572788135782368887029154633552036967329846441145459760121055008867725749238807541631523967403207207491302781895427812338735115517606944815148175648734522485436888519687819286037082623090058216667028537389082220924000256488191201576310849948310802457826705179331504985933268733209659495364083120527893222046\\", \\"c\\": \\"102783256414115773702948382631747799094895100492140671927547017198803963895972\\"}, \\"rev_reg\\": null, \\"witness\\": null}, \\"credential\\": null, \\"parent_thread_id\\": null, \\"initiator\\": \\"external\\", \\"credential_definition_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"credential_id\\": null, \\"revoc_reg_id\\": null, \\"revocation_id\\": null, \\"role\\": \\"holder\\", \\"state\\": \\"credential_received\\", \\"trace\\": true}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"71bf4548-eca4-4e17-9234-f2a75f0a41ed","value":"{\\"thread_id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"created_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"updated_at\\": \\"2021-05-17 12:41:45.557037Z\\", \\"connection_id\\": \\"f56b18ea-92e1-4f6d-a094-80da3fad398d\\", \\"credential_proposal_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential\\", \\"@id\\": \\"11b76349-c461-401e-8668-d198a86f1988\\", \\"credential_proposal\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"comment\\": \\"create automated credential exchange\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\"}, \\"credential_offer_dict\\": null, \\"credential_offer\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"key_correctness_proof\\": {\\"c\\": \\"107747385423523632115836196578250990474250248043120793044857578887670452863909\\", \\"xz_cap\\": \\"1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694\\", \\"xr_cap\\": [[\\"name\\", \\"2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993\\"], [\\"university\\", \\"405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652\\"], [\\"dateissued\\", \\"2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451\\"], [\\"master_secret\\", \\"1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202\\"]]}, \\"nonce\\": \\"598069920933476898638215\\"}, \\"credential_request\\": {\\"prover_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"blinded_ms\\": {\\"u\\": \\"9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526\\", \\"ur\\": null, \\"hidden_attributes\\": [\\"master_secret\\"], \\"committed_attributes\\": {}}, \\"blinded_ms_correctness_proof\\": {\\"c\\": \\"8734654926560185522422668980289494278226532874472645869964441855250278027234\\", \\"v_dash_cap\\": \\"325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385\\", \\"m_caps\\": {\\"master_secret\\": \\"21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167\\"}, \\"r_caps\\": {}}, \\"nonce\\": \\"959712576749564225650409\\"}, \\"credential_request_metadata\\": {\\"master_secret_blinding_data\\": {\\"v_prime\\": \\"37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045\\", \\"vr_prime\\": null}, \\"nonce\\": \\"959712576749564225650409\\", \\"master_secret_name\\": \\"Medic\\"}, \\"error_msg\\": null, \\"auto_offer\\": false, \\"auto_issue\\": false, \\"auto_remove\\": false, \\"raw_credential\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"rev_reg_id\\": null, \\"values\\": {\\"Date Issued\\": {\\"raw\\": \\"2021-05-17\\", \\"encoded\\": \\"31928709163600735441101476658814216885388252189838058973070792022801591336579\\"}, \\"Name\\": {\\"raw\\": \\"Will Abramson\\", \\"encoded\\": \\"65005548905037764764502350053825769914874082648761230458670796241392891659611\\"}, \\"University\\": {\\"raw\\": \\"Edinburgh Medical School\\", \\"encoded\\": \\"57963125648994666300875361621729313351158154740138173103415020334594043694317\\"}}, \\"signature\\": {\\"p_credential\\": {\\"m_2\\": \\"64614027959237148406577876643582193654195798199659663559565324074474110876426\\", \\"a\\": \\"28196659349828833841806568922500331419943756793472592515246070472169183103554944278198153816574274149720987095111486068930168219714920197743796206530561438612474718498319743285076562596169213545429930609441229808810198314595598202600904377879617269619009997889921365729164321988246425760507962013213179356489165886495879937830757860813550488653092270182316591558107377505094005438662414556058268151394311488038034371945050944831570625995413228293415919202055974276990013994102772566137746322043107147965689577794487771425424609270637527334712240581940337439348801155923456105656468328904263302114118526537501007139669\\", \\"e\\": \\"259344723055062059907025491480697571938277889515152306249728583105665800713306759149981690559193987143012367913206299323899696942213235956742930046031686561229403844345113618420029\\", \\"v\\": \\"6354026336388301401986521152890972249709618813964245602037338330698734314130828006765601555201728676114393573732602693886965849392107855630297351891640801269990034659747926053185070098201542430508515708889270830280358222874522865192378335821753487954245491002769053491204208466619533185143527002699313031827277660717047972233120119465702841112954798655072211467889917359709980309161102427562535741080061045113185079205854056196403185426803056342351523484956234191104274583987854734646184176897408347172222790577708010964678101842400904781237539895339702598771916345745167905791870029121917745408251064199177212964106585715827085668399314453904306461632518873615305262329276997644593556745530080607631408226505403903006930638982430993587434659039373409312070077257810296424683361389295160932899519710429495996593499727601\\"}, \\"r_credential\\": null}, \\"signature_correctness_proof\\": {\\"se\\": \\"18296863927500172804293107843176657430120315953488730246315016673748764435345492977644678659634633639966966144817195024079688169206411755462988529782005065401235361183325984987096857804776471818376393329673081462427754929631287497458043150955506212371673105698807070796547668375707556817833298394290228188197143572788135782368887029154633552036967329846441145459760121055008867725749238807541631523967403207207491302781895427812338735115517606944815148175648734522485436888519687819286037082623090058216667028537389082220924000256488191201576310849948310802457826705179331504985933268733209659495364083120527893222046\\", \\"c\\": \\"102783256414115773702948382631747799094895100492140671927547017198803963895972\\"}, \\"rev_reg\\": null, \\"witness\\": null}, \\"credential\\": null, \\"parent_thread_id\\": null, \\"initiator\\": \\"external\\", \\"credential_definition_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"credential_id\\": null, \\"revoc_reg_id\\": null, \\"revocation_id\\": null, \\"role\\": \\"holder\\", \\"state\\": \\"credential_received\\", \\"trace\\": true}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"71bf4548-eca4-4e17-9234-f2a75f0a41ed","value":"{\\"thread_id\\": \\"756497eb-22b7-4c6d-9b38-052a58a9e6bc\\", \\"created_at\\": \\"2021-05-17 12:41:32.182428Z\\", \\"updated_at\\": \\"2021-05-17 12:41:45.557037Z\\", \\"connection_id\\": \\"f56b18ea-92e1-4f6d-a094-80da3fad398d\\", \\"credential_proposal_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential\\", \\"@id\\": \\"11b76349-c461-401e-8668-d198a86f1988\\", \\"credential_proposal\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\\", \\"attributes\\": [{\\"name\\": \\"Name\\", \\"value\\": \\"Will Abramson\\"}, {\\"name\\": \\"University\\", \\"value\\": \\"Edinburgh Medical School\\"}, {\\"name\\": \\"Date Issued\\", \\"value\\": \\"2021-05-17\\"}]}, \\"comment\\": \\"create automated credential exchange\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\"}, \\"credential_offer_dict\\": null, \\"credential_offer\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"key_correctness_proof\\": {\\"c\\": \\"107747385423523632115836196578250990474250248043120793044857578887670452863909\\", \\"xz_cap\\": \\"1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694\\", \\"xr_cap\\": [[\\"name\\", \\"2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993\\"], [\\"university\\", \\"405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652\\"], [\\"dateissued\\", \\"2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451\\"], [\\"master_secret\\", \\"1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202\\"]]}, \\"nonce\\": \\"598069920933476898638215\\"}, \\"credential_request\\": {\\"prover_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"blinded_ms\\": {\\"u\\": \\"9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526\\", \\"ur\\": null, \\"hidden_attributes\\": [\\"master_secret\\"], \\"committed_attributes\\": {}}, \\"blinded_ms_correctness_proof\\": {\\"c\\": \\"8734654926560185522422668980289494278226532874472645869964441855250278027234\\", \\"v_dash_cap\\": \\"325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385\\", \\"m_caps\\": {\\"master_secret\\": \\"21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167\\"}, \\"r_caps\\": {}}, \\"nonce\\": \\"959712576749564225650409\\"}, \\"credential_request_metadata\\": {\\"master_secret_blinding_data\\": {\\"v_prime\\": \\"37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045\\", \\"vr_prime\\": null}, \\"nonce\\": \\"959712576749564225650409\\", \\"master_secret_name\\": \\"Medic\\"}, \\"error_msg\\": null, \\"auto_offer\\": false, \\"auto_issue\\": false, \\"auto_remove\\": false, \\"raw_credential\\": {\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"rev_reg_id\\": null, \\"values\\": {\\"Date Issued\\": {\\"raw\\": \\"2021-05-17\\", \\"encoded\\": \\"31928709163600735441101476658814216885388252189838058973070792022801591336579\\"}, \\"Name\\": {\\"raw\\": \\"Will Abramson\\", \\"encoded\\": \\"65005548905037764764502350053825769914874082648761230458670796241392891659611\\"}, \\"University\\": {\\"raw\\": \\"Edinburgh Medical School\\", \\"encoded\\": \\"57963125648994666300875361621729313351158154740138173103415020334594043694317\\"}}, \\"signature\\": {\\"p_credential\\": {\\"m_2\\": \\"64614027959237148406577876643582193654195798199659663559565324074474110876426\\", \\"a\\": \\"28196659349828833841806568922500331419943756793472592515246070472169183103554944278198153816574274149720987095111486068930168219714920197743796206530561438612474718498319743285076562596169213545429930609441229808810198314595598202600904377879617269619009997889921365729164321988246425760507962013213179356489165886495879937830757860813550488653092270182316591558107377505094005438662414556058268151394311488038034371945050944831570625995413228293415919202055974276990013994102772566137746322043107147965689577794487771425424609270637527334712240581940337439348801155923456105656468328904263302114118526537501007139669\\", \\"e\\": \\"259344723055062059907025491480697571938277889515152306249728583105665800713306759149981690559193987143012367913206299323899696942213235956742930046031686561229403844345113618420029\\", \\"v\\": \\"6354026336388301401986521152890972249709618813964245602037338330698734314130828006765601555201728676114393573732602693886965849392107855630297351891640801269990034659747926053185070098201542430508515708889270830280358222874522865192378335821753487954245491002769053491204208466619533185143527002699313031827277660717047972233120119465702841112954798655072211467889917359709980309161102427562535741080061045113185079205854056196403185426803056342351523484956234191104274583987854734646184176897408347172222790577708010964678101842400904781237539895339702598771916345745167905791870029121917745408251064199177212964106585715827085668399314453904306461632518873615305262329276997644593556745530080607631408226505403903006930638982430993587434659039373409312070077257810296424683361389295160932899519710429495996593499727601\\"}, \\"r_credential\\": null}, \\"signature_correctness_proof\\": {\\"se\\": \\"18296863927500172804293107843176657430120315953488730246315016673748764435345492977644678659634633639966966144817195024079688169206411755462988529782005065401235361183325984987096857804776471818376393329673081462427754929631287497458043150955506212371673105698807070796547668375707556817833298394290228188197143572788135782368887029154633552036967329846441145459760121055008867725749238807541631523967403207207491302781895427812338735115517606944815148175648734522485436888519687819286037082623090058216667028537389082220924000256488191201576310849948310802457826705179331504985933268733209659495364083120527893222046\\", \\"c\\": \\"102783256414115773702948382631747799094895100492140671927547017198803963895972\\"}, \\"rev_reg\\": null, \\"witness\\": null}, \\"credential\\": null, \\"parent_thread_id\\": null, \\"initiator\\": \\"external\\", \\"credential_definition_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"credential_id\\": null, \\"revoc_reg_id\\": null, \\"revocation_id\\": null, \\"role\\": \\"holder\\", \\"state\\": \\"credential_received\\", \\"trace\\": true}","tags":null}'
get_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'f56b18ea-92e1-4f6d-a094-80da3fad398d', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573273868864), c_char_p(140572626271912), c_char_p(140572651803328), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [120, 99, 101, 86, 104, 116, 110, 103, 56, 75, 112, 113, 55, 105, 55, 47, 101, 106, 66, 77, 104, 76, 90, 102, 98, 69, 80, 98, 116, 98, 69, 114, 78, 67, 114, 109, 116, 118, 104, 85, 108, 65, 71, 107, 71, 78, 105, 52, 67, 54, 116, 117, 88, 105, 74, 47, 50, 108, 116, 118, 83, 102, 74, 77, 116, 106, 72, 119, 105, 51, 72, 105, 55, 82, 112, 79, 114, 67, 69, 70, 85, 84, 72, 122, 122, 81, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 107, err , args: (b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 107, err , args: (b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"f56b18ea-92e1-4f6d-a094-80da3fad398d","value":"{\\"invitation_key\\": \\"5Bg89qFChuqkD2W4rRjL2KieCgia5dipR4ownCSjUaZP\\", \\"their_did\\": \\"QxkFnUxMqbSZbC91on4s4x\\", \\"my_did\\": \\"Ss9L55FVLDVAE9wH9QUaLm\\", \\"request_id\\": \\"5c86d714-9808-4bc8-a653-6abb4c381dab\\", \\"created_at\\": \\"2021-05-17 12:41:06.885367Z\\", \\"updated_at\\": \\"2021-05-17 12:41:08.369600Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"auto\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"Edinburgh Medical School\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
Opening the pool ledger
set_protocol_version: >>> protocol_version: 2
do_call: >>> name: indy_set_protocol_version, args: (2, <CFunctionType object at 0x7fd9c8bffe58>)
do_call: Function indy_set_protocol_version returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 108, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 108, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
set_protocol_version: <<< res: None
open_pool_ledger: >>> config_name: 'default', config: '{}'
do_call: >>> name: indy_open_pool_ledger, args: (c_char_p(140572651893896), c_char_p(140572651894016), <CFunctionType object at 0x7fd9c63d4048>)
do_call: Function indy_open_pool_ledger returned err: 0
do_call: <<< <Future pending>
	src/commands/pool.rs:75 | OpenAck handle 27, pool_id 27, result Ok(())
_indy_callback: >>> command_handle: 109, err , args: (27,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 109, err , args: (27,)
_indy_loop_callback: Function returned 27
_indy_loop_callback <<<
open_pool_ledger: <<< res: 27
prover_store_credential: >>> wallet_handle: 3, cred_id: 'PMQ', cred_req_metadata_json: '{"master_secret_blinding_data": {"v_prime": "37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045", "vr_prime": null}, "nonce": "959712576749564225650409", "master_secret_name": "Medic"}', cred_json: '{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "rev_reg_id": null, "values": {"Date Issued": {"raw": "2021-05-17", "encoded": "31928709163600735441101476658814216885388252189838058973070792022801591336579"}, "Name": {"raw": "Will Abramson", "encoded": "65005548905037764764502350053825769914874082648761230458670796241392891659611"}, "University": {"raw": "Edinburgh Medical School", "encoded": "57963125648994666300875361621729313351158154740138173103415020334594043694317"}}, "signature": {"p_credential": {"m_2": "64614027959237148406577876643582193654195798199659663559565324074474110876426", "a": "28196659349828833841806568922500331419943756793472592515246070472169183103554944278198153816574274149720987095111486068930168219714920197743796206530561438612474718498319743285076562596169213545429930609441229808810198314595598202600904377879617269619009997889921365729164321988246425760507962013213179356489165886495879937830757860813550488653092270182316591558107377505094005438662414556058268151394311488038034371945050944831570625995413228293415919202055974276990013994102772566137746322043107147965689577794487771425424609270637527334712240581940337439348801155923456105656468328904263302114118526537501007139669", "e": "259344723055062059907025491480697571938277889515152306249728583105665800713306759149981690559193987143012367913206299323899696942213235956742930046031686561229403844345113618420029", "v": "6354026336388301401986521152890972249709618813964245602037338330698734314130828006765601555201728676114393573732602693886965849392107855630297351891640801269990034659747926053185070098201542430508515708889270830280358222874522865192378335821753487954245491002769053491204208466619533185143527002699313031827277660717047972233120119465702841112954798655072211467889917359709980309161102427562535741080061045113185079205854056196403185426803056342351523484956234191104274583987854734646184176897408347172222790577708010964678101842400904781237539895339702598771916345745167905791870029121917745408251064199177212964106585715827085668399314453904306461632518873615305262329276997644593556745530080607631408226505403903006930638982430993587434659039373409312070077257810296424683361389295160932899519710429495996593499727601"}, "r_credential": null}, "signature_correctness_proof": {"se": "18296863927500172804293107843176657430120315953488730246315016673748764435345492977644678659634633639966966144817195024079688169206411755462988529782005065401235361183325984987096857804776471818376393329673081462427754929631287497458043150955506212371673105698807070796547668375707556817833298394290228188197143572788135782368887029154633552036967329846441145459760121055008867725749238807541631523967403207207491302781895427812338735115517606944815148175648734522485436888519687819286037082623090058216667028537389082220924000256488191201576310849948310802457826705179331504985933268733209659495364083120527893222046", "c": "102783256414115773702948382631747799094895100492140671927547017198803963895972"}, "rev_reg": null, "witness": null}', cred_def_json: '{"ver": "1.0", "id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "schemaId": "10", "type": "CL", "tag": "default", "value": {"primary": {"n": "94395789918231228154091785586208843768578611847406303642651586891320930921222577081682230513612376731058197900820380914247688360049152906855525071639682048377145839103957609377714707719996675230706669321219428162692467324558094099599975868966359717071320779088929152605016542346699384011376930722440028896866096433708622612880431237575976995549426585399554650551399842593587963267758910127885708120359104171691736586089614188198196403067253458139734883446766648674330236607203272574691987391068966666586806995593618443807684047062115622841653991664284445314132632263661187734217623134159115481886205370089744580113873", "s": "81015554602046261170194441766593713402652953400350870565114032770101449194297729670972477002174582485434108371542070977617557550121283690070154003153465127142412492947796621604600610943420608021996428452150207616569073697990519854557474268872609763827715371234014675999148925758192510809298846373459463897569613243987836413106444130079827991856407108661830455636123140979595080835420673872438643970902637587408616587774476369311312702638678399091209309062417365872445535935878731892209908961704038522600004246100600971609868679635382295155855245796766811360326275356141899810243775065920199349268650268063905993595880", "r": {"dateissued": "18859023741018797872038815229638117026310339435744972607910760746976197568986451324307784659205603164866675762626845593584383953972951170576488223929403145953405880160997837014576916783672289014577491803877405955021543305639943207054834276533724888622816572222212002817434521247029102961171038131491016993683945958422904951967972242721815515956951687914783455532817412140497820261587057222074602535598277491573901466789858112285556636463931043202870509835082348016849346871822417355851938877835473162167541963027783714110369668288318655034153675621000872099879442600835618083660187178225685391119538793895918988690951", "master_secret": "38018101519921364727663368811618364961198439828773774963837808691300389099073641171173405972255390297743591226127198243269040440391331382005419723386460723507508748134326215218108079487747310689655719830220233038870395851200615467976988479364617945744009175380255178291443316837400065778174525671555554858846963660754273049900258540789750490659565596066796144609195933532365732229205176649943186753690388273648613883847077543436939447724144311053713620313478922939433052250159704813019931470611137912845604761954056274516499163256212589424003418836016270513452406523634776192214967795359655752585855421903408811504820", "name": "36972881227678226440524799834715449272905068152296041598298656344868823425822182142795341444521792489486865867678420406707813366601225310068973916314294496409888578098137466321037329183322105661346445057074775952226980306807756318820908180989553261280373209427144589281724427550334494051418908462936434249924425014938135365683029473367852494388771701690499555627259602163694165048703404978943387681274632934879094520963711354499009945634348271392433647603995327488071723814413654420116984500071622022838652865117264689191402593903686138105531309317348858688060431554155935932858240155529478495227551673149659583878367", "university": "85116886009283016587228837585185311801589234072532060179339162055691896259340973464378227116173921589574143079368170380064143315961104464737805257104371227573987632118021149596346336106979223046724507249243729298609587976484591179974141219437072662798348044620985302987585711515763230783304102509425352385088810988130856153145777680332189971409522233277037621493075538751179102002174462822864033520018868896075058926153340905166677380284040336304204116434323400415636380662101070808244622574958353942889060506400005103199810764605894756304090121203262515557730788468189763417280558801085969455488137667032138426499258"}, "rctxt": "72626192235856995713273878588635875503481156228369835798223682595862896495927599478785691456386732961699963442191790521351546847893842544331284577466655322900390546674081030387374194070100367944808152504857990896324240085608833289560880701109409966502178884502922967259001538262028100840388335398150175296461704717640987560280776117404108475362814709228233187171804851053778460491440104978266175123106542827674110607437222663300473774884530762942299317232900017062741820195136922938188215927090888278399065229552785414585240736808133545586693839331647692030044269603072142186291558337525917277699344952583144729625821", "z": "51405307349344473067543426140468250092978855391487837047919159448408306062742488977366371466579706875599220069757479535367208213512828381608544912208283492410837784787782762642642861456735914591395012090431192866710568924623222136268204112035067662953104257210546855663474292551899072591301630322930203349354091168912443214512040520480983018735448811935672679905506225871744898385465084434247135025413977137413227467339209144247099296863360895679895363096178564770291071017904729821236003386032365050793392320240962960327650486516536201676196280265057090339600515877691397338416693239305406465297046578191629345668206"}}}', rev_reg_def_json: None
prover_store_credential: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99ef83b38>
do_call: >>> name: indy_prover_store_credential, args: (c_int(3), c_char_p(140572651894056), c_char_p(140573206035056), c_char_p(94095652739936), c_char_p(94095652743120), None, <CFunctionType object at 0x7fd99ef83b38>)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[100, 113, 48, 53, 106, 66, 78, 103, 108, 69, 82, 51, 67, 111, 114, 107, 116, 119, 90, 113, 113, 68, 104, 113, 122, 47, 100, 82, 122, 119, 104, 83, 88, 52, 78, 51, 98, 69, 48, 106, 72, 115, 71, 114, 77, 98, 100, 122, 101, 97, 54, 113, 49, 114, 110, 79, 72, 72, 87, 69, 110, 103, 61, 61], [47, 100, 108, 54, 104, 47, 82, 105, 102, 83, 78, 84, 105, 75, 105, 111, 113, 68, 107, 119, 87, 51, 47, 65, 53, 69, 74, 72, 86, 50, 71, 114, 85, 79, 81, 87, 55, 111, 112, 98, 69, 104, 57, 72], "Medic"]
do_call: Function indy_prover_store_credential returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[99, 118, 122, 106, 51, 76, 102, 115, 113, 73, 67, 111, 81, 80, 80, 72, 115, 79, 43, 112, 88, 73, 116, 118, 85, 66, 112, 102, 119, 53, 49, 87, 105, 103, 112, 73, 112, 73, 105, 50, 80, 108, 48, 48, 51, 71, 83, 117, 89, 47, 56, 114, 109, 43, 76, 54, 51, 117, 109, 119, 80, 82, 103, 100, 83, 106, 54, 43, 97, 103, 76, 48, 86, 71, 104, 108], [70, 102, 82, 70, 105, 112, 72, 66, 78, 53, 84, 114, 106, 111, 111, 100, 107, 51, 84, 50, 56, 49, 87, 71, 54, 52, 113, 120, 89, 87, 84, 87, 88, 52, 103, 122, 69, 80, 74, 119, 57, 90, 114, 107, 68, 83, 111, 48, 119, 57, 109, 77, 52, 110, 102, 87, 47, 118, 97, 71, 86, 87, 88, 47, 116, 83, 54, 70, 108, 52, 102, 121, 105, 89, 121, 100, 99, 118, 87, 117, 73, 52, 120, 108, 49, 101, 108, 76], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s8`: INSERT INTO items (type, name, value, key, wallet_id) VALUES ($1, $2, $3, $4, $5) RETURNING id
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s8 with parameters: [[77, 70, 54, 104, 111, 106, 101, 67, 88, 85, 88, 116, 55, 116, 82, 119, 43, 97, 109, 98, 48, 120, 101, 111, 106, 119, 65, 113, 120, 107, 76, 57, 109, 108, 78, 109, 119, 110, 78, 52, 117, 84, 67, 76, 77, 90, 120, 121, 76, 88, 104, 71, 101, 48, 111, 109, 57, 79, 85, 61], [49, 68, 119, 108, 105, 113, 85, 101, 88, 105, 69, 75, 50, 115, 102, 53, 104, 108, 87, 97, 90, 79, 104, 113, 109, 88, 97, 54, 116, 113, 75, 69, 98, 67, 121, 76, 56, 68, 79, 50, 67, 65, 61, 61], [35, 71, 61, 199, 119, 252, 227, 29, 85, 65, 161, 94, 234, 150, 242, 125, 203, 188, 142, 151, 223, 180, 165, 128, 64, 254, 119, 43, 29, 220, 231, 157, 14, 159, 203, 122, 94, 255, 133, 183, 91, 29, 248, 112, 5, 221, 47, 124, 11, 78, 244, 104, 236, 202, 213, 242, 220, 142, 158, 69, 26, 173, 44, 89, 143, 169, 19, 179, 73, 113, 126, 31, 253, 108, 167, 124, 157, 69, 217, 198, 252, 232, 243, 46, 125, 73, 1, 123, 17, 8, 78, 111, 210, 224, 193, 161, 48, 44, 147, 88, 236, 26, 108, 171, 111, 241, 140, 156, 34, 38, 243, 108, 161, 223, 220, 156, 75, 105, 61, 46, 56, 96, 159, 35, 5, 182, 168, 202, 231, 111, 227, 173, 133, 137, 168, 75, 16, 205, 90, 132, 68, 173, 41, 17, 28, 67, 23, 143, 126, 95, 69, 99, 87, 166, 21, 242, 183, 8, 110, 87, 46, 250, 156, 154, 41, 109, 216, 130, 46, 142, 208, 246, 143, 107, 14, 255, 225, 177, 124, 244, 189, 151, 184, 95, 184, 132, 49, 159, 28, 102, 4, 138, 135, 153, 128, 24, 50, 68, 240, 139, 36, 35, 250, 109, 78, 220, 172, 122, 156, 54, 23, 156, 252, 214, 112, 14, 239, 230, 5, 150, 155, 116, 1, 61, 116, 242, 111, 244, 44, 102, 176, 144, 214, 142, 176, 174, 40, 44, 181, 104, 66, 97, 49, 130, 188, 136, 152, 132, 197, 179, 56, 183, 134, 80, 54, 56, 22, 6, 212, 203, 82, 28, 78, 149, 52, 154, 190, 98, 240, 75, 56, 35, 117, 94, 62, 80, 143, 1, 96, 195, 215, 52, 198, 156, 7, 63, 54, 196, 97, 60, 63, 140, 151, 199, 155, 144, 64, 87, 224, 152, 3, 61, 202, 71, 194, 52, 240, 68, 27, 138, 203, 225, 199, 3, 243, 9, 121, 21, 110, 50, 186, 255, 23, 222, 115, 179, 183, 195, 187, 123, 72, 149, 169, 55, 211, 233, 238, 5, 88, 165, 19, 176, 81, 208, 120, 79, 60, 20, 35, 234, 148, 78, 146, 23, 159, 38, 93, 52, 76, 177, 191, 31, 246, 28, 157, 6, 90, 51, 222, 101, 205, 86, 11, 198, 110, 251, 192, 51, 180, 176, 130, 86, 168, 212, 247, 9, 48, 9, 159, 176, 207, 100, 170, 139, 103, 204, 230, 61, 8, 235, 121, 121, 146, 11, 249, 120, 226, 135, 215, 153, 174, 204, 63, 16, 253, 55, 154, 167, 84, 203, 185, 52, 109, 107, 184, 34, 161, 192, 109, 74, 97, 207, 211, 196, 208, 62, 73, 177, 95, 103, 80, 140, 166, 252, 83, 107, 36, 211, 20, 42, 189, 184, 58, 229, 206, 177, 17, 11, 156, 217, 235, 245, 199, 100, 179, 4, 199, 64, 43, 158, 164, 176, 234, 86, 85, 135, 95, 119, 33, 224, 42, 108, 102, 183, 156, 20, 159, 42, 84, 76, 88, 200, 190, 225, 109, 148, 178, 77, 150, 17, 93, 121, 28, 43, 147, 188, 25, 176, 61, 232, 150, 154, 135, 78, 205, 68, 43, 153, 135, 190, 154, 32, 233, 213, 113, 1, 130, 111, 85, 228, 219, 18, 15, 241, 71, 232, 69, 5, 60, 232, 99, 7, 147, 6, 128, 182, 133, 30, 231, 188, 254, 182, 135, 195, 185, 37, 241, 250, 114, 22, 76, 129, 50, 6, 9, 21, 87, 221, 233, 60, 142, 14, 59, 11, 254, 109, 113, 109, 100, 239, 152, 26, 2, 68, 49, 133, 214, 94, 197, 160, 15, 190, 246, 133, 151, 81, 19, 65, 172, 130, 57, 44, 187, 63, 43, 197, 214, 72, 243, 122, 208, 96, 180, 146, 146, 73, 198, 236, 189, 153, 87, 23, 122, 242, 139, 79, 198, 158, 86, 65, 45, 28, 225, 27, 211, 219, 225, 148, 171, 195, 120, 64, 6, 206, 21, 148, 138, 154, 223, 65, 11, 158, 223, 145, 168, 34, 247, 120, 83, 225, 147, 183, 15, 25, 193, 20, 2, 176, 0, 16, 196, 149, 158, 94, 177, 243, 7, 225, 152, 63, 153, 96, 249, 14, 70, 84, 59, 213, 175, 217, 202, 66, 146, 57, 158, 84, 121, 19, 124, 208, 80, 55, 179, 243, 29, 236, 164, 17, 242, 20, 84, 231, 16, 21, 159, 45, 209, 55, 188, 32, 127, 52, 75, 93, 239, 156, 171, 190, 217, 143, 26, 240, 163, 133, 212, 57, 254, 149, 220, 185, 209, 69, 122, 223, 106, 189, 91, 169, 233, 62, 182, 154, 234, 84, 231, 107, 75, 160, 187, 80, 228, 251, 68, 70, 232, 195, 1, 117, 9, 231, 240, 216, 213, 116, 145, 77, 96, 44, 243, 135, 210, 12, 186, 161, 171, 158, 212, 113, 164, 201, 218, 39, 36, 203, 115, 47, 17, 94, 79, 242, 36, 238, 32, 76, 29, 116, 228, 176, 143, 234, 22, 56, 94, 237, 65, 102, 205, 68, 125, 143, 64, 229, 138, 100, 157, 196, 34, 122, 170, 235, 127, 23, 214, 23, 167, 60, 100, 166, 92, 9, 108, 83, 204, 92, 161, 209, 253, 199, 172, 138, 229, 195, 39, 111, 93, 161, 35, 227, 120, 92, 108, 187, 37, 179, 127, 212, 53, 198, 5, 181, 163, 147, 101, 62, 28, 104, 131, 101, 154, 180, 41, 81, 9, 249, 190, 164, 88, 166, 21, 168, 175, 151, 48, 104, 56, 255, 4, 238, 195, 231, 215, 151, 28, 49, 230, 3, 155, 88, 66, 215, 147, 244, 207, 184, 139, 190, 54, 156, 1, 52, 239, 31, 215, 113, 176, 24, 172, 174, 133, 134, 132, 59, 3, 168, 172, 44, 129, 211, 6, 192, 107, 148, 167, 152, 249, 16, 5, 93, 224, 225, 110, 102, 37, 15, 85, 22, 180, 97, 107, 66, 168, 27, 103, 90, 248, 22, 215, 148, 22, 231, 35, 175, 203, 255, 0, 184, 7, 70, 172, 162, 53, 116, 255, 48, 245, 57, 172, 101, 58, 6, 63, 62, 87, 98, 41, 255, 174, 240, 45, 219, 143, 145, 170, 124, 137, 118, 253, 53, 206, 101, 194, 151, 227, 79, 173, 174, 164, 29, 136, 36, 120, 244, 46, 41, 201, 34, 248, 53, 131, 159, 207, 83, 180, 171, 180, 48, 37, 239, 171, 189, 214, 47, 133, 218, 173, 230, 8, 239, 48, 181, 79, 64, 135, 181, 62, 36, 198, 199, 66, 88, 161, 141, 211, 163, 149, 18, 111, 232, 240, 201, 19, 112, 106, 227, 108, 191, 3, 28, 212, 253, 73, 192, 40, 97, 161, 165, 219, 194, 45, 164, 186, 241, 110, 235, 150, 26, 50, 119, 181, 101, 132, 117, 218, 240, 185, 222, 22, 184, 165, 191, 85, 173, 144, 96, 242, 230, 193, 155, 120, 103, 210, 10, 103, 12, 12, 244, 45, 253, 252, 35, 10, 201, 161, 166, 125, 108, 10, 117, 62, 240, 149, 169, 100, 55, 27, 59, 185, 209, 69, 17, 143, 40, 95, 90, 97, 22, 98, 116, 21, 200, 91, 52, 223, 51, 194, 158, 92, 161, 216, 115, 143, 34, 44, 76, 22, 173, 213, 59, 208, 123, 130, 248, 254, 138, 238, 231, 233, 178, 228, 31, 37, 41, 125, 144, 168, 65, 193, 120, 170, 29, 186, 219, 111, 5, 139, 115, 100, 188, 28, 162, 175, 198, 147, 60, 140, 161, 84, 171, 130, 80, 111, 216, 33, 232, 47, 189, 195, 228, 160, 14, 122, 218, 222, 13, 119, 60, 179, 211, 153, 115, 252, 90, 140, 54, 99, 89, 89, 118, 24, 154, 190, 230, 37, 61, 160, 53, 154, 208, 77, 227, 32, 3, 251, 234, 76, 234, 64, 69, 253, 225, 124, 112, 92, 245, 207, 91, 118, 213, 255, 193, 17, 225, 13, 170, 194, 54, 228, 46, 109, 11, 17, 91, 137, 167, 66, 234, 197, 221, 143, 42, 114, 131, 86, 242, 81, 226, 254, 189, 91, 12, 47, 38, 128, 21, 124, 18, 213, 89, 163, 185, 232, 167, 80, 1, 40, 226, 47, 206, 74, 239, 241, 137, 121, 140, 70, 58, 85, 95, 215, 50, 190, 31, 196, 119, 55, 251, 126, 234, 243, 156, 150, 88, 25, 181, 209, 176, 210, 162, 59, 105, 123, 233, 211, 143, 50, 196, 117, 147, 1, 232, 219, 20, 54, 10, 199, 128, 186, 44, 43, 110, 159, 119, 63, 68, 163, 48, 195, 47, 20, 174, 224, 159, 44, 194, 161, 145, 222, 86, 248, 48, 53, 107, 163, 209, 4, 174, 241, 141, 101, 99, 96, 118, 136, 195, 185, 171, 47, 113, 193, 94, 64, 49, 153, 12, 213, 36, 1, 161, 199, 2, 239, 222, 19, 146, 250, 133, 251, 126, 248, 208, 164, 90, 35, 204, 161, 238, 153, 133, 222, 38, 159, 44, 246, 21, 70, 29, 98, 22, 37, 161, 76, 49, 255, 137, 206, 107, 203, 247, 159, 132, 179, 143, 243, 44, 133, 253, 183, 197, 85, 165, 93, 206, 211, 129, 244, 57, 236, 215, 212, 39, 11, 49, 92, 183, 44, 182, 207, 134, 40, 49, 248, 90, 232, 221, 205, 59, 250, 63, 88, 120, 64, 165, 97, 7, 255, 27, 120, 232, 101, 89, 111, 100, 184, 247, 196, 11, 65, 115, 16, 63, 127, 245, 114, 201, 97, 72, 166, 200, 0, 245, 112, 206, 164, 85, 31, 102, 128, 71, 117, 172, 39, 234, 134, 226, 113, 104, 7, 105, 179, 39, 109, 8, 39, 142, 249, 14, 95, 253, 182, 228, 84, 98, 109, 14, 134, 10, 233, 235, 158, 95, 43, 53, 182, 72, 222, 81, 87, 106, 133, 247, 198, 26, 148, 184, 222, 140, 81, 98, 217, 159, 94, 160, 100, 180, 197, 241, 129, 57, 90, 27, 84, 25, 250, 114, 101, 156, 9, 142, 97, 33, 74, 165, 186, 14, 120, 111, 137, 85, 67, 170, 195, 53, 225, 78, 30, 12, 103, 23, 59, 111, 18, 145, 211, 102, 157, 184, 108, 143, 245, 130, 7, 60, 45, 42, 32, 176, 172, 248, 123, 3, 169, 251, 41, 221, 57, 122, 53, 18, 229, 171, 33, 176, 118, 212, 81, 242, 140, 171, 110, 73, 216, 199, 75, 240, 110, 102, 73, 147, 99, 207, 79, 7, 61, 237, 144, 204, 150, 138, 178, 68, 240, 229, 227, 75, 76, 33, 38, 140, 192, 191, 236, 213, 189, 156, 209, 166, 133, 182, 152, 86, 206, 58, 227, 206, 181, 231, 105, 75, 123, 7, 30, 120, 13, 244, 194, 144, 38, 43, 25, 60, 237, 110, 104, 85, 26, 117, 214, 214, 222, 60, 152, 25, 230, 82, 182, 19, 220, 241, 22, 198, 217, 223, 78, 209, 219, 212, 181, 138, 180, 125, 109, 167, 155, 20, 64, 107, 244, 199, 167, 255, 40, 199, 231, 40, 81, 161, 182, 130, 118, 138, 120, 254, 170, 210, 15, 127, 194, 97, 36, 30, 235, 122, 102, 117, 122, 5, 176, 207, 64, 142, 36, 226, 33, 248, 23, 153, 153, 3, 36, 146, 53, 172, 160, 86, 136, 18, 238, 37, 176, 166, 178, 206, 252, 107, 117, 228, 21, 85, 18, 120, 149, 103, 168, 226, 48, 174, 26, 95, 60, 96, 87, 56, 38, 77, 252, 55, 39, 244, 227, 232, 149, 189, 107, 181, 31, 21, 200, 196, 129, 83, 106, 77, 105, 157, 166, 43, 237, 218, 217, 157, 138, 151, 130, 202, 213, 163, 245, 133, 138, 216, 224, 199, 184, 5, 242, 33, 109, 164, 0, 192, 179, 34, 40, 88, 220, 80, 247, 144, 106, 246, 50, 241, 206, 195, 161, 225, 232, 87, 150, 133, 206, 238, 230, 221, 21, 40, 53, 77, 249, 47, 219, 172, 56, 205, 165, 128, 123, 89, 172, 175, 0, 26, 26, 181, 110, 65, 237, 45, 179, 53, 96, 179, 116, 186, 28, 220, 95, 18, 180, 112, 38, 112, 239, 47, 165, 55, 24, 193, 115, 202, 170, 219, 116, 156, 225, 210, 22, 102, 116, 155, 190, 32, 102, 121, 235, 16, 222, 161, 138, 75, 178, 43, 11, 50, 33, 181, 140, 103, 187, 14, 192, 224, 126, 154, 233, 34, 206, 174, 207, 218, 220, 149, 166, 33, 111, 241, 35, 238, 186, 175, 128, 125, 78, 29, 201, 161, 151, 100, 49, 109, 85, 241, 252, 56, 158, 3, 110, 227, 149, 154, 37, 236, 211, 62, 18, 190, 202, 244, 91, 131, 148, 76, 189, 217, 8, 114, 26, 247, 193, 73, 162, 36, 208, 80, 210, 77, 58, 0, 19, 144, 220, 218, 246, 13, 190, 143, 197, 16, 158, 242, 242, 65, 130, 212, 203, 25, 182, 225, 88, 74, 219, 207, 54, 119, 141, 125, 167, 87, 45, 109, 198, 45, 77, 25, 81, 213, 182, 118, 208, 66, 200, 76, 114, 64, 102, 188, 26, 6, 70, 74, 253, 161, 194, 179, 201, 140, 166, 130, 68, 1, 255, 87, 175, 98, 216, 109, 104, 203, 231, 192, 83, 70, 212, 139, 196, 81, 30, 180, 194, 150, 200, 25, 111, 66, 46, 194, 134, 162, 95, 101, 224, 254, 79, 254, 185, 132, 41, 125, 169, 214, 22, 230, 255, 62, 125, 140, 26, 182, 103, 239, 138, 211, 175, 51, 30, 152, 167, 149, 138, 84, 200, 143, 78, 146, 173, 245, 132, 35, 82, 145, 4, 128, 62, 253, 170, 178, 194, 86, 16, 4, 251, 63, 184, 22, 205, 207, 36, 231, 76, 23, 63, 245, 177, 245, 32, 27, 75, 170, 131, 43, 52, 229, 203, 36, 25, 225, 238, 83, 232, 95, 106, 5, 174, 231, 29, 131, 230, 142, 114, 191, 44, 198, 87, 234, 81, 90, 134, 153, 155, 250, 15, 82, 40, 8, 120, 29, 158, 242, 215, 128, 36, 144, 138, 73, 69, 36, 11, 52, 35, 66, 183, 2, 222, 10, 250, 164, 41, 120, 110, 255, 177, 161, 146, 127, 249, 235, 33, 148, 44, 217, 231, 221, 139, 96, 245, 106, 139, 180, 104, 7, 99, 151, 200, 6, 128, 70, 52, 85, 200, 23, 252, 232, 233, 62, 168, 167, 30, 108, 159, 160, 194, 141, 84, 132, 210, 82, 227, 115, 132, 26, 10, 232, 237, 87, 59, 245, 209, 48, 66, 133, 181, 131, 166, 165, 191, 142, 189, 67, 222, 39, 226, 214, 186, 161, 246, 181, 77, 201, 152, 142, 86, 219, 193, 189, 228, 170, 1, 172, 11, 138, 163, 186, 222, 95, 85, 219, 64, 129, 246, 9, 209, 135, 71, 69, 2, 61, 74, 39, 53, 102, 210, 72, 102, 146, 159, 35, 88, 195, 117, 95, 82, 118, 184, 105, 136, 81, 15, 181, 89, 221, 229, 31, 215, 185, 103, 132, 89, 106, 179, 94, 125, 193, 104, 56, 146, 165, 151, 225, 108, 221, 213, 210, 45, 86, 52, 19, 153, 118, 228, 99, 140, 90, 91, 47, 210, 87, 140, 48, 58, 76, 67, 197, 108, 18, 163, 225, 55, 173, 36, 50, 113, 177, 114, 26, 193, 178, 52, 197, 237, 218, 176, 17, 225, 194, 197, 78, 243, 23, 188, 40, 215, 231, 255, 222, 138, 71, 9, 48, 134, 28, 53, 155, 105, 70, 80, 163, 56, 56, 40, 233, 112, 12, 171, 55, 203, 158, 63, 154, 235, 250, 140, 8, 7, 92, 123, 175, 205, 14, 68, 45, 141, 168, 234, 134, 105, 161, 151, 255, 209, 72, 66, 100, 190, 190, 102, 247, 84, 194, 228, 125, 134, 185, 86, 151, 165, 199, 152, 50, 164, 146, 61, 185, 61, 249, 161, 189, 193, 72, 120, 222, 230, 90, 222, 3, 64, 181, 237, 2, 214, 254, 123, 14, 83, 216, 126, 142, 131, 237, 245, 115, 153, 134, 200, 182, 177, 144, 95, 144, 10, 69, 75, 117, 74, 152, 153, 187, 181, 58, 246, 84, 142, 71, 108, 204, 174, 209, 29, 195, 5, 103, 147, 155, 117, 174, 40, 219, 192, 202, 23, 61, 59, 252, 255, 7, 38, 182, 215, 159, 67, 215, 248, 39, 166, 74, 238, 42, 131, 130, 45, 109, 194, 104, 243, 90, 159, 195, 186, 251, 97, 230, 194, 156, 148, 1, 22, 172, 174, 243, 231, 182, 17, 2, 29, 111, 240, 187, 109, 127, 77, 237, 99, 98, 200, 186, 42, 192, 78, 56, 146, 199, 81, 220, 46, 195, 143, 71, 18, 158, 243, 31, 249, 220, 97, 149, 230, 136, 17, 215, 224, 1, 171, 172, 152, 44, 27, 204, 60, 190, 147, 227, 13, 253, 13, 250, 193, 189, 90, 5, 226, 242, 54, 249, 93, 67, 40, 141, 130, 118, 162, 127, 149, 215, 190, 36, 9, 63, 130, 254, 87, 19, 71, 48, 146, 102, 27, 207, 220, 169, 43, 49, 163, 168, 104, 83, 79, 12, 188, 71, 46, 226, 64, 181, 126, 36, 23, 164, 49, 168, 45, 250, 204, 255, 228, 65, 250, 191, 159, 178, 167, 39, 172, 144, 235, 148, 155, 68, 75, 157, 16, 61, 67, 41, 56, 148, 92, 131, 80, 94, 208, 226, 25, 178, 206, 53, 178, 88, 164, 151, 152, 26, 244, 195, 93, 46, 105, 96, 107, 187, 226, 45, 95, 152, 78, 222, 239, 195, 249, 68, 19, 168, 87, 119, 61, 176, 77, 64, 23, 238, 209, 220, 147, 125, 142, 185, 96, 34, 226, 73, 102, 138, 239, 3, 155, 131, 179, 51, 126, 18, 115, 52, 229, 57, 39, 135, 91, 194, 39, 246, 9, 63, 18, 127, 77, 69, 115, 21, 34, 215, 17, 191, 84, 70, 50, 61, 51, 74, 29, 147, 13, 138, 41, 143, 208, 160, 84, 17, 145, 137, 51, 149, 171, 78, 231, 197, 59, 16, 64, 79, 94, 135, 247, 24, 212, 95, 84, 74, 8, 134, 167, 250, 95, 208, 143, 191, 157, 19, 247, 206, 110, 99, 220, 46, 26, 126, 213, 51, 201, 68, 164, 110, 202, 247, 2, 235, 50, 51, 232, 197, 35, 146, 47, 98, 68, 134, 207, 8, 230, 19, 139, 91, 114, 246, 91, 143, 178, 249, 180, 75, 86, 162, 123, 2, 158, 175, 138, 217, 75, 15, 118, 235, 161, 156, 204, 208, 173, 39, 194, 107, 144, 91, 6, 17, 198, 201, 53, 157, 173, 68, 30, 194, 115, 15, 204, 233, 24, 227, 197, 167, 207, 169, 143, 96, 193, 198, 169, 109, 21, 107, 164, 218, 60, 178, 189, 17, 187, 1, 91, 119, 26, 200, 150, 139, 10, 196, 186, 18, 126, 9, 45, 230, 61, 235, 137, 95, 13, 65, 227, 22, 172, 136, 253, 179, 62, 89, 192, 94, 214, 44, 170, 9, 91, 119, 99, 242, 29, 162, 56, 54, 166, 107, 111, 88, 59, 30, 183, 40, 46, 148, 72, 106, 67, 20, 50, 194, 62, 21, 82, 230, 118, 213, 37, 63, 202, 190, 214, 132, 241, 70, 112, 34, 68, 210, 205, 195, 152, 248, 53, 213, 22], [85, 11, 211, 150, 153, 118, 238, 157, 241, 227, 84, 129, 184, 101, 129, 70, 72, 195, 144, 13, 169, 78, 189, 182, 27, 145, 65, 50, 172, 69, 2, 142, 177, 154, 78, 8, 52, 82, 35, 53, 247, 125, 38, 220, 91, 239, 36, 228, 86, 181, 24, 61, 51, 9, 207, 123, 7, 160, 43, 106], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [9, [0, 238, 29, 149, 233, 49, 68, 217, 240, 164, 63, 71, 115, 31, 93, 229, 212, 74, 194, 208, 55, 168, 195, 126, 177, 162, 176, 25, 68, 36, 188, 77, 224, 63, 2, 176, 54], [10, 214, 244, 176, 205, 112, 233, 119, 189, 112, 189, 163, 0, 85, 202, 185, 233, 93, 141, 87, 36, 89, 200, 124, 152, 195, 213, 198, 159, 242, 188, 106, 68, 3, 187, 226, 125, 15, 210, 237, 241, 185, 125, 229, 148, 238, 204, 162, 13, 201, 47, 24, 50, 89, 79, 77, 216, 27, 241, 105, 143, 93, 149, 162, 110, 97, 35, 187, 25, 208, 153, 118, 64, 198, 253, 220, 52, 192, 140, 70, 227, 35, 178, 178, 97, 45, 67, 3], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [9, [94, 117, 198, 217, 1, 125, 120, 200, 213, 83, 241, 123, 134, 178, 226, 242, 121, 234, 228, 24, 25, 47, 237, 177, 134, 23, 154, 227, 96, 241, 24, 207, 199, 65, 205, 115, 200, 37], [142, 166, 200, 213, 57, 42, 43, 251, 171, 19, 178, 99, 242, 88, 179, 92, 125, 109, 179, 33, 207, 75, 227, 149, 208, 225, 89, 102, 156, 72, 153, 108, 223, 48, 58, 87, 110, 7, 82, 71, 157, 210, 95, 189, 129, 234, 167, 95, 147, 125], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [9, [51, 108, 211, 234, 230, 164, 116, 54, 169, 84, 53, 40, 41, 255, 97, 232, 2, 72, 240, 89, 174, 167, 238, 210, 19, 65, 160, 167, 81, 97, 248, 163, 38, 91, 41, 61, 136, 244, 100, 183, 27, 227, 247, 162, 207, 177, 202, 199, 19, 54, 108], [55, 250, 194, 70, 106, 99, 52, 33, 52, 208, 190, 202, 2, 175, 25, 186, 193, 76, 181, 254, 8, 244, 206, 128, 115, 123, 144, 33, 112, 208, 254, 122, 0, 18, 196, 144, 199, 232], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [9, [186, 194, 64, 252, 90, 226, 216, 252, 53, 84, 182, 251, 132, 169, 132, 154, 193, 94, 113, 222, 244, 58, 120, 204, 6, 1, 169, 79, 155, 79, 174, 228, 213, 201, 172, 92, 26, 128, 87], [104, 174, 53, 132, 192, 128, 69, 113, 61, 228, 182, 202, 54, 145, 236, 241, 145, 37, 116, 151, 135, 225, 170, 237, 245, 18, 210, 18, 119, 227, 196, 164, 234, 139, 105, 169, 242, 176, 84, 186, 166, 151, 37, 86, 61, 98, 213, 128, 116, 178, 92, 89, 0, 88, 217, 24, 52, 122, 105, 236, 139, 198, 111, 35, 94, 138], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [9, [28, 20, 47, 182, 228, 119, 74, 97, 24, 201, 47, 255, 49, 220, 133, 247, 155, 48, 245, 19, 88, 150, 123, 72, 66, 19, 156, 101, 121, 205, 144, 78, 41, 198, 246, 119, 189, 73, 59, 162, 218, 184, 58, 57, 130, 21], [80, 155, 122, 93, 227, 218, 217, 57, 152, 177, 155, 93, 182, 72, 177, 43, 124, 47, 185, 188, 112, 45, 126, 146, 167, 214, 1, 93, 55], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [9, [253, 85, 118, 155, 236, 59, 101, 182, 30, 102, 59, 162, 141, 126, 68, 100, 50, 149, 139, 162, 201, 224, 3, 240, 115, 230, 118, 100, 137, 237, 254, 93, 37, 28, 155, 50, 66, 156, 181, 192, 61, 9, 210, 171, 249], [242, 173, 253, 214, 191, 203, 206, 119, 115, 103, 55, 128, 170, 245, 216, 232, 245, 71, 192, 163, 215, 182, 240, 115, 155, 45, 122, 13, 29, 215, 152, 33, 244, 144, 181, 133, 36, 242, 187, 51, 8], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [9, [178, 224, 212, 1, 88, 168, 76, 20, 144, 64, 190, 98, 96, 82, 126, 28, 243, 74, 216, 22, 142, 59, 226, 161, 25, 101, 136, 176, 200, 9, 154, 245, 159, 180, 246, 213, 114, 194], [0, 46, 99, 45, 137, 50, 110, 152, 51, 184, 103, 122, 56, 151, 120, 110, 139, 195, 152, 163, 77, 241, 171, 44, 124, 157, 245, 207, 245, 220, 22, 230], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [9, [90, 159, 47, 203, 120, 158, 198, 242, 5, 55, 155, 77, 1, 167, 143, 100, 15, 35, 44, 215, 195, 246, 184, 78, 107, 148, 220, 58, 133, 245, 247, 171, 20, 250, 49, 1, 27, 172, 19], [238, 35, 115, 87, 148, 149, 240, 42, 83, 243, 115, 123, 65, 150, 157, 23, 151, 3, 159, 56, 69, 184, 199, 15, 153, 46, 246, 122, 27, 99, 32, 10, 75, 41, 94, 6, 88, 106, 8, 174, 245, 130, 114, 14, 251, 147, 128, 250, 196, 85, 138, 32, 122, 198, 23, 65, 228], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [9, [125, 201, 59, 134, 156, 61, 148, 133, 67, 221, 7, 86, 101, 16, 41, 122, 192, 163, 107, 253, 211, 55, 85, 224, 143, 137, 178, 149, 109, 197, 151, 202, 191, 41, 141, 251, 81, 9, 1, 221, 143, 120, 215, 194, 199, 111, 221, 97, 71, 81, 233, 220], [80, 155, 122, 93, 227, 218, 217, 57, 152, 177, 155, 93, 182, 72, 177, 43, 124, 47, 185, 188, 112, 45, 126, 146, 167, 214, 1, 93, 55], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [9, [245, 199, 160, 233, 210, 168, 181, 253, 226, 69, 15, 138, 136, 104, 6, 77, 151, 71, 108, 20, 212, 64, 196, 102, 44, 187, 243, 216, 169, 16, 184, 62, 27, 63, 113, 84, 71, 187, 218, 195, 148, 248], [62, 215, 62, 205, 173, 59, 11, 204, 228, 19, 69, 161, 151, 172, 159, 59, 78, 245, 44, 165, 152, 115, 158, 195, 182, 86, 207, 85, 239, 161, 112, 164, 8], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [9, [190, 33, 89, 137, 119, 89, 217, 210, 187, 225, 223, 32, 26, 137, 59, 240, 64, 31, 110, 129, 57, 61, 114, 135, 40, 15, 29, 15, 181, 220, 140, 147, 158, 187, 125, 59, 147, 25, 221, 118, 250, 190, 142, 186, 180], [142, 166, 200, 213, 57, 42, 43, 251, 171, 19, 178, 99, 242, 88, 179, 92, 125, 109, 179, 33, 207, 75, 227, 149, 208, 225, 89, 102, 156, 72, 153, 108, 223, 48, 58, 87, 110, 7, 82, 71, 157, 210, 95, 189, 129, 234, 167, 95, 147, 125], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [9, [190, 129, 71, 195, 120, 28, 44, 229, 116, 147, 173, 83, 241, 12, 122, 67, 133, 236, 223, 230, 245, 49, 240, 159, 213, 73, 111, 212, 187, 225, 137, 159, 253, 117, 49, 242, 248, 137, 213, 129, 143, 255, 151, 209, 48, 242, 7, 212, 132, 145, 29], [45, 7, 137, 240, 55, 162, 235, 86, 80, 81, 93, 31, 32, 113, 98, 55, 76, 72, 197, 244, 141, 170, 208, 155, 96, 177, 203, 57, 208, 134, 193, 105, 5, 174, 232, 12, 14, 39, 237, 237, 199, 192, 9, 189, 87, 174, 7, 13, 172, 147, 162, 201], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [9, [233, 181, 69, 74, 221, 229, 191, 8, 69, 130, 82, 155, 167, 87, 247, 158, 114, 33, 14, 90, 182, 225, 195, 168, 87, 234, 100, 9, 84, 21, 198, 49, 194, 38, 248, 113, 237, 131, 107, 212, 231, 202, 216, 226, 114, 220, 44, 24, 135, 10, 175, 150], [80, 155, 122, 93, 227, 218, 217, 57, 152, 177, 155, 93, 182, 72, 177, 43, 124, 47, 185, 188, 112, 45, 126, 146, 167, 214, 1, 93, 55], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 110, err , args: (b'PMQ',)
_indy_loop_callback: >>> command_handle: 110, err , args: (b'PMQ',)
_indy_loop_callback: Function returned b'PMQ'
_indy_loop_callback <<<
prover_store_credential: <<< res: 'PMQ'
prover_get_credential: >>> wallet_handle: 3, cred_id: 'PMQ'
prover_get_credential: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99ef83e58>
do_call: >>> name: indy_prover_get_credential, args: (c_int(3), c_char_p(140572651893896), <CFunctionType object at 0x7fd99ef83e58>)
do_call: Function indy_prover_get_credential returned err: 0
do_call: <<< <Future pending>
_indy_callback: <<<
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[77, 70, 54, 104, 111, 106, 101, 67, 88, 85, 88, 116, 55, 116, 82, 119, 43, 97, 109, 98, 48, 120, 101, 111, 106, 119, 65, 113, 120, 107, 76, 57, 109, 108, 78, 109, 119, 110, 78, 52, 117, 84, 67, 76, 77, 90, 120, 121, 76, 88, 104, 71, 101, 48, 111, 109, 57, 79, 85, 61], [49, 68, 119, 108, 105, 113, 85, 101, 88, 105, 69, 75, 50, 115, 102, 53, 104, 108, 87, 97, 90, 79, 104, 113, 109, 88, 97, 54, 116, 113, 75, 69, 98, 67, 121, 76, 56, 68, 79, 50, 67, 65, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 111, err , args: (b'{"referent":"PMQ","attrs":{"University":"Edinburgh Medical School","Date Issued":"2021-05-17","Name":"Will Abramson"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null}',)
_indy_loop_callback: >>> command_handle: 111, err , args: (b'{"referent":"PMQ","attrs":{"University":"Edinburgh Medical School","Date Issued":"2021-05-17","Name":"Will Abramson"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null}',)
_indy_loop_callback: Function returned b'{"referent":"PMQ","attrs":{"University":"Edinburgh Medical School","Date Issued":"2021-05-17","Name":"Will Abramson"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null}'
_indy_loop_callback <<<
prover_get_credential: <<< res: '{"referent":"PMQ","attrs":{"University":"Edinburgh Medical School","Date Issued":"2021-05-17","Name":"Will Abramson"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null}'
update_wallet_record_value: >>> wallet_handle: 3, type_: 'credential_exchange_v10', id: '71bf4548-eca4-4e17-9234-f2a75f0a41ed', value: '{"thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "created_at": "2021-05-17 12:41:32.182428Z", "updated_at": "2021-05-17 12:41:56.935555Z", "connection_id": "f56b18ea-92e1-4f6d-a094-80da3fad398d", "credential_proposal_dict": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential", "@id": "11b76349-c461-401e-8668-d198a86f1988", "credential_proposal": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview", "attributes": [{"name": "Name", "value": "Will Abramson"}, {"name": "University", "value": "Edinburgh Medical School"}, {"name": "Date Issued", "value": "2021-05-17"}]}, "comment": "create automated credential exchange", "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default"}, "credential_offer_dict": null, "credential_offer": {"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "key_correctness_proof": {"c": "107747385423523632115836196578250990474250248043120793044857578887670452863909", "xz_cap": "1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694", "xr_cap": [["name", "2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993"], ["university", "405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652"], ["dateissued", "2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451"], ["master_secret", "1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202"]]}, "nonce": "598069920933476898638215"}, "credential_request": {"prover_did": "Ss9L55FVLDVAE9wH9QUaLm", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "blinded_ms": {"u": "9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526", "ur": null, "hidden_attributes": ["master_secret"], "committed_attributes": {}}, "blinded_ms_correctness_proof": {"c": "8734654926560185522422668980289494278226532874472645869964441855250278027234", "v_dash_cap": "325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385", "m_caps": {"master_secret": "21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167"}, "r_caps": {}}, "nonce": "959712576749564225650409"}, "credential_request_metadata": {"master_secret_blinding_data": {"v_prime": "37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045", "vr_prime": null}, "nonce": "959712576749564225650409", "master_secret_name": "Medic"}, "error_msg": null, "auto_offer": false, "auto_issue": false, "auto_remove": false, "raw_credential": {"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "rev_reg_id": null, "values": {"Date Issued": {"raw": "2021-05-17", "encoded": "31928709163600735441101476658814216885388252189838058973070792022801591336579"}, "Name": {"raw": "Will Abramson", "encoded": "65005548905037764764502350053825769914874082648761230458670796241392891659611"}, "University": {"raw": "Edinburgh Medical School", "encoded": "57963125648994666300875361621729313351158154740138173103415020334594043694317"}}, "signature": {"p_credential": {"m_2": "64614027959237148406577876643582193654195798199659663559565324074474110876426", "a": "28196659349828833841806568922500331419943756793472592515246070472169183103554944278198153816574274149720987095111486068930168219714920197743796206530561438612474718498319743285076562596169213545429930609441229808810198314595598202600904377879617269619009997889921365729164321988246425760507962013213179356489165886495879937830757860813550488653092270182316591558107377505094005438662414556058268151394311488038034371945050944831570625995413228293415919202055974276990013994102772566137746322043107147965689577794487771425424609270637527334712240581940337439348801155923456105656468328904263302114118526537501007139669", "e": "259344723055062059907025491480697571938277889515152306249728583105665800713306759149981690559193987143012367913206299323899696942213235956742930046031686561229403844345113618420029", "v": "6354026336388301401986521152890972249709618813964245602037338330698734314130828006765601555201728676114393573732602693886965849392107855630297351891640801269990034659747926053185070098201542430508515708889270830280358222874522865192378335821753487954245491002769053491204208466619533185143527002699313031827277660717047972233120119465702841112954798655072211467889917359709980309161102427562535741080061045113185079205854056196403185426803056342351523484956234191104274583987854734646184176897408347172222790577708010964678101842400904781237539895339702598771916345745167905791870029121917745408251064199177212964106585715827085668399314453904306461632518873615305262329276997644593556745530080607631408226505403903006930638982430993587434659039373409312070077257810296424683361389295160932899519710429495996593499727601"}, "r_credential": null}, "signature_correctness_proof": {"se": "18296863927500172804293107843176657430120315953488730246315016673748764435345492977644678659634633639966966144817195024079688169206411755462988529782005065401235361183325984987096857804776471818376393329673081462427754929631287497458043150955506212371673105698807070796547668375707556817833298394290228188197143572788135782368887029154633552036967329846441145459760121055008867725749238807541631523967403207207491302781895427812338735115517606944815148175648734522485436888519687819286037082623090058216667028537389082220924000256488191201576310849948310802457826705179331504985933268733209659495364083120527893222046", "c": "102783256414115773702948382631747799094895100492140671927547017198803963895972"}, "rev_reg": null, "witness": null}, "credential": {"referent": "PMQ", "attrs": {"University": "Edinburgh Medical School", "Date Issued": "2021-05-17", "Name": "Will Abramson"}, "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "rev_reg_id": null, "cred_rev_id": null}, "parent_thread_id": null, "initiator": "external", "credential_definition_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "credential_id": "PMQ", "revoc_reg_id": null, "revocation_id": null, "role": "holder", "state": "credential_acked", "trace": true}'
do_call: >>> name: indy_update_wallet_record_value, args: (c_int(3), c_char_p(140572626286528), c_char_p(140572626303024), c_char_p(94095652750976), <CFunctionType object at 0x7fd99efcf110>)
do_call: Function indy_update_wallet_record_value returned err: 0
do_call: <<< <Future pending>
_indy_callback: <<<
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s4 with parameters: [[151, 223, 243, 214, 200, 53, 172, 59, 224, 74, 64, 75, 80, 187, 248, 212, 239, 140, 46, 200, 137, 170, 7, 15, 13, 225, 222, 195, 112, 180, 254, 210, 177, 95, 45, 218, 18, 155, 161, 196, 191, 209, 130, 154, 160, 63, 158, 0, 56, 222, 124, 254, 66, 20, 5, 63, 134, 134, 135, 5, 50, 130, 231, 236, 231, 95, 110, 127, 186, 210, 5, 95, 47, 205, 79, 54, 207, 213, 162, 102, 55, 220, 246, 49, 25, 39, 120, 29, 254, 13, 17, 33, 42, 252, 102, 74, 235, 226, 112, 58, 136, 114, 121, 50, 247, 49, 52, 201, 177, 72, 11, 233, 87, 123, 193, 232, 87, 45, 179, 119, 189, 183, 145, 220, 53, 183, 118, 176, 183, 91, 199, 188, 45, 150, 217, 237, 244, 163, 102, 250, 39, 95, 171, 157, 50, 35, 65, 165, 35, 224, 31, 228, 189, 107, 187, 48, 99, 30, 143, 154, 47, 129, 150, 9, 236, 204, 61, 142, 244, 86, 19, 86, 252, 59, 63, 180, 247, 143, 201, 242, 103, 13, 132, 255, 211, 178, 23, 20, 23, 140, 226, 190, 157, 84, 232, 106, 120, 39, 51, 139, 15, 124, 1, 45, 28, 55, 71, 50, 155, 149, 115, 2, 153, 99, 211, 188, 95, 121, 247, 10, 78, 0, 162, 214, 97, 5, 27, 38, 127, 143, 207, 23, 45, 171, 3, 164, 230, 222, 196, 8, 103, 229, 39, 231, 214, 50, 10, 28, 1, 211, 51, 197, 153, 154, 92, 70, 49, 237, 17, 121, 169, 0, 85, 97, 176, 58, 213, 64, 36, 126, 248, 131, 185, 85, 247, 160, 9, 37, 13, 181, 160, 98, 16, 118, 249, 163, 167, 33, 79, 52, 165, 73, 64, 137, 139, 233, 5, 47, 238, 16, 58, 121, 242, 211, 119, 85, 225, 4, 208, 171, 17, 38, 193, 154, 71, 51, 232, 117, 227, 123, 86, 160, 47, 216, 117, 183, 47, 117, 44, 33, 200, 97, 14, 114, 222, 119, 200, 194, 60, 23, 122, 67, 33, 116, 137, 224, 229, 207, 130, 205, 178, 196, 168, 193, 122, 214, 145, 187, 118, 251, 68, 173, 239, 150, 227, 194, 155, 227, 228, 19, 149, 164, 0, 76, 122, 69, 43, 127, 94, 149, 43, 16, 122, 57, 47, 50, 214, 65, 88, 118, 241, 93, 131, 154, 174, 98, 54, 247, 201, 194, 89, 87, 217, 182, 173, 62, 213, 131, 66, 61, 56, 159, 167, 68, 160, 121, 65, 249, 51, 149, 29, 89, 227, 179, 183, 157, 190, 77, 53, 250, 252, 3, 18, 134, 192, 87, 27, 34, 161, 249, 119, 209, 223, 176, 152, 233, 227, 82, 39, 159, 64, 109, 171, 139, 96, 248, 53, 244, 232, 123, 139, 130, 127, 148, 251, 23, 1, 214, 126, 73, 248, 173, 187, 125, 130, 158, 50, 112, 217, 68, 86, 39, 143, 230, 110, 181, 94, 187, 32, 34, 95, 117, 4, 124, 26, 15, 149, 251, 247, 165, 203, 76, 217, 179, 208, 195, 75, 48, 149, 24, 36, 20, 13, 18, 64, 139, 7, 155, 16, 241, 199, 69, 130, 244, 246, 67, 120, 237, 15, 183, 254, 39, 151, 210, 19, 143, 30, 49, 214, 31, 94, 38, 142, 189, 111, 119, 233, 76, 200, 73, 99, 7, 96, 210, 75, 80, 109, 42, 83, 32, 135, 32, 210, 75, 163, 12, 177, 157, 131, 105, 173, 171, 209, 41, 215, 212, 171, 251, 143, 101, 80, 119, 231, 86, 253, 166, 6, 61, 62, 96, 122, 115, 237, 40, 240, 9, 25, 151, 77, 223, 184, 181, 40, 32, 227, 82, 41, 158, 242, 183, 182, 112, 67, 87, 200, 114, 129, 105, 11, 239, 201, 13, 222, 227, 196, 57, 54, 127, 191, 94, 43, 149, 97, 181, 151, 216, 145, 216, 234, 180, 214, 70, 186, 65, 42, 52, 85, 125, 246, 29, 28, 236, 245, 4, 221, 50, 179, 155, 123, 75, 155, 83, 156, 148, 144, 196, 7, 6, 40, 55, 5, 250, 107, 209, 236, 159, 247, 199, 13, 197, 90, 57, 185, 20, 106, 221, 33, 31, 228, 136, 153, 9, 170, 216, 191, 76, 80, 71, 88, 239, 247, 236, 202, 146, 77, 190, 199, 177, 148, 64, 251, 155, 232, 33, 55, 121, 233, 41, 239, 56, 24, 254, 122, 59, 253, 17, 162, 152, 167, 184, 149, 149, 108, 220, 233, 35, 141, 143, 11, 49, 137, 132, 22, 158, 194, 200, 26, 46, 155, 66, 49, 68, 243, 218, 72, 68, 245, 109, 121, 213, 145, 91, 30, 54, 121, 175, 228, 79, 146, 242, 103, 169, 78, 127, 1, 240, 71, 108, 66, 233, 228, 137, 195, 180, 60, 164, 54, 196, 82, 14, 201, 129, 82, 250, 54, 89, 48, 98, 127, 99, 121, 39, 155, 250, 168, 236, 193, 60, 97, 254, 211, 9, 191, 172, 69, 79, 248, 247, 58, 91, 22, 138, 168, 205, 76, 239, 106, 43, 234, 27, 38, 121, 10, 10, 72, 69, 248, 75, 14, 17, 49, 161, 239, 175, 244, 49, 243, 45, 199, 28, 254, 184, 164, 127, 42, 247, 67, 131, 141, 216, 103, 207, 223, 138, 231, 34, 96, 0, 146, 92, 198, 193, 81, 78, 24, 58, 53, 161, 224, 162, 174, 73, 18, 222, 84, 197, 122, 92, 97, 88, 99, 59, 162, 225, 201, 206, 62, 194, 29, 233, 109, 250, 155, 85, 133, 30, 35, 2, 154, 194, 148, 200, 125, 86, 20, 229, 124, 42, 202, 189, 222, 237, 32, 218, 112, 142, 39, 133, 196, 254, 217, 183, 154, 63, 213, 150, 22, 169, 190, 124, 13, 79, 150, 250, 75, 157, 74, 115, 214, 100, 206, 113, 8, 197, 2, 234, 34, 243, 216, 77, 3, 86, 69, 3, 99, 94, 163, 248, 27, 39, 150, 27, 241, 91, 250, 190, 67, 67, 200, 91, 86, 152, 144, 223, 45, 82, 39, 251, 59, 195, 164, 177, 199, 155, 245, 21, 180, 182, 31, 152, 130, 100, 31, 143, 141, 219, 137, 50, 29, 183, 7, 60, 78, 159, 143, 39, 132, 20, 204, 175, 216, 20, 224, 228, 120, 49, 69, 140, 58, 192, 150, 24, 150, 67, 154, 101, 42, 145, 74, 175, 160, 96, 28, 204, 76, 200, 76, 21, 63, 48, 173, 53, 224, 181, 151, 247, 63, 72, 136, 235, 245, 0, 78, 95, 134, 30, 94, 22, 176, 126, 118, 160, 97, 185, 49, 44, 233, 235, 153, 60, 144, 175, 70, 55, 140, 0, 211, 123, 170, 210, 124, 21, 5, 112, 93, 137, 152, 253, 189, 69, 23, 183, 59, 198, 180, 52, 176, 69, 149, 95, 86, 43, 191, 91, 103, 146, 144, 46, 194, 55, 125, 117, 255, 30, 154, 88, 209, 168, 112, 76, 113, 7, 136, 71, 238, 172, 200, 85, 4, 60, 149, 220, 200, 38, 193, 92, 179, 52, 189, 217, 159, 142, 242, 191, 135, 161, 120, 4, 185, 131, 38, 187, 157, 41, 26, 243, 50, 51, 104, 141, 173, 46, 241, 98, 1, 90, 229, 204, 2, 52, 66, 232, 53, 108, 58, 71, 119, 173, 217, 136, 219, 248, 87, 20, 103, 175, 88, 226, 11, 137, 1, 211, 75, 181, 167, 68, 177, 218, 195, 209, 137, 178, 34, 156, 159, 85, 65, 249, 164, 76, 231, 84, 4, 244, 55, 139, 233, 220, 51, 20, 161, 252, 59, 199, 110, 227, 219, 93, 71, 91, 126, 169, 215, 255, 162, 71, 27, 185, 22, 145, 171, 90, 135, 75, 184, 141, 137, 68, 42, 196, 23, 116, 60, 69, 181, 131, 201, 197, 128, 103, 172, 116, 5, 201, 77, 223, 16, 34, 63, 152, 115, 0, 243, 42, 57, 180, 114, 162, 200, 235, 6, 88, 76, 34, 198, 120, 101, 173, 188, 107, 141, 92, 185, 124, 97, 106, 28, 158, 190, 34, 139, 46, 153, 17, 228, 6, 226, 136, 185, 4, 63, 79, 14, 119, 36, 207, 169, 227, 174, 117, 72, 208, 217, 144, 135, 246, 29, 41, 238, 235, 239, 61, 38, 127, 155, 49, 106, 48, 81, 49, 26, 203, 47, 74, 162, 90, 63, 220, 143, 96, 33, 31, 65, 174, 166, 49, 143, 201, 17, 210, 15, 24, 24, 76, 10, 135, 135, 170, 34, 13, 177, 166, 245, 211, 78, 7, 127, 224, 213, 199, 132, 112, 69, 239, 200, 80, 151, 112, 170, 86, 103, 52, 221, 48, 34, 75, 114, 147, 176, 15, 39, 233, 180, 15, 146, 163, 187, 229, 106, 241, 195, 141, 15, 118, 73, 252, 94, 252, 185, 25, 69, 70, 93, 97, 70, 81, 102, 252, 21, 206, 247, 183, 97, 41, 255, 176, 184, 116, 35, 23, 101, 251, 139, 236, 61, 133, 66, 196, 172, 120, 90, 17, 67, 143, 233, 20, 252, 189, 185, 161, 134, 202, 23, 117, 43, 196, 237, 177, 187, 151, 158, 195, 222, 134, 13, 2, 75, 31, 142, 146, 246, 184, 92, 193, 235, 197, 139, 185, 62, 12, 158, 238, 180, 235, 189, 241, 112, 27, 8, 254, 23, 205, 87, 190, 97, 86, 155, 66, 121, 159, 198, 58, 238, 75, 135, 123, 211, 151, 162, 9, 173, 30, 221, 197, 131, 181, 43, 238, 197, 88, 77, 48, 199, 214, 179, 246, 136, 171, 157, 50, 151, 152, 99, 7, 207, 180, 187, 82, 15, 26, 209, 221, 128, 95, 211, 12, 22, 145, 152, 228, 191, 247, 26, 193, 143, 151, 246, 189, 197, 72, 198, 142, 252, 169, 64, 189, 195, 221, 171, 93, 126, 73, 50, 208, 103, 79, 189, 31, 162, 7, 1, 179, 12, 239, 87, 72, 120, 102, 43, 49, 35, 181, 254, 95, 20, 9, 184, 56, 173, 159, 72, 33, 245, 64, 89, 178, 64, 173, 147, 132, 142, 191, 251, 29, 211, 104, 250, 59, 178, 198, 185, 179, 180, 186, 229, 97, 246, 23, 11, 64, 90, 1, 252, 13, 88, 76, 247, 240, 79, 67, 109, 211, 68, 20, 15, 228, 107, 2, 208, 33, 166, 1, 125, 189, 222, 176, 51, 197, 234, 4, 222, 194, 152, 105, 198, 189, 193, 61, 198, 125, 152, 166, 194, 234, 155, 60, 206, 128, 82, 38, 80, 231, 70, 57, 81, 205, 212, 215, 76, 117, 127, 165, 43, 78, 125, 225, 12, 51, 95, 41, 238, 202, 174, 115, 86, 123, 13, 246, 162, 126, 2, 38, 75, 6, 76, 86, 91, 65, 29, 71, 2, 202, 122, 10, 207, 155, 232, 216, 189, 236, 142, 190, 55, 115, 234, 49, 255, 41, 228, 224, 52, 176, 168, 193, 87, 33, 164, 65, 180, 145, 195, 23, 30, 81, 94, 63, 194, 70, 135, 44, 189, 232, 29, 57, 161, 84, 151, 99, 218, 171, 98, 23, 183, 181, 186, 150, 111, 219, 238, 10, 167, 108, 10, 142, 214, 244, 197, 155, 9, 157, 29, 177, 45, 221, 39, 99, 95, 139, 142, 152, 215, 55, 250, 176, 116, 14, 143, 126, 87, 233, 163, 131, 97, 25, 40, 120, 65, 200, 137, 63, 157, 253, 27, 67, 171, 148, 0, 169, 141, 228, 206, 221, 181, 91, 252, 119, 234, 197, 88, 195, 185, 113, 152, 14, 200, 124, 185, 100, 1, 250, 66, 233, 252, 36, 77, 191, 201, 198, 38, 61, 41, 135, 7, 218, 204, 57, 157, 79, 161, 220, 151, 146, 140, 183, 91, 70, 143, 122, 216, 14, 197, 95, 12, 178, 11, 196, 186, 246, 173, 62, 242, 81, 125, 251, 164, 26, 45, 217, 241, 185, 19, 211, 168, 55, 186, 177, 240, 131, 48, 30, 22, 157, 69, 99, 244, 218, 52, 62, 237, 122, 174, 27, 204, 112, 2, 173, 183, 201, 106, 228, 136, 62, 230, 103, 189, 217, 181, 178, 75, 204, 222, 78, 141, 168, 34, 220, 62, 80, 56, 68, 124, 50, 130, 218, 201, 150, 149, 235, 204, 63, 114, 130, 133, 141, 50, 220, 45, 78, 149, 56, 71, 43, 55, 166, 242, 17, 218, 17, 214, 137, 167, 9, 195, 170, 115, 137, 49, 53, 249, 51, 211, 153, 184, 133, 40, 194, 234, 251, 168, 18, 97, 83, 74, 162, 201, 206, 77, 121, 204, 137, 129, 16, 221, 85, 153, 228, 171, 228, 200, 220, 116, 53, 91, 135, 207, 100, 175, 91, 155, 168, 110, 173, 89, 116, 117, 92, 114, 246, 91, 235, 31, 156, 93, 212, 225, 134, 181, 97, 26, 154, 187, 47, 26, 137, 74, 82, 65, 254, 113, 27, 105, 92, 14, 118, 49, 11, 116, 63, 183, 146, 130, 84, 105, 54, 194, 172, 183, 107, 245, 232, 194, 219, 148, 220, 47, 192, 23, 142, 232, 77, 24, 109, 55, 55, 182, 160, 134, 30, 169, 181, 162, 159, 105, 121, 55, 243, 173, 158, 206, 251, 164, 55, 202, 233, 201, 9, 148, 63, 69, 56, 148, 208, 65, 239, 104, 178, 102, 226, 96, 31, 79, 78, 136, 133, 68, 122, 2, 245, 48, 107, 79, 174, 48, 18, 26, 254, 98, 161, 30, 57, 121, 15, 71, 35, 83, 79, 175, 146, 27, 224, 34, 77, 147, 179, 190, 61, 77, 223, 157, 50, 125, 30, 19, 83, 62, 79, 21, 26, 73, 50, 100, 215, 164, 118, 4, 170, 207, 94, 143, 84, 238, 17, 238, 184, 115, 193, 15, 217, 96, 185, 62, 128, 241, 205, 107, 125, 254, 0, 33, 144, 232, 132, 36, 54, 247, 18, 155, 243, 166, 179, 81, 85, 126, 9, 212, 23, 13, 188, 101, 41, 105, 219, 20, 228, 238, 226, 241, 202, 34, 207, 186, 213, 43, 163, 159, 105, 9, 203, 244, 177, 210, 2, 157, 44, 164, 172, 92, 155, 192, 103, 139, 103, 178, 208, 35, 206, 247, 199, 197, 77, 198, 222, 192, 16, 111, 87, 202, 198, 46, 199, 182, 122, 210, 193, 52, 155, 66, 132, 109, 145, 39, 220, 30, 148, 150, 86, 20, 99, 215, 237, 159, 17, 103, 21, 100, 118, 230, 54, 96, 33, 151, 214, 72, 171, 87, 6, 175, 175, 59, 203, 204, 160, 68, 194, 26, 99, 95, 14, 56, 113, 217, 27, 198, 171, 154, 172, 188, 102, 100, 137, 148, 201, 201, 61, 17, 249, 109, 255, 44, 29, 130, 199, 57, 52, 233, 146, 231, 16, 198, 112, 146, 248, 246, 91, 177, 117, 131, 78, 47, 132, 141, 3, 183, 239, 169, 173, 14, 16, 27, 82, 122, 63, 116, 25, 204, 120, 59, 202, 213, 6, 246, 133, 26, 243, 176, 241, 1, 128, 250, 177, 216, 155, 190, 133, 199, 84, 3, 176, 243, 4, 86, 218, 16, 193, 90, 227, 126, 96, 181, 191, 119, 246, 188, 217, 131, 223, 73, 157, 237, 216, 71, 114, 158, 199, 10, 164, 184, 165, 230, 18, 30, 171, 176, 45, 200, 220, 47, 254, 254, 172, 144, 92, 57, 86, 20, 101, 59, 246, 135, 215, 170, 149, 73, 168, 145, 135, 205, 208, 62, 137, 193, 7, 49, 65, 110, 126, 68, 92, 206, 91, 167, 144, 71, 116, 23, 40, 139, 57, 151, 61, 27, 171, 148, 44, 15, 248, 98, 68, 255, 218, 6, 113, 218, 35, 174, 60, 160, 193, 199, 3, 144, 50, 48, 138, 86, 248, 170, 39, 112, 177, 160, 176, 186, 31, 158, 150, 8, 151, 66, 10, 26, 37, 23, 91, 92, 93, 110, 47, 117, 77, 240, 142, 214, 193, 65, 16, 81, 140, 78, 201, 119, 162, 168, 200, 60, 31, 143, 184, 244, 253, 99, 177, 252, 247, 21, 225, 100, 172, 133, 111, 240, 50, 90, 173, 42, 85, 78, 17, 65, 199, 244, 92, 25, 57, 234, 4, 16, 204, 173, 150, 246, 232, 105, 107, 19, 26, 148, 144, 205, 77, 183, 11, 132, 193, 181, 75, 22, 247, 236, 166, 153, 239, 242, 185, 59, 241, 158, 139, 57, 160, 79, 16, 242, 143, 80, 232, 234, 204, 76, 7, 141, 64, 75, 229, 45, 118, 172, 72, 155, 213, 11, 17, 105, 165, 246, 153, 64, 172, 144, 33, 244, 181, 96, 209, 91, 255, 98, 254, 81, 196, 254, 144, 60, 188, 191, 102, 176, 99, 81, 91, 77, 121, 163, 70, 217, 123, 15, 253, 14, 50, 221, 89, 21, 14, 26, 98, 201, 235, 251, 7, 238, 104, 78, 238, 176, 122, 29, 76, 220, 93, 44, 216, 78, 24, 142, 58, 233, 37, 94, 222, 137, 90, 70, 124, 222, 169, 101, 82, 210, 196, 139, 104, 177, 246, 57, 225, 132, 16, 28, 114, 57, 56, 218, 234, 22, 248, 212, 175, 210, 246, 171, 160, 92, 203, 73, 57, 247, 180, 104, 255, 139, 10, 68, 14, 245, 128, 95, 81, 31, 168, 245, 48, 193, 215, 28, 43, 46, 18, 204, 230, 164, 6, 52, 222, 127, 32, 161, 184, 143, 122, 27, 202, 54, 152, 63, 53, 62, 91, 239, 145, 174, 6, 120, 78, 52, 125, 169, 238, 248, 64, 51, 131, 188, 145, 157, 71, 29, 128, 188, 161, 190, 79, 235, 177, 146, 64, 145, 93, 125, 181, 208, 8, 201, 174, 53, 14, 239, 70, 18, 129, 60, 102, 83, 38, 38, 8, 110, 129, 205, 103, 238, 120, 184, 229, 171, 105, 38, 251, 198, 50, 219, 104, 165, 188, 57, 55, 232, 104, 250, 32, 14, 61, 107, 205, 146, 83, 87, 107, 163, 27, 238, 255, 170, 234, 17, 106, 250, 225, 216, 27, 252, 139, 206, 165, 130, 209, 38, 21, 16, 45, 121, 153, 73, 160, 110, 207, 138, 63, 125, 75, 33, 146, 234, 9, 149, 151, 18, 175, 72, 113, 4, 219, 53, 47, 234, 40, 186, 152, 48, 74, 4, 160, 45, 173, 188, 101, 23, 108, 145, 18, 111, 193, 222, 71, 210, 41, 170, 213, 168, 160, 41, 106, 96, 100, 188, 210, 117, 136, 94, 3, 191, 114, 129, 118, 219, 54, 188, 79, 134, 119, 117, 44, 44, 80, 4, 61, 34, 225, 176, 41, 81, 230, 236, 73, 120, 178, 104, 171, 239, 172, 223, 56, 145, 137, 219, 252, 50, 37, 179, 61, 140, 139, 55, 141, 237, 145, 171, 27, 142, 100, 244, 156, 61, 131, 54, 91, 85, 81, 161, 111, 207, 177, 169, 229, 71, 48, 126, 225, 92, 180, 192, 234, 112, 23, 172, 50, 249, 202, 94, 153, 123, 76, 110, 193, 5, 232, 135, 118, 131, 123, 38, 206, 158, 245, 92, 123, 10, 25, 174, 128, 60, 203, 225, 190, 175, 243, 137, 103, 91, 131, 217, 107, 166, 118, 150, 1, 158, 133, 133, 113, 155, 234, 115, 44, 202, 209, 107, 126, 65, 60, 72, 170, 65, 144, 157, 35, 78, 137, 42, 48, 96, 215, 7, 195, 44, 51, 117, 210, 147, 209, 174, 216, 217, 156, 110, 221, 124, 193, 148, 140, 215, 0, 102, 18, 160, 170, 30, 179, 117, 41, 102, 99, 194, 14, 196, 81, 67, 199, 136, 98, 211, 214, 246, 130, 167, 74, 27, 81, 180, 137, 233, 133, 219, 112, 172, 11, 187, 4, 92, 57, 197, 218, 246, 46, 61, 5, 26, 186, 194, 145, 208, 148, 40, 209, 168, 145, 178, 171, 87, 200, 37, 235, 170, 41, 47, 1, 144, 131, 147, 12, 52, 224, 122, 16, 45, 23, 31, 183, 5, 39, 75, 214, 54, 170, 28, 110, 237, 160, 197, 228, 48, 150, 22, 189, 167, 99, 131, 233, 148, 14, 223, 200, 90, 34, 176, 213, 21, 252, 7, 36, 55, 77, 149, 221, 218, 104, 144, 67, 170, 223, 196, 197, 51, 118, 207, 114, 20, 229, 254, 1, 185, 34, 241, 53, 76, 178, 29, 79, 11, 27, 1, 224, 105, 193, 18, 248, 66, 50, 106, 220, 214, 19, 205, 248, 160, 192, 172, 98, 96, 61, 249, 77, 30, 88, 98, 188, 88, 67, 237, 170, 32, 85, 192, 157, 119, 109, 148, 212, 224, 243, 135, 190, 52, 49, 51, 15, 230, 102, 215, 128, 91, 70, 51, 165, 85, 248, 47, 57, 51, 56, 224, 173, 167, 224, 139, 225, 176, 65, 182, 12, 127, 24, 45, 2, 214, 156, 35, 167, 117, 217, 148, 167, 207, 20, 132, 213, 54, 116, 91, 225, 221, 37, 116, 244, 48, 157, 150, 245, 161, 205, 103, 232, 25, 231, 108, 238, 211, 56, 68, 229, 103, 71, 236, 85, 164, 76, 39, 20, 90, 93, 216, 198, 240, 152, 66, 204, 38, 67, 82, 212, 240, 135, 25, 18, 78, 111, 197, 158, 212, 195, 41, 239, 209, 77, 140, 234, 66, 157, 121, 110, 209, 56, 27, 41, 21, 166, 187, 254, 202, 17, 22, 116, 230, 148, 244, 83, 106, 160, 67, 101, 23, 229, 136, 19, 226, 75, 135, 12, 27, 72, 106, 185, 226, 14, 231, 157, 196, 206, 53, 233, 233, 255, 49, 100, 126, 105, 195, 245, 68, 192, 81, 52, 96, 165, 36, 26, 123, 243, 11, 17, 60, 106, 51, 94, 239, 244, 105, 214, 1, 99, 89, 76, 71, 118, 158, 91, 16, 209, 173, 76, 50, 198, 179, 182, 241, 75, 184, 40, 82, 11, 137, 215, 136, 197, 7, 94, 73, 235, 60, 129, 252, 111, 102, 84, 88, 236, 241, 23, 129, 39, 99, 237, 178, 11, 206, 93, 192, 206, 164, 177, 246, 242, 192, 168, 214, 174, 12, 164, 57, 101, 131, 177, 144, 130, 126, 118, 87, 115, 70, 141, 14, 239, 6, 138, 159, 155, 88, 187, 77, 113, 22, 78, 43, 46, 106, 90, 220, 16, 0, 254, 188, 139, 229, 215, 135, 225, 13, 190, 69, 247, 79, 194, 20, 161, 125, 136, 142, 91, 45, 87, 161, 153, 169, 73, 103, 48, 72, 137, 93, 15, 163, 70, 36, 210, 41, 102, 132, 206, 226, 145, 250, 208, 63, 26, 224, 70, 219, 187, 220, 190, 244, 110, 35, 244, 254, 171, 137, 226, 52, 167, 10, 34, 173, 150, 141, 177, 151, 123, 64, 127, 21, 147, 79, 131, 178, 20, 132, 140, 180, 83, 50, 65, 106, 158, 142, 135, 186, 9, 117, 120, 242, 8, 65, 22, 0, 186, 191, 237, 189, 49, 94, 86, 34, 190, 199, 153, 117, 61, 108, 102, 141, 102, 157, 93, 189, 248, 164, 200, 67, 125, 138, 131, 158, 119, 145, 102, 130, 35, 105, 93, 21, 74, 207, 243, 99, 103, 206, 24, 181, 9, 38, 236, 244, 81, 208, 238, 175, 158, 29, 172, 74, 35, 5, 206, 65, 101, 8, 226, 226, 19, 244, 26, 154, 115, 159, 109, 178, 151, 235, 4, 21, 136, 190, 199, 13, 240, 134, 139, 23, 182, 157, 255, 14, 119, 117, 167, 102, 242, 247, 234, 137, 3, 174, 109, 14, 159, 75, 51, 165, 159, 220, 113, 25, 106, 247, 72, 215, 166, 190, 119, 253, 252, 1, 42, 5, 29, 23, 226, 213, 161, 185, 120, 204, 216, 192, 36, 150, 72, 174, 23, 223, 143, 218, 126, 117, 45, 51, 177, 105, 156, 37, 91, 10, 114, 158, 26, 248, 38, 231, 14, 203, 168, 132, 97, 174, 99, 19, 43, 15, 218, 133, 153, 105, 192, 139, 93, 243, 105, 204, 55, 110, 14, 193, 71, 241, 26, 221, 50, 102, 94, 153, 180, 58, 225, 143, 97, 110, 90, 176, 117, 133, 86, 53, 88, 122, 48, 7, 8, 166, 98, 209, 160, 72, 58, 204, 199, 191, 26, 126, 168, 40, 103, 205, 216, 94, 30, 223, 87, 131, 89, 54, 254, 63, 222, 49, 124, 209, 56, 86, 87, 252, 14, 226, 96, 83, 228, 250, 212, 59, 183, 5, 73, 7, 137, 21, 196, 145, 214, 129, 103, 181, 207, 255, 147, 132, 115, 157, 7, 181, 13, 141, 103, 26, 27, 177, 121, 247, 69, 20, 173, 87, 222, 138, 80, 223, 137, 202, 182, 81, 213, 199, 161, 31, 215, 108, 93, 120, 189, 172, 137, 252, 23, 145, 18, 92, 40, 128, 143, 57, 244, 61, 167, 105, 245, 60, 248, 146, 191, 203, 164, 91, 41, 183, 172, 110, 164, 59, 72, 167, 163, 117, 182, 137, 45, 13, 187, 208, 57, 100, 251, 115, 81, 90, 112, 15, 41, 221, 128, 86, 86, 161, 23, 142, 183, 82, 215, 85, 41, 16, 34, 187, 133, 222, 120, 89, 109, 53, 52, 107, 88, 18, 135, 202, 121, 207, 179, 185, 99, 250, 160, 147, 203, 225, 157, 105, 61, 159, 207, 84, 128, 154, 93, 219, 82, 56, 6, 3, 105, 244, 155, 70, 16, 206, 66, 94, 42, 215, 176, 21, 220, 186, 21, 27, 253, 241, 53, 117, 96, 148, 249, 195, 118, 169, 153, 55, 151, 143, 87, 252, 173, 117, 118, 160, 97, 94, 119, 252, 97, 45, 143, 28, 192, 125, 98, 144, 143, 24, 9, 107, 26, 155, 210, 83, 130, 62, 199, 53, 164, 70, 89, 23, 234, 24, 175, 84, 54, 114, 63, 87, 156, 115, 26, 26, 105, 223, 190, 145, 139, 110, 89, 184, 43, 121, 239, 8, 206, 73, 89, 56, 126, 132, 250, 78, 49, 187, 24, 234, 129, 63, 78, 241, 165, 237, 3, 184, 223, 206, 250, 87, 235, 137, 179, 122, 93, 138, 112, 201, 41, 178, 232, 86, 134, 165, 47, 90, 156, 64, 61, 146, 108, 56, 128, 165, 175, 176, 244, 55, 125, 98, 3, 8, 143, 12, 253, 159, 84, 237, 151, 145, 135, 114, 66, 242, 246, 189, 48, 217, 141, 201, 162, 133, 57, 93, 22, 25, 125, 44, 59, 226, 62, 148, 28, 244, 123, 248, 168, 156, 189, 86, 0, 8, 170, 57, 4, 33, 7, 126, 68, 30, 131, 139, 212, 215, 191, 31, 39, 173, 186, 109, 141, 108, 57, 170, 250, 205, 74, 149, 196, 203, 172, 61, 62, 134, 121, 163, 102, 127, 38, 82, 140, 131, 153, 69, 234, 228, 100, 47, 21, 181, 178, 2, 188, 100, 94, 85, 243, 207, 45, 18, 2, 239, 126, 71, 130, 217, 139, 123, 248, 141, 30, 241, 31, 128, 247, 26, 96, 30, 156, 103, 78, 150, 91, 200, 86, 145, 241, 93, 198, 147, 117, 102, 220, 198, 228, 185, 252, 81, 229, 86, 53, 142, 104, 85, 208, 221, 118, 192, 186, 175, 92, 181, 35, 110, 208, 220, 208, 230, 84, 166, 92, 198, 40, 84, 4, 240, 27, 152, 188, 255, 170, 46, 199, 146, 22, 22, 250, 96, 33, 193, 20, 192, 42, 85, 50, 125, 7, 231, 54, 99, 59, 176, 243, 18, 239, 119, 76, 171, 51, 247, 107, 35, 198, 90, 111, 205, 125, 41, 58, 247, 48, 121, 252, 137, 156, 179, 138, 57, 236, 127, 131, 3, 68, 202, 181, 23, 100, 26, 76, 74, 50, 165, 108, 160, 227, 113, 93, 210, 204, 19, 23, 199, 149, 184, 28, 108, 239, 19, 227, 44, 85, 79, 96, 143, 141, 211, 116, 89, 127, 87, 205, 101, 146, 99, 111, 212, 20, 223, 94, 32, 178, 22, 253, 96, 170, 82, 103, 34, 54, 179, 90, 169, 64, 198, 7, 255, 166, 51, 158, 39, 113, 130, 161, 72, 216, 27, 251, 15, 61, 45, 131, 21, 246, 228, 38, 31, 195, 201, 84, 145, 149, 223, 80, 156, 224, 236, 158, 161, 65, 5, 105, 170, 78, 206, 252, 43, 61, 165, 179, 1, 85, 135, 49, 146, 211, 18, 61, 78, 165, 174, 161, 134, 92, 243, 50, 246, 177, 243, 92, 240, 246, 111, 161, 224, 250, 255, 96, 255, 166, 20, 57, 156, 236, 215, 22, 135, 189, 123, 248, 244, 11, 107, 97, 5, 235, 181, 224, 122, 148, 131, 172, 50, 44, 246, 75, 98, 89, 97, 2, 75, 185, 138, 26, 52, 54, 187, 113, 99, 219, 161, 164, 145, 59, 175, 223, 34, 133, 59, 216, 52, 225, 225, 166, 254, 10, 180, 91, 155, 183, 73, 99, 114, 115, 194, 26, 29, 195, 220, 193, 201, 231, 80, 154, 199, 215, 135, 10, 164, 115, 15, 145, 114, 111, 172, 124, 185, 163, 236, 9, 218, 87, 27, 77, 198, 242, 48, 40, 103, 202, 232, 207, 73, 222, 25, 27, 186, 200, 230, 67, 51, 75, 164, 233, 27, 217, 187, 166, 209, 242, 202, 5, 63, 92, 77, 229, 73, 126, 27, 124, 211, 227, 109, 89, 31, 55, 246, 214, 130, 134, 217, 170, 156, 161, 27, 39, 199, 37, 200, 99, 20, 35, 28, 156, 230, 99, 66, 62, 145, 127, 160, 226, 35, 174, 163, 51, 63, 155, 255, 90, 121, 228, 97, 234, 175, 169, 9, 178, 180, 116, 141, 195, 239, 238, 114, 105, 2, 244, 129, 58, 1, 139, 163, 130, 79, 170, 13, 158, 112, 247, 64, 68, 184, 127, 163, 207, 222, 182, 247, 180, 40, 121, 189, 76, 48, 205, 111, 177, 10, 211, 131, 48, 225, 210, 216, 138, 251, 152, 241, 80, 122, 251, 226, 216, 131, 219, 11, 209, 177, 244, 197, 150, 78, 65, 94, 114, 4, 187, 252, 33, 20, 13, 143, 92, 89, 54, 240, 156, 100, 140, 3, 114, 251, 16, 136, 11, 230, 219, 121, 200, 60, 237, 115, 207, 23, 145, 51, 200, 151, 110, 28, 72, 45, 67, 94, 100, 159, 90, 168, 141, 83, 2, 211, 96, 15, 72, 222, 111, 124, 136, 152, 76, 29, 107, 82, 158, 24, 84, 156, 240, 184, 231, 2, 95, 163, 63, 167, 119, 29, 100, 89, 35, 177, 161, 26, 34, 64, 71, 86, 165, 6, 95, 22, 195, 95, 35, 4, 19, 15, 222, 198, 115, 16, 245, 190, 129, 17, 137, 5, 249, 234, 19, 151, 224, 27, 232, 149, 143, 136, 61, 24, 152, 184, 252, 163, 150, 55, 68, 60, 36, 146, 65, 72, 43, 104, 33, 7, 184, 51, 29, 207, 153, 151, 42, 92, 146, 177, 165, 218, 103, 60, 135, 250, 101, 31, 39, 53, 215, 242, 155, 126, 43, 134, 250, 130, 99, 30, 135, 4, 135, 250, 122, 59, 206, 201, 151, 224, 28, 41, 96, 96, 176, 140, 249, 141, 123, 13, 210, 160, 156, 208, 50, 155, 171, 158, 238, 91, 137, 245, 37, 100, 86, 225, 0, 105, 147, 21, 132, 97, 198, 19, 255, 113, 92, 254, 13, 186, 248, 94, 212, 149, 175, 216, 37, 18, 63, 119, 105, 13, 226, 119, 119, 221, 180, 31, 254, 248, 20, 66, 170, 129, 112, 24, 64, 13, 172, 99, 37, 238, 83, 98, 33, 217, 53, 190, 122, 175, 185, 94, 33, 156, 139, 78, 88, 80, 193, 71, 108, 113, 252, 187, 37, 78, 159, 8, 76, 194, 25, 154, 237, 30, 126, 6, 0, 190, 7, 50, 101, 104, 108, 145, 17, 50, 17, 34, 40, 121, 193, 108, 65, 125, 51, 15, 83, 232, 3, 170, 89, 72, 193, 9, 80, 40, 1, 89, 91, 234, 26, 169, 221, 241, 58, 182, 77, 195, 88, 76, 203, 157, 207, 21, 216, 234, 142, 160, 254, 196, 140, 217, 246, 193, 22, 216, 3, 104, 75, 132, 0, 1, 154, 32, 127, 212, 54, 18, 140, 130, 34, 152, 122, 95, 113, 193, 59, 245, 148, 202, 148, 115, 79, 19, 28, 200, 101, 226, 100, 174, 2, 45, 119, 226, 48, 186, 215, 174, 103, 190, 198, 212, 219, 112, 76, 193, 157, 54, 131, 211, 93, 59, 235, 254, 213, 226, 7, 254, 179, 116, 176, 9, 112, 206, 194, 18, 108, 91, 11, 78, 218, 111, 116, 198, 10, 199, 99, 108, 250, 143, 39, 4, 149, 148, 43, 239, 66, 110, 250, 172, 7, 20, 130, 181, 224, 26, 169, 121, 251, 157, 37, 223, 214, 72, 22, 121, 220, 33, 130, 192, 160, 109, 12, 101, 41, 143, 47, 238, 118, 82, 46, 66, 68, 69, 196, 98, 157, 235, 219, 244, 194, 180, 171, 171, 102, 35, 216, 137, 76, 34, 45, 129, 112, 220, 66, 113, 155, 175, 180, 46, 161, 63, 47, 233, 185, 110, 129, 246, 138, 199, 171, 30, 54, 186, 33, 178, 38, 103, 51, 76, 196, 148, 112, 218, 160, 216, 47, 110, 173, 20, 94, 14, 100, 138, 109, 111, 171, 103, 223, 36, 117, 162, 82, 75, 5, 18, 240, 21, 133, 52, 37, 52, 113, 132, 24, 143, 173, 76, 68, 17, 239, 16, 55, 229, 250, 105, 120, 253, 119, 16, 105, 166, 95, 126, 154, 208, 38, 89, 219, 153, 248, 19, 26, 35, 95, 123, 200, 216, 210, 230, 227, 159, 156, 134, 29, 211, 111, 241, 233, 79, 145, 171, 163, 250, 127, 250, 34, 164, 129, 210, 103, 150, 95, 167, 205, 3, 244, 10, 136, 198, 164, 64, 167, 247, 7, 48, 177, 164, 100, 162, 156, 87, 61, 137, 148, 37, 173, 85, 221, 229, 73, 163, 250, 174, 75, 109, 37, 69, 110, 55, 77, 40, 115, 65, 161, 167, 87, 146, 111, 96, 223, 107, 82, 250, 186, 88, 86, 107, 234, 54, 195, 39, 66, 217, 204, 193, 61, 56, 214, 18, 39, 102, 37, 207, 165, 194, 217, 149, 39, 176, 182, 249, 232, 29, 137, 110, 40, 112, 114, 147, 95, 139, 95, 244, 163, 162, 67, 110, 5, 118, 7, 35, 143, 82, 184, 27, 177, 5, 191, 72, 26, 201, 131, 168, 211, 130, 172, 54, 104, 242, 23, 95, 179, 18, 33, 25, 25, 86, 149, 228, 236, 254, 173, 69, 173, 229, 67, 8, 2, 12, 123, 183, 39, 125, 239, 125, 231, 26, 20, 17, 153, 138, 240, 163, 84, 222, 134, 146, 160, 242, 185, 60, 92, 87, 28, 252, 106, 243, 231, 181, 80, 204, 112, 97, 164, 229, 78, 221, 204, 180, 72, 18, 97, 189, 42, 44, 6, 110, 154, 2, 77, 90, 178, 79, 84, 116, 190, 178, 85, 216, 195, 55, 5, 108, 70, 250, 103, 176, 58, 90, 28, 230, 80, 239, 180, 40, 64, 113, 233, 159, 115, 14, 42, 137, 53, 28, 178, 130, 247, 101, 165, 74, 245, 230, 163, 145, 230, 255, 41, 113, 47, 122, 55, 233, 165, 205, 5, 131, 172, 2, 8, 52, 54, 150, 108, 136, 199, 138, 28, 223, 34, 167, 86, 107, 23, 85, 24, 128, 109, 235, 74, 25, 51, 210, 237, 112, 113, 145, 153, 128, 20, 26, 150, 191, 78, 3, 122, 185, 47, 233, 61, 1, 66, 123, 75, 125, 102, 169, 98, 180, 105, 242, 179, 85, 229, 250, 254, 166, 51, 49, 68, 214, 193, 41, 22, 97, 44, 0, 224, 2, 71, 207, 158, 168, 117, 148, 94, 204, 46, 16, 219, 150, 238, 127, 238, 1, 179, 122, 52, 60, 107, 86, 15, 250, 218, 43, 22, 203, 1, 227, 122, 49, 170, 205, 8, 89, 199, 197, 246, 91, 29, 217, 46, 10, 233, 168, 180, 250, 75, 124, 191, 190, 239, 13, 74, 95, 34, 87, 253, 110, 47, 193, 221, 166, 162, 169, 181, 15, 151, 144, 80, 251, 179, 155, 70, 255, 223, 203, 70, 243, 143, 78, 50, 71, 22, 88, 222, 4, 63, 112, 155, 42, 130, 234, 150, 127, 177, 108, 9, 229, 172, 223, 171, 11, 240, 123, 64, 120, 157, 82, 141, 50, 214, 197, 209, 227, 47, 74, 72, 252, 141, 127, 90, 181, 106, 137, 180, 171, 77, 125, 41, 25, 247, 127, 201, 53, 152, 43, 135, 117, 20, 188, 15, 168, 128, 145, 115, 145, 254, 202, 162, 33, 226, 26, 177, 226, 90, 193, 212, 59, 82, 184, 50, 133, 175, 155, 184, 104, 152, 161, 185, 172, 167, 114, 123, 98, 8, 123, 212, 106, 10, 145, 232, 80, 7, 86, 229, 175, 102, 97, 9, 98, 38, 50, 91, 254, 64, 40, 254, 59, 37, 115, 72, 214, 87, 1, 70, 247, 234, 14, 191, 38, 62, 82, 238, 165, 107, 111, 227, 114, 231, 51, 94, 239, 109, 23, 28, 166, 202, 128, 129, 152, 255, 205, 185, 150, 219, 77, 216, 82, 155, 205, 218, 45, 242, 36, 157, 41, 87, 164, 130, 9, 182, 243, 224, 1, 190, 44, 213, 112, 54, 21, 110, 142, 44, 17, 50, 178, 84, 115, 127, 34, 217, 23, 250, 12, 212, 222, 21, 134, 186, 45, 13, 229, 163, 32, 38, 204, 232, 42, 252, 160, 37, 156, 88, 201, 93, 227, 79, 253, 245, 167, 56, 103, 200, 166, 244, 186, 29, 89, 222, 136, 125, 59, 137, 123, 89, 68, 17, 55, 62, 74, 62, 24, 52, 198, 68, 131, 101, 20, 65, 249, 120, 96, 37, 93, 199, 40, 180, 20, 57, 46, 1, 95, 170, 7, 193, 124, 44, 229, 146, 141, 48, 209, 164, 194, 125, 148, 178, 4, 17, 122, 214, 65, 18, 182, 41, 198, 33, 48, 224, 168, 62, 223, 160, 187, 231, 10, 231, 211, 58, 3, 114, 196, 163, 187, 24, 92, 122, 57, 171, 217, 210, 4, 111, 244, 255, 92, 171, 218, 224, 155, 241, 238, 226, 135, 55, 95, 131, 200, 172, 114, 251, 8, 115, 41, 173, 99, 48, 66, 18, 213, 105, 70, 24, 230, 101, 80, 99, 155, 132, 25, 232, 167, 48, 123, 241, 130, 218, 191, 193, 136, 255, 13, 109, 166, 143, 59, 59, 141, 8, 88, 85, 119, 5, 176, 156, 37, 221, 149, 218, 24, 249, 20, 51, 75, 56, 184, 130, 244, 235, 245, 49, 42, 199, 230, 198, 30, 70, 178, 207, 252, 190, 51, 162, 241, 162, 190, 12, 25, 65, 177, 138, 245, 116, 27, 223, 122, 97, 230, 18, 30, 232, 196, 156, 148, 91, 14, 40, 191, 79, 244, 0, 30, 47, 184, 220, 194, 140, 12, 16, 38, 219, 135, 198, 182, 203, 31, 152, 245, 75, 11, 158, 13, 56, 212, 109, 5, 63, 176, 236, 17, 98, 4, 250, 147, 50, 163, 35, 91, 5, 87, 116, 220, 165, 201, 240, 113, 76, 124, 245, 245, 20, 99, 165, 95, 133, 134, 197, 223, 137, 121, 6, 157, 26, 70, 50, 144, 122, 187, 225, 204, 90, 161, 31, 187, 80, 190, 125, 104, 253, 117, 239, 184, 118, 196, 27, 115, 179, 235, 77, 29, 201, 229, 132, 76, 112, 172, 131, 146, 233, 130, 218, 124, 224, 193, 34, 60, 254, 31, 105, 131, 148, 44, 118, 239, 115, 223, 0, 31, 8, 113, 87, 36, 24, 128, 11, 233, 101, 163, 132, 137, 26, 109, 4, 158, 53, 148, 64, 142, 18, 62, 81, 217, 2, 212, 119, 241, 163, 233, 207, 109, 250, 21, 134, 147, 140, 115, 202, 161, 73, 214, 130, 228, 228, 44, 102, 130, 245, 172, 196, 24, 201, 38, 98, 80, 200, 209, 128, 117, 92, 93, 41, 149, 207, 238, 179, 24, 120, 240, 191, 84, 252, 93, 98, 85, 164, 109, 193, 149, 225, 72, 162, 110, 144, 7, 13, 64, 96, 206, 91, 105, 224, 31, 155, 123, 177, 34, 123, 92, 99, 5, 49, 85, 111, 55, 224, 123, 155, 36, 68, 188, 127, 82, 198, 220, 8, 116, 143, 80, 39, 146, 178, 122, 5, 72, 243, 129, 25, 100, 114, 223, 17, 182, 49, 20, 39, 202, 205, 146, 204, 66, 209, 148, 223, 200, 100, 193, 47, 209, 167, 240, 156, 117, 43, 119, 175, 60, 26, 114, 192, 202, 249, 174, 94, 26, 109, 179, 210, 179, 3, 60, 136, 204, 79, 70, 165, 22, 254, 72, 94, 249, 37, 214, 56, 221, 144, 110, 154, 38, 60, 226, 16, 226, 39, 183, 168, 174, 236, 248, 198, 103, 193, 37, 45, 6, 64, 140, 179, 226, 80, 150, 248, 161, 26, 119, 199, 144, 18, 17, 44, 182, 204, 156, 89, 216, 80, 190, 188, 85, 174, 95, 37, 186, 114, 80, 201, 121, 207, 67, 56, 194, 228, 122, 140, 20, 182, 253, 78, 31, 79, 59, 112, 95, 149, 72, 56, 131, 225, 146, 61, 13, 179, 220, 165, 73, 5, 177, 58, 90, 183, 62, 228, 235, 90, 240, 206, 57, 108, 140, 242, 165, 146, 50, 152, 0, 180, 40, 41, 65, 137, 69, 158, 163, 173, 21, 93, 154, 228, 48, 205, 237, 161, 74, 72, 170, 221, 135, 37, 132, 121, 99, 160, 178, 249, 178, 238, 153, 221, 205, 234, 153, 64, 11, 77, 47, 39, 53, 210, 148, 56, 1, 156, 139, 88, 68, 134, 249, 16, 190, 61, 128, 182, 176, 127, 218, 253, 105, 162, 208, 209, 104, 30, 22, 148, 23, 130, 90, 24, 45, 198, 18, 39, 84, 191, 244, 186, 203, 115, 187, 5, 223, 155, 114, 40, 248, 164, 52, 33, 112, 181, 119, 145, 56, 121, 105, 122, 27, 39, 25, 201, 19, 71, 40, 99, 109, 211, 113, 147, 163, 72, 127, 74, 153, 198, 253, 107, 201, 113, 16, 218, 141, 51, 171, 100, 82, 237, 27, 244, 154, 54, 199, 51, 3, 70, 123, 238, 73, 132, 93, 76, 141, 188, 10, 73, 73, 107, 31, 235, 231, 207, 122, 209, 154, 149, 48, 111, 92, 43, 21, 181, 75, 165, 20, 97, 164, 255, 160, 123, 139, 175, 54, 58, 98, 89, 131, 39, 73, 175, 100, 177, 102, 22, 63, 148, 85, 112, 115, 135, 75, 143, 208, 76, 87, 122, 248, 74, 24, 150, 205, 200, 129, 40, 94, 197, 247, 88, 35, 176, 213, 74, 137, 4, 37, 151, 214, 184, 179, 216, 2, 98, 222, 151, 3, 195, 253, 88, 102, 84, 239, 197, 139, 236, 96, 121, 21, 179, 204, 24, 224, 100, 116, 198, 248, 219, 202, 147, 248, 131, 221, 159, 159, 38, 197, 15, 51, 177, 231, 71, 181, 113, 142, 206, 247, 125, 120, 221, 99, 124, 16, 174, 21, 105, 109, 113, 41, 41, 229, 174, 185, 244, 28, 86, 231, 161, 124, 173, 9, 167, 194, 76, 9, 63, 245, 238, 170, 79, 65, 237, 113, 55, 142, 237, 21, 223, 199, 95, 169, 110, 141, 140, 221, 101, 81, 99, 73, 175, 130, 102, 218, 162, 154, 121, 119, 156, 164, 163, 54, 159, 155, 59, 235, 18, 6, 45, 33, 201, 93, 247, 209, 175, 119, 13, 79, 146, 43, 103, 28, 177, 27, 135, 42, 76, 171, 19, 76, 242, 89, 214, 200, 38, 29, 125, 135, 223, 21, 12, 243, 23, 183, 161, 123, 250, 150, 2, 240, 210, 0, 153, 87, 127, 175, 50, 252, 233, 77, 122, 111, 169, 141, 72, 153, 52, 26, 12, 246, 249, 143, 35, 173, 195, 53, 241, 212, 86, 180, 12, 158, 121, 44, 164, 187, 214, 137, 160, 85, 73, 24, 224, 200, 97, 36, 127, 149, 152, 64, 144, 90, 41, 61, 109, 110, 98, 150, 119, 173, 42, 255, 255, 4, 98, 45, 207, 37, 220, 66, 188, 122, 131, 28, 232, 194, 193, 163, 198, 229, 39, 153, 0, 250, 162, 219, 202, 232, 162, 67, 156, 210, 195, 105, 233, 12, 22, 191, 2, 134, 237, 152, 84, 226, 177, 158, 3, 23, 188, 11, 198, 121, 177, 204, 159, 50, 65, 9, 37, 34, 3, 68, 79, 233, 93, 117, 180, 57, 215, 209, 32, 46, 152, 217, 107, 54, 109, 79, 229, 132, 90, 157, 44, 197, 191, 225, 46, 137, 189, 149, 188, 108, 164, 110, 59, 53, 5, 10, 130, 59, 193, 184, 205, 138, 177, 58, 149, 135, 223, 169, 107, 232, 10, 106, 55, 137, 69, 107, 196, 252, 229, 104, 103, 139, 78, 66, 9, 85, 42, 236, 69, 127, 41, 63, 191, 137, 52, 4, 163, 21, 45, 203, 232, 12, 118, 225, 32, 23, 210, 166, 76, 234, 110, 128, 69, 8, 139, 249, 198, 119, 176, 235, 130, 110, 42, 97, 210, 152, 59, 91, 208, 248, 17, 59, 85, 203, 25, 107, 169, 246, 64, 254, 131, 39, 7, 15, 177, 207, 93, 251, 223, 49, 206, 18, 169, 241, 169, 1, 130, 51, 248, 67, 229, 148, 227, 86, 163, 26, 190, 61, 9, 161, 154, 209, 53, 161, 100, 57, 82, 92, 76, 49, 136, 227, 81, 201, 150, 193, 84, 21, 184, 20, 239, 69, 58, 89, 160, 22, 37, 244, 155, 177, 202, 96, 222, 89, 75, 52, 37, 73, 131, 108, 234, 5, 216, 76, 87, 159, 124, 138, 60, 40, 60, 52, 93, 124, 148, 210, 196, 91, 167, 20, 115, 187, 69, 214, 115, 160, 190, 243, 86, 79, 253, 228, 152, 142, 148, 251, 189, 38, 253, 192, 17, 78, 229, 98, 222, 241, 241, 25, 178, 137, 181, 180, 94, 131, 174, 104, 154, 99, 88, 149, 73, 42, 73, 248, 189, 79, 49, 45, 0, 29, 159, 186, 7, 27, 131, 97, 0, 198, 203, 46, 180, 242, 209, 175, 194, 78, 124, 123, 74, 135, 48, 106, 225, 189, 110, 182, 10, 186, 48, 144, 170, 122, 3, 123, 226, 212, 220, 32, 225, 169, 24, 32, 145, 98, 228, 54, 114, 20, 12, 105, 141, 27, 149, 58, 72, 135, 114, 213, 143, 131, 253, 54, 125, 68, 77, 178, 128, 16, 124, 104, 172, 71, 45, 56, 212, 21, 86, 248, 39, 15, 53, 157, 39, 17, 74, 233, 31, 186, 13, 216, 45, 95, 172, 150, 238, 241, 176, 125, 107, 173, 204, 119, 156, 217, 126, 3, 46, 6, 151, 243, 45, 105, 211, 26, 188, 56, 216, 127, 200, 73, 224, 170, 195, 209, 250, 7, 235, 89, 36, 115, 1, 74, 189, 152, 135, 209, 72, 143, 28, 28, 196, 198, 104, 152, 86, 191, 100, 74, 111, 75, 224, 240, 51, 216, 54, 80, 147, 45, 195, 214, 108, 16, 222, 174, 141, 250, 168, 9, 189, 122, 71, 132, 17, 250, 178, 251, 37, 95, 234, 77, 11, 23, 242, 85, 86, 233, 14, 45, 144, 183, 197, 77, 167, 225, 211, 177, 62, 2, 119, 70, 154, 121, 47, 189, 78, 229, 60, 140, 61, 69, 210, 87, 245, 235, 41, 98, 47, 194, 130, 2, 59, 240, 207, 142, 27, 101, 52, 220, 177, 132, 5, 214, 95, 133, 160, 112, 180, 249, 117, 201, 228, 145, 41, 93, 174, 80, 186, 86, 232, 50, 212, 173, 136, 251, 121, 115, 97, 215, 169, 198, 51, 130, 253, 240, 157, 2, 3, 11, 33, 124, 191, 202, 234, 124, 10, 209, 139, 210, 206, 215, 9, 68, 228, 180, 161, 24, 133, 58, 32, 100, 202, 40, 142, 232, 97, 101, 40, 198, 3, 229, 28, 231, 238, 96, 160, 154, 59, 34, 247, 246, 5, 116, 86, 34, 184, 173, 227, 21, 181, 17, 12, 58, 62, 146, 60, 120, 105, 32, 231, 12, 111, 36, 108, 160, 209, 210, 59, 102, 63, 145, 117, 159, 136, 243, 53, 207, 55, 77, 237, 109, 38, 139, 238, 14, 233, 237, 206, 243, 77, 194, 99, 47, 170, 172, 215, 172, 184, 234, 225, 253, 193, 62, 209, 158, 132, 209, 33, 254, 84, 119, 108, 166, 162, 254, 78, 227, 227, 206, 19, 109, 8, 107, 88, 15, 202, 78, 97, 48, 57, 119, 134, 47, 113, 79, 97, 45, 121, 65, 203, 161, 81, 118, 68, 54, 100, 11, 243, 212, 61, 104, 185, 125, 88, 129, 214, 84, 116, 22, 90, 246, 6, 248, 91, 1, 81, 160, 104, 20, 243, 119, 134, 141, 212, 108, 21, 145, 202, 183, 90, 203, 57, 113, 30, 129, 89, 245, 43, 179, 102, 8, 13, 31, 241, 95, 167, 49, 43, 36, 146, 23, 208, 113, 55, 181, 115, 37, 222, 172, 229, 118, 144, 165, 43, 31, 117, 186, 106, 236, 171, 186, 48, 92, 68, 251, 37, 212, 77, 190, 42, 39, 151, 194, 76, 113, 10, 56, 187, 154, 252, 52, 192, 19, 19, 31, 50, 9, 141, 137, 2, 214, 95, 45, 3, 53, 164, 105, 31, 129, 79, 56, 187, 105, 190, 220, 105, 33, 219, 49, 158, 4, 27, 66, 184, 153, 132, 42, 249, 137, 94, 183, 127, 162, 229, 227, 162, 100, 21, 42, 176, 46, 33, 159, 149, 27, 50, 232, 28, 68, 254, 162, 241, 202, 151, 35, 33, 40, 150, 17, 134, 96, 18, 41, 173, 170, 226, 213, 68, 31, 145, 238, 223, 197, 140, 145, 237, 120, 139, 106, 111, 157, 6, 72, 48, 191, 213, 158, 6, 60, 157, 175, 28, 218, 77, 213, 175, 68, 115, 63, 42, 138, 131, 126, 244, 65, 225, 55, 35, 73, 38, 25, 154, 53, 200, 195, 45, 159, 28, 246, 94, 88, 140, 30, 142, 99, 120, 113, 134, 123, 149, 231, 193, 198, 151, 109, 165, 230, 44, 125, 5, 109, 212, 182, 125, 135, 57, 85, 99, 195, 179, 112, 72, 207, 162, 215, 237, 172, 22, 81, 222, 39, 132, 138, 16, 198, 93, 235, 132, 56, 63, 28, 229, 246, 127, 98, 104, 216, 234, 249, 53, 135, 29, 174, 124, 71, 43, 53, 56, 86, 23, 85, 103, 238, 127, 73, 233, 215, 175, 77, 154, 237, 107, 239, 11, 130, 178, 42, 215, 133, 197, 111, 240, 78, 85, 111, 219, 195, 217, 203, 109, 247, 159, 96, 231, 2, 98, 136, 42, 152, 108, 108, 218, 228, 171, 194, 165, 78, 4, 232, 21, 142, 75, 181, 201, 251, 213, 240, 129, 176, 6, 248, 72, 184, 47, 228, 58, 181, 104, 78, 250, 192, 55, 188, 255, 28, 206, 197, 214, 111, 84, 32, 59, 62, 8, 53, 0, 217, 209, 55, 29, 148, 230, 85, 129, 153, 64, 241, 229, 221, 245, 192, 100, 57, 132, 132, 124, 108, 111, 149, 101, 239, 10, 129, 169, 161, 152, 162, 122, 164, 7, 212, 155, 179, 150, 39, 7, 86, 167, 145, 23, 64, 161, 101, 192, 212, 141, 37, 224, 186, 137, 199, 167, 42, 75, 128, 53, 220, 255, 16, 129, 31, 138, 242, 143, 169, 39, 139, 106, 99, 149, 89, 77, 185, 200, 250, 86, 153, 115, 161, 132, 84, 164, 145, 53, 6, 150, 145, 218, 21, 202, 239, 142, 212, 223, 92, 67, 22, 189, 146, 141, 148, 239, 8, 14, 50, 14, 239, 80, 122, 65, 161, 69, 11, 84, 7, 54, 45, 101, 216, 202, 8, 12, 105, 253, 158, 27, 152, 47, 239, 31, 70, 102, 197, 16, 126, 203, 154, 222, 57, 107, 140, 244, 66, 163, 168, 66, 44, 159, 0, 159, 110, 135, 124, 215, 13, 105, 69, 124, 217, 88, 182, 204, 225, 6, 164, 129, 101, 71, 186, 38, 5, 253, 192, 230, 171, 190, 0, 64, 37, 18, 90, 147, 121, 176, 159, 75, 137, 31, 4, 47, 94, 184, 56, 116, 22, 87, 177, 224, 115, 93, 250, 214, 128, 193, 147, 170, 30, 48, 84, 206, 223, 101, 226, 108, 137, 232, 164, 154, 104, 154, 214, 29, 231, 248, 221, 119, 193, 162, 173, 183, 197, 4, 237, 150, 211, 124, 193, 192, 248, 233, 104, 91, 42, 59, 140, 145, 145, 250, 204, 76, 213, 217, 245, 120, 48, 245, 144, 231, 63, 198, 153, 34, 137, 10, 20, 76, 155, 59, 111, 220, 152, 108, 147, 253, 198, 253, 200, 53, 104, 150, 29, 112, 75, 236, 252, 152, 188, 202, 213, 188, 43, 135, 147, 208, 201, 161, 84, 234, 231, 222, 194, 49, 181, 159, 160, 207, 42, 125, 245, 157, 216, 78, 155, 44, 166, 192, 251, 104, 23, 164, 65, 247, 129, 32, 204, 3, 245, 80, 150, 248, 247, 162, 18, 53, 251, 68, 30, 37, 70, 56, 192, 104, 131, 82, 117, 136, 113, 39, 11, 174, 203, 197, 45, 120, 215, 177, 200, 202, 203, 255, 67, 88, 24, 219, 228, 37, 58, 58, 139, 10, 202, 124, 145, 11, 72, 112, 56, 28, 171, 9, 232, 187, 205, 236, 163, 127, 174, 183, 153, 218, 170, 103, 5, 70, 133, 25, 102, 173, 222, 180, 250, 116, 57, 213, 116, 40, 190, 229, 186, 87, 225, 199, 144, 142, 39, 146, 165, 106, 215, 87, 237, 77, 230, 211, 161, 21, 83, 191, 10, 36, 243, 244, 36, 78, 4, 223, 149, 225, 135, 14, 67, 33, 237, 39, 227, 184, 53, 76, 53, 140, 187, 241, 54, 113, 127, 81, 166, 13, 67, 229, 122, 36, 211, 28, 240, 125, 81, 134, 191, 206, 228, 227, 43, 77, 75, 223, 17, 106, 216, 14, 98, 135, 81, 183, 88, 189, 171, 233, 142, 228, 32, 233, 232, 226, 229, 186, 152, 17, 121, 75, 138, 30, 211, 193, 25, 254, 8, 58, 180, 119, 148, 127, 17, 117, 146, 38, 214, 65, 29, 107, 15, 220, 130, 167, 241, 254, 30, 116, 92, 98, 115, 62, 22, 76, 82, 2, 18, 228, 162, 152, 37, 83, 53, 86, 56, 59, 146, 250, 230, 83, 95, 78, 182, 218, 123, 160, 22, 73, 199, 241, 98, 220, 218, 248, 239, 233, 225, 58, 41, 202, 132, 227, 101, 149, 178, 224, 157, 250, 236, 3, 244, 163, 238, 149, 200, 86, 159, 212, 118, 152, 252, 125, 56, 33, 11, 159, 223, 117, 112, 75, 113, 158, 95, 196, 144, 124, 37, 4, 178, 88, 251, 206, 98, 192, 200, 113, 249, 176, 127, 33, 235, 163, 88, 231, 101, 101, 127, 212, 67, 127, 6, 128, 191, 183, 223, 205, 0, 171, 233, 18, 28, 242, 240, 216, 250, 1, 54, 242, 59, 33, 99, 169, 2, 7, 216, 123, 161, 178, 212, 189, 180, 20, 189, 205, 16, 110, 143, 174, 119, 213, 221, 126, 118, 180, 65, 124, 55, 215, 21, 240, 39, 173, 53, 107, 229, 205, 130, 207, 234, 196, 166, 154, 47, 75, 113, 119, 188, 223, 125, 182, 174, 99, 93, 139, 235, 108, 224, 40, 252, 182, 201, 218, 178, 127, 179, 227, 95, 100, 174, 110, 253, 63, 65, 171, 17, 144, 50, 32, 215, 174, 49, 53, 74, 46, 118, 255, 37, 206, 83, 81, 8, 52, 49, 57, 154, 122, 80, 212, 51, 8, 171, 38, 168, 249, 148, 78, 221, 124, 41, 137, 52, 75, 140, 252, 215, 226, 78, 164, 61, 215, 89, 206, 164, 120, 243, 76, 223, 250, 223, 156, 14, 241, 77, 82, 161, 87, 62, 250, 111, 0, 205, 53, 34, 165, 14, 46, 143, 129, 141, 65, 68, 108, 105, 136, 102, 205, 229, 28, 223, 225, 221, 168, 38, 144, 181, 88, 204, 19, 207, 100, 173, 148, 22, 118, 253, 122, 135, 165, 248, 239, 58, 165, 176, 114, 49, 207, 95, 191, 234, 242, 211, 170, 120, 1, 183, 96, 13, 181, 18, 195, 83, 194, 243, 94, 205, 20, 7, 98, 107, 131, 117, 206, 4, 70, 154, 219, 159, 116, 221, 11, 187, 85, 213, 13, 162, 96, 105, 225, 24, 174, 28, 200, 226, 86, 222, 16, 99, 14, 203, 193, 20, 144, 10, 26, 189, 144, 80, 196, 218, 205, 247, 230, 202, 99, 193, 34, 85, 250, 222, 45, 214, 133, 138, 25, 107, 200, 49, 214, 218, 154, 7, 101, 121, 94, 216, 150, 78, 210, 121, 74, 42, 78, 159, 96, 212, 184, 58, 1, 175, 69, 24, 61, 13, 195, 54, 65, 157, 181, 221, 118, 224, 162, 120, 50, 251, 192, 185, 67, 101, 154, 163, 22, 107, 236, 96, 186, 162, 230, 137, 233, 222, 110, 59, 171, 141, 214, 14, 92, 89, 228, 132, 224, 127, 30, 239, 163, 167, 61, 103, 113, 214, 67, 98, 14, 76, 188, 63, 188, 139, 145, 102, 180, 76, 152, 137, 139, 32, 152, 250, 199, 92, 255, 60, 24, 198, 35, 185, 42, 230, 41, 183, 35, 111, 220, 182, 204, 50, 232, 242, 22, 199, 167, 240, 211, 156, 8, 10, 189, 82, 134, 102, 24, 68, 70, 226, 162, 176, 57, 242, 14, 134, 12, 26, 63, 90, 251, 207, 62, 235, 85, 146, 253, 138, 80, 172, 249, 15, 59, 172, 158, 64, 63, 6, 18, 19, 113, 199, 2, 124, 95, 242, 32, 187, 127, 146, 132, 242, 76, 68, 200, 175, 237, 33, 137, 22, 52, 99, 2, 185, 155, 213, 72, 3, 200, 24, 8, 235, 253, 2, 51, 9, 20, 99, 251, 185, 215, 148, 214, 147, 25, 143, 160, 196, 120, 17, 174, 129, 26, 49, 94, 181, 175, 148, 250, 115, 181, 186, 135, 216, 130, 223, 154, 238, 27, 217, 108, 127, 200, 162, 178, 141, 101, 69, 87, 124, 226, 14, 150, 19, 119, 143, 213, 32, 118, 136, 23, 113, 114, 175, 233, 150, 51, 58, 98, 242, 251, 27, 211, 5, 125, 123, 69, 123, 15, 66, 186, 15, 84, 181, 98, 124, 172, 186, 242, 170, 209, 255, 243, 123, 25, 248, 1, 165, 131, 92, 143, 174, 223, 232, 249, 23, 11, 176, 253, 161, 137, 245, 63, 223, 28, 62, 209, 34, 249, 206, 15, 126, 127, 156, 30, 136, 98, 204, 192, 192, 122, 38, 60, 57, 110, 162, 71, 109, 1, 78, 244, 210, 88, 70, 89, 26, 240, 168, 8, 196, 167, 30, 231, 150, 174, 52, 233, 175, 188, 11, 158, 98, 75, 114, 193, 207, 182, 218, 198, 255, 7, 171, 203, 33, 41, 201, 214, 9, 193, 74, 176, 208, 87, 177, 50, 234, 179, 170, 231, 128, 122, 68, 161, 126, 55, 139, 30, 7, 131, 138, 234, 30, 234, 194, 99, 55, 90, 32, 225, 254, 77, 81, 48, 103, 238, 121, 97, 170, 166, 161, 0, 210, 62, 225, 53, 113, 42, 119, 113, 211, 219, 67, 199, 154, 103, 163, 12, 208, 22, 217, 137, 23, 3, 40, 248, 175, 182, 220, 223, 14, 38, 92, 12, 62, 165, 131, 190, 177, 111, 107, 198, 233, 41, 68, 69, 40, 141, 236, 214, 20, 12, 66, 3, 26, 232, 55, 3, 77, 210, 109, 72, 46, 223, 15, 62, 227, 134, 48, 145, 215, 226, 31, 116, 19, 192, 147, 103, 132, 249, 83, 129, 161, 125, 48, 97, 74, 52, 188, 130, 120, 66, 227, 159, 120, 85, 36, 52, 32, 7, 1, 210, 253, 154, 34, 200, 61, 240, 110, 203, 179, 63, 10, 222, 216, 39, 202, 108, 18, 234, 37, 44, 237, 212, 112, 249, 120, 137, 169, 131, 36, 5, 204, 222, 64, 141, 62, 61, 245, 33, 155, 108, 183, 55, 36, 163, 51, 25, 35, 42, 196, 102, 227, 84, 14, 10, 40, 61, 146, 82, 58, 184, 96, 21, 108, 128, 67, 126, 133, 118, 155, 64, 120, 136, 214, 100, 192, 153, 13, 205, 36, 145, 129, 114, 148, 176, 3, 82, 66, 186, 254, 172, 17, 74, 62, 183, 227, 169, 245, 67, 252, 226, 228, 157, 119, 229, 48, 28, 136, 43, 187, 60, 99, 8, 172, 88, 84, 173, 181, 246, 177, 193, 130, 159, 174, 50, 150, 88, 105, 62, 112, 70, 210, 97, 88, 129, 237, 216, 92, 33, 72, 53, 245, 165, 147, 84, 194, 222, 64, 186, 36, 174, 66, 176, 196, 186, 69, 229, 214, 227, 126, 186, 114, 223, 143, 128, 73, 80, 57, 13, 172, 24, 49, 25, 26, 32, 1, 93, 250, 209, 103, 112, 199, 84, 103, 13, 196, 178, 92, 116, 56, 73, 95, 92, 251, 242, 55, 1, 160, 243, 60, 24, 21, 163, 217, 197, 249, 23, 109, 96, 73, 238, 6, 71, 70, 245, 121, 187, 183, 228, 194, 195, 40, 117, 131, 153, 100, 231, 171, 223, 118, 102, 227, 29, 208, 84, 120, 142, 5, 139, 33, 188, 170, 174, 33, 145, 26, 25, 106, 131, 176, 129, 215, 2, 229, 147, 29, 190, 50, 174, 232, 112, 4, 213, 182, 22, 16, 249, 209, 33, 103, 119, 151, 88, 56, 158, 71, 34, 133, 245, 158, 40, 64, 32, 149, 63, 103, 81, 43, 38, 128, 61, 40, 133, 108, 12, 113, 120, 67, 244, 121, 16, 61, 204, 253, 79, 227, 225, 27, 251, 74, 49, 169, 233, 80, 150, 158, 215, 42, 175, 121, 235, 35, 216, 254, 226, 182, 188, 170, 99, 191, 197, 170, 236, 219, 179, 83, 250, 175, 160, 108, 245, 90, 65, 104, 100, 94, 27, 77, 204, 235, 228, 80, 252, 91, 97, 83, 149, 217, 171, 52, 174, 233, 24, 103, 187, 204, 89, 83, 16, 44, 196, 112, 135, 96, 107, 32, 252, 38, 5, 138, 41, 108, 33, 231, 0, 153, 115, 202, 242, 19, 81, 36, 221, 67, 82, 182, 183, 158, 137, 152, 27, 191, 90, 209, 1, 23, 37, 143, 173, 34, 234, 160, 68, 87, 83, 246, 73, 7, 172, 0, 81, 11, 247, 21, 20, 153, 151, 215, 87, 77, 103, 211, 60, 161, 95, 36, 193, 211, 61, 31, 249, 234, 66, 58, 187, 214, 41, 151, 8, 90, 34, 200, 187, 76, 108, 225, 205, 44, 129, 89, 247, 138, 149, 11, 66, 132, 222, 190, 123, 190, 33, 226, 224, 146, 246, 41, 9, 64, 250, 76, 18, 135, 237, 52, 213, 43, 19, 102, 66, 136, 181, 94, 251, 45, 169, 203, 242, 81, 109, 194, 85, 136, 241, 83, 246, 126, 189, 109, 198, 137, 16, 50, 107, 17, 192, 54, 116, 255, 247, 99, 51, 145, 231, 138, 4, 53, 76, 113, 26, 224, 193, 86, 226, 85, 25, 53, 210, 248, 114, 225, 226, 162, 25, 49, 114, 214, 128, 82, 91, 244, 64, 86, 9, 49, 50, 46, 60, 55, 249, 237, 192, 218, 146, 58, 172, 231, 11, 227, 102, 49, 120, 245, 112, 39, 61, 20, 203, 128, 169, 223, 243, 119, 93, 178, 208, 48, 89, 99, 9, 37, 126, 99, 229, 139, 206, 135, 144, 232, 12, 132, 200, 240, 222, 10, 182, 245, 62, 100, 185, 34, 13, 201, 212, 79, 121, 128, 241, 72, 231, 115, 246, 132, 105, 237, 196, 194, 40, 162, 173, 235, 188, 114, 210, 172, 121, 86, 92, 213, 227, 51, 190, 167, 65, 44, 75, 36, 87, 84, 225, 184, 32, 8, 133, 23, 63, 156, 131, 89, 234, 229, 68, 15, 3, 59, 232, 19, 145, 200, 64, 70, 150, 62, 232, 89, 198, 15, 164, 9, 212, 221, 204, 171, 102, 57, 40, 24, 210, 135, 211, 103, 5, 30, 199, 0, 250, 249, 72, 158, 164, 140, 223, 24, 233, 118, 11, 93, 227, 31, 55, 26, 249, 79, 29, 212, 89, 120, 66, 130, 174, 74, 120, 180, 18, 9, 61, 120, 228, 114, 244, 204, 135, 84, 247, 9, 0, 148, 3, 69, 194, 177, 239, 172, 151, 178, 167, 73, 162, 209, 120, 116, 53, 84, 242, 237, 255, 249, 90, 25, 216, 6, 172, 215, 140, 16, 147, 25, 161, 76, 180, 94, 109, 57, 71, 27, 105, 196, 232, 229, 7, 14, 152, 20, 88, 210, 152, 199, 189, 149, 199, 132, 19, 247, 158, 200, 220, 96, 36, 13, 137, 181, 157, 229, 252, 38, 93, 117, 88, 249, 57, 93, 188, 41, 93, 60, 253, 241, 250, 63, 177, 162, 113, 105, 131, 117, 118, 220, 193, 159, 32, 48, 143, 202, 43, 140, 187, 150, 222, 33, 4, 219, 28, 239, 128, 128, 15, 82, 84, 245, 57, 53, 132, 249, 170, 189, 143, 146, 87, 138, 159, 31, 28, 195, 67, 173, 95, 156, 135, 205, 122, 136, 32, 63, 175, 64, 106, 6, 135, 4, 102, 63, 147, 217, 180, 149, 69, 45, 144, 18, 132, 83, 71, 244, 228, 224, 121, 117, 243, 127, 86, 101, 65, 70, 206, 227, 68, 163, 118, 126, 188, 107, 66, 78, 162, 7, 189, 230, 223, 9, 182, 245, 200, 202, 100, 123, 92, 64, 30, 175, 126, 76, 38, 38, 240, 187, 150, 156, 96, 98, 78, 131, 25, 252, 12, 88, 213, 18, 47, 129, 41, 3, 188, 67, 4, 232, 60, 94, 224, 56, 168, 218, 139, 112, 30, 81, 63, 179, 62, 40, 35, 244, 28, 201, 250, 4, 187, 70, 114, 41, 46, 153, 179, 173, 21, 228, 238, 10, 107, 133, 55, 104, 156, 161, 225, 241, 236, 226, 10, 28, 230, 187, 105, 49, 34, 93, 181, 242, 242, 17, 92, 182, 140, 151, 55, 114, 249, 197, 77, 183, 14, 63, 23, 21, 104, 108, 173, 110, 60, 168, 123, 55, 11, 51, 18, 66, 246, 6, 217, 140, 90, 50, 138, 73, 103, 210, 54, 31, 153, 123, 8, 151, 198, 184, 133, 230, 113, 21, 48, 2, 50, 91, 79, 116, 5, 50, 181, 195, 97, 2, 130, 153, 14, 71, 200, 3, 206, 185, 80, 138, 107, 31, 201, 37, 134, 213, 195, 157, 19, 29, 19, 253, 67, 145, 228, 102, 115, 73, 96, 5, 31, 163, 204, 83, 236, 172, 32, 227, 193, 123, 7, 179, 65, 68, 100, 79, 236, 94, 84, 54, 231, 41, 25, 131, 245, 227, 108, 220, 215, 87, 31, 182, 3, 23, 28, 62, 72, 147, 89, 147, 150, 141, 21, 62, 223, 253, 114, 217, 132, 70, 151, 114, 130, 134, 29, 181, 224, 143, 3, 38, 67, 33, 158, 162, 49, 233, 162, 200, 52, 25, 176, 196, 238, 67, 209, 78, 154, 49, 200, 225, 123, 220, 239, 140, 174, 70, 249, 254, 231, 160, 196, 225, 4, 141, 93, 235, 148, 151, 141, 80, 235, 237, 4, 56, 231, 16, 48, 167, 185, 170, 92, 125, 116, 181, 125, 183, 102, 56, 178, 253, 250, 130, 198, 226, 159, 33, 249, 74, 64, 88, 143, 252, 26, 79, 252, 179, 120, 242, 108, 188, 243, 18, 248, 226, 44, 227, 132, 195, 190, 215, 249, 51, 149, 128, 209, 159, 160, 63, 93, 232, 159, 43, 62, 32, 224, 179, 98, 157, 118, 84, 84, 1, 168, 146, 76, 35, 34, 181, 151, 63, 141, 176, 89, 22, 12, 168, 167, 93, 246, 65, 248, 155, 10, 80, 18, 208, 76, 2, 247, 141, 73, 248, 145, 21, 203, 154, 161, 244, 208, 66, 108, 120, 97, 47, 98, 225, 227, 135, 100, 86, 90, 211, 138, 17, 33, 182, 255, 214, 66, 159, 228, 35, 1, 195, 225, 35, 189, 199, 42, 143, 107, 164, 239, 98, 86, 96, 213, 244, 101, 19, 142, 25, 56, 47, 109, 59, 88, 5, 99, 79, 74, 1, 69, 56, 229, 69, 111, 104, 240, 40, 6, 12, 81, 115, 80, 109, 117, 20, 111, 79, 42, 84, 188, 180, 170, 134, 157, 218, 41, 131, 48, 78, 161, 101, 211, 100, 64, 236, 108, 120, 198, 17, 8, 3, 133, 41, 162, 83, 177, 71, 93, 139, 147, 163, 17, 202, 161, 195, 205, 12, 113, 237, 84, 129, 112, 230, 179, 124, 64, 101, 37, 247, 234, 61, 97, 143, 44, 77, 190, 254, 41, 111, 68, 139, 79, 189, 159, 163, 144, 89, 216, 244, 140, 246, 75, 186, 171, 24, 66, 247, 191, 68, 42, 247, 106, 100, 252, 232, 65, 161, 118, 49, 117, 96, 220, 203, 66, 149, 162, 103, 209, 97, 113, 108, 88, 33, 32, 224, 164, 97, 93, 139, 176, 51, 84, 98, 210, 202, 175, 45, 241, 209, 118, 240, 115, 205, 61, 231, 69, 146, 236, 59, 166, 169, 152, 194, 238, 187, 174, 190, 122, 194, 44, 10, 230, 48, 96, 171, 197, 86, 146, 20, 200, 214, 9, 105, 123, 53, 170, 228, 209, 32, 213, 78, 82, 87, 242, 119, 72, 24, 83, 213, 8, 125, 186, 251, 150, 132, 227, 197, 84, 43, 26, 152, 238, 120, 59, 98, 15, 129, 151, 4, 26, 161, 13, 126, 129, 56, 245, 233, 183, 140, 134, 203, 119, 189, 230, 91, 31, 89, 136, 228, 127, 116, 30, 87, 63, 221, 59, 54, 84, 99, 228, 169, 49, 59, 235, 246, 138, 11, 107, 122, 230, 143, 9, 81, 226, 148, 21, 126, 41, 35, 38, 202, 241, 237, 14, 116, 250, 84, 15, 85, 165, 6, 35, 38, 64, 234, 136, 79, 6, 212, 124, 245, 37, 210, 199, 90, 75, 121, 215, 116, 110, 49, 68, 244, 210, 225, 203, 236, 248, 147, 82, 84, 96, 60, 69, 175, 234, 156, 225, 79, 0, 169, 60, 117, 86, 212, 40, 160, 127, 74, 212, 183, 78, 47, 75, 77, 184, 98, 203, 177, 214, 21, 97, 141, 228, 57, 140, 198, 215, 71, 39, 161, 72, 78, 68, 242, 110, 246, 252, 147, 120, 80, 119, 138, 250, 80, 83, 53, 97, 210, 225, 225, 79, 49, 254, 41, 93, 122, 13, 97, 97, 169, 173, 84, 153, 113, 190, 100, 103, 129, 17, 39, 37, 107, 115, 111, 56, 30, 247, 202, 92, 213, 6, 151, 205, 32, 225, 49, 10, 88, 84, 200, 169, 246, 214, 220, 21, 68, 244, 102, 97, 72, 223, 228, 159, 160, 225, 219, 34, 253, 66, 67], [27, 160, 95, 80, 92, 31, 7, 152, 131, 109, 246, 208, 145, 112, 74, 108, 139, 147, 130, 184, 254, 73, 183, 2, 116, 154, 45, 169, 59, 15, 165, 208, 89, 221, 170, 63, 46, 194, 217, 98, 41, 58, 188, 255, 97, 232, 168, 63, 147, 84, 139, 209, 193, 170, 186, 62, 46, 88, 176, 121], [68, 120, 77, 86, 78, 80, 76, 102, 86, 83, 78, 57, 84, 105, 75, 104, 99, 116, 77, 66, 79, 86, 78, 98, 89, 80, 104, 71, 111, 67, 102, 101, 101, 90, 86, 81, 69, 119, 120, 47, 105, 102, 52, 90, 79, 105, 82, 112, 106, 50, 88, 119, 53, 113, 118, 66, 114, 84, 103, 80, 122, 78, 77, 82, 88, 109, 119, 89], [119, 56, 101, 122, 118, 50, 99, 121, 73, 74, 77, 100, 81, 81, 102, 49, 90, 120, 115, 109, 79, 119, 78, 107, 74, 81, 109, 52, 43, 110, 74, 87, 88, 54, 97, 121, 43, 110, 57, 56, 43, 48, 51, 121, 104, 81, 105, 68, 98, 55, 51, 97, 79, 98, 102, 54, 115, 48, 79, 108, 75, 118, 56, 119, 81, 68, 65, 85, 71, 122, 55, 105, 43, 102, 49, 67, 73, 97, 122, 52, 78, 122, 69, 115, 84, 119, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 112, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 112, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_value: <<< res: None
update_wallet_record_tags: >>> wallet_handle: 3, type_: 'credential_exchange_v10', id: '71bf4548-eca4-4e17-9234-f2a75f0a41ed', tags_json: '{"thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc"}'
do_call: >>> name: indy_update_wallet_record_tags, args: (c_int(3), c_char_p(140572626286528), c_char_p(140572626303024), c_char_p(140572651917168), <CFunctionType object at 0x7fd99efcf368>)
do_call: Function indy_update_wallet_record_tags returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s5 with parameters: [[68, 120, 77, 86, 78, 80, 76, 102, 86, 83, 78, 57, 84, 105, 75, 104, 99, 116, 77, 66, 79, 86, 78, 98, 89, 80, 104, 71, 111, 67, 102, 101, 101, 90, 86, 81, 69, 119, 120, 47, 105, 102, 52, 90, 79, 105, 82, 112, 106, 50, 88, 119, 53, 113, 118, 66, 114, 84, 103, 80, 122, 78, 77, 82, 88, 109, 119, 89], [119, 56, 101, 122, 118, 50, 99, 121, 73, 74, 77, 100, 81, 81, 102, 49, 90, 120, 115, 109, 79, 119, 78, 107, 74, 81, 109, 52, 43, 110, 74, 87, 88, 54, 97, 121, 43, 110, 57, 56, 43, 48, 51, 121, 104, 81, 105, 68, 98, 55, 51, 97, 79, 98, 102, 54, 115, 48, 79, 108, 75, 118, 56, 119, 81, 68, 65, 85, 71, 122, 55, 105, 43, 102, 49, 67, 73, 97, 122, 52, 78, 122, 69, 115, 84, 119, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_encrypted WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [8, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_plaintext WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [8, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [8, [63, 214, 72, 222, 130, 103, 146, 158, 195, 194, 230, 74, 26, 53, 129, 230, 232, 7, 33, 137, 227, 21, 72, 88, 62, 97, 106, 31, 62, 194, 84, 80, 193, 83, 183, 11, 35], [118, 216, 161, 255, 225, 241, 243, 209, 149, 17, 79, 48, 71, 125, 4, 107, 229, 121, 155, 216, 246, 172, 55, 66, 121, 145, 13, 223, 39, 217, 43, 81, 45, 74, 27, 120, 65, 214, 59, 253, 245, 44, 99, 110, 118, 85, 225, 130, 132, 109, 86, 191, 168, 17, 154, 24, 121, 233, 212, 3, 131, 86, 68, 17], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 113, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 113, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_tags: <<< res: None
  {"msg_id": "N/A", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "dict:Exchange", "timestamp": 1621255316.9549534, "str_time": "2021-05-17 12:41:56.954953", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://medic-business-logic:3010/topic/issue_credential/"}
  {"msg_id": "N/A", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "dict:Exchange", "timestamp": 1621255316.9553897, "str_time": "2021-05-17 12:41:56.955390", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.END.http://medic-business-logic:3010/topic/issue_credential/"}
Posting to http://medic-business-logic:3010/topic/issue_credential/; Data: {"credential_proposal_dict": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential", "@id": "11b76349-c461-401e-8668-d198a86f1988", "credential_proposal": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview", "attributes": [{"name": "Name", "value": "Will Abramson"}, {"name": "University", "value": "Edinburgh Medical School"}, {"name": "Date Issued", "value": "2021-05-17"}]}, "comment": "create automated credential exchange", "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default"}, "credential_offer": {"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "key_correctness_proof": {"c": "107747385423523632115836196578250990474250248043120793044857578887670452863909", "xz_cap": "1586244352341780132794541217855963081317605983129463453161384095957703681548450423279996528911006184490141593002364161523096697773301566795958311260770694131685659617490052042766948228602009021174830253193753280407501218644017172248343545784178395667622933102148447158003582001117313017226754621101334659678551199825973744063088187841393109142316646117297270384826339443463699972945388178444231379433146556129270311681557955560366969134072834822418893077286887824146135465766500848289365294871421981152793952967536256676750651954256873497663347708937882376817786336627181063524317178504475973177650090129107938137198995794713858069182053781243820308728073904000975521609494131135482476231629694", "xr_cap": [["name", "2445010104240279785454419539698155223698441845615131947057255605891413484855191852395862650354047426980938032570255281394479882196675582528146062849615446386748831687749941283924706576159250359885982933743144134481822934983025927119753508995117128860969694645939425156739934860285101581437692860704894335971162137400618500004679850794718971298388545914512797234787979942174617484809278540105817073698024433287964133544718064703256593730687335820463643878344001265845020210460416529283418989415833093963957866082423465037744177000381094017005547493426948659418757622759203845466397749442091110022363355753373601866428646247334542303110554886848841221043044940976333922929213377276650509797789993"], ["university", "405588672933799103410220765369726138290888617577237886647709691532990222643627669672918401211000053391713834595706241267745808335332863208098789125702373476992491143067515982343362181642523821233579974036460218968312811998528121568337070445945351373689335477458727575581777568903759719551738067048154689937998415789474833312684478455614189924765786674414100628506595249185612522041014222521978637129949252672154316178189822864136717415022602887828840558849814115326130455100672118099592050371067030629564896845926218853630943679331729961935211363266261454611801722607266301770790756132031925883576113290166983925559894028893050072912570811504458202925895594757921155530250823035546783446600652"], ["dateissued", "2485831388479132292438639125953344122383922390112961069687298725612361206845003238304535549486367569982933419504987019487991062941875946860425367652074535702467658938306572161958813573957350335283578203053680019764460235415266122496676990944580678700838536278557231171439356740653822074199155447428599943413097057184082792256675118106645058648524866203158749726795335241557916918992465394980799613831578241913874906484184476114468690019188864457818417800691187583432476607252148513709104151713831098849378016558775902504545470766112579164885457920669257356362342679577328194057321290447456084071454654016750421449789020411593401088694505472000804575894137157791649005631952238998788619818685451"], ["master_secret", "1877226174055086984375064170628942382994174355476041848552431552061972484690430909666119193495034411662265024678369134335873431824380098579150384077964415100748037453111704940196941824100853033003777760038419160447648809182743032640557908510646942028973131466456164445506817784435643648092300963257270435152373585035841368432373446131326628993930706782109978580367257548896575265466936001545354445630661306319165708780001812963076259495069182221757062812178584032904549297393855673483938399261068982416305853402857136291335237479583644345603731414927847251863387830961109669981013799597062924713748871312373704823748169530869442623065679742416855996531053926425517941484747913131612457507213202"]]}, "nonce": "598069920933476898638215"}, "credential_definition_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "credential_id": "PMQ", "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "initiator": "external", "auto_remove": false, "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "credential_exchange_id": "71bf4548-eca4-4e17-9234-f2a75f0a41ed", "role": "holder", "raw_credential": {"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "rev_reg_id": null, "values": {"Date Issued": {"raw": "2021-05-17", "encoded": "31928709163600735441101476658814216885388252189838058973070792022801591336579"}, "Name": {"raw": "Will Abramson", "encoded": "65005548905037764764502350053825769914874082648761230458670796241392891659611"}, "University": {"raw": "Edinburgh Medical School", "encoded": "57963125648994666300875361621729313351158154740138173103415020334594043694317"}}, "signature": {"p_credential": {"m_2": "64614027959237148406577876643582193654195798199659663559565324074474110876426", "a": "28196659349828833841806568922500331419943756793472592515246070472169183103554944278198153816574274149720987095111486068930168219714920197743796206530561438612474718498319743285076562596169213545429930609441229808810198314595598202600904377879617269619009997889921365729164321988246425760507962013213179356489165886495879937830757860813550488653092270182316591558107377505094005438662414556058268151394311488038034371945050944831570625995413228293415919202055974276990013994102772566137746322043107147965689577794487771425424609270637527334712240581940337439348801155923456105656468328904263302114118526537501007139669", "e": "259344723055062059907025491480697571938277889515152306249728583105665800713306759149981690559193987143012367913206299323899696942213235956742930046031686561229403844345113618420029", "v": "6354026336388301401986521152890972249709618813964245602037338330698734314130828006765601555201728676114393573732602693886965849392107855630297351891640801269990034659747926053185070098201542430508515708889270830280358222874522865192378335821753487954245491002769053491204208466619533185143527002699313031827277660717047972233120119465702841112954798655072211467889917359709980309161102427562535741080061045113185079205854056196403185426803056342351523484956234191104274583987854734646184176897408347172222790577708010964678101842400904781237539895339702598771916345745167905791870029121917745408251064199177212964106585715827085668399314453904306461632518873615305262329276997644593556745530080607631408226505403903006930638982430993587434659039373409312070077257810296424683361389295160932899519710429495996593499727601"}, "r_credential": null}, "signature_correctness_proof": {"se": "18296863927500172804293107843176657430120315953488730246315016673748764435345492977644678659634633639966966144817195024079688169206411755462988529782005065401235361183325984987096857804776471818376393329673081462427754929631287497458043150955506212371673105698807070796547668375707556817833298394290228188197143572788135782368887029154633552036967329846441145459760121055008867725749238807541631523967403207207491302781895427812338735115517606944815148175648734522485436888519687819286037082623090058216667028537389082220924000256488191201576310849948310802457826705179331504985933268733209659495364083120527893222046", "c": "102783256414115773702948382631747799094895100492140671927547017198803963895972"}, "rev_reg": null, "witness": null}, "auto_issue": false, "state": "credential_acked", "auto_offer": false, "trace": true, "created_at": "2021-05-17 12:41:32.182428Z", "credential_request": {"prover_did": "Ss9L55FVLDVAE9wH9QUaLm", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "blinded_ms": {"u": "9224297300361713206345205242581525425876271192996320458641268453806993284744433041855951232302416108649807852493880416536479002217662626064251987962620792433711696775248310743442059667607298555472787912019658549174803430954518885700626005287041322904426946303962065056931706908888787939704726174432808216927685887109666587674444056192550660717423227927624453486282341314149475751002910451556036514307793095332128558748863066938547168100951377649932913675838447598045356799555951201398361912658524435217425591210541521389100396408254519973384447851259991989195337892159626964844220321889788412209650610473652595313526", "ur": null, "hidden_attributes": ["master_secret"], "committed_attributes": {}}, "blinded_ms_correctness_proof": {"c": "8734654926560185522422668980289494278226532874472645869964441855250278027234", "v_dash_cap": "325077001895869401502415842751075308023051070883530148216108789555151001541791196103473818778959872981527386492814757717328990830853659070621040596243919654202833994579326811170610642610095086223426253068223502853849591556235548225218579270879990289920066890700095952930596694958003132942182182231477892161939569557669492969972591908424110344832503301818751351132936170597254247562397953045713318321555391171910009271671573229076138722375728822837863616038859563705589340248928755591508580530402464622204178681223238825436849133451924131466319060800077599342857694223408514147204773011309138008733058083473224856093882129662806916677878994525904467638399234363268798655404304692759300635562968995910400060465611333385", "m_caps": {"master_secret": "21842714407304998429210600373826546306145737295462671381090865370398938890399600066674250453799310397400892024600311643314449747571350248959098423570583251987500687953826888622167"}, "r_caps": {}}, "nonce": "959712576749564225650409"}, "credential": {"referent": "PMQ", "attrs": {"University": "Edinburgh Medical School", "Date Issued": "2021-05-17", "Name": "Will Abramson"}, "schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "rev_reg_id": null, "cred_rev_id": null}, "connection_id": "f56b18ea-92e1-4f6d-a094-80da3fad398d", "credential_request_metadata": {"master_secret_blinding_data": {"v_prime": "37216925525859179045689395111583070058972415554546712573454798038576602346678939081470744140993378395039239173524064748914755140045927282305628170335880717167947187275374172745556881851505528860809100659817837821084225229293331313708687138709242814766510385219193593858259977456923554118514427309445027720604932926542014725705937368692851446601934251616254678543827998868672777512572506122499170241734432142895487708840635361936589053403316407449760352262925394429970964365188076181621245705999464769926391409433381093949676175964647467220688291272022977779560619352919009461665004299582781516661541314374581071708792704197986308999549548045", "vr_prime": null}, "nonce": "959712576749564225650409", "master_secret_name": "Medic"}, "updated_at": "2021-05-17 12:41:56.935555Z"}; Headers: {'Content-Type': 'application/json'}
  {"msg_id": "1d2ec265-f821-4c86-a0e9-4f989ab5625f", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/ack", "timestamp": 1621255316.9598293, "str_time": "2021-05-17 12:41:56.959829", "handler": "Medic", "ellapsed_milli": 276, "outcome": "credential_exchange_store.END"}
  {"msg_id": "1d2ec265-f821-4c86-a0e9-4f989ab5625f", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/ack", "timestamp": 1621255316.9614625, "str_time": "2021-05-17 12:41:56.961462", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.ENCODE.START"}
  {"msg_id": "1d2ec265-f821-4c86-a0e9-4f989ab5625f", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/ack", "timestamp": 1621255316.962294, "str_time": "2021-05-17 12:41:56.962294", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.ENCODE.END"}
192.168.208.6 [17/May/2021:12:41:56 +0000] "POST /issue-credential/records/71bf4548-eca4-4e17-9234-f2a75f0a41ed/store HTTP/1.1" 200 11496 "-" "Python/3.7 aiohttp/3.7.4.post0"
pack_message: >>> wallet_handle: 3, message: '{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/ack", "@id": "1d2ec265-f821-4c86-a0e9-4f989ab5625f", "~thread": {"thid": "756497eb-22b7-4c6d-9b38-052a58a9e6bc"}, "~trace": {"target": "log", "full_thread": true, "trace_reports": []}, "status": "OK"}', recipient_verkeys: ['E4Tc1ffC7hWsmnmXLxC34CNWXXPjLvpSC6hdjaKgRGZm'], sender_verkey: 'F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq'
do_call: >>> name: indy_pack_message, args: (c_int(3), b'{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/ack", "@id": "1d2ec265-f821-4c86-a0e9-4f989ab5625f", "~thread": {"thid": "756497eb-22b7-4c6d-9b38-052a58a9e6bc"}, "~trace": {"target": "log", "full_thread": true, "trace_reports": []}, "status": "OK"}', c_uint(268), c_char_p(140572651915848), c_char_p(140572652153824), <CFunctionType object at 0x7fd99efcfc00>)
do_call: Function indy_pack_message returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [97, 50, 75, 52, 116, 48, 101, 118, 65, 65, 104, 120, 49, 89, 87, 57, 53, 111, 118, 53, 55, 69, 87, 51, 50, 53, 50, 120, 50, 112, 114, 121, 122, 119, 122, 49, 78, 68, 106, 114, 78, 43, 71, 57, 56, 121, 120, 90, 65, 88, 114, 72, 110, 116, 114, 97, 101, 75, 99, 57, 87, 114, 84, 106, 56, 49, 77, 48, 72, 77, 98, 67, 66, 97, 77, 70, 43, 73, 98, 43, 51, 116, 112, 82, 116, 56, 52, 97, 115, 121, 83, 98, 113, 71, 52, 65], "Medic"]
_indy_callback: >>> command_handle: 114, err , args: (b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJCR1BpMkZBQXhsdTJrb3daQ3RmWGE5Qm9WbVVud0ZBS3VPLUZtNU51YU5pbGxIVHp4RjhMdTJ2a2dXa1VkUmFUIiwiaGVhZGVyIjp7ImtpZCI6IkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIiwiaXYiOiJzc0dlNG50X0p5cXVpQzRfWjJHdnBIM1FmME1jemhKdiIsInNlbmRlciI6InV6VzVtejF4UnJMeXJhSnl3ck5wbGNrR3RFN2VycmRVTEtKSGc0ejEwMWdYWnBrVjdXVC1GRWhfSXdkbVFnbUJrNWNYOTd0ZndRdEtHcWFod3lRekR1cnc3ZG9CTXdGNEVGZ1pSdnVjRkxVMnZ4aGM3ZXdtbEpySEpwTT0ifX1dfQ==","iv":"nwH2vBSbCq-HET9u","ciphertext":"MCmh8BWCpwerLfFximOq5Xf7T64b1qRJhtDvkTezujcg7YG4SbAOp9CoFxJgtYWECaivWWJ0O76QujQ0SYw5d8SPZ1-sp7gnR4cdJFMOgSgJ-0nDG64wTYG4GkDe2l2mak7rC9iFdL-UHWdgW0b4zWhWsaGf5A2RZ9vsQxYbRMJ9KUzdKBANG_pJRDll21pms7XO7Spmnuyzehw9Q-TTT7W9_KRHMTEJaLUW-1G6qPYnD6F9hCQFNs6QDNeruCeUWGiOgmBNcmcTMbQ8T57rRYHurRhTlOWdZR37kLO3KYIazHAkXZccPikQol7COfwkqc5fTf7phZQg9iIrM3YHnvsnXaJMAq8Qg5LzOw==","tag":"alwNVBYRrYFeXgPc2GB3WA=="}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 114, err , args: (b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJCR1BpMkZBQXhsdTJrb3daQ3RmWGE5Qm9WbVVud0ZBS3VPLUZtNU51YU5pbGxIVHp4RjhMdTJ2a2dXa1VkUmFUIiwiaGVhZGVyIjp7ImtpZCI6IkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIiwiaXYiOiJzc0dlNG50X0p5cXVpQzRfWjJHdnBIM1FmME1jemhKdiIsInNlbmRlciI6InV6VzVtejF4UnJMeXJhSnl3ck5wbGNrR3RFN2VycmRVTEtKSGc0ejEwMWdYWnBrVjdXVC1GRWhfSXdkbVFnbUJrNWNYOTd0ZndRdEtHcWFod3lRekR1cnc3ZG9CTXdGNEVGZ1pSdnVjRkxVMnZ4aGM3ZXdtbEpySEpwTT0ifX1dfQ==","iv":"nwH2vBSbCq-HET9u","ciphertext":"MCmh8BWCpwerLfFximOq5Xf7T64b1qRJhtDvkTezujcg7YG4SbAOp9CoFxJgtYWECaivWWJ0O76QujQ0SYw5d8SPZ1-sp7gnR4cdJFMOgSgJ-0nDG64wTYG4GkDe2l2mak7rC9iFdL-UHWdgW0b4zWhWsaGf5A2RZ9vsQxYbRMJ9KUzdKBANG_pJRDll21pms7XO7Spmnuyzehw9Q-TTT7W9_KRHMTEJaLUW-1G6qPYnD6F9hCQFNs6QDNeruCeUWGiOgmBNcmcTMbQ8T57rRYHurRhTlOWdZR37kLO3KYIazHAkXZccPikQol7COfwkqc5fTf7phZQg9iIrM3YHnvsnXaJMAq8Qg5LzOw==","tag":"alwNVBYRrYFeXgPc2GB3WA=="}',)
_indy_loop_callback: Function returned b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJCR1BpMkZBQXhsdTJrb3daQ3RmWGE5Qm9WbVVud0ZBS3VPLUZtNU51YU5pbGxIVHp4RjhMdTJ2a2dXa1VkUmFUIiwiaGVhZGVyIjp7ImtpZCI6IkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIiwiaXYiOiJzc0dlNG50X0p5cXVpQzRfWjJHdnBIM1FmME1jemhKdiIsInNlbmRlciI6InV6VzVtejF4UnJMeXJhSnl3ck5wbGNrR3RFN2VycmRVTEtKSGc0ejEwMWdYWnBrVjdXVC1GRWhfSXdkbVFnbUJrNWNYOTd0ZndRdEtHcWFod3lRekR1cnc3ZG9CTXdGNEVGZ1pSdnVjRkxVMnZ4aGM3ZXdtbEpySEpwTT0ifX1dfQ==","iv":"nwH2vBSbCq-HET9u","ciphertext":"MCmh8BWCpwerLfFximOq5Xf7T64b1qRJhtDvkTezujcg7YG4SbAOp9CoFxJgtYWECaivWWJ0O76QujQ0SYw5d8SPZ1-sp7gnR4cdJFMOgSgJ-0nDG64wTYG4GkDe2l2mak7rC9iFdL-UHWdgW0b4zWhWsaGf5A2RZ9vsQxYbRMJ9KUzdKBANG_pJRDll21pms7XO7Spmnuyzehw9Q-TTT7W9_KRHMTEJaLUW-1G6qPYnD6F9hCQFNs6QDNeruCeUWGiOgmBNcmcTMbQ8T57rRYHurRhTlOWdZR37kLO3KYIazHAkXZccPikQol7COfwkqc5fTf7phZQg9iIrM3YHnvsnXaJMAq8Qg5LzOw==","tag":"alwNVBYRrYFeXgPc2GB3WA=="}'
_indy_loop_callback <<<
pack_message: <<< res: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJCR1BpMkZBQXhsdTJrb3daQ3RmWGE5Qm9WbVVud0ZBS3VPLUZtNU51YU5pbGxIVHp4RjhMdTJ2a2dXa1VkUmFUIiwiaGVhZGVyIjp7ImtpZCI6IkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIiwiaXYiOiJzc0dlNG50X0p5cXVpQzRfWjJHdnBIM1FmME1jemhKdiIsInNlbmRlciI6InV6VzVtejF4UnJMeXJhSnl3ck5wbGNrR3RFN2VycmRVTEtKSGc0ejEwMWdYWnBrVjdXVC1GRWhfSXdkbVFnbUJrNWNYOTd0ZndRdEtHcWFod3lRekR1cnc3ZG9CTXdGNEVGZ1pSdnVjRkxVMnZ4aGM3ZXdtbEpySEpwTT0ifX1dfQ==","iv":"nwH2vBSbCq-HET9u","ciphertext":"MCmh8BWCpwerLfFximOq5Xf7T64b1qRJhtDvkTezujcg7YG4SbAOp9CoFxJgtYWECaivWWJ0O76QujQ0SYw5d8SPZ1-sp7gnR4cdJFMOgSgJ-0nDG64wTYG4GkDe2l2mak7rC9iFdL-UHWdgW0b4zWhWsaGf5A2RZ9vsQxYbRMJ9KUzdKBANG_pJRDll21pms7XO7Spmnuyzehw9Q-TTT7W9_KRHMTEJaLUW-1G6qPYnD6F9hCQFNs6QDNeruCeUWGiOgmBNcmcTMbQ8T57rRYHurRhTlOWdZR37kLO3KYIazHAkXZccPikQol7COfwkqc5fTf7phZQg9iIrM3YHnvsnXaJMAq8Qg5LzOw==","tag":"alwNVBYRrYFeXgPc2GB3WA=="}'
  {"msg_id": "1d2ec265-f821-4c86-a0e9-4f989ab5625f", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/ack", "timestamp": 1621255316.9706063, "str_time": "2021-05-17 12:41:56.970606", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://22d18366b61a.ngrok.io"}
  {"msg_id": "1d2ec265-f821-4c86-a0e9-4f989ab5625f", "thread_id": "756497eb-22b7-4c6d-9b38-052a58a9e6bc", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/ack", "timestamp": 1621255316.9710863, "str_time": "2021-05-17 12:41:56.971086", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.END.http://22d18366b61a.ngrok.io"}
Posting to http://22d18366b61a.ngrok.io; Data: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJCR1BpMkZBQXhsdTJrb3daQ3RmWGE5Qm9WbVVud0ZBS3VPLUZtNU51YU5pbGxIVHp4RjhMdTJ2a2dXa1VkUmFUIiwiaGVhZGVyIjp7ImtpZCI6IkU0VGMxZmZDN2hXc21ubVhMeEMzNENOV1hYUGpMdnBTQzZoZGphS2dSR1ptIiwiaXYiOiJzc0dlNG50X0p5cXVpQzRfWjJHdnBIM1FmME1jemhKdiIsInNlbmRlciI6InV6VzVtejF4UnJMeXJhSnl3ck5wbGNrR3RFN2VycmRVTEtKSGc0ejEwMWdYWnBrVjdXVC1GRWhfSXdkbVFnbUJrNWNYOTd0ZndRdEtHcWFod3lRekR1cnc3ZG9CTXdGNEVGZ1pSdnVjRkxVMnZ4aGM3ZXdtbEpySEpwTT0ifX1dfQ==","iv":"nwH2vBSbCq-HET9u","ciphertext":"MCmh8BWCpwerLfFximOq5Xf7T64b1qRJhtDvkTezujcg7YG4SbAOp9CoFxJgtYWECaivWWJ0O76QujQ0SYw5d8SPZ1-sp7gnR4cdJFMOgSgJ-0nDG64wTYG4GkDe2l2mak7rC9iFdL-UHWdgW0b4zWhWsaGf5A2RZ9vsQxYbRMJ9KUzdKBANG_pJRDll21pms7XO7Spmnuyzehw9Q-TTT7W9_KRHMTEJaLUW-1G6qPYnD6F9hCQFNs6QDNeruCeUWGiOgmBNcmcTMbQ8T57rRYHurRhTlOWdZR37kLO3KYIazHAkXZccPikQol7COfwkqc5fTf7phZQg9iIrM3YHnvsnXaJMAq8Qg5LzOw==","tag":"alwNVBYRrYFeXgPc2GB3WA=="}'; Headers: {'Content-Type': 'application/ssi-agent-wire'}
Closing pool ledger after timeout
close_pool_ledger: >>> config_name: 27
do_call: >>> name: indy_close_pool_ledger, args: (c_int(27), <CFunctionType object at 0x7fd9c421b8e0>)
do_call: Function indy_close_pool_ledger returned err: 0
do_call: <<< <Future pending>
	src/services/pool/pool.rs:749 | Drop started
	src/services/pool/pool.rs:757 | Drop wait worker
	src/services/pool/pool.rs:760 | Drop finished
_indy_callback: >>> command_handle: 115, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 115, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_pool_ledger: <<< res: None
Incoming request: POST /connections/receive-invitation?auto_accept=false
Match info: <MatchInfo {}: <ResourceRoute [POST] <PlainResource  /connections/receive-invitation> -> <function connections_receive_invitation at 0x7fd9c433b7b8>>
Body: {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation", "@id": "466eec0d-e445-4fdf-870a-6536f56c91fe", "recipientKeys": ["8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a"], "label": "General Medical Council", "serviceEndpoint": "http://343d0cf69e12.ngrok.io"}
add_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'eef16ddd-5609-4e39-9915-f29a1c704a04', value: '{"invitation_key": "8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a", "created_at": "2021-05-17 12:46:08.973586Z", "updated_at": "2021-05-17 12:46:08.973586Z", "their_role": "inviter", "inbound_connection_id": null, "routing_state": "none", "accept": "manual", "invitation_mode": "once", "invitation_msg_id": null, "alias": null, "error_msg": null, "their_label": "General Medical Council", "state": "invitation", "their_public_did": null}', tags_json: '{"invitation_key": "8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a"}'
do_call: >>> name: indy_add_wallet_record, args: (c_int(3), c_char_p(140573352774160), c_char_p(140573273265288), c_char_p(140572651886984), c_char_p(140573273511840), <CFunctionType object at 0x7fd9c421ba70>)
do_call: Function indy_add_wallet_record returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: INSERT INTO items (type, name, value, key, wallet_id) VALUES ($1, $2, $3, $4, $5) RETURNING id
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [109, 73, 104, 49, 120, 54, 51, 101, 73, 56, 70, 48, 50, 104, 119, 52, 113, 120, 74, 121, 56, 108, 113, 50, 88, 122, 43, 110, 49, 88, 75, 118, 109, 116, 117, 55, 83, 89, 117, 115, 68, 88, 54, 84, 121, 121, 68, 119, 104, 71, 65, 56, 81, 53, 88, 113, 89, 112, 104, 99, 66, 67, 56, 88, 74, 79, 101, 74, 89, 121, 87, 114, 108, 54, 65, 102, 99, 55, 49, 79, 103, 121, 108, 67, 122, 103, 61, 61], [71, 22, 218, 149, 181, 112, 148, 166, 226, 193, 224, 247, 46, 3, 211, 113, 86, 34, 104, 212, 154, 80, 107, 224, 207, 151, 238, 193, 163, 65, 228, 38, 104, 83, 201, 28, 217, 85, 3, 252, 147, 1, 247, 182, 238, 175, 206, 131, 177, 90, 98, 134, 209, 231, 124, 184, 142, 90, 0, 240, 72, 128, 201, 230, 66, 154, 51, 18, 154, 85, 219, 19, 126, 243, 254, 83, 194, 199, 232, 16, 180, 30, 116, 98, 193, 209, 18, 202, 51, 141, 126, 57, 253, 29, 33, 25, 28, 131, 137, 18, 26, 130, 191, 129, 159, 212, 75, 111, 242, 79, 82, 59, 251, 34, 254, 42, 92, 37, 175, 181, 155, 110, 44, 193, 244, 195, 56, 9, 232, 6, 240, 222, 172, 122, 163, 236, 148, 52, 229, 103, 238, 121, 178, 217, 242, 5, 215, 115, 152, 128, 96, 167, 148, 236, 223, 222, 57, 132, 140, 252, 32, 208, 71, 72, 26, 122, 56, 52, 51, 118, 91, 225, 7, 205, 168, 138, 150, 237, 35, 193, 114, 220, 154, 78, 100, 54, 89, 9, 50, 227, 187, 245, 102, 17, 120, 126, 237, 255, 212, 143, 191, 53, 117, 47, 168, 90, 128, 209, 116, 32, 15, 60, 134, 63, 27, 103, 186, 192, 92, 47, 67, 195, 97, 208, 100, 112, 193, 86, 208, 197, 29, 28, 198, 103, 187, 255, 42, 211, 197, 173, 87, 5, 49, 202, 170, 112, 84, 145, 23, 79, 222, 6, 45, 190, 187, 234, 35, 215, 36, 182, 31, 219, 47, 88, 46, 252, 208, 151, 215, 104, 170, 160, 136, 136, 201, 248, 129, 9, 143, 35, 105, 82, 5, 58, 205, 35, 43, 239, 212, 132, 41, 102, 46, 89, 48, 164, 245, 157, 46, 197, 198, 28, 231, 251, 156, 41, 97, 83, 208, 196, 6, 199, 64, 15, 19, 239, 5, 144, 145, 11, 55, 99, 40, 203, 253, 5, 177, 225, 137, 188, 246, 35, 207, 155, 165, 252, 17, 111, 192, 252, 55, 141, 235, 242, 152, 64, 225, 254, 254, 122, 54, 115, 251, 179, 236, 10, 77, 132, 162, 214, 142, 206, 90, 179, 102, 49, 181, 84, 111, 23, 53, 30, 11, 59, 243, 100, 193, 115, 50, 110, 130, 157, 27, 167, 255, 0, 242, 29, 20, 183, 59, 108, 220, 134, 91, 47, 252, 229, 150, 251, 195, 243, 221, 140, 107, 24, 131, 247, 32, 223, 179, 16, 144, 34, 155, 51, 79, 239, 228, 18, 23, 163, 155, 201, 223, 11, 136, 226, 175, 61, 65, 24, 217, 251, 65, 110, 250, 79, 192, 96, 24, 99, 21, 25, 200, 53, 245, 101, 10, 97, 88, 215, 15, 228, 249, 6, 32, 229, 248, 208, 53, 162, 181, 64], [96, 169, 32, 168, 37, 81, 162, 32, 17, 200, 207, 170, 161, 77, 134, 5, 94, 49, 233, 198, 24, 242, 12, 15, 236, 65, 6, 130, 232, 44, 205, 218, 92, 203, 88, 199, 121, 11, 220, 117, 48, 215, 112, 1, 153, 2, 130, 100, 69, 146, 78, 68, 119, 17, 204, 112, 254, 6, 113, 29], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: INSERT INTO tags_encrypted (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s2`: INSERT INTO tags_plaintext (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [10, [167, 23, 192, 116, 15, 80, 7, 17, 243, 99, 244, 59, 154, 126, 107, 57, 135, 84, 159, 190, 13, 172, 65, 255, 177, 138, 12, 161, 20, 85, 206, 120, 152, 242, 71, 250, 30, 185, 163, 95, 53, 127], [193, 61, 31, 142, 35, 18, 64, 221, 55, 160, 142, 71, 232, 200, 159, 138, 15, 108, 199, 86, 163, 83, 7, 74, 24, 135, 33, 190, 46, 233, 253, 121, 229, 126, 162, 190, 149, 28, 204, 167, 213, 60, 85, 218, 78, 245, 82, 138, 215, 21, 39, 190, 186, 15, 153, 70, 121, 5, 109, 161, 119, 243, 237, 56, 253, 10, 189, 109, 47, 81, 177, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 116, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 116, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
add_wallet_record: <<< res: None
add_wallet_record: >>> wallet_handle: 3, type_: 'connection_invitation', id: 'e75b9f2870fe45cfa11d340bb02a439c', value: '{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation", "@id": "466eec0d-e445-4fdf-870a-6536f56c91fe", "serviceEndpoint": "http://343d0cf69e12.ngrok.io", "recipientKeys": ["8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a"], "label": "General Medical Council"}', tags_json: '{"connection_id": "eef16ddd-5609-4e39-9915-f29a1c704a04"}'
do_call: >>> name: indy_add_wallet_record, args: (c_int(3), c_char_p(140572651968952), c_char_p(140572651854448), c_char_p(140573275124416), c_char_p(140572652081712), <CFunctionType object at 0x7fd9c421ba70>)
do_call: Function indy_add_wallet_record returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
  {"msg_id": "N/A", "thread_id": "N/A", "traced_type": "dict", "timestamp": 1621255569.0106337, "str_time": "2021-05-17 12:46:09.010634", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://medic-business-logic:3010/topic/connections/"}
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
  {"msg_id": "N/A", "thread_id": "N/A", "traced_type": "dict", "timestamp": 1621255569.0116758, "str_time": "2021-05-17 12:46:09.011676", "handler": "Medic", "ellapsed_milli": 1, "outcome": "OutboundTransportManager.DELIVER.END.http://medic-business-logic:3010/topic/connections/"}
Posting to http://medic-business-logic:3010/topic/connections/; Data: {"accept": "manual", "their_role": "inviter", "rfc23_state": "invitation-received", "created_at": "2021-05-17 12:46:08.973586Z", "invitation_key": "8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a", "routing_state": "none", "invitation_mode": "once", "their_label": "General Medical Council", "connection_id": "eef16ddd-5609-4e39-9915-f29a1c704a04", "state": "invitation", "updated_at": "2021-05-17 12:46:08.973586Z"}; Headers: {'Content-Type': 'application/json'}
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[54, 74, 105, 122, 120, 105, 83, 52, 104, 103, 98, 115, 50, 117, 118, 80, 107, 70, 89, 51, 85, 49, 88, 78, 52, 84, 107, 113, 120, 104, 83, 56, 78, 82, 111, 105, 52, 83, 53, 103, 107, 77, 82, 51, 51, 90, 54, 54, 57, 108, 121, 78, 121, 67, 55, 82, 105, 82, 122, 50, 57, 53, 117, 87, 57, 81, 61, 61], [100, 51, 79, 81, 90, 81, 83, 43, 74, 85, 56, 119, 107, 72, 105, 79, 119, 66, 70, 90, 98, 97, 106, 83, 100, 50, 109, 71, 99, 109, 105, 66, 98, 114, 99, 117, 105, 57, 98, 76, 114, 103, 89, 122, 65, 107, 57, 53, 84, 100, 111, 50, 113, 87, 84, 81, 105, 103, 80, 70, 84, 121, 47, 121, 74, 115, 47, 102, 43, 50, 71, 43, 97, 48, 84, 89, 104, 87, 107, 51], [245, 12, 180, 154, 177, 111, 128, 1, 105, 64, 86, 217, 118, 227, 151, 64, 120, 166, 12, 98, 194, 212, 55, 37, 227, 92, 167, 206, 245, 112, 39, 71, 48, 205, 82, 196, 254, 94, 73, 110, 176, 143, 63, 241, 207, 103, 230, 19, 88, 151, 82, 106, 236, 215, 166, 32, 120, 236, 240, 95, 204, 46, 55, 150, 90, 235, 130, 108, 24, 156, 164, 149, 116, 95, 148, 91, 67, 186, 52, 128, 75, 161, 86, 55, 43, 180, 167, 48, 169, 192, 59, 206, 119, 122, 83, 70, 207, 75, 199, 189, 214, 19, 38, 125, 155, 85, 106, 79, 214, 40, 161, 108, 86, 109, 218, 204, 102, 76, 180, 90, 119, 197, 153, 47, 65, 123, 73, 117, 173, 230, 184, 112, 68, 73, 33, 239, 86, 99, 83, 214, 28, 251, 131, 219, 157, 206, 16, 35, 108, 179, 34, 88, 48, 79, 184, 218, 160, 166, 238, 192, 210, 198, 35, 136, 170, 188, 247, 32, 36, 210, 28, 191, 201, 57, 174, 201, 105, 239, 132, 159, 179, 243, 202, 248, 211, 39, 251, 159, 116, 135, 165, 119, 119, 74, 146, 43, 143, 92, 232, 161, 74, 205, 129, 165, 190, 215, 193, 33, 104, 186, 15, 185, 158, 169, 206, 25, 106, 240, 221, 224, 237, 150, 63, 165, 131, 38, 246, 71, 3, 35, 160, 15, 22, 249, 23, 35, 53, 222, 207, 6, 88, 40, 134, 137, 53, 121, 48, 237, 38, 188, 77, 116, 207, 79, 246, 221, 36, 28, 132, 245, 15, 59, 93, 199, 143, 12, 17, 42, 229, 242, 28, 1, 68, 74, 189, 37, 13, 237, 243, 107, 190, 67, 117, 60, 97, 208, 85, 50, 76, 168, 231, 138, 79, 206, 162, 96, 183, 202, 24, 118, 4, 31, 249, 212], [124, 165, 212, 238, 137, 191, 65, 55, 225, 2, 158, 55, 71, 166, 246, 253, 86, 162, 144, 208, 250, 198, 168, 9, 4, 85, 125, 117, 167, 101, 49, 167, 131, 82, 83, 234, 207, 117, 252, 195, 235, 85, 62, 226, 45, 110, 72, 133, 23, 219, 129, 43, 138, 55, 247, 219, 165, 111, 4, 133], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [11, [128, 44, 37, 101, 162, 29, 239, 218, 239, 135, 73, 229, 99, 65, 201, 55, 101, 9, 38, 46, 195, 245, 150, 56, 78, 77, 221, 254, 77, 76, 130, 82, 151, 7, 46, 97, 64, 6, 192, 66, 200], [134, 57, 211, 240, 196, 0, 28, 254, 244, 65, 71, 23, 148, 152, 227, 33, 186, 247, 97, 142, 57, 122, 236, 52, 190, 120, 72, 237, 132, 43, 95, 173, 161, 66, 141, 170, 71, 6, 133, 241, 201, 224, 200, 70, 188, 129, 110, 209, 221, 5, 26, 64, 2, 158, 54, 177, 36, 62, 202, 152, 103, 173, 59, 93], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 117, err , args: ()
_indy_loop_callback: >>> command_handle: 117, err , args: ()
_indy_callback: <<<
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
add_wallet_record: <<< res: None
Connection invitation will await acceptance
192.168.208.6 [17/May/2021:12:46:08 +0000] "POST /connections/receive-invitation?auto_accept=false HTTP/1.1" 200 571 "-" "Python/3.7 aiohttp/3.7.4.post0"
Incoming request: POST /connections/eef16ddd-5609-4e39-9915-f29a1c704a04/accept-invitation
Match info: <MatchInfo {'conn_id': 'eef16ddd-5609-4e39-9915-f29a1c704a04'}: <ResourceRoute [POST] <DynamicResource  /connections/{conn_id}/accept-invitation> -> <function connections_accept_invitation at 0x7fd9c433b840>>
Body: None
get_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'eef16ddd-5609-4e39-9915-f29a1c704a04', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573352774400), c_char_p(140572652105528), c_char_p(140573273511736), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [109, 73, 104, 49, 120, 54, 51, 101, 73, 56, 70, 48, 50, 104, 119, 52, 113, 120, 74, 121, 56, 108, 113, 50, 88, 122, 43, 110, 49, 88, 75, 118, 109, 116, 117, 55, 83, 89, 117, 115, 68, 88, 54, 84, 121, 121, 68, 119, 104, 71, 65, 56, 81, 53, 88, 113, 89, 112, 104, 99, 66, 67, 56, 88, 74, 79, 101, 74, 89, 121, 87, 114, 108, 54, 65, 102, 99, 55, 49, 79, 103, 121, 108, 67, 122, 103, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 118, err , args: (b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"invitation\\", \\"their_public_did\\": null}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 118, err , args: (b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"invitation\\", \\"their_public_did\\": null}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"invitation\\", \\"their_public_did\\": null}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"invitation\\", \\"their_public_did\\": null}","tags":null}'
get_wallet_record: >>> wallet_handle: 3, type_: 'default_mediator', id: 'default_mediator', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": true}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573273121464), c_char_p(140573273122752), c_char_p(140573273511736), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[113, 109, 56, 90, 100, 97, 70, 102, 49, 73, 104, 109, 74, 89, 77, 102, 81, 66, 88, 103, 84, 56, 111, 100, 43, 66, 67, 79, 68, 56, 56, 116, 107, 97, 111, 114, 43, 105, 109, 73, 71, 72, 106, 56, 120, 112, 107, 69, 65, 122, 85, 120, 65, 102, 117, 55, 77, 110, 56, 61], [113, 109, 56, 90, 100, 97, 70, 102, 49, 73, 104, 109, 74, 89, 77, 102, 88, 83, 82, 87, 118, 120, 87, 98, 81, 77, 108, 71, 73, 83, 50, 113, 75, 106, 52, 117, 57, 68, 80, 109, 75, 53, 103, 49, 54, 56, 79, 51, 121, 43, 50, 107, 54, 114, 69, 78, 76, 50, 73, 61], "Medic"]
_get_error_details: >>>
_get_error_details: <<< error_details: {'backtrace': '', 'message': 'Error: Wallet item not found\n  Caused by: Wallet item not found with type: default_mediator, id: default_mediator\n'}
_indy_callback: >>> command_handle: 119, err , args: (b'',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 119, err , args: (b'',)
_indy_loop_callback: Function returned error 
_indy_loop_callback <<<
create_and_store_my_did: >>> wallet_handle: 3, did_json: '{}'
do_call: >>> name: indy_create_and_store_my_did, args: (c_int(3), c_char_p(140572651892896), <CFunctionType object at 0x7fd9c421be58>)
do_call: Function indy_create_and_store_my_did returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], [57, 47, 55, 65, 102, 72, 100, 66, 66, 122, 116, 102, 43, 98, 105, 51, 68, 120, 67, 73, 117, 103, 69, 80, 79, 118, 49, 107, 78, 52, 49, 122, 56, 54, 73, 120, 116, 79, 68, 112, 121, 115, 118, 97, 84, 67, 119, 121, 99, 118, 112, 115, 116, 116, 65, 122, 105, 120, 71, 49, 43, 104, 84, 107, 84, 90, 85, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], [57, 47, 55, 65, 102, 72, 100, 66, 66, 122, 116, 102, 43, 98, 105, 51, 68, 120, 67, 73, 117, 103, 69, 80, 79, 118, 49, 107, 78, 52, 49, 122, 56, 54, 73, 120, 116, 79, 68, 112, 121, 115, 118, 97, 84, 67, 119, 121, 99, 118, 112, 115, 116, 116, 65, 122, 105, 120, 71, 49, 43, 104, 84, 107, 84, 90, 85, 61], [96, 117, 155, 12, 52, 103, 173, 213, 76, 64, 141, 77, 117, 210, 137, 107, 242, 101, 145, 40, 233, 201, 52, 197, 125, 52, 64, 130, 115, 83, 10, 73, 223, 126, 210, 172, 98, 142, 60, 139, 203, 61, 41, 227, 18, 172, 69, 157, 174, 7, 197, 169, 123, 150, 7, 12, 120, 19, 145, 7, 110, 149, 199, 176, 159, 202, 163, 188, 254, 226, 90, 180, 46, 33, 241, 36, 226, 30, 241, 21, 7, 224, 44, 246, 152, 252, 72, 217, 102, 74, 80, 140, 89, 20, 21, 187, 180, 133, 146, 48, 90, 220, 30, 141, 105, 249, 143, 205, 180, 64, 208, 139, 246, 105, 61, 133], [228, 59, 134, 214, 101, 132, 97, 118, 76, 164, 213, 223, 61, 25, 30, 39, 217, 148, 49, 156, 200, 83, 69, 49, 194, 104, 60, 90, 138, 122, 219, 62, 137, 34, 20, 227, 11, 86, 34, 191, 72, 217, 180, 247, 182, 232, 52, 66, 144, 71, 214, 203, 175, 225, 250, 190, 246, 136, 78, 202], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [86, 77, 116, 105, 49, 56, 101, 52, 99, 75, 104, 56, 74, 104, 78, 51, 97, 57, 110, 74, 88, 48, 56, 54, 108, 106, 116, 120, 121, 116, 117, 97, 107, 79, 50, 107, 104, 52, 109, 52, 80, 73, 88, 110, 53, 100, 71, 69, 109, 71, 107, 99, 56, 100, 74, 121, 120, 55, 116, 89, 97, 121, 81, 114, 102, 109, 53, 85, 69, 52, 56, 119, 119, 48, 108, 78, 86, 84, 68, 121, 81, 117, 88, 65, 107, 86, 100, 90, 72, 106, 51, 120, 104, 112, 105, 122], [243, 40, 162, 219, 218, 80, 100, 220, 250, 35, 223, 86, 139, 167, 137, 127, 192, 216, 230, 108, 135, 217, 202, 73, 2, 233, 234, 132, 56, 163, 247, 34, 79, 69, 138, 236, 54, 6, 30, 119, 15, 60, 74, 48, 29, 112, 169, 248, 243, 60, 23, 211, 119, 81, 254, 125, 143, 158, 193, 157, 79, 230, 168, 146, 85, 104, 18, 205, 154, 236, 187, 75, 104, 125, 19, 232, 113, 178, 66, 4, 31, 239, 139, 195, 226, 170, 116, 194, 100, 254, 66, 194, 25, 24, 206, 224, 154, 103, 14, 250, 184, 65, 182, 200, 144, 211, 156, 188, 64, 231, 218, 118, 153, 243, 72, 230, 146, 120, 96, 216, 126, 201, 93, 212, 75, 255, 56, 239, 104, 19, 45, 2, 227, 154, 132, 186, 227, 66, 126, 178, 52, 154, 17, 233, 39, 39, 58, 38, 184, 49, 15, 76, 184, 58, 214, 189, 226, 241, 138, 130, 172, 98, 161, 106, 22, 64, 196, 64, 43, 218, 77, 32, 93, 224, 217, 153, 212, 242, 127, 189, 213, 56, 113, 106, 99], [4, 157, 56, 32, 73, 178, 95, 236, 24, 237, 121, 66, 25, 120, 148, 238, 123, 143, 189, 43, 255, 57, 190, 175, 225, 61, 87, 158, 202, 108, 66, 133, 1, 201, 31, 169, 33, 100, 175, 110, 248, 4, 57, 196, 71, 249, 97, 13, 153, 109, 14, 230, 244, 177, 249, 56, 126, 176, 155, 71], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 120, err , args: (b'JkkJux3BNa6oWp6AvWMqoY', b'AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj')
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 120, err , args: (b'JkkJux3BNa6oWp6AvWMqoY', b'AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj')
_indy_loop_callback: Function returned (b'JkkJux3BNa6oWp6AvWMqoY', b'AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj')
_indy_loop_callback <<<
create_and_store_my_did: <<< res: ('JkkJux3BNa6oWp6AvWMqoY', 'AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj')
update_wallet_record_value: >>> wallet_handle: 3, type_: 'connection', id: 'eef16ddd-5609-4e39-9915-f29a1c704a04', value: '{"invitation_key": "8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a", "my_did": "JkkJux3BNa6oWp6AvWMqoY", "request_id": "5197a8ab-6bba-40c8-a8be-a70602476833", "created_at": "2021-05-17 12:46:08.973586Z", "updated_at": "2021-05-17 12:46:13.576229Z", "their_role": "inviter", "inbound_connection_id": null, "routing_state": "none", "accept": "manual", "invitation_mode": "once", "invitation_msg_id": null, "alias": null, "error_msg": null, "their_label": "General Medical Council", "state": "request", "their_public_did": null}'
do_call: >>> name: indy_update_wallet_record_value, args: (c_int(3), c_char_p(140573352774400), c_char_p(140572651781584), c_char_p(94095652640512), <CFunctionType object at 0x7fd99efcf110>)
do_call: Function indy_update_wallet_record_value returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s3`: UPDATE items SET value = $1, key = $2 WHERE type = $3 AND name = $4 AND wallet_id = $5
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s3 with parameters: [[254, 121, 222, 48, 83, 3, 83, 20, 164, 184, 150, 47, 35, 54, 6, 8, 161, 212, 67, 66, 181, 212, 224, 88, 105, 237, 49, 89, 62, 60, 113, 151, 147, 159, 57, 91, 7, 115, 177, 25, 98, 17, 156, 71, 250, 71, 252, 174, 59, 21, 47, 134, 33, 162, 9, 147, 138, 53, 34, 204, 37, 126, 152, 85, 82, 48, 194, 30, 94, 227, 74, 11, 208, 111, 228, 183, 226, 216, 164, 9, 148, 196, 250, 108, 109, 168, 223, 83, 193, 92, 160, 156, 35, 241, 226, 1, 170, 89, 193, 30, 200, 64, 44, 188, 198, 99, 80, 51, 149, 11, 233, 145, 212, 224, 10, 217, 33, 55, 87, 243, 172, 133, 92, 159, 39, 244, 122, 18, 235, 218, 179, 224, 145, 109, 234, 50, 246, 3, 170, 253, 126, 162, 46, 86, 15, 139, 165, 37, 192, 15, 193, 113, 202, 32, 79, 89, 158, 191, 97, 213, 55, 105, 219, 203, 199, 79, 37, 158, 120, 60, 6, 193, 89, 81, 243, 0, 167, 238, 57, 207, 50, 39, 153, 248, 2, 241, 68, 218, 18, 4, 195, 60, 229, 232, 31, 37, 131, 120, 94, 213, 89, 149, 185, 44, 4, 174, 242, 35, 100, 220, 105, 73, 151, 27, 103, 203, 6, 75, 159, 168, 50, 94, 97, 185, 86, 223, 17, 33, 73, 179, 11, 65, 131, 229, 69, 161, 73, 115, 58, 21, 65, 122, 130, 64, 155, 161, 246, 186, 130, 16, 28, 73, 44, 112, 15, 116, 239, 40, 46, 252, 242, 32, 31, 94, 90, 169, 235, 203, 119, 125, 174, 237, 162, 42, 144, 132, 149, 164, 161, 218, 66, 62, 101, 158, 104, 85, 64, 125, 249, 133, 79, 9, 182, 102, 110, 188, 1, 163, 11, 26, 49, 224, 146, 65, 247, 23, 197, 161, 59, 29, 237, 232, 248, 87, 91, 7, 122, 200, 28, 111, 46, 27, 250, 252, 52, 159, 76, 45, 211, 59, 56, 55, 215, 79, 33, 249, 176, 93, 80, 50, 254, 47, 80, 159, 230, 108, 240, 188, 240, 23, 16, 188, 214, 96, 89, 172, 77, 192, 7, 101, 249, 115, 7, 98, 15, 109, 142, 177, 77, 5, 237, 66, 226, 193, 238, 73, 167, 102, 70, 69, 181, 234, 10, 251, 20, 91, 253, 80, 178, 54, 196, 89, 30, 97, 179, 126, 6, 105, 4, 36, 103, 48, 253, 44, 173, 181, 55, 151, 242, 57, 188, 255, 110, 119, 36, 250, 132, 31, 38, 31, 51, 14, 153, 22, 185, 222, 163, 110, 192, 0, 89, 184, 102, 58, 165, 154, 231, 79, 253, 143, 50, 98, 80, 60, 154, 51, 173, 96, 37, 94, 147, 141, 248, 153, 59, 18, 47, 130, 148, 49, 109, 37, 124, 116, 69, 77, 3, 58, 245, 139, 242, 149, 19, 125, 195, 138, 126, 68, 52, 166, 217, 30, 30, 238, 156, 140, 111, 46, 213, 117, 181, 186, 45, 234, 49, 14, 177, 230, 146, 225, 201, 150, 174, 251, 183, 66, 137, 91, 18, 230, 188, 7, 142, 13, 211, 38, 230, 143, 123, 81, 78, 58, 214, 131, 189, 247, 113, 112, 23, 3, 108, 102, 204, 206, 199, 56, 251, 81, 83, 26, 249, 71, 134, 50, 13, 194, 126, 4, 66, 80, 87], [209, 33, 249, 18, 52, 178, 130, 198, 140, 250, 128, 177, 174, 27, 195, 90, 102, 169, 183, 215, 147, 248, 40, 89, 80, 190, 224, 237, 206, 89, 180, 175, 180, 47, 50, 201, 157, 14, 115, 24, 182, 164, 105, 215, 107, 146, 73, 2, 12, 180, 190, 227, 10, 143, 93, 174, 212, 49, 135, 230], [73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [109, 73, 104, 49, 120, 54, 51, 101, 73, 56, 70, 48, 50, 104, 119, 52, 113, 120, 74, 121, 56, 108, 113, 50, 88, 122, 43, 110, 49, 88, 75, 118, 109, 116, 117, 55, 83, 89, 117, 115, 68, 88, 54, 84, 121, 121, 68, 119, 104, 71, 65, 56, 81, 53, 88, 113, 89, 112, 104, 99, 66, 67, 56, 88, 74, 79, 101, 74, 89, 121, 87, 114, 108, 54, 65, 102, 99, 55, 49, 79, 103, 121, 108, 67, 122, 103, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 121, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 121, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_value: <<< res: None
update_wallet_record_tags: >>> wallet_handle: 3, type_: 'connection', id: 'eef16ddd-5609-4e39-9915-f29a1c704a04', tags_json: '{"invitation_key": "8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a", "my_did": "JkkJux3BNa6oWp6AvWMqoY", "request_id": "5197a8ab-6bba-40c8-a8be-a70602476833"}'
do_call: >>> name: indy_update_wallet_record_tags, args: (c_int(3), c_char_p(140573352774400), c_char_p(140572651781584), c_char_p(140572651708880), <CFunctionType object at 0x7fd99efcf368>)
do_call: Function indy_update_wallet_record_tags returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s4`: SELECT id FROM items WHERE type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s4 with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [109, 73, 104, 49, 120, 54, 51, 101, 73, 56, 70, 48, 50, 104, 119, 52, 113, 120, 74, 121, 56, 108, 113, 50, 88, 122, 43, 110, 49, 88, 75, 118, 109, 116, 117, 55, 83, 89, 117, 115, 68, 88, 54, 84, 121, 121, 68, 119, 104, 71, 65, 56, 81, 53, 88, 113, 89, 112, 104, 99, 66, 67, 56, 88, 74, 79, 101, 74, 89, 121, 87, 114, 108, 54, 65, 102, 99, 55, 49, 79, 103, 121, 108, 67, 122, 103, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_encrypted WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [10, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_plaintext WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [10, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [10, [167, 23, 192, 116, 15, 80, 7, 17, 243, 99, 244, 59, 154, 126, 107, 57, 135, 84, 159, 190, 13, 172, 65, 255, 177, 138, 12, 161, 20, 85, 206, 120, 152, 242, 71, 250, 30, 185, 163, 95, 53, 127], [193, 61, 31, 142, 35, 18, 64, 221, 55, 160, 142, 71, 232, 200, 159, 138, 15, 108, 199, 86, 163, 83, 7, 74, 24, 135, 33, 190, 46, 233, 253, 121, 229, 126, 162, 190, 149, 28, 204, 167, 213, 60, 85, 218, 78, 245, 82, 138, 215, 21, 39, 190, 186, 15, 153, 70, 121, 5, 109, 161, 119, 243, 237, 56, 253, 10, 189, 109, 47, 81, 177, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [10, [27, 226, 221, 240, 203, 243, 82, 65, 0, 81, 190, 180, 210, 22, 123, 46, 87, 60, 91, 123, 197, 182, 67, 89, 146, 121, 217, 236, 110, 174, 137, 104, 108, 127, 139, 128, 29, 20], [22, 22, 10, 53, 78, 155, 217, 149, 136, 71, 74, 244, 254, 215, 183, 129, 229, 69, 130, 200, 85, 132, 25, 164, 17, 103, 210, 101, 1, 112, 101, 30, 124, 76, 133, 229, 240, 6, 1, 60, 214, 129, 173, 73, 25, 119, 163, 218, 164, 122, 204, 140, 245, 222, 3, 206, 126, 211, 240, 40, 50, 28, 40, 186], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [10, [124, 188, 227, 212, 249, 145, 68, 148, 206, 221, 218, 202, 197, 44, 202, 175, 68, 115, 188, 201, 151, 19, 118, 100, 161, 169, 36, 131, 17, 142, 122, 97, 175, 70], [138, 197, 128, 141, 65, 156, 75, 211, 88, 65, 252, 212, 249, 31, 129, 39, 97, 155, 100, 249, 145, 228, 254, 39, 50, 126, 230, 231, 97, 58, 15, 202, 67, 242, 162, 152, 220, 210, 85, 13, 210, 63, 10, 240, 108, 62, 214, 220, 139, 34], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 122, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 122, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_tags: <<< res: None
  {"msg_id": "N/A", "thread_id": "N/A", "traced_type": "dict", "timestamp": 1621255573.6258204, "str_time": "2021-05-17 12:46:13.625820", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://medic-business-logic:3010/topic/connections/"}
  {"msg_id": "N/A", "thread_id": "N/A", "traced_type": "dict", "timestamp": 1621255573.6268559, "str_time": "2021-05-17 12:46:13.626856", "handler": "Medic", "ellapsed_milli": 1, "outcome": "OutboundTransportManager.DELIVER.END.http://medic-business-logic:3010/topic/connections/"}
get_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'eef16ddd-5609-4e39-9915-f29a1c704a04', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573273869824), c_char_p(140572626356920), c_char_p(140573273512360), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
Posting to http://medic-business-logic:3010/topic/connections/; Data: {"accept": "manual", "their_role": "inviter", "rfc23_state": "request-sent", "created_at": "2021-05-17 12:46:08.973586Z", "invitation_key": "8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a", "request_id": "5197a8ab-6bba-40c8-a8be-a70602476833", "routing_state": "none", "invitation_mode": "once", "my_did": "JkkJux3BNa6oWp6AvWMqoY", "their_label": "General Medical Council", "connection_id": "eef16ddd-5609-4e39-9915-f29a1c704a04", "state": "request", "updated_at": "2021-05-17 12:46:13.576229Z"}; Headers: {'Content-Type': 'application/json'}
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [109, 73, 104, 49, 120, 54, 51, 101, 73, 56, 70, 48, 50, 104, 119, 52, 113, 120, 74, 121, 56, 108, 113, 50, 88, 122, 43, 110, 49, 88, 75, 118, 109, 116, 117, 55, 83, 89, 117, 115, 68, 88, 54, 84, 121, 121, 68, 119, 104, 71, 65, 56, 81, 53, 88, 113, 89, 112, 104, 99, 66, 67, 56, 88, 74, 79, 101, 74, 89, 121, 87, 114, 108, 54, 65, 102, 99, 55, 49, 79, 103, 121, 108, 67, 122, 103, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 123, err , args: (b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:13.576229Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 123, err , args: (b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:13.576229Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:13.576229Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:13.576229Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}'
get_my_did_with_meta: >>> wallet_handle: 3, did: 'JkkJux3BNa6oWp6AvWMqoY'
do_call: >>> name: indy_get_my_did_with_meta, args: (c_int(3), c_char_p(140572651735872), <CFunctionType object at 0x7fd99efcf4f8>)
do_call: Function indy_get_my_did_with_meta returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], [57, 47, 55, 65, 102, 72, 100, 66, 66, 122, 116, 102, 43, 98, 105, 51, 68, 120, 67, 73, 117, 103, 69, 80, 79, 118, 49, 107, 78, 52, 49, 122, 56, 54, 73, 120, 116, 79, 68, 112, 121, 115, 118, 97, 84, 67, 119, 121, 99, 118, 112, 115, 116, 116, 65, 122, 105, 120, 71, 49, 43, 104, 84, 107, 84, 90, 85, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], [57, 47, 55, 65, 102, 72, 100, 66, 66, 122, 116, 102, 43, 98, 105, 51, 68, 120, 67, 73, 117, 103, 69, 80, 79, 118, 49, 107, 78, 52, 49, 122, 56, 54, 73, 120, 116, 79, 68, 112, 121, 115, 118, 97, 84, 67, 119, 121, 99, 118, 112, 115, 116, 116, 65, 122, 105, 120, 71, 49, 43, 104, 84, 107, 84, 90, 85, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], [57, 47, 55, 65, 102, 72, 100, 66, 66, 122, 116, 102, 43, 98, 105, 51, 68, 120, 67, 73, 117, 103, 69, 80, 79, 118, 49, 107, 78, 52, 49, 122, 56, 54, 73, 120, 116, 79, 68, 112, 121, 115, 118, 97, 84, 67, 119, 121, 99, 118, 112, 115, 116, 116, 65, 122, 105, 120, 71, 49, 43, 104, 84, 107, 84, 90, 85, 61], "Medic"]
_indy_callback: >>> command_handle: 124, err , args: (b'{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 124, err , args: (b'{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null}',)
_indy_loop_callback: Function returned b'{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null}'
_indy_loop_callback <<<
get_my_did_with_meta: <<< res: '{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null}'
open_wallet_search: >>> wallet_handle: 3, type_: 'connection_invitation', query_json: '{"connection_id": "eef16ddd-5609-4e39-9915-f29a1c704a04"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": true}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140572651735984), c_char_p(140572652085072), c_char_p(140573275299344), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: SELECT name, value from tags_plaintext where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: SELECT name, value from tags_encrypted where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[54, 74, 105, 122, 120, 105, 83, 52, 104, 103, 98, 115, 50, 117, 118, 80, 107, 70, 89, 51, 85, 49, 88, 78, 52, 84, 107, 113, 120, 104, 83, 56, 78, 82, 111, 105, 52, 83, 53, 103, 107, 77, 82, 51, 51, 90, 54, 54, 57, 108, 121, 78, 121, 67, 55, 82, 105, 82, 122, 50, 57, 53, 117, 87, 57, 81, 61, 61], [128, 44, 37, 101, 162, 29, 239, 218, 239, 135, 73, 229, 99, 65, 201, 55, 101, 9, 38, 46, 195, 245, 150, 56, 78, 77, 221, 254, 77, 76, 130, 82, 151, 7, 46, 97, 64, 6, 192, 66, 200], [134, 57, 211, 240, 196, 0, 28, 254, 244, 65, 71, 23, 148, 152, 227, 33, 186, 247, 97, 142, 57, 122, 236, 52, 190, 120, 72, 237, 132, 43, 95, 173, 161, 66, 141, 170, 71, 6, 133, 241, 201, 224, 200, 70, 188, 129, 110, 209, 221, 5, 26, 64, 2, 158, 54, 177, 36, 62, 202, 152, 103, 173, 59, 93], "Medic", "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [11, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [11, "Medic"]
_indy_callback: >>> command_handle: 125, err , args: (30,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 125, err , args: (30,)
_indy_loop_callback: Function returned 30
_indy_loop_callback <<<
open_wallet_search: <<< res: 30
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 30, count: 2
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(30), c_uint(2), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 126, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"e75b9f2870fe45cfa11d340bb02a439c","value":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation\\", \\"@id\\": \\"466eec0d-e445-4fdf-870a-6536f56c91fe\\", \\"serviceEndpoint\\": \\"http://343d0cf69e12.ngrok.io\\", \\"recipientKeys\\": [\\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\"], \\"label\\": \\"General Medical Council\\"}","tags":{"connection_id":"eef16ddd-5609-4e39-9915-f29a1c704a04"}}]}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 126, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"e75b9f2870fe45cfa11d340bb02a439c","value":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation\\", \\"@id\\": \\"466eec0d-e445-4fdf-870a-6536f56c91fe\\", \\"serviceEndpoint\\": \\"http://343d0cf69e12.ngrok.io\\", \\"recipientKeys\\": [\\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\"], \\"label\\": \\"General Medical Council\\"}","tags":{"connection_id":"eef16ddd-5609-4e39-9915-f29a1c704a04"}}]}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":[{"type":null,"id":"e75b9f2870fe45cfa11d340bb02a439c","value":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation\\", \\"@id\\": \\"466eec0d-e445-4fdf-870a-6536f56c91fe\\", \\"serviceEndpoint\\": \\"http://343d0cf69e12.ngrok.io\\", \\"recipientKeys\\": [\\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\"], \\"label\\": \\"General Medical Council\\"}","tags":{"connection_id":"eef16ddd-5609-4e39-9915-f29a1c704a04"}}]}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":[{"type":null,"id":"e75b9f2870fe45cfa11d340bb02a439c","value":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation\\", \\"@id\\": \\"466eec0d-e445-4fdf-870a-6536f56c91fe\\", \\"serviceEndpoint\\": \\"http://343d0cf69e12.ngrok.io\\", \\"recipientKeys\\": [\\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\"], \\"label\\": \\"General Medical Council\\"}","tags":{"connection_id":"eef16ddd-5609-4e39-9915-f29a1c704a04"}}]}'
close_wallet_search: >>> wallet_search_handle: 30
do_call: >>> name: indy_close_wallet_search, args: (c_int(30), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
_indy_callback: >>> command_handle: 127, err , args: ()
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 127, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
  {"msg_id": "5197a8ab-6bba-40c8-a8be-a70602476833", "thread_id": "5197a8ab-6bba-40c8-a8be-a70602476833", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/request", "timestamp": 1621255573.7242122, "str_time": "2021-05-17 12:46:13.724212", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.ENCODE.START"}
  {"msg_id": "5197a8ab-6bba-40c8-a8be-a70602476833", "thread_id": "5197a8ab-6bba-40c8-a8be-a70602476833", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/request", "timestamp": 1621255573.724957, "str_time": "2021-05-17 12:46:13.724957", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.ENCODE.END"}
192.168.208.6 [17/May/2021:12:46:13 +0000] "POST /connections/eef16ddd-5609-4e39-9915-f29a1c704a04/accept-invitation HTTP/1.1" 200 651 "-" "Python/3.7 aiohttp/3.7.4.post0"
pack_message: >>> wallet_handle: 3, message: '{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/request", "@id": "5197a8ab-6bba-40c8-a8be-a70602476833", "connection": {"DID": "JkkJux3BNa6oWp6AvWMqoY", "DIDDoc": {"@context": "https://w3id.org/did/v1", "id": "did:sov:JkkJux3BNa6oWp6AvWMqoY", "publicKey": [{"id": "did:sov:JkkJux3BNa6oWp6AvWMqoY#1", "type": "Ed25519VerificationKey2018", "controller": "did:sov:JkkJux3BNa6oWp6AvWMqoY", "publicKeyBase58": "AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj"}], "authentication": [{"type": "Ed25519SignatureAuthentication2018", "publicKey": "did:sov:JkkJux3BNa6oWp6AvWMqoY#1"}], "service": [{"id": "did:sov:JkkJux3BNa6oWp6AvWMqoY;indy", "type": "IndyAgent", "priority": 0, "recipientKeys": ["AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj"], "serviceEndpoint": "http://ab05c659dac0.ngrok.io"}, {"id": "did:sov:JkkJux3BNa6oWp6AvWMqoY;indy1", "type": "IndyAgent", "priority": 0, "recipientKeys": ["AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj"], "serviceEndpoint": "ws://ab05c659dac0.ngrok.io"}]}}, "label": "Medical Student"}', recipient_verkeys: ['8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a'], sender_verkey: 'AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj'
do_call: >>> name: indy_pack_message, args: (c_int(3), b'{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/request", "@id": "5197a8ab-6bba-40c8-a8be-a70602476833", "connection": {"DID": "JkkJux3BNa6oWp6AvWMqoY", "DIDDoc": {"@context": "https://w3id.org/did/v1", "id": "did:sov:JkkJux3BNa6oWp6AvWMqoY", "publicKey": [{"id": "did:sov:JkkJux3BNa6oWp6AvWMqoY#1", "type": "Ed25519VerificationKey2018", "controller": "did:sov:JkkJux3BNa6oWp6AvWMqoY", "publicKeyBase58": "AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj"}], "authentication": [{"type": "Ed25519SignatureAuthentication2018", "publicKey": "did:sov:JkkJux3BNa6oWp6AvWMqoY#1"}], "service": [{"id": "did:sov:JkkJux3BNa6oWp6AvWMqoY;indy", "type": "IndyAgent", "priority": 0, "recipientKeys": ["AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj"], "serviceEndpoint": "http://ab05c659dac0.ngrok.io"}, {"id": "did:sov:JkkJux3BNa6oWp6AvWMqoY;indy1", "type": "IndyAgent", "priority": 0, "recipientKeys": ["AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj"], "serviceEndpoint": "ws://ab05c659dac0.ngrok.io"}]}}, "label": "Medical Student"}', c_uint(1030), c_char_p(140572651916200), c_char_p(140572652025808), <CFunctionType object at 0x7fd99efcfc00>)
do_call: Function indy_pack_message returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [86, 77, 116, 105, 49, 56, 101, 52, 99, 75, 104, 56, 74, 104, 78, 51, 97, 57, 110, 74, 88, 48, 56, 54, 108, 106, 116, 120, 121, 116, 117, 97, 107, 79, 50, 107, 104, 52, 109, 52, 80, 73, 88, 110, 53, 100, 71, 69, 109, 71, 107, 99, 56, 100, 74, 121, 120, 55, 116, 89, 97, 121, 81, 114, 102, 109, 53, 85, 69, 52, 56, 119, 119, 48, 108, 78, 86, 84, 68, 121, 81, 117, 88, 65, 107, 86, 100, 90, 72, 106, 51, 120, 104, 112, 105, 122], "Medic"]
_indy_callback: >>> command_handle: 128, err , args: (b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJkcWp2enNzdER5aGFMR3c1ZmVZZnJjNEpxTTE5Mkd2UTZELXJsdHBOYURJdVluaU9DUndiNFdDaXp4SDhFT1FIIiwiaGVhZGVyIjp7ImtpZCI6IjhjQ1pEN2FlTmZwMVc3MnFwZ0wxUkNkNHlmZUJ4RzZhUE1HZUFVTEd3MzVhIiwiaXYiOiJHOFdTZTZoTW8tVVVmNWxUZEQyd29rbHdKR2NXZHFjYiIsInNlbmRlciI6Il9Gb3VpX24tazdBT3U3MUxKT3UxSnB3c3gwOGdZZlJ2cUNhbElia3gtblhLNnNjNHYzTUZtX21mTlhhWFIxQWdFLXctRnM3SWZWb2I0TTctMGhyNm5yWWZHaUdmcVY5bDd0MW43WVVEeXBDbUY4NHR0ajdfYVk3YTdnbz0ifX1dfQ==","iv":"7Y5X8yDue7EgSuKm","ciphertext":"lKy_pRFs9V15DjWxe0ovsrgQtZ1TGaO3MKs2rL6pXpKDwabbjnZTncHYjNjT9GSB0TaXYSl52JKcHrhR1X6Z3AbNUgpsh4krSparn01WgLPn1zWW_0omoSJA8w-G_dCgm4gqr3uf2-bWlfQhW8QGpiY0FmDRFqBCVxpOokjNrvUjydCTOsLg23HVmnRZ02U9YarJFVHo66vEOyn6k4a2l7kwFGRRHI4RWjML3gi8tqalQ7FVOwxMnE-4fYpc09skyOniXA1w2zeOut1ElplsGwQL5_EZO2dsAd3MYM3XriT3k6-TZzuTzYPIYF4RTRK3vRQMidKYCzuhE-lL-05MVLgcPipSj7cW_7S1-h-ld4Bdn3Bvg0IT6RakKdv_Z_FaJCdvaK1JGj7czbJ_aGQKsNsaZskRgNcZKvhpJjDCpS6feBqH75okwvVE2fpz3kDtnI9LloieD3RWkfkOQWJC2CQcKaPkghMr_u2kpN8qEHxJjGOUtKY1oPW1MOjlmQiUsxsMjUC7GdADesa4EOQo4DK0ju9OYW8t1HpT9AhU6K3sLxEGrVtAhRQ83LSSv80EyTvXdTtNgq_z85_ou2aFU9xOGyOGSIFpIgHozn4CtOYyiqEuU1lPtYr9LbgVZrv3RhfvcCfCA6folq0W5lU-YRKQRmbsSJOfsma643wdTUjNWezHKTsBt47FREKv05x4X7--NkhqbSkrbaJc_lqjHJNG1iB-0WJ08nYBJ8kHFr9EB9odHy_0_fQ6PlMNAHep9JS9HCyz4kbrNEGpbiEroiR7Kq7swbht8AWWkTe6zqTXPRMKWQzFIBr3DyW0Pa1p20nM3EVdu99m-5r5x8bcQb0_kp3VhGuebcGwDcfBtEum3xYyVqWVFKFAp34aRYiw4oVfDG7ozcyHTNN7xUp_-fe2MwZ8aiow3CBeMSQ3QIpr-7ide1jA8AKGsexr_NxDjLvqMgzPTHr19c3p-hfi2VfJSbhQaSj_7SKwGsWa0l-zsMWJ8V4wKN8V0SD-n4UCH3JG2ciUXUuPMRMu4-BjQxAZPrVOcGIxILcfLvBGwd6kHpF26bKA2Roh15PZY_ezukF-7FYjAjF3D3LTdfR3eIwBxqe7mP19J_Z80du8_ms57hKUETalb6GN-65Jv88k3Bt_rY1D0PeV6Ssro4gN5YybB2-jMkbjaKMvxb3b0dPQCOUqgiu8jCZ9n_Zv4UdJST-15cMeYXD2N9oIVu5oj6kL1vzDEB-Bc1fuGI3rgp2qZE_r3-acfK-0xELDcfMlE2DjxMp7hzsHPcsSEMbEuimpXUlXQo5RrXLQFnO86pCSAs3IswBdKxhwtnvIY7RYsTVWvAgnTbgihIaZkt9y2kC9JlQWWw==","tag":"nIk_xDollcjRtMXOq4kYWA=="}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 128, err , args: (b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJkcWp2enNzdER5aGFMR3c1ZmVZZnJjNEpxTTE5Mkd2UTZELXJsdHBOYURJdVluaU9DUndiNFdDaXp4SDhFT1FIIiwiaGVhZGVyIjp7ImtpZCI6IjhjQ1pEN2FlTmZwMVc3MnFwZ0wxUkNkNHlmZUJ4RzZhUE1HZUFVTEd3MzVhIiwiaXYiOiJHOFdTZTZoTW8tVVVmNWxUZEQyd29rbHdKR2NXZHFjYiIsInNlbmRlciI6Il9Gb3VpX24tazdBT3U3MUxKT3UxSnB3c3gwOGdZZlJ2cUNhbElia3gtblhLNnNjNHYzTUZtX21mTlhhWFIxQWdFLXctRnM3SWZWb2I0TTctMGhyNm5yWWZHaUdmcVY5bDd0MW43WVVEeXBDbUY4NHR0ajdfYVk3YTdnbz0ifX1dfQ==","iv":"7Y5X8yDue7EgSuKm","ciphertext":"lKy_pRFs9V15DjWxe0ovsrgQtZ1TGaO3MKs2rL6pXpKDwabbjnZTncHYjNjT9GSB0TaXYSl52JKcHrhR1X6Z3AbNUgpsh4krSparn01WgLPn1zWW_0omoSJA8w-G_dCgm4gqr3uf2-bWlfQhW8QGpiY0FmDRFqBCVxpOokjNrvUjydCTOsLg23HVmnRZ02U9YarJFVHo66vEOyn6k4a2l7kwFGRRHI4RWjML3gi8tqalQ7FVOwxMnE-4fYpc09skyOniXA1w2zeOut1ElplsGwQL5_EZO2dsAd3MYM3XriT3k6-TZzuTzYPIYF4RTRK3vRQMidKYCzuhE-lL-05MVLgcPipSj7cW_7S1-h-ld4Bdn3Bvg0IT6RakKdv_Z_FaJCdvaK1JGj7czbJ_aGQKsNsaZskRgNcZKvhpJjDCpS6feBqH75okwvVE2fpz3kDtnI9LloieD3RWkfkOQWJC2CQcKaPkghMr_u2kpN8qEHxJjGOUtKY1oPW1MOjlmQiUsxsMjUC7GdADesa4EOQo4DK0ju9OYW8t1HpT9AhU6K3sLxEGrVtAhRQ83LSSv80EyTvXdTtNgq_z85_ou2aFU9xOGyOGSIFpIgHozn4CtOYyiqEuU1lPtYr9LbgVZrv3RhfvcCfCA6folq0W5lU-YRKQRmbsSJOfsma643wdTUjNWezHKTsBt47FREKv05x4X7--NkhqbSkrbaJc_lqjHJNG1iB-0WJ08nYBJ8kHFr9EB9odHy_0_fQ6PlMNAHep9JS9HCyz4kbrNEGpbiEroiR7Kq7swbht8AWWkTe6zqTXPRMKWQzFIBr3DyW0Pa1p20nM3EVdu99m-5r5x8bcQb0_kp3VhGuebcGwDcfBtEum3xYyVqWVFKFAp34aRYiw4oVfDG7ozcyHTNN7xUp_-fe2MwZ8aiow3CBeMSQ3QIpr-7ide1jA8AKGsexr_NxDjLvqMgzPTHr19c3p-hfi2VfJSbhQaSj_7SKwGsWa0l-zsMWJ8V4wKN8V0SD-n4UCH3JG2ciUXUuPMRMu4-BjQxAZPrVOcGIxILcfLvBGwd6kHpF26bKA2Roh15PZY_ezukF-7FYjAjF3D3LTdfR3eIwBxqe7mP19J_Z80du8_ms57hKUETalb6GN-65Jv88k3Bt_rY1D0PeV6Ssro4gN5YybB2-jMkbjaKMvxb3b0dPQCOUqgiu8jCZ9n_Zv4UdJST-15cMeYXD2N9oIVu5oj6kL1vzDEB-Bc1fuGI3rgp2qZE_r3-acfK-0xELDcfMlE2DjxMp7hzsHPcsSEMbEuimpXUlXQo5RrXLQFnO86pCSAs3IswBdKxhwtnvIY7RYsTVWvAgnTbgihIaZkt9y2kC9JlQWWw==","tag":"nIk_xDollcjRtMXOq4kYWA=="}',)
_indy_loop_callback: Function returned b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJkcWp2enNzdER5aGFMR3c1ZmVZZnJjNEpxTTE5Mkd2UTZELXJsdHBOYURJdVluaU9DUndiNFdDaXp4SDhFT1FIIiwiaGVhZGVyIjp7ImtpZCI6IjhjQ1pEN2FlTmZwMVc3MnFwZ0wxUkNkNHlmZUJ4RzZhUE1HZUFVTEd3MzVhIiwiaXYiOiJHOFdTZTZoTW8tVVVmNWxUZEQyd29rbHdKR2NXZHFjYiIsInNlbmRlciI6Il9Gb3VpX24tazdBT3U3MUxKT3UxSnB3c3gwOGdZZlJ2cUNhbElia3gtblhLNnNjNHYzTUZtX21mTlhhWFIxQWdFLXctRnM3SWZWb2I0TTctMGhyNm5yWWZHaUdmcVY5bDd0MW43WVVEeXBDbUY4NHR0ajdfYVk3YTdnbz0ifX1dfQ==","iv":"7Y5X8yDue7EgSuKm","ciphertext":"lKy_pRFs9V15DjWxe0ovsrgQtZ1TGaO3MKs2rL6pXpKDwabbjnZTncHYjNjT9GSB0TaXYSl52JKcHrhR1X6Z3AbNUgpsh4krSparn01WgLPn1zWW_0omoSJA8w-G_dCgm4gqr3uf2-bWlfQhW8QGpiY0FmDRFqBCVxpOokjNrvUjydCTOsLg23HVmnRZ02U9YarJFVHo66vEOyn6k4a2l7kwFGRRHI4RWjML3gi8tqalQ7FVOwxMnE-4fYpc09skyOniXA1w2zeOut1ElplsGwQL5_EZO2dsAd3MYM3XriT3k6-TZzuTzYPIYF4RTRK3vRQMidKYCzuhE-lL-05MVLgcPipSj7cW_7S1-h-ld4Bdn3Bvg0IT6RakKdv_Z_FaJCdvaK1JGj7czbJ_aGQKsNsaZskRgNcZKvhpJjDCpS6feBqH75okwvVE2fpz3kDtnI9LloieD3RWkfkOQWJC2CQcKaPkghMr_u2kpN8qEHxJjGOUtKY1oPW1MOjlmQiUsxsMjUC7GdADesa4EOQo4DK0ju9OYW8t1HpT9AhU6K3sLxEGrVtAhRQ83LSSv80EyTvXdTtNgq_z85_ou2aFU9xOGyOGSIFpIgHozn4CtOYyiqEuU1lPtYr9LbgVZrv3RhfvcCfCA6folq0W5lU-YRKQRmbsSJOfsma643wdTUjNWezHKTsBt47FREKv05x4X7--NkhqbSkrbaJc_lqjHJNG1iB-0WJ08nYBJ8kHFr9EB9odHy_0_fQ6PlMNAHep9JS9HCyz4kbrNEGpbiEroiR7Kq7swbht8AWWkTe6zqTXPRMKWQzFIBr3DyW0Pa1p20nM3EVdu99m-5r5x8bcQb0_kp3VhGuebcGwDcfBtEum3xYyVqWVFKFAp34aRYiw4oVfDG7ozcyHTNN7xUp_-fe2MwZ8aiow3CBeMSQ3QIpr-7ide1jA8AKGsexr_NxDjLvqMgzPTHr19c3p-hfi2VfJSbhQaSj_7SKwGsWa0l-zsMWJ8V4wKN8V0SD-n4UCH3JG2ciUXUuPMRMu4-BjQxAZPrVOcGIxILcfLvBGwd6kHpF26bKA2Roh15PZY_ezukF-7FYjAjF3D3LTdfR3eIwBxqe7mP19J_Z80du8_ms57hKUETalb6GN-65Jv88k3Bt_rY1D0PeV6Ssro4gN5YybB2-jMkbjaKMvxb3b0dPQCOUqgiu8jCZ9n_Zv4UdJST-15cMeYXD2N9oIVu5oj6kL1vzDEB-Bc1fuGI3rgp2qZE_r3-acfK-0xELDcfMlE2DjxMp7hzsHPcsSEMbEuimpXUlXQo5RrXLQFnO86pCSAs3IswBdKxhwtnvIY7RYsTVWvAgnTbgihIaZkt9y2kC9JlQWWw==","tag":"nIk_xDollcjRtMXOq4kYWA=="}'
_indy_loop_callback <<<
pack_message: <<< res: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJkcWp2enNzdER5aGFMR3c1ZmVZZnJjNEpxTTE5Mkd2UTZELXJsdHBOYURJdVluaU9DUndiNFdDaXp4SDhFT1FIIiwiaGVhZGVyIjp7ImtpZCI6IjhjQ1pEN2FlTmZwMVc3MnFwZ0wxUkNkNHlmZUJ4RzZhUE1HZUFVTEd3MzVhIiwiaXYiOiJHOFdTZTZoTW8tVVVmNWxUZEQyd29rbHdKR2NXZHFjYiIsInNlbmRlciI6Il9Gb3VpX24tazdBT3U3MUxKT3UxSnB3c3gwOGdZZlJ2cUNhbElia3gtblhLNnNjNHYzTUZtX21mTlhhWFIxQWdFLXctRnM3SWZWb2I0TTctMGhyNm5yWWZHaUdmcVY5bDd0MW43WVVEeXBDbUY4NHR0ajdfYVk3YTdnbz0ifX1dfQ==","iv":"7Y5X8yDue7EgSuKm","ciphertext":"lKy_pRFs9V15DjWxe0ovsrgQtZ1TGaO3MKs2rL6pXpKDwabbjnZTncHYjNjT9GSB0TaXYSl52JKcHrhR1X6Z3AbNUgpsh4krSparn01WgLPn1zWW_0omoSJA8w-G_dCgm4gqr3uf2-bWlfQhW8QGpiY0FmDRFqBCVxpOokjNrvUjydCTOsLg23HVmnRZ02U9YarJFVHo66vEOyn6k4a2l7kwFGRRHI4RWjML3gi8tqalQ7FVOwxMnE-4fYpc09skyOniXA1w2zeOut1ElplsGwQL5_EZO2dsAd3MYM3XriT3k6-TZzuTzYPIYF4RTRK3vRQMidKYCzuhE-lL-05MVLgcPipSj7cW_7S1-h-ld4Bdn3Bvg0IT6RakKdv_Z_FaJCdvaK1JGj7czbJ_aGQKsNsaZskRgNcZKvhpJjDCpS6feBqH75okwvVE2fpz3kDtnI9LloieD3RWkfkOQWJC2CQcKaPkghMr_u2kpN8qEHxJjGOUtKY1oPW1MOjlmQiUsxsMjUC7GdADesa4EOQo4DK0ju9OYW8t1HpT9AhU6K3sLxEGrVtAhRQ83LSSv80EyTvXdTtNgq_z85_ou2aFU9xOGyOGSIFpIgHozn4CtOYyiqEuU1lPtYr9LbgVZrv3RhfvcCfCA6folq0W5lU-YRKQRmbsSJOfsma643wdTUjNWezHKTsBt47FREKv05x4X7--NkhqbSkrbaJc_lqjHJNG1iB-0WJ08nYBJ8kHFr9EB9odHy_0_fQ6PlMNAHep9JS9HCyz4kbrNEGpbiEroiR7Kq7swbht8AWWkTe6zqTXPRMKWQzFIBr3DyW0Pa1p20nM3EVdu99m-5r5x8bcQb0_kp3VhGuebcGwDcfBtEum3xYyVqWVFKFAp34aRYiw4oVfDG7ozcyHTNN7xUp_-fe2MwZ8aiow3CBeMSQ3QIpr-7ide1jA8AKGsexr_NxDjLvqMgzPTHr19c3p-hfi2VfJSbhQaSj_7SKwGsWa0l-zsMWJ8V4wKN8V0SD-n4UCH3JG2ciUXUuPMRMu4-BjQxAZPrVOcGIxILcfLvBGwd6kHpF26bKA2Roh15PZY_ezukF-7FYjAjF3D3LTdfR3eIwBxqe7mP19J_Z80du8_ms57hKUETalb6GN-65Jv88k3Bt_rY1D0PeV6Ssro4gN5YybB2-jMkbjaKMvxb3b0dPQCOUqgiu8jCZ9n_Zv4UdJST-15cMeYXD2N9oIVu5oj6kL1vzDEB-Bc1fuGI3rgp2qZE_r3-acfK-0xELDcfMlE2DjxMp7hzsHPcsSEMbEuimpXUlXQo5RrXLQFnO86pCSAs3IswBdKxhwtnvIY7RYsTVWvAgnTbgihIaZkt9y2kC9JlQWWw==","tag":"nIk_xDollcjRtMXOq4kYWA=="}'
  {"msg_id": "5197a8ab-6bba-40c8-a8be-a70602476833", "thread_id": "5197a8ab-6bba-40c8-a8be-a70602476833", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/request", "timestamp": 1621255573.742451, "str_time": "2021-05-17 12:46:13.742451", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://343d0cf69e12.ngrok.io"}
  {"msg_id": "5197a8ab-6bba-40c8-a8be-a70602476833", "thread_id": "5197a8ab-6bba-40c8-a8be-a70602476833", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/request", "timestamp": 1621255573.7434092, "str_time": "2021-05-17 12:46:13.743409", "handler": "Medic", "ellapsed_milli": 1, "outcome": "OutboundTransportManager.DELIVER.END.http://343d0cf69e12.ngrok.io"}
Posting to http://343d0cf69e12.ngrok.io; Data: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJkcWp2enNzdER5aGFMR3c1ZmVZZnJjNEpxTTE5Mkd2UTZELXJsdHBOYURJdVluaU9DUndiNFdDaXp4SDhFT1FIIiwiaGVhZGVyIjp7ImtpZCI6IjhjQ1pEN2FlTmZwMVc3MnFwZ0wxUkNkNHlmZUJ4RzZhUE1HZUFVTEd3MzVhIiwiaXYiOiJHOFdTZTZoTW8tVVVmNWxUZEQyd29rbHdKR2NXZHFjYiIsInNlbmRlciI6Il9Gb3VpX24tazdBT3U3MUxKT3UxSnB3c3gwOGdZZlJ2cUNhbElia3gtblhLNnNjNHYzTUZtX21mTlhhWFIxQWdFLXctRnM3SWZWb2I0TTctMGhyNm5yWWZHaUdmcVY5bDd0MW43WVVEeXBDbUY4NHR0ajdfYVk3YTdnbz0ifX1dfQ==","iv":"7Y5X8yDue7EgSuKm","ciphertext":"lKy_pRFs9V15DjWxe0ovsrgQtZ1TGaO3MKs2rL6pXpKDwabbjnZTncHYjNjT9GSB0TaXYSl52JKcHrhR1X6Z3AbNUgpsh4krSparn01WgLPn1zWW_0omoSJA8w-G_dCgm4gqr3uf2-bWlfQhW8QGpiY0FmDRFqBCVxpOokjNrvUjydCTOsLg23HVmnRZ02U9YarJFVHo66vEOyn6k4a2l7kwFGRRHI4RWjML3gi8tqalQ7FVOwxMnE-4fYpc09skyOniXA1w2zeOut1ElplsGwQL5_EZO2dsAd3MYM3XriT3k6-TZzuTzYPIYF4RTRK3vRQMidKYCzuhE-lL-05MVLgcPipSj7cW_7S1-h-ld4Bdn3Bvg0IT6RakKdv_Z_FaJCdvaK1JGj7czbJ_aGQKsNsaZskRgNcZKvhpJjDCpS6feBqH75okwvVE2fpz3kDtnI9LloieD3RWkfkOQWJC2CQcKaPkghMr_u2kpN8qEHxJjGOUtKY1oPW1MOjlmQiUsxsMjUC7GdADesa4EOQo4DK0ju9OYW8t1HpT9AhU6K3sLxEGrVtAhRQ83LSSv80EyTvXdTtNgq_z85_ou2aFU9xOGyOGSIFpIgHozn4CtOYyiqEuU1lPtYr9LbgVZrv3RhfvcCfCA6folq0W5lU-YRKQRmbsSJOfsma643wdTUjNWezHKTsBt47FREKv05x4X7--NkhqbSkrbaJc_lqjHJNG1iB-0WJ08nYBJ8kHFr9EB9odHy_0_fQ6PlMNAHep9JS9HCyz4kbrNEGpbiEroiR7Kq7swbht8AWWkTe6zqTXPRMKWQzFIBr3DyW0Pa1p20nM3EVdu99m-5r5x8bcQb0_kp3VhGuebcGwDcfBtEum3xYyVqWVFKFAp34aRYiw4oVfDG7ozcyHTNN7xUp_-fe2MwZ8aiow3CBeMSQ3QIpr-7ide1jA8AKGsexr_NxDjLvqMgzPTHr19c3p-hfi2VfJSbhQaSj_7SKwGsWa0l-zsMWJ8V4wKN8V0SD-n4UCH3JG2ciUXUuPMRMu4-BjQxAZPrVOcGIxILcfLvBGwd6kHpF26bKA2Roh15PZY_ezukF-7FYjAjF3D3LTdfR3eIwBxqe7mP19J_Z80du8_ms57hKUETalb6GN-65Jv88k3Bt_rY1D0PeV6Ssro4gN5YybB2-jMkbjaKMvxb3b0dPQCOUqgiu8jCZ9n_Zv4UdJST-15cMeYXD2N9oIVu5oj6kL1vzDEB-Bc1fuGI3rgp2qZE_r3-acfK-0xELDcfMlE2DjxMp7hzsHPcsSEMbEuimpXUlXQo5RrXLQFnO86pCSAs3IswBdKxhwtnvIY7RYsTVWvAgnTbgihIaZkt9y2kC9JlQWWw==","tag":"nIk_xDollcjRtMXOq4kYWA=="}'; Headers: {'Content-Type': 'application/ssi-agent-wire'}
unpack_message: >>> wallet_handle: 3, jwe: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiIwX3h6WmdMT19LcUp5X2Nzb2U1d3ZZV3hPTXFka0ROR0UxOGJPLVVTRlhlMll5NndtZUNZTUJVTDhVVmJSaVNHIiwiaGVhZGVyIjp7ImtpZCI6IkFnRktra0FQenFCcnFRcEhRNmV0RDdUYzFOQTRFSkhIaU5DSmh5d016RGtqIiwiaXYiOiI2OFBxZXhkSmpTbHJFa050Sm9mY193UU5VVXhFZ3pvMiIsInNlbmRlciI6InBHV29Qa0FIY19DcTBKaDRJSmVxMnpib1BtWkNOS0R3bWFNWk1XeUtxVWxPUDNpMlRWcm1ZZVRFOGFIUnFycGU3bFZWYVEtbUhEZlpSWV9UaTBRQUs1X3dwTlFvODVmeV81bTRXNFRTWmhSOXpnMWpoZGpkUV81bWYzRT0ifX1dfQ==","iv":"CviHLAo4txVIOR71","ciphertext":"szwPAObOQUC78vDMsy_unie4bdLLWNP4oiyYH7fkmTtZP_mSTGHJqNAxJPN3w2lvCjjk5YgO3aQYawP19vlKqPoKJsoZ0wn03I5_x9ZcEDSavmsA_gNY38DsREX_VziPmzMe7TAOrS6YDbhULWhmq5texSU_Ilyd9jnRdYOYXj_LMR9GNvlAGXFeBAmfYWzvqmA4RvZb_SENHbbyhEwZMVRFw-YBURYaMJdIGCQ1kzRWN4qMHrYurOETCF_N3SGpQxpbjc5p8_XcrcA9XfeQJA8qpu-dVMivCYc5ITQIN4v8kGjcSozGFEsWD-gMNLMCw5LPSXaodmrsAQR1-yAyLkcbMD_-0FZPIM24w9mgnhl5nm7XvYGAvC2pw1xlLjex0_X4L3iIGMjyqo4ryuBrAGBdCLoOvmmPxDzKnp14DrU1_Z1Xy63hyvHXD8mZvO4GNq-PdQstCo46Rzr_mYk9mOgvBFpleAB4jfoWp_wXhywT7H_qTBoCF6hp_K8U893HYgb3g6YYrROx6i6y6mf9f80OP1vuot2uFZndFXUZjRUzpAF-PjjCFkgoQHN9tIn-atEArHdgSJZIF6bSqLMKUt7qXBbM40lMmdFvqh5ErvbDEe4xeJQMWtsnWec4BpcIQgXiha4uPYcXL4SP5qEM8ij1hfHEc1BqfOQh_V1jwzaQVdr_4nzH5xvHHkG7DDOXztOVjOGT60JYIUqcezgzFQGtq79Y7I1UOp6z5G7XkLTuzKxkU1nmjfyCu9JbaHMndtIojdUz23oh2FZLiEwXz7GplUsi1Tt4qSqu1chPwmnUTtfTMbTdiNlA8X2rVvh424Hxmwewm-sGIDPjzEJJD70ooJxC6xzvA4HlCiF35RmZLJM8oQx6DNBAx97ST3Sb0BQVjydcFwfGyKeqF30zdi0HhWUODQWl0BtHU5rYs0O6ca87puSaQtfLxYswQfhomUTl_dD8XC-L_oR7yQJmOAUmRispr-JePbJaxWrUf5O4GOTU6JOZMC7gdgOi01TgIkdcMf4HjWcDF2EssBLuT2SNdtFP9PWFsoXFjFfllqyaxR2M8tD_ck3Uaqq6zj4zfai3vWooIxHDmgAyiiQxMAAzD4mRhOlDu8Zf7ItGBglHmjYxCpSZFN1K40ZgYUEMvdqZM6FZqtwuPJIBIpAUbXulxPiAfsqj6ec4_b4DAwaytILNMo6S-2HiUKlGvs26GAk-7GmTPDPdIiLgv2-udw45gMZwuffJOvxnYR3oH40GZ3vxstBdY7Pq4oUjOPmE_Il2qgAC8xt_CspP2whG7nEbF3pwsT1jmPN05wZnGrA5jsLPm8Ne-cPJtA-0m2ds8PDPQ5gD5nsxh96HqLbVcn-gFclQwRjHJb7KjXMW3y7ESktHB_pD3MvzYsHpt7cqbKpr7nbBvRBUx0xCG1HrI44hSYoRVQvRDtHJn-KiSOxc_nMKMRN6113PuRLRz2M5RCTjnZVHt30Aq3fZNROexYS_lDecK0cdChY8pPnvGy9KBN9i3iVIaSPgpCEd4N2cTwQKWHPm3xgS8wmmIG5jzX3yGeNgTgJw-mCHkeBBtWOpKQ0xBRsazRAuZDy-mbZgDYNe6F9_bi627V24u22WLM5-iQziBE_r1aptYZ918azX6g8WyYMmlbGCrXIXZZZYdzBzdvB5JD0OP25IR8NOFI98vHvmsbBAgEqCAYC9sEn_AZ6MlBbepkJwdK_fmmEJa6FZuxSYdNb7ZiuV4p9lnXvdJRwo5txm9k5B0uQAVafRIheXg83jSoPy30ZbbozV3e7GHyT6fr625kPz0tdiFkHWhCfIilNCImRirSqkCO6kYi1ULmvE5QkyTHybuYb-bmfqTzSGCnDn9lweMzK_i1vIqb4tsWHyO7tckBbD4_CHwekYepKhqvzG4KuBZ6pONCEQkOWnxY7Chi3Z8mpNJYoZvYdVQ5pk4_C4_uSgJNV8m-B_QgkA8BBa6KRZVtnDwsT5R4e8tLwX7yVTIR_t2813x5Ve0WPPd5FqwYPqBQhyduFeU3Rq5Tk0Mg86yKXDrnunImplzPv979ECzvHdQEbTh8UMVawr0vR63d_nhBQiunOVAMMWxMSP8Nf_UPfxDxMhbpv3ILgfvIcKJEG-ToDlVSoFrJzgBN6ip16wyIJjkvDh2PJRcJ6ds7u8QZ9A6V2ZRHS6_uGjrr70RMqSuzPwJj3PipzfEZoaP7cthRxLoUstdfhqHb2M_HYDFKogSQTqK6G2F9tNbDD0dcm3TakOJ30ml94LFf-9mtysr5c1PVN_y8Z__FvkeeNZzW_DMw==","tag":"eqMgKl3PjC8eWiUXHYvOwQ=="}'
do_call: >>> name: indy_unpack_message, args: (c_int(3), b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiIwX3h6WmdMT19LcUp5X2Nzb2U1d3ZZV3hPTXFka0ROR0UxOGJPLVVTRlhlMll5NndtZUNZTUJVTDhVVmJSaVNHIiwiaGVhZGVyIjp7ImtpZCI6IkFnRktra0FQenFCcnFRcEhRNmV0RDdUYzFOQTRFSkhIaU5DSmh5d016RGtqIiwiaXYiOiI2OFBxZXhkSmpTbHJFa050Sm9mY193UU5VVXhFZ3pvMiIsInNlbmRlciI6InBHV29Qa0FIY19DcTBKaDRJSmVxMnpib1BtWkNOS0R3bWFNWk1XeUtxVWxPUDNpMlRWcm1ZZVRFOGFIUnFycGU3bFZWYVEtbUhEZlpSWV9UaTBRQUs1X3dwTlFvODVmeV81bTRXNFRTWmhSOXpnMWpoZGpkUV81bWYzRT0ifX1dfQ==","iv":"CviHLAo4txVIOR71","ciphertext":"szwPAObOQUC78vDMsy_unie4bdLLWNP4oiyYH7fkmTtZP_mSTGHJqNAxJPN3w2lvCjjk5YgO3aQYawP19vlKqPoKJsoZ0wn03I5_x9ZcEDSavmsA_gNY38DsREX_VziPmzMe7TAOrS6YDbhULWhmq5texSU_Ilyd9jnRdYOYXj_LMR9GNvlAGXFeBAmfYWzvqmA4RvZb_SENHbbyhEwZMVRFw-YBURYaMJdIGCQ1kzRWN4qMHrYurOETCF_N3SGpQxpbjc5p8_XcrcA9XfeQJA8qpu-dVMivCYc5ITQIN4v8kGjcSozGFEsWD-gMNLMCw5LPSXaodmrsAQR1-yAyLkcbMD_-0FZPIM24w9mgnhl5nm7XvYGAvC2pw1xlLjex0_X4L3iIGMjyqo4ryuBrAGBdCLoOvmmPxDzKnp14DrU1_Z1Xy63hyvHXD8mZvO4GNq-PdQstCo46Rzr_mYk9mOgvBFpleAB4jfoWp_wXhywT7H_qTBoCF6hp_K8U893HYgb3g6YYrROx6i6y6mf9f80OP1vuot2uFZndFXUZjRUzpAF-PjjCFkgoQHN9tIn-atEArHdgSJZIF6bSqLMKUt7qXBbM40lMmdFvqh5ErvbDEe4xeJQMWtsnWec4BpcIQgXiha4uPYcXL4SP5qEM8ij1hfHEc1BqfOQh_V1jwzaQVdr_4nzH5xvHHkG7DDOXztOVjOGT60JYIUqcezgzFQGtq79Y7I1UOp6z5G7XkLTuzKxkU1nmjfyCu9JbaHMndtIojdUz23oh2FZLiEwXz7GplUsi1Tt4qSqu1chPwmnUTtfTMbTdiNlA8X2rVvh424Hxmwewm-sGIDPjzEJJD70ooJxC6xzvA4HlCiF35RmZLJM8oQx6DNBAx97ST3Sb0BQVjydcFwfGyKeqF30zdi0HhWUODQWl0BtHU5rYs0O6ca87puSaQtfLxYswQfhomUTl_dD8XC-L_oR7yQJmOAUmRispr-JePbJaxWrUf5O4GOTU6JOZMC7gdgOi01TgIkdcMf4HjWcDF2EssBLuT2SNdtFP9PWFsoXFjFfllqyaxR2M8tD_ck3Uaqq6zj4zfai3vWooIxHDmgAyiiQxMAAzD4mRhOlDu8Zf7ItGBglHmjYxCpSZFN1K40ZgYUEMvdqZM6FZqtwuPJIBIpAUbXulxPiAfsqj6ec4_b4DAwaytILNMo6S-2HiUKlGvs26GAk-7GmTPDPdIiLgv2-udw45gMZwuffJOvxnYR3oH40GZ3vxstBdY7Pq4oUjOPmE_Il2qgAC8xt_CspP2whG7nEbF3pwsT1jmPN05wZnGrA5jsLPm8Ne-cPJtA-0m2ds8PDPQ5gD5nsxh96HqLbVcn-gFclQwRjHJb7KjXMW3y7ESktHB_pD3MvzYsHpt7cqbKpr7nbBvRBUx0xCG1HrI44hSYoRVQvRDtHJn-KiSOxc_nMKMRN6113PuRLRz2M5RCTjnZVHt30Aq3fZNROexYS_lDecK0cdChY8pPnvGy9KBN9i3iVIaSPgpCEd4N2cTwQKWHPm3xgS8wmmIG5jzX3yGeNgTgJw-mCHkeBBtWOpKQ0xBRsazRAuZDy-mbZgDYNe6F9_bi627V24u22WLM5-iQziBE_r1aptYZ918azX6g8WyYMmlbGCrXIXZZZYdzBzdvB5JD0OP25IR8NOFI98vHvmsbBAgEqCAYC9sEn_AZ6MlBbepkJwdK_fmmEJa6FZuxSYdNb7ZiuV4p9lnXvdJRwo5txm9k5B0uQAVafRIheXg83jSoPy30ZbbozV3e7GHyT6fr625kPz0tdiFkHWhCfIilNCImRirSqkCO6kYi1ULmvE5QkyTHybuYb-bmfqTzSGCnDn9lweMzK_i1vIqb4tsWHyO7tckBbD4_CHwekYepKhqvzG4KuBZ6pONCEQkOWnxY7Chi3Z8mpNJYoZvYdVQ5pk4_C4_uSgJNV8m-B_QgkA8BBa6KRZVtnDwsT5R4e8tLwX7yVTIR_t2813x5Ve0WPPd5FqwYPqBQhyduFeU3Rq5Tk0Mg86yKXDrnunImplzPv979ECzvHdQEbTh8UMVawr0vR63d_nhBQiunOVAMMWxMSP8Nf_UPfxDxMhbpv3ILgfvIcKJEG-ToDlVSoFrJzgBN6ip16wyIJjkvDh2PJRcJ6ds7u8QZ9A6V2ZRHS6_uGjrr70RMqSuzPwJj3PipzfEZoaP7cthRxLoUstdfhqHb2M_HYDFKogSQTqK6G2F9tNbDD0dcm3TakOJ30ml94LFf-9mtysr5c1PVN_y8Z__FvkeeNZzW_DMw==","tag":"eqMgKl3PjC8eWiUXHYvOwQ=="}', c_uint(2941), <CFunctionType object at 0x7fd99efcfe58>)
do_call: Function indy_unpack_message returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [86, 77, 116, 105, 49, 56, 101, 52, 99, 75, 104, 56, 74, 104, 78, 51, 97, 57, 110, 74, 88, 48, 56, 54, 108, 106, 116, 120, 121, 116, 117, 97, 107, 79, 50, 107, 104, 52, 109, 52, 80, 73, 88, 110, 53, 100, 71, 69, 109, 71, 107, 99, 56, 100, 74, 121, 120, 55, 116, 89, 97, 121, 81, 114, 102, 109, 53, 85, 69, 52, 56, 119, 119, 48, 108, 78, 86, 84, 68, 121, 81, 117, 88, 65, 107, 86, 100, 90, 72, 106, 51, 120, 104, 112, 105, 122], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [86, 77, 116, 105, 49, 56, 101, 52, 99, 75, 104, 56, 74, 104, 78, 51, 97, 57, 110, 74, 88, 48, 56, 54, 108, 106, 116, 120, 121, 116, 117, 97, 107, 79, 50, 107, 104, 52, 109, 52, 80, 73, 88, 110, 53, 100, 71, 69, 109, 71, 107, 99, 56, 100, 74, 121, 120, 55, 116, 89, 97, 121, 81, 114, 102, 109, 53, 85, 69, 52, 56, 119, 119, 48, 108, 78, 86, 84, 68, 121, 81, 117, 88, 65, 107, 86, 100, 90, 72, 106, 51, 120, 104, 112, 105, 122], "Medic"]
_indy_callback: >>> command_handle: 129, err , args: (b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response\\", \\"@id\\": \\"6297398c-9c0b-4854-a2ce-f2f9eabecca6\\", \\"~thread\\": {\\"thid\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\"}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:46:14.072687Z\\", \\"out_time\\": \\"2021-05-17 12:46:14.506755Z\\"}, \\"connection~sig\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/signature/1.0/ed25519Sha512_single\\", \\"signature\\": \\"LVzPw-Ou3uWeiN6lfBXN1BIu_gi3h2GRzwQBS6IIfJF26bCuFIj8kzf5K_FuUECiAjyZYhcEyuOUdIc_BldzDQ==\\", \\"sig_data\\": \\"AAAAAGCiZZZ7IkRJRCI6ICJUY0oxUk1LTGk1NHVyUnA2ZXVnN3hzIiwgIkRJRERvYyI6IHsiQGNvbnRleHQiOiAiaHR0cHM6Ly93M2lkLm9yZy9kaWQvdjEiLCAiaWQiOiAiZGlkOnNvdjpUY0oxUk1LTGk1NHVyUnA2ZXVnN3hzIiwgInB1YmxpY0tleSI6IFt7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cyMxIiwgInR5cGUiOiAiRWQyNTUxOVZlcmlmaWNhdGlvbktleTIwMTgiLCAiY29udHJvbGxlciI6ICJkaWQ6c292OlRjSjFSTUtMaTU0dXJScDZldWc3eHMiLCAicHVibGljS2V5QmFzZTU4IjogIkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIn1dLCAiYXV0aGVudGljYXRpb24iOiBbeyJ0eXBlIjogIkVkMjU1MTlTaWduYXR1cmVBdXRoZW50aWNhdGlvbjIwMTgiLCAicHVibGljS2V5IjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cyMxIn1dLCAic2VydmljZSI6IFt7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cztpbmR5IiwgInR5cGUiOiAiSW5keUFnZW50IiwgInByaW9yaXR5IjogMCwgInJlY2lwaWVudEtleXMiOiBbIkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIl0sICJzZXJ2aWNlRW5kcG9pbnQiOiAiaHR0cDovLzM0M2QwY2Y2OWUxMi5uZ3Jvay5pbyJ9LCB7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cztpbmR5MSIsICJ0eXBlIjogIkluZHlBZ2VudCIsICJwcmlvcml0eSI6IDAsICJyZWNpcGllbnRLZXlzIjogWyJGVzlZUUJIRDFHeXZGdW5lOW1WazF0N1ZXckhzMllBWkRXeThQMjlidmtubyJdLCAic2VydmljZUVuZHBvaW50IjogIndzOi8vMzQzZDBjZjY5ZTEyLm5ncm9rLmlvIn1dfX0=\\", \\"signer\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\"}}","recipient_verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","sender_verkey":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 129, err , args: (b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response\\", \\"@id\\": \\"6297398c-9c0b-4854-a2ce-f2f9eabecca6\\", \\"~thread\\": {\\"thid\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\"}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:46:14.072687Z\\", \\"out_time\\": \\"2021-05-17 12:46:14.506755Z\\"}, \\"connection~sig\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/signature/1.0/ed25519Sha512_single\\", \\"signature\\": \\"LVzPw-Ou3uWeiN6lfBXN1BIu_gi3h2GRzwQBS6IIfJF26bCuFIj8kzf5K_FuUECiAjyZYhcEyuOUdIc_BldzDQ==\\", \\"sig_data\\": \\"AAAAAGCiZZZ7IkRJRCI6ICJUY0oxUk1LTGk1NHVyUnA2ZXVnN3hzIiwgIkRJRERvYyI6IHsiQGNvbnRleHQiOiAiaHR0cHM6Ly93M2lkLm9yZy9kaWQvdjEiLCAiaWQiOiAiZGlkOnNvdjpUY0oxUk1LTGk1NHVyUnA2ZXVnN3hzIiwgInB1YmxpY0tleSI6IFt7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cyMxIiwgInR5cGUiOiAiRWQyNTUxOVZlcmlmaWNhdGlvbktleTIwMTgiLCAiY29udHJvbGxlciI6ICJkaWQ6c292OlRjSjFSTUtMaTU0dXJScDZldWc3eHMiLCAicHVibGljS2V5QmFzZTU4IjogIkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIn1dLCAiYXV0aGVudGljYXRpb24iOiBbeyJ0eXBlIjogIkVkMjU1MTlTaWduYXR1cmVBdXRoZW50aWNhdGlvbjIwMTgiLCAicHVibGljS2V5IjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cyMxIn1dLCAic2VydmljZSI6IFt7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cztpbmR5IiwgInR5cGUiOiAiSW5keUFnZW50IiwgInByaW9yaXR5IjogMCwgInJlY2lwaWVudEtleXMiOiBbIkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIl0sICJzZXJ2aWNlRW5kcG9pbnQiOiAiaHR0cDovLzM0M2QwY2Y2OWUxMi5uZ3Jvay5pbyJ9LCB7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cztpbmR5MSIsICJ0eXBlIjogIkluZHlBZ2VudCIsICJwcmlvcml0eSI6IDAsICJyZWNpcGllbnRLZXlzIjogWyJGVzlZUUJIRDFHeXZGdW5lOW1WazF0N1ZXckhzMllBWkRXeThQMjlidmtubyJdLCAic2VydmljZUVuZHBvaW50IjogIndzOi8vMzQzZDBjZjY5ZTEyLm5ncm9rLmlvIn1dfX0=\\", \\"signer\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\"}}","recipient_verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","sender_verkey":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}',)
_indy_loop_callback: Function returned b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response\\", \\"@id\\": \\"6297398c-9c0b-4854-a2ce-f2f9eabecca6\\", \\"~thread\\": {\\"thid\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\"}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:46:14.072687Z\\", \\"out_time\\": \\"2021-05-17 12:46:14.506755Z\\"}, \\"connection~sig\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/signature/1.0/ed25519Sha512_single\\", \\"signature\\": \\"LVzPw-Ou3uWeiN6lfBXN1BIu_gi3h2GRzwQBS6IIfJF26bCuFIj8kzf5K_FuUECiAjyZYhcEyuOUdIc_BldzDQ==\\", \\"sig_data\\": \\"AAAAAGCiZZZ7IkRJRCI6ICJUY0oxUk1LTGk1NHVyUnA2ZXVnN3hzIiwgIkRJRERvYyI6IHsiQGNvbnRleHQiOiAiaHR0cHM6Ly93M2lkLm9yZy9kaWQvdjEiLCAiaWQiOiAiZGlkOnNvdjpUY0oxUk1LTGk1NHVyUnA2ZXVnN3hzIiwgInB1YmxpY0tleSI6IFt7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cyMxIiwgInR5cGUiOiAiRWQyNTUxOVZlcmlmaWNhdGlvbktleTIwMTgiLCAiY29udHJvbGxlciI6ICJkaWQ6c292OlRjSjFSTUtMaTU0dXJScDZldWc3eHMiLCAicHVibGljS2V5QmFzZTU4IjogIkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIn1dLCAiYXV0aGVudGljYXRpb24iOiBbeyJ0eXBlIjogIkVkMjU1MTlTaWduYXR1cmVBdXRoZW50aWNhdGlvbjIwMTgiLCAicHVibGljS2V5IjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cyMxIn1dLCAic2VydmljZSI6IFt7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cztpbmR5IiwgInR5cGUiOiAiSW5keUFnZW50IiwgInByaW9yaXR5IjogMCwgInJlY2lwaWVudEtleXMiOiBbIkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIl0sICJzZXJ2aWNlRW5kcG9pbnQiOiAiaHR0cDovLzM0M2QwY2Y2OWUxMi5uZ3Jvay5pbyJ9LCB7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cztpbmR5MSIsICJ0eXBlIjogIkluZHlBZ2VudCIsICJwcmlvcml0eSI6IDAsICJyZWNpcGllbnRLZXlzIjogWyJGVzlZUUJIRDFHeXZGdW5lOW1WazF0N1ZXckhzMllBWkRXeThQMjlidmtubyJdLCAic2VydmljZUVuZHBvaW50IjogIndzOi8vMzQzZDBjZjY5ZTEyLm5ncm9rLmlvIn1dfX0=\\", \\"signer\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\"}}","recipient_verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","sender_verkey":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}'
_indy_loop_callback <<<
unpack_message: <<< res: b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response\\", \\"@id\\": \\"6297398c-9c0b-4854-a2ce-f2f9eabecca6\\", \\"~thread\\": {\\"thid\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\"}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:46:14.072687Z\\", \\"out_time\\": \\"2021-05-17 12:46:14.506755Z\\"}, \\"connection~sig\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/signature/1.0/ed25519Sha512_single\\", \\"signature\\": \\"LVzPw-Ou3uWeiN6lfBXN1BIu_gi3h2GRzwQBS6IIfJF26bCuFIj8kzf5K_FuUECiAjyZYhcEyuOUdIc_BldzDQ==\\", \\"sig_data\\": \\"AAAAAGCiZZZ7IkRJRCI6ICJUY0oxUk1LTGk1NHVyUnA2ZXVnN3hzIiwgIkRJRERvYyI6IHsiQGNvbnRleHQiOiAiaHR0cHM6Ly93M2lkLm9yZy9kaWQvdjEiLCAiaWQiOiAiZGlkOnNvdjpUY0oxUk1LTGk1NHVyUnA2ZXVnN3hzIiwgInB1YmxpY0tleSI6IFt7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cyMxIiwgInR5cGUiOiAiRWQyNTUxOVZlcmlmaWNhdGlvbktleTIwMTgiLCAiY29udHJvbGxlciI6ICJkaWQ6c292OlRjSjFSTUtMaTU0dXJScDZldWc3eHMiLCAicHVibGljS2V5QmFzZTU4IjogIkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIn1dLCAiYXV0aGVudGljYXRpb24iOiBbeyJ0eXBlIjogIkVkMjU1MTlTaWduYXR1cmVBdXRoZW50aWNhdGlvbjIwMTgiLCAicHVibGljS2V5IjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cyMxIn1dLCAic2VydmljZSI6IFt7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cztpbmR5IiwgInR5cGUiOiAiSW5keUFnZW50IiwgInByaW9yaXR5IjogMCwgInJlY2lwaWVudEtleXMiOiBbIkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIl0sICJzZXJ2aWNlRW5kcG9pbnQiOiAiaHR0cDovLzM0M2QwY2Y2OWUxMi5uZ3Jvay5pbyJ9LCB7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cztpbmR5MSIsICJ0eXBlIjogIkluZHlBZ2VudCIsICJwcmlvcml0eSI6IDAsICJyZWNpcGllbnRLZXlzIjogWyJGVzlZUUJIRDFHeXZGdW5lOW1WazF0N1ZXckhzMllBWkRXeThQMjlidmtubyJdLCAic2VydmljZUVuZHBvaW50IjogIndzOi8vMzQzZDBjZjY5ZTEyLm5ncm9rLmlvIn1dfX0=\\", \\"signer\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\"}}","recipient_verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","sender_verkey":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}'
Expanded message: {'@type': 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response', '@id': '6297398c-9c0b-4854-a2ce-f2f9eabecca6', '~thread': {'thid': '5197a8ab-6bba-40c8-a8be-a70602476833'}, '~timing': {'in_time': '2021-05-17 12:46:14.072687Z', 'out_time': '2021-05-17 12:46:14.506755Z'}, 'connection~sig': {'@type': 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/signature/1.0/ed25519Sha512_single', 'signature': 'LVzPw-Ou3uWeiN6lfBXN1BIu_gi3h2GRzwQBS6IIfJF26bCuFIj8kzf5K_FuUECiAjyZYhcEyuOUdIc_BldzDQ==', 'sig_data': 'AAAAAGCiZZZ7IkRJRCI6ICJUY0oxUk1LTGk1NHVyUnA2ZXVnN3hzIiwgIkRJRERvYyI6IHsiQGNvbnRleHQiOiAiaHR0cHM6Ly93M2lkLm9yZy9kaWQvdjEiLCAiaWQiOiAiZGlkOnNvdjpUY0oxUk1LTGk1NHVyUnA2ZXVnN3hzIiwgInB1YmxpY0tleSI6IFt7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cyMxIiwgInR5cGUiOiAiRWQyNTUxOVZlcmlmaWNhdGlvbktleTIwMTgiLCAiY29udHJvbGxlciI6ICJkaWQ6c292OlRjSjFSTUtMaTU0dXJScDZldWc3eHMiLCAicHVibGljS2V5QmFzZTU4IjogIkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIn1dLCAiYXV0aGVudGljYXRpb24iOiBbeyJ0eXBlIjogIkVkMjU1MTlTaWduYXR1cmVBdXRoZW50aWNhdGlvbjIwMTgiLCAicHVibGljS2V5IjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cyMxIn1dLCAic2VydmljZSI6IFt7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cztpbmR5IiwgInR5cGUiOiAiSW5keUFnZW50IiwgInByaW9yaXR5IjogMCwgInJlY2lwaWVudEtleXMiOiBbIkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIl0sICJzZXJ2aWNlRW5kcG9pbnQiOiAiaHR0cDovLzM0M2QwY2Y2OWUxMi5uZ3Jvay5pbyJ9LCB7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cztpbmR5MSIsICJ0eXBlIjogIkluZHlBZ2VudCIsICJwcmlvcml0eSI6IDAsICJyZWNpcGllbnRLZXlzIjogWyJGVzlZUUJIRDFHeXZGdW5lOW1WazF0N1ZXckhzMllBWkRXeThQMjlidmtubyJdLCAic2VydmljZUVuZHBvaW50IjogIndzOi8vMzQzZDBjZjY5ZTEyLm5ncm9rLmlvIn1dfX0=', 'signer': '8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a'}}
  {"msg_id": "6297398c-9c0b-4854-a2ce-f2f9eabecca6", "thread_id": "5197a8ab-6bba-40c8-a8be-a70602476833", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response", "timestamp": 1621255575.0251389, "str_time": "2021-05-17 12:46:15.025139", "handler": "Medic", "ellapsed_milli": 0, "outcome": "Dispatcher.handle_message.START"}
open_wallet_search: >>> wallet_handle: 3, type_: 'did_key', query_json: '{"key": "FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": true}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140573274176600), c_char_p(140572651913560), c_char_p(140573275299344), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
192.168.208.2 [17/May/2021:12:46:14 +0000] "POST / HTTP/1.1" 200 149 "-" "Python/3.6 aiohttp/3.6.3"
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s5`: SELECT name, value from tags_plaintext where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s6`: SELECT name, value from tags_encrypted where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [[69, 104, 65, 48, 66, 67, 100, 89, 99, 115, 89, 78, 116, 108, 102, 109, 47, 81, 54, 66, 110, 65, 84, 83, 83, 56, 113, 43, 70, 54, 121, 122, 103, 106, 53, 101, 73, 53, 49, 49, 81, 88, 89, 69, 106, 114, 52, 61], [83, 152, 196, 253, 34, 233, 87, 108, 237, 20, 191, 58, 226, 16, 57, 168, 83, 202, 171, 251, 133, 250, 174, 19, 56, 23, 89, 51, 13, 68, 156], [181, 243, 122, 164, 253, 197, 65, 104, 130, 229, 180, 193, 82, 22, 219, 186, 103, 73, 100, 191, 82, 115, 69, 184, 96, 40, 227, 96, 143, 142, 164, 63, 137, 225, 202, 153, 245, 19, 198, 240, 92, 223, 140, 44, 182, 186, 182, 87, 180, 46, 97, 27, 66, 143, 68, 95, 98, 64, 123, 94, 52, 157, 207, 221, 169, 187, 239, 71, 227, 211, 167, 97], "Medic", "Medic"]
_indy_callback: >>> command_handle: 130, err , args: (31,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 130, err , args: (31,)
_indy_loop_callback: Function returned 31
_indy_loop_callback <<<
open_wallet_search: <<< res: 31
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 31, count: 2
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(31), c_uint(2), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
_indy_callback: >>> command_handle: 131, err , args: (b'{"totalCount":null,"records":null}',)
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 131, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 31
do_call: >>> name: indy_close_wallet_search, args: (c_int(31), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
_indy_callback: >>> command_handle: 132, err , args: ()
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 132, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
No corresponding DID found for sender verkey: FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno
list_my_dids_with_meta: >>> wallet_handle: 3
do_call: >>> name: indy_list_my_dids_with_meta, args: (c_int(3), <CFunctionType object at 0x7fd9c8bff818>)
do_call: Function indy_list_my_dids_with_meta returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s2`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s2 with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s7`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s7 with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s3`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s3 with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 133, err , args: (b'[{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null},{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 133, err , args: (b'[{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null},{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]',)
_indy_loop_callback: Function returned b'[{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null},{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]'
_indy_loop_callback <<<
list_my_dids_with_meta: <<< res: '[{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null},{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]'
open_wallet_search: >>> wallet_handle: 3, type_: 'connection', query_json: '{"invitation_key": "AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140573352774400), c_char_p(140572651803640), c_char_p(140573275299344), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s8`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s8 with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [167, 23, 192, 116, 15, 80, 7, 17, 243, 99, 244, 59, 154, 126, 107, 57, 135, 84, 159, 190, 13, 172, 65, 255, 177, 138, 12, 161, 20, 85, 206, 120, 152, 242, 71, 250, 30, 185, 163, 95, 53, 127], [34, 223, 46, 97, 253, 50, 242, 82, 139, 66, 161, 192, 241, 151, 150, 9, 47, 189, 150, 63, 63, 150, 209, 56, 111, 163, 240, 152, 158, 175, 74, 45, 108, 74, 46, 234, 183, 231, 70, 149, 169, 130, 24, 216, 224, 121, 133, 205, 134, 126, 151, 250, 228, 72, 82, 51, 158, 115, 122, 0, 34, 69, 23, 84, 180, 149, 190, 198, 236, 110, 238, 212], "Medic", "Medic"]
_indy_callback: >>> command_handle: 134, err , args: (32,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 134, err , args: (32,)
_indy_loop_callback: Function returned 32
_indy_loop_callback <<<
open_wallet_search: <<< res: 32
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 32, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(32), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 135, err , args: (b'{"totalCount":null,"records":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 135, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 32
do_call: >>> name: indy_close_wallet_search, args: (c_int(32), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 136, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 136, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
ConnectionResponseHandler called with context <RequestContext(_connection_ready=None, _connection_record=None, _context=<aries_cloudagent.config.injection_context.InjectionContext object at 0x7fd99d750390>, _message=<ConnectionResponse(_message_id='6297398c-9c0b-4854-a2ce-f2f9eabecca6', _message_new_id=False, _message_decorators=<DecoratorSet{~thread: <ThreadDecorator(_thid='5197a8ab-6bba-40c8-a8be-a70602476833', _pthid=None, _sender_order=None, _received_orders=None)>, ~timing: <TimingDecorator(in_time='2021-05-17 12:46:14.072687Z', out_time='2021-05-17 12:46:14.506755Z', stale_time=None, expires_time=None, delay_milli=None, wait_until_time=None)>}>, connection=<ConnectionDetail(_did='TcJ1RMKLi54urRp6eug7xs', _did_doc=<DIDDoc did=TcJ1RMKLi54urRp6eug7xs>)>)>, _message_receipt=<MessageReceipt(_connection_id=None, _direct_response_mode=None, _in_time='2021-05-17 12:46:14.986297Z', _raw_message='{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response", "@id": "6297398c-9c0b-4854-a2ce-f2f9eabecca6", "~thread": {"thid": "5197a8ab-6bba-40c8-a8be-a70602476833"}, "~timing": {"in_time": "2021-05-17 12:46:14.072687Z", "out_time": "2021-05-17 12:46:14.506755Z"}, "connection~sig": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/signature/1.0/ed25519Sha512_single", "signature": "LVzPw-Ou3uWeiN6lfBXN1BIu_gi3h2GRzwQBS6IIfJF26bCuFIj8kzf5K_FuUECiAjyZYhcEyuOUdIc_BldzDQ==", "sig_data": "AAAAAGCiZZZ7IkRJRCI6ICJUY0oxUk1LTGk1NHVyUnA2ZXVnN3hzIiwgIkRJRERvYyI6IHsiQGNvbnRleHQiOiAiaHR0cHM6Ly93M2lkLm9yZy9kaWQvdjEiLCAiaWQiOiAiZGlkOnNvdjpUY0oxUk1LTGk1NHVyUnA2ZXVnN3hzIiwgInB1YmxpY0tleSI6IFt7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cyMxIiwgInR5cGUiOiAiRWQyNTUxOVZlcmlmaWNhdGlvbktleTIwMTgiLCAiY29udHJvbGxlciI6ICJkaWQ6c292OlRjSjFSTUtMaTU0dXJScDZldWc3eHMiLCAicHVibGljS2V5QmFzZTU4IjogIkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIn1dLCAiYXV0aGVudGljYXRpb24iOiBbeyJ0eXBlIjogIkVkMjU1MTlTaWduYXR1cmVBdXRoZW50aWNhdGlvbjIwMTgiLCAicHVibGljS2V5IjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cyMxIn1dLCAic2VydmljZSI6IFt7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cztpbmR5IiwgInR5cGUiOiAiSW5keUFnZW50IiwgInByaW9yaXR5IjogMCwgInJlY2lwaWVudEtleXMiOiBbIkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIl0sICJzZXJ2aWNlRW5kcG9pbnQiOiAiaHR0cDovLzM0M2QwY2Y2OWUxMi5uZ3Jvay5pbyJ9LCB7ImlkIjogImRpZDpzb3Y6VGNKMVJNS0xpNTR1clJwNmV1Zzd4cztpbmR5MSIsICJ0eXBlIjogIkluZHlBZ2VudCIsICJwcmlvcml0eSI6IDAsICJyZWNpcGllbnRLZXlzIjogWyJGVzlZUUJIRDFHeXZGdW5lOW1WazF0N1ZXckhzMllBWkRXeThQMjlidmtubyJdLCAic2VydmljZUVuZHBvaW50IjogIndzOi8vMzQzZDBjZjY5ZTEyLm5ncm9rLmlvIn1dfX0=", "signer": "8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a"}}', _recipient_verkey='AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj', _recipient_did='JkkJux3BNa6oWp6AvWMqoY', _recipient_did_public=None, _sender_did=None, _sender_verkey='FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno', _thread_id='5197a8ab-6bba-40c8-a8be-a70602476833')>, _profile=<IndySdkProfile(backend=indy, name=Medic)>)>
open_wallet_search: >>> wallet_handle: 3, type_: 'connection', query_json: '{"request_id": "5197a8ab-6bba-40c8-a8be-a70602476833"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140573273867568), c_char_p(140572651913560), c_char_p(140573275299344), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s4`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s4 with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [27, 226, 221, 240, 203, 243, 82, 65, 0, 81, 190, 180, 210, 22, 123, 46, 87, 60, 91, 123, 197, 182, 67, 89, 146, 121, 217, 236, 110, 174, 137, 104, 108, 127, 139, 128, 29, 20], [22, 22, 10, 53, 78, 155, 217, 149, 136, 71, 74, 244, 254, 215, 183, 129, 229, 69, 130, 200, 85, 132, 25, 164, 17, 103, 210, 101, 1, 112, 101, 30, 124, 76, 133, 229, 240, 6, 1, 60, 214, 129, 173, 73, 25, 119, 163, 218, 164, 122, 204, 140, 245, 222, 3, 206, 126, 211, 240, 40, 50, 28, 40, 186], "Medic", "Medic"]
_indy_callback: >>> command_handle: 137, err , args: (33,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 137, err , args: (33,)
_indy_loop_callback: Function returned 33
_indy_loop_callback <<<
open_wallet_search: <<< res: 33
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 33, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(33), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 138, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:13.576229Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}]}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 138, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:13.576229Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}]}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":[{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:13.576229Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}]}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":[{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:13.576229Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"request\\", \\"their_public_did\\": null}","tags":null}]}'
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 33, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(33), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 139, err , args: (b'{"totalCount":null,"records":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 139, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 33
do_call: >>> name: indy_close_wallet_search, args: (c_int(33), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 140, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 140, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
open_wallet_search: >>> wallet_handle: 3, type_: 'did_doc', query_json: '{"did": "TcJ1RMKLi54urRp6eug7xs"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": true}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140572651893696), c_char_p(140572626302952), c_char_p(140573275299344), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s9`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s2`: SELECT name, value from tags_plaintext where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s3`: SELECT name, value from tags_encrypted where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s9 with parameters: [[77, 85, 81, 56, 56, 50, 111, 87, 117, 47, 43, 110, 108, 54, 77, 79, 67, 109, 79, 115, 111, 120, 56, 72, 81, 120, 72, 101, 87, 76, 105, 66, 43, 82, 83, 87, 99, 99, 71, 90, 69, 77, 77, 69, 120, 43, 107, 61], [33, 18, 52, 163, 210, 24, 37, 66, 106, 67, 212, 175, 233, 149, 190, 158, 181, 229, 125, 4, 126, 116, 61, 127, 247, 85, 218, 130, 29, 17, 97], [241, 197, 203, 236, 83, 196, 93, 99, 48, 167, 5, 146, 45, 108, 86, 79, 62, 67, 190, 97, 98, 47, 136, 114, 80, 22, 183, 47, 169, 64, 76, 63, 228, 40, 228, 54, 227, 212, 195, 62, 73, 201, 223, 156, 127, 200, 253, 151, 60, 187], "Medic", "Medic"]
_indy_callback: >>> command_handle: 141, err , args: (34,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 141, err , args: (34,)
_indy_loop_callback: Function returned 34
_indy_loop_callback <<<
open_wallet_search: <<< res: 34
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 34, count: 2
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(34), c_uint(2), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
_indy_callback: >>> command_handle: 142, err , args: (b'{"totalCount":null,"records":null}',)
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 142, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 34
do_call: >>> name: indy_close_wallet_search, args: (c_int(34), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 143, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 143, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
add_wallet_record: >>> wallet_handle: 3, type_: 'did_doc', id: 'bb28cb56b73449f997684d7815f671e2', value: '{"@context": "https://w3id.org/did/v1", "id": "did:sov:TcJ1RMKLi54urRp6eug7xs", "publicKey": [{"id": "did:sov:TcJ1RMKLi54urRp6eug7xs#1", "type": "Ed25519VerificationKey2018", "controller": "did:sov:TcJ1RMKLi54urRp6eug7xs", "publicKeyBase58": "FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}], "authentication": [{"type": "Ed25519SignatureAuthentication2018", "publicKey": "did:sov:TcJ1RMKLi54urRp6eug7xs#1"}], "service": [{"id": "did:sov:TcJ1RMKLi54urRp6eug7xs;indy", "type": "IndyAgent", "priority": 0, "recipientKeys": ["FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"], "serviceEndpoint": "http://343d0cf69e12.ngrok.io"}, {"id": "did:sov:TcJ1RMKLi54urRp6eug7xs;indy1", "type": "IndyAgent", "priority": 0, "recipientKeys": ["FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"], "serviceEndpoint": "ws://343d0cf69e12.ngrok.io"}]}', tags_json: '{"did": "TcJ1RMKLi54urRp6eug7xs"}'
do_call: >>> name: indy_add_wallet_record, args: (c_int(3), c_char_p(140572651893416), c_char_p(140572626302376), c_char_p(94095651164912), c_char_p(140572626302952), <CFunctionType object at 0x7fd9c421ba70>)
do_call: Function indy_add_wallet_record returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s4`: INSERT INTO items (type, name, value, key, wallet_id) VALUES ($1, $2, $3, $4, $5) RETURNING id
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s4 with parameters: [[77, 85, 81, 56, 56, 50, 111, 87, 117, 47, 43, 110, 108, 54, 77, 79, 67, 109, 79, 115, 111, 120, 56, 72, 81, 120, 72, 101, 87, 76, 105, 66, 43, 82, 83, 87, 99, 99, 71, 90, 69, 77, 77, 69, 120, 43, 107, 61], [47, 108, 79, 55, 43, 117, 115, 53, 57, 80, 107, 109, 118, 75, 70, 103, 53, 56, 73, 51, 109, 116, 120, 79, 50, 112, 72, 68, 110, 104, 48, 52, 52, 67, 43, 54, 72, 80, 51, 49, 84, 71, 54, 57, 72, 83, 56, 88, 57, 97, 121, 107, 77, 89, 52, 66, 120, 56, 87, 110, 104, 117, 82, 76, 54, 57, 48, 97, 51, 65, 77, 73, 106, 84, 67, 109, 51, 76, 121, 65], [4, 212, 104, 142, 193, 197, 124, 64, 90, 52, 39, 6, 183, 86, 25, 137, 105, 214, 93, 27, 50, 17, 56, 20, 77, 158, 148, 11, 93, 111, 120, 124, 35, 182, 247, 214, 229, 206, 75, 240, 81, 183, 87, 148, 118, 24, 80, 104, 31, 200, 177, 12, 121, 232, 130, 101, 46, 78, 33, 48, 81, 254, 177, 112, 221, 60, 106, 199, 73, 225, 68, 255, 32, 59, 176, 198, 138, 197, 122, 133, 92, 180, 46, 100, 188, 35, 134, 253, 12, 181, 85, 184, 247, 137, 127, 71, 206, 46, 136, 149, 112, 136, 201, 111, 223, 246, 203, 251, 35, 3, 27, 53, 47, 1, 69, 154, 4, 58, 40, 167, 99, 34, 187, 48, 203, 164, 79, 66, 11, 245, 116, 133, 98, 118, 196, 173, 138, 193, 223, 111, 207, 252, 139, 132, 72, 79, 8, 157, 45, 244, 247, 232, 193, 166, 171, 125, 254, 5, 216, 160, 216, 240, 54, 29, 254, 23, 147, 37, 206, 62, 92, 38, 204, 24, 151, 77, 0, 129, 92, 161, 26, 201, 169, 204, 27, 91, 157, 191, 50, 239, 23, 151, 251, 185, 188, 119, 188, 112, 243, 53, 88, 245, 238, 141, 80, 208, 236, 130, 42, 78, 4, 210, 29, 245, 146, 185, 77, 114, 124, 6, 253, 195, 227, 198, 72, 218, 98, 199, 61, 151, 234, 234, 138, 194, 248, 205, 164, 87, 26, 248, 240, 124, 89, 18, 98, 80, 223, 143, 97, 182, 220, 96, 160, 212, 98, 81, 162, 199, 203, 162, 236, 165, 192, 177, 11, 123, 146, 155, 139, 62, 250, 131, 15, 182, 23, 112, 136, 2, 28, 248, 111, 154, 60, 205, 164, 70, 43, 171, 182, 86, 219, 233, 56, 37, 226, 163, 33, 81, 176, 171, 68, 220, 193, 90, 101, 89, 235, 141, 158, 132, 242, 109, 140, 177, 195, 107, 240, 79, 76, 159, 252, 56, 252, 243, 161, 101, 8, 33, 239, 208, 185, 187, 133, 148, 36, 186, 231, 88, 205, 235, 7, 139, 240, 20, 240, 48, 72, 20, 99, 56, 93, 139, 69, 127, 167, 177, 76, 174, 192, 101, 92, 68, 100, 248, 56, 170, 226, 246, 67, 92, 53, 248, 202, 237, 41, 39, 44, 218, 93, 55, 142, 94, 22, 143, 211, 83, 104, 61, 71, 61, 219, 124, 8, 199, 25, 182, 116, 88, 220, 224, 204, 221, 37, 133, 193, 36, 0, 43, 142, 26, 152, 10, 140, 39, 234, 113, 42, 10, 14, 189, 153, 6, 222, 211, 167, 41, 74, 239, 208, 56, 155, 159, 25, 95, 186, 55, 188, 43, 135, 191, 62, 100, 166, 4, 20, 155, 144, 183, 201, 59, 157, 134, 5, 176, 205, 183, 177, 65, 152, 42, 15, 156, 186, 132, 25, 113, 121, 102, 246, 125, 187, 238, 77, 120, 53, 233, 29, 93, 4, 221, 45, 242, 119, 59, 82, 179, 128, 80, 196, 0, 177, 247, 26, 161, 76, 179, 129, 4, 130, 1, 165, 4, 42, 103, 53, 161, 12, 242, 183, 5, 94, 4, 223, 222, 188, 197, 24, 34, 98, 214, 140, 2, 183, 17, 130, 90, 105, 12, 236, 253, 211, 171, 198, 231, 145, 137, 221, 134, 223, 142, 124, 228, 77, 146, 140, 140, 222, 146, 70, 95, 95, 243, 130, 233, 3, 173, 111, 180, 18, 99, 156, 80, 213, 146, 222, 151, 240, 243, 170, 2, 104, 189, 83, 181, 98, 115, 44, 31, 150, 252, 121, 155, 109, 195, 91, 69, 59, 197, 198, 116, 24, 59, 113, 39, 17, 138, 245, 78, 86, 180, 192, 213, 168, 231, 117, 153, 199, 6, 40, 12, 169, 205, 0, 246, 221, 10, 30, 55, 206, 236, 119, 49, 75, 232, 169, 24, 82, 208, 50, 3, 12, 143, 159, 93, 125, 96, 230, 192, 63, 71, 51, 58, 72, 190, 82, 194, 216, 157, 51, 247, 182, 4, 123, 71, 160, 119, 209, 1, 75, 151, 175, 214, 86, 243, 165, 136, 80, 161, 39, 48, 215, 131, 121, 74, 139, 78, 132, 189, 56, 208, 225, 244, 168, 9, 206, 85, 140, 26, 137, 128, 234, 193, 149, 68, 45, 252, 244, 210, 14, 2, 223, 244, 155, 202, 71, 123, 218, 146, 59, 255, 51, 135, 31, 234, 182, 125, 58, 56, 204, 252, 2, 38, 247, 110, 243, 182, 40, 108, 159, 178, 94, 177, 31, 87, 173, 181, 146, 142, 132, 127, 177, 160, 31, 60, 98, 175, 232, 106, 201, 64, 98, 89, 239, 118, 72, 140, 176, 215, 115, 26, 170, 102, 214, 173, 166, 242, 155, 95, 53, 214, 198, 87, 226, 165, 54, 174, 42, 192, 81, 67, 20, 75, 69, 24, 245, 173, 234, 7, 16, 98, 34, 115, 30, 79, 241, 237, 208, 17, 29, 231, 30, 109, 149, 73, 254, 170, 122, 172, 27, 247, 224, 32, 83, 131, 231, 66, 109, 205, 196, 150, 213, 34, 47, 229, 4, 215, 197, 223, 210, 49, 99, 49, 20, 239, 50, 141, 89, 75, 58, 25, 195, 134, 150, 45, 43, 180, 43, 151, 229, 170], [225, 169, 4, 171, 225, 249, 200, 113, 66, 77, 195, 32, 66, 161, 25, 142, 93, 153, 27, 100, 102, 136, 234, 112, 14, 182, 200, 157, 26, 169, 241, 176, 0, 197, 117, 3, 194, 250, 45, 184, 180, 94, 107, 123, 201, 22, 99, 150, 154, 194, 199, 177, 30, 216, 203, 170, 119, 186, 137, 17], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s5`: INSERT INTO tags_encrypted (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s6`: INSERT INTO tags_plaintext (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s5 with parameters: [14, [33, 18, 52, 163, 210, 24, 37, 66, 106, 67, 212, 175, 233, 149, 190, 158, 181, 229, 125, 4, 126, 116, 61, 127, 247, 85, 218, 130, 29, 17, 97], [241, 197, 203, 236, 83, 196, 93, 99, 48, 167, 5, 146, 45, 108, 86, 79, 62, 67, 190, 97, 98, 47, 136, 114, 80, 22, 183, 47, 169, 64, 76, 63, 228, 40, 228, 54, 227, 212, 195, 62, 73, 201, 223, 156, 127, 200, 253, 151, 60, 187], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 144, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 144, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
add_wallet_record: <<< res: None
open_wallet_search: >>> wallet_handle: 3, type_: 'did_key', query_json: '{"did": "TcJ1RMKLi54urRp6eug7xs"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140572651893416), c_char_p(140572626302952), c_char_p(140573275299344), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s10`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s10 with parameters: [[69, 104, 65, 48, 66, 67, 100, 89, 99, 115, 89, 78, 116, 108, 102, 109, 47, 81, 54, 66, 110, 65, 84, 83, 83, 56, 113, 43, 70, 54, 121, 122, 103, 106, 53, 101, 73, 53, 49, 49, 81, 88, 89, 69, 106, 114, 52, 61], [33, 18, 52, 163, 210, 24, 37, 66, 106, 67, 212, 175, 233, 149, 190, 158, 181, 229, 125, 4, 126, 116, 61, 127, 247, 85, 218, 130, 29, 17, 97], [241, 197, 203, 236, 83, 196, 93, 99, 48, 167, 5, 146, 45, 108, 86, 79, 62, 67, 190, 97, 98, 47, 136, 114, 80, 22, 183, 47, 169, 64, 76, 63, 228, 40, 228, 54, 227, 212, 195, 62, 73, 201, 223, 156, 127, 200, 253, 151, 60, 187], "Medic", "Medic"]
_indy_callback: >>> command_handle: 145, err , args: (35,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 145, err , args: (35,)
_indy_loop_callback: Function returned 35
_indy_loop_callback <<<
open_wallet_search: <<< res: 35
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 35, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(35), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 146, err , args: (b'{"totalCount":null,"records":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 146, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 35
do_call: >>> name: indy_close_wallet_search, args: (c_int(35), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 147, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 147, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
add_wallet_record: >>> wallet_handle: 3, type_: 'did_key', id: '61ca3472e52f43279a682bae24774fe2', value: 'FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno', tags_json: '{"did": "TcJ1RMKLi54urRp6eug7xs", "key": "FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}'
do_call: >>> name: indy_add_wallet_record, args: (c_int(3), c_char_p(140572651893696), c_char_p(140572626302376), c_char_p(140572652117600), c_char_p(140572651752528), <CFunctionType object at 0x7fd9c421ba70>)
do_call: Function indy_add_wallet_record returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[69, 104, 65, 48, 66, 67, 100, 89, 99, 115, 89, 78, 116, 108, 102, 109, 47, 81, 54, 66, 110, 65, 84, 83, 83, 56, 113, 43, 70, 54, 121, 122, 103, 106, 53, 101, 73, 53, 49, 49, 81, 88, 89, 69, 106, 114, 52, 61], [51, 122, 79, 70, 55, 74, 53, 103, 98, 122, 67, 78, 73, 50, 87, 87, 49, 114, 118, 100, 79, 104, 113, 50, 83, 83, 99, 117, 90, 122, 108, 73, 56, 67, 69, 86, 111, 75, 56, 88, 120, 103, 87, 106, 113, 90, 105, 77, 48, 85, 100, 71, 73, 87, 67, 83, 122, 84, 85, 108, 71, 72, 81, 53, 47, 56, 108, 66, 97, 53, 84, 43, 118, 52, 121, 90, 120, 97, 98, 82], [178, 189, 49, 108, 138, 36, 180, 181, 127, 35, 46, 126, 201, 150, 9, 39, 188, 100, 212, 95, 205, 146, 156, 130, 1, 21, 189, 141, 131, 149, 126, 144, 243, 225, 229, 64, 5, 86, 62, 254, 241, 171, 49, 126, 93, 238, 101, 37, 61, 152, 35, 140, 59, 104, 7, 101, 100, 118, 149, 191, 203, 72, 129, 126, 197, 8, 14, 119, 120, 111, 57, 49], [71, 88, 195, 214, 243, 106, 37, 15, 45, 16, 139, 255, 49, 177, 239, 159, 202, 89, 80, 230, 48, 179, 247, 48, 245, 208, 143, 132, 246, 32, 41, 211, 148, 8, 113, 254, 70, 11, 87, 149, 83, 138, 104, 5, 14, 74, 183, 9, 83, 192, 6, 108, 196, 9, 221, 142, 2, 246, 241, 53], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [15, [33, 18, 52, 163, 210, 24, 37, 66, 106, 67, 212, 175, 233, 149, 190, 158, 181, 229, 125, 4, 126, 116, 61, 127, 247, 85, 218, 130, 29, 17, 97], [241, 197, 203, 236, 83, 196, 93, 99, 48, 167, 5, 146, 45, 108, 86, 79, 62, 67, 190, 97, 98, 47, 136, 114, 80, 22, 183, 47, 169, 64, 76, 63, 228, 40, 228, 54, 227, 212, 195, 62, 73, 201, 223, 156, 127, 200, 253, 151, 60, 187], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [15, [83, 152, 196, 253, 34, 233, 87, 108, 237, 20, 191, 58, 226, 16, 57, 168, 83, 202, 171, 251, 133, 250, 174, 19, 56, 23, 89, 51, 13, 68, 156], [181, 243, 122, 164, 253, 197, 65, 104, 130, 229, 180, 193, 82, 22, 219, 186, 103, 73, 100, 191, 82, 115, 69, 184, 96, 40, 227, 96, 143, 142, 164, 63, 137, 225, 202, 153, 245, 19, 198, 240, 92, 223, 140, 44, 182, 186, 182, 87, 180, 46, 97, 27, 66, 143, 68, 95, 98, 64, 123, 94, 52, 157, 207, 221, 169, 187, 239, 71, 227, 211, 167, 97], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 148, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 148, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
add_wallet_record: <<< res: None
update_wallet_record_value: >>> wallet_handle: 3, type_: 'connection', id: 'eef16ddd-5609-4e39-9915-f29a1c704a04', value: '{"invitation_key": "8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a", "their_did": "TcJ1RMKLi54urRp6eug7xs", "my_did": "JkkJux3BNa6oWp6AvWMqoY", "request_id": "5197a8ab-6bba-40c8-a8be-a70602476833", "created_at": "2021-05-17 12:46:08.973586Z", "updated_at": "2021-05-17 12:46:15.157367Z", "their_role": "inviter", "inbound_connection_id": null, "routing_state": "none", "accept": "manual", "invitation_mode": "once", "invitation_msg_id": null, "alias": null, "error_msg": null, "their_label": "General Medical Council", "state": "response", "their_public_did": null}'
do_call: >>> name: indy_update_wallet_record_value, args: (c_int(3), c_char_p(140573273869248), c_char_p(140572626302376), c_char_p(94095652701392), <CFunctionType object at 0x7fd99efcf110>)
do_call: Function indy_update_wallet_record_value returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s3 with parameters: [[215, 116, 153, 114, 181, 192, 233, 16, 51, 87, 105, 72, 224, 225, 108, 190, 250, 131, 13, 131, 95, 163, 239, 108, 57, 173, 177, 72, 102, 91, 126, 164, 76, 96, 237, 194, 229, 110, 218, 137, 127, 170, 55, 119, 207, 175, 40, 124, 16, 47, 24, 59, 230, 190, 86, 123, 179, 191, 45, 0, 98, 171, 167, 42, 15, 20, 234, 69, 42, 45, 63, 53, 77, 133, 111, 200, 62, 57, 94, 237, 217, 95, 191, 32, 125, 192, 191, 174, 79, 242, 44, 132, 50, 147, 194, 207, 23, 18, 19, 240, 17, 161, 168, 42, 246, 123, 50, 254, 228, 41, 96, 101, 72, 179, 138, 157, 1, 153, 55, 86, 139, 219, 4, 201, 96, 107, 116, 231, 38, 14, 47, 209, 206, 250, 22, 248, 172, 51, 204, 14, 56, 143, 29, 28, 231, 187, 183, 173, 81, 113, 86, 54, 253, 26, 49, 72, 147, 64, 247, 80, 200, 175, 89, 4, 127, 197, 198, 243, 206, 105, 17, 163, 237, 16, 185, 82, 12, 43, 32, 160, 228, 154, 141, 95, 251, 128, 61, 207, 55, 174, 121, 86, 104, 20, 149, 198, 208, 82, 27, 216, 70, 198, 220, 193, 155, 81, 108, 207, 126, 2, 39, 17, 223, 16, 1, 78, 150, 207, 223, 127, 243, 80, 111, 114, 55, 24, 126, 254, 251, 155, 186, 9, 161, 143, 206, 118, 177, 196, 247, 65, 196, 222, 178, 174, 135, 162, 152, 207, 199, 132, 80, 167, 205, 33, 199, 226, 112, 222, 84, 139, 63, 208, 36, 229, 220, 200, 203, 143, 54, 250, 11, 167, 16, 171, 177, 20, 255, 190, 108, 193, 14, 198, 7, 49, 159, 178, 60, 50, 181, 101, 132, 34, 135, 67, 10, 205, 21, 225, 249, 237, 37, 125, 132, 46, 134, 233, 219, 168, 9, 145, 204, 206, 1, 171, 32, 33, 128, 17, 92, 50, 136, 141, 20, 5, 169, 19, 35, 129, 206, 23, 111, 153, 118, 184, 13, 1, 65, 165, 14, 44, 187, 247, 220, 149, 31, 128, 116, 40, 1, 216, 77, 97, 18, 40, 92, 246, 225, 195, 109, 123, 13, 25, 119, 201, 64, 29, 195, 213, 147, 156, 18, 245, 143, 241, 95, 105, 81, 60, 46, 22, 172, 240, 112, 201, 135, 212, 216, 138, 50, 254, 226, 97, 115, 239, 210, 168, 53, 72, 65, 129, 178, 73, 239, 13, 149, 235, 82, 141, 207, 87, 132, 129, 152, 186, 216, 200, 152, 1, 130, 204, 80, 30, 117, 237, 143, 142, 249, 110, 189, 53, 76, 216, 204, 23, 5, 81, 198, 216, 134, 170, 214, 3, 126, 143, 7, 90, 82, 211, 176, 137, 189, 83, 88, 179, 132, 120, 231, 213, 15, 177, 28, 98, 104, 132, 74, 179, 237, 158, 52, 229, 162, 20, 237, 102, 54, 130, 161, 84, 143, 194, 168, 216, 186, 115, 37, 230, 254, 41, 44, 62, 39, 250, 140, 100, 248, 125, 133, 88, 26, 122, 87, 193, 151, 225, 61, 174, 244, 140, 7, 117, 158, 117, 94, 219, 166, 108, 111, 79, 57, 53, 12, 118, 192, 236, 54, 210, 218, 25, 153, 74, 57, 89, 43, 23, 41, 140, 92, 135, 153, 226, 180, 187, 91, 120, 196, 40, 164, 42, 252, 188, 18, 105, 13, 158, 166, 182, 117, 53, 226, 172, 203, 63, 25, 254, 60, 73, 173, 202, 193, 183, 253, 56, 158, 234, 66, 81, 75, 1, 176, 197, 15, 14, 114, 77, 212, 70, 118, 85, 183, 1, 249], [52, 145, 161, 140, 218, 214, 233, 44, 56, 142, 117, 187, 44, 118, 21, 127, 93, 1, 113, 0, 127, 171, 50, 37, 204, 149, 231, 180, 195, 23, 206, 111, 207, 145, 225, 166, 85, 2, 99, 170, 118, 5, 225, 207, 24, 200, 105, 88, 153, 242, 213, 126, 68, 158, 172, 136, 254, 212, 87, 156], [73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [109, 73, 104, 49, 120, 54, 51, 101, 73, 56, 70, 48, 50, 104, 119, 52, 113, 120, 74, 121, 56, 108, 113, 50, 88, 122, 43, 110, 49, 88, 75, 118, 109, 116, 117, 55, 83, 89, 117, 115, 68, 88, 54, 84, 121, 121, 68, 119, 104, 71, 65, 56, 81, 53, 88, 113, 89, 112, 104, 99, 66, 67, 56, 88, 74, 79, 101, 74, 89, 121, 87, 114, 108, 54, 65, 102, 99, 55, 49, 79, 103, 121, 108, 67, 122, 103, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 149, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 149, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_value: <<< res: None
update_wallet_record_tags: >>> wallet_handle: 3, type_: 'connection', id: 'eef16ddd-5609-4e39-9915-f29a1c704a04', tags_json: '{"invitation_key": "8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a", "their_did": "TcJ1RMKLi54urRp6eug7xs", "my_did": "JkkJux3BNa6oWp6AvWMqoY", "request_id": "5197a8ab-6bba-40c8-a8be-a70602476833"}'
do_call: >>> name: indy_update_wallet_record_tags, args: (c_int(3), c_char_p(140573273869248), c_char_p(140572626302376), c_char_p(140573275186160), <CFunctionType object at 0x7fd99efcf368>)
do_call: Function indy_update_wallet_record_tags returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s4 with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [109, 73, 104, 49, 120, 54, 51, 101, 73, 56, 70, 48, 50, 104, 119, 52, 113, 120, 74, 121, 56, 108, 113, 50, 88, 122, 43, 110, 49, 88, 75, 118, 109, 116, 117, 55, 83, 89, 117, 115, 68, 88, 54, 84, 121, 121, 68, 119, 104, 71, 65, 56, 81, 53, 88, 113, 89, 112, 104, 99, 66, 67, 56, 88, 74, 79, 101, 74, 89, 121, 87, 114, 108, 54, 65, 102, 99, 55, 49, 79, 103, 121, 108, 67, 122, 103, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_encrypted WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [10, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_plaintext WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [10, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [10, [167, 23, 192, 116, 15, 80, 7, 17, 243, 99, 244, 59, 154, 126, 107, 57, 135, 84, 159, 190, 13, 172, 65, 255, 177, 138, 12, 161, 20, 85, 206, 120, 152, 242, 71, 250, 30, 185, 163, 95, 53, 127], [193, 61, 31, 142, 35, 18, 64, 221, 55, 160, 142, 71, 232, 200, 159, 138, 15, 108, 199, 86, 163, 83, 7, 74, 24, 135, 33, 190, 46, 233, 253, 121, 229, 126, 162, 190, 149, 28, 204, 167, 213, 60, 85, 218, 78, 245, 82, 138, 215, 21, 39, 190, 186, 15, 153, 70, 121, 5, 109, 161, 119, 243, 237, 56, 253, 10, 189, 109, 47, 81, 177, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [10, [27, 226, 221, 240, 203, 243, 82, 65, 0, 81, 190, 180, 210, 22, 123, 46, 87, 60, 91, 123, 197, 182, 67, 89, 146, 121, 217, 236, 110, 174, 137, 104, 108, 127, 139, 128, 29, 20], [22, 22, 10, 53, 78, 155, 217, 149, 136, 71, 74, 244, 254, 215, 183, 129, 229, 69, 130, 200, 85, 132, 25, 164, 17, 103, 210, 101, 1, 112, 101, 30, 124, 76, 133, 229, 240, 6, 1, 60, 214, 129, 173, 73, 25, 119, 163, 218, 164, 122, 204, 140, 245, 222, 3, 206, 126, 211, 240, 40, 50, 28, 40, 186], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [10, [78, 213, 186, 199, 131, 172, 211, 195, 230, 130, 194, 70, 132, 64, 9, 145, 19, 166, 37, 83, 121, 118, 191, 114, 39, 224, 225, 136, 78, 26, 140, 84, 126, 47, 149, 34, 242], [241, 197, 203, 236, 83, 196, 93, 99, 48, 167, 5, 146, 45, 108, 86, 79, 62, 67, 190, 97, 98, 47, 136, 114, 80, 22, 183, 47, 169, 64, 76, 63, 228, 40, 228, 54, 227, 212, 195, 62, 73, 201, 223, 156, 127, 200, 253, 151, 60, 187], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [10, [124, 188, 227, 212, 249, 145, 68, 148, 206, 221, 218, 202, 197, 44, 202, 175, 68, 115, 188, 201, 151, 19, 118, 100, 161, 169, 36, 131, 17, 142, 122, 97, 175, 70], [138, 197, 128, 141, 65, 156, 75, 211, 88, 65, 252, 212, 249, 31, 129, 39, 97, 155, 100, 249, 145, 228, 254, 39, 50, 126, 230, 231, 97, 58, 15, 202, 67, 242, 162, 152, 220, 210, 85, 13, 210, 63, 10, 240, 108, 62, 214, 220, 139, 34], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 150, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 150, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_tags: <<< res: None
open_wallet_search: >>> wallet_handle: 3, type_: 'connection_metadata', query_json: '{"key": "send_mediation_request_on_connection", "connection_id": "eef16ddd-5609-4e39-9915-f29a1c704a04"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": true}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140572651920976), c_char_p(140573275141904), c_char_p(140573275298384), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
  {"msg_id": "N/A", "thread_id": "N/A", "traced_type": "dict", "timestamp": 1621255575.1876378, "str_time": "2021-05-17 12:46:15.187638", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://medic-business-logic:3010/topic/connections/"}
  {"msg_id": "N/A", "thread_id": "N/A", "traced_type": "dict", "timestamp": 1621255575.1882985, "str_time": "2021-05-17 12:46:15.188298", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.END.http://medic-business-logic:3010/topic/connections/"}
Posting to http://medic-business-logic:3010/topic/connections/; Data: {"accept": "manual", "their_role": "inviter", "rfc23_state": "response-received", "created_at": "2021-05-17 12:46:08.973586Z", "invitation_key": "8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a", "request_id": "5197a8ab-6bba-40c8-a8be-a70602476833", "routing_state": "none", "invitation_mode": "once", "their_did": "TcJ1RMKLi54urRp6eug7xs", "my_did": "JkkJux3BNa6oWp6AvWMqoY", "their_label": "General Medical Council", "connection_id": "eef16ddd-5609-4e39-9915-f29a1c704a04", "state": "response", "updated_at": "2021-05-17 12:46:15.157367Z"}; Headers: {'Content-Type': 'application/json'}
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s7`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $7) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND ((i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $4 AND value = $5))) AND i.wallet_id = $6
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s5`: SELECT name, value from tags_plaintext where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s6`: SELECT name, value from tags_encrypted where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s7 with parameters: [[103, 84, 43, 105, 100, 72, 115, 104, 118, 118, 82, 71, 89, 98, 68, 51, 99, 53, 114, 70, 113, 74, 52, 48, 119, 79, 116, 87, 82, 104, 53, 110, 110, 82, 48, 97, 74, 49, 120, 47, 120, 88, 77, 68, 87, 106, 85, 67, 72, 55, 114, 79, 75, 84, 53, 43, 53, 48, 79, 103, 83, 70, 77, 61], [128, 44, 37, 101, 162, 29, 239, 218, 239, 135, 73, 229, 99, 65, 201, 55, 101, 9, 38, 46, 195, 245, 150, 56, 78, 77, 221, 254, 77, 76, 130, 82, 151, 7, 46, 97, 64, 6, 192, 66, 200], [134, 57, 211, 240, 196, 0, 28, 254, 244, 65, 71, 23, 148, 152, 227, 33, 186, 247, 97, 142, 57, 122, 236, 52, 190, 120, 72, 237, 132, 43, 95, 173, 161, 66, 141, 170, 71, 6, 133, 241, 201, 224, 200, 70, 188, 129, 110, 209, 221, 5, 26, 64, 2, 158, 54, 177, 36, 62, 202, 152, 103, 173, 59, 93], [83, 152, 196, 253, 34, 233, 87, 108, 237, 20, 191, 58, 226, 16, 57, 168, 83, 202, 171, 251, 133, 250, 174, 19, 56, 23, 89, 51, 13, 68, 156], [85, 169, 39, 241, 78, 99, 37, 249, 123, 166, 100, 45, 133, 92, 103, 10, 67, 105, 59, 213, 43, 154, 55, 192, 15, 179, 174, 217, 114, 196, 132, 168, 7, 98, 201, 95, 53, 122, 89, 9, 214, 159, 179, 201, 117, 90, 34, 202, 108, 203, 169, 101, 55, 207, 194, 245, 254, 173, 213, 23, 157, 12, 113, 87], "Medic", "Medic"]
_indy_callback: >>> command_handle: 151, err , args: (36,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 151, err , args: (36,)
_indy_loop_callback: Function returned 36
_indy_loop_callback <<<
open_wallet_search: <<< res: 36
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 36, count: 2
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(36), c_uint(2), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
_indy_callback: >>> command_handle: 152, err , args: (b'{"totalCount":null,"records":null}',)
do_call: <<< <Future pending>
_indy_loop_callback: >>> command_handle: 152, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 36
do_call: >>> name: indy_close_wallet_search, args: (c_int(36), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
_indy_callback: <<<
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 153, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 153, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
get_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'eef16ddd-5609-4e39-9915-f29a1c704a04', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573273869248), c_char_p(140572626270760), c_char_p(140572651803640), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [109, 73, 104, 49, 120, 54, 51, 101, 73, 56, 70, 48, 50, 104, 119, 52, 113, 120, 74, 121, 56, 108, 113, 50, 88, 122, 43, 110, 49, 88, 75, 118, 109, 116, 117, 55, 83, 89, 117, 115, 68, 88, 54, 84, 121, 121, 68, 119, 104, 71, 65, 56, 81, 53, 88, 113, 89, 112, 104, 99, 66, 67, 56, 88, 74, 79, 101, 74, 89, 121, 87, 114, 108, 54, 65, 102, 99, 55, 49, 79, 103, 121, 108, 67, 122, 103, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 154, err , args: (b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.157367Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"response\\", \\"their_public_did\\": null}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 154, err , args: (b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.157367Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"response\\", \\"their_public_did\\": null}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.157367Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"response\\", \\"their_public_did\\": null}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.157367Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"response\\", \\"their_public_did\\": null}","tags":null}'
get_my_did_with_meta: >>> wallet_handle: 3, did: 'JkkJux3BNa6oWp6AvWMqoY'
do_call: >>> name: indy_get_my_did_with_meta, args: (c_int(3), c_char_p(140572651875752), <CFunctionType object at 0x7fd99efcf4f8>)
do_call: Function indy_get_my_did_with_meta returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], [57, 47, 55, 65, 102, 72, 100, 66, 66, 122, 116, 102, 43, 98, 105, 51, 68, 120, 67, 73, 117, 103, 69, 80, 79, 118, 49, 107, 78, 52, 49, 122, 56, 54, 73, 120, 116, 79, 68, 112, 121, 115, 118, 97, 84, 67, 119, 121, 99, 118, 112, 115, 116, 116, 65, 122, 105, 120, 71, 49, 43, 104, 84, 107, 84, 90, 85, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], [57, 47, 55, 65, 102, 72, 100, 66, 66, 122, 116, 102, 43, 98, 105, 51, 68, 120, 67, 73, 117, 103, 69, 80, 79, 118, 49, 107, 78, 52, 49, 122, 56, 54, 73, 120, 116, 79, 68, 112, 121, 115, 118, 97, 84, 67, 119, 121, 99, 118, 112, 115, 116, 116, 65, 122, 105, 120, 71, 49, 43, 104, 84, 107, 84, 90, 85, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], [57, 47, 55, 65, 102, 72, 100, 66, 66, 122, 116, 102, 43, 98, 105, 51, 68, 120, 67, 73, 117, 103, 69, 80, 79, 118, 49, 107, 78, 52, 49, 122, 56, 54, 73, 120, 116, 79, 68, 112, 121, 115, 118, 97, 84, 67, 119, 121, 99, 118, 112, 115, 116, 116, 65, 122, 105, 120, 71, 49, 43, 104, 84, 107, 84, 90, 85, 61], "Medic"]
_indy_callback: >>> command_handle: 155, err , args: (b'{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 155, err , args: (b'{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null}',)
_indy_loop_callback: Function returned b'{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null}'
_indy_loop_callback <<<
get_my_did_with_meta: <<< res: '{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null}'
open_wallet_search: >>> wallet_handle: 3, type_: 'did_doc', query_json: '{"did": "TcJ1RMKLi54urRp6eug7xs"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": true}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140572651894696), c_char_p(140572626272200), c_char_p(140573275298384), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s8`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s11`: SELECT name, value from tags_plaintext where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s12`: SELECT name, value from tags_encrypted where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s8 with parameters: [[77, 85, 81, 56, 56, 50, 111, 87, 117, 47, 43, 110, 108, 54, 77, 79, 67, 109, 79, 115, 111, 120, 56, 72, 81, 120, 72, 101, 87, 76, 105, 66, 43, 82, 83, 87, 99, 99, 71, 90, 69, 77, 77, 69, 120, 43, 107, 61], [33, 18, 52, 163, 210, 24, 37, 66, 106, 67, 212, 175, 233, 149, 190, 158, 181, 229, 125, 4, 126, 116, 61, 127, 247, 85, 218, 130, 29, 17, 97], [241, 197, 203, 236, 83, 196, 93, 99, 48, 167, 5, 146, 45, 108, 86, 79, 62, 67, 190, 97, 98, 47, 136, 114, 80, 22, 183, 47, 169, 64, 76, 63, 228, 40, 228, 54, 227, 212, 195, 62, 73, 201, 223, 156, 127, 200, 253, 151, 60, 187], "Medic", "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s11 with parameters: [14, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s12 with parameters: [14, "Medic"]
_indy_callback: >>> command_handle: 156, err , args: (37,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 156, err , args: (37,)
_indy_loop_callback: Function returned 37
_indy_loop_callback <<<
open_wallet_search: <<< res: 37
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 37, count: 2
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(37), c_uint(2), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 157, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"bb28cb56b73449f997684d7815f671e2","value":"{\\"@context\\": \\"https://w3id.org/did/v1\\", \\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs\\", \\"publicKey\\": [{\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs#1\\", \\"type\\": \\"Ed25519VerificationKey2018\\", \\"controller\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs\\", \\"publicKeyBase58\\": \\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"}], \\"authentication\\": [{\\"type\\": \\"Ed25519SignatureAuthentication2018\\", \\"publicKey\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs#1\\"}], \\"service\\": [{\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs;indy\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"], \\"serviceEndpoint\\": \\"http://343d0cf69e12.ngrok.io\\"}, {\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs;indy1\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"], \\"serviceEndpoint\\": \\"ws://343d0cf69e12.ngrok.io\\"}]}","tags":{"did":"TcJ1RMKLi54urRp6eug7xs"}}]}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 157, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"bb28cb56b73449f997684d7815f671e2","value":"{\\"@context\\": \\"https://w3id.org/did/v1\\", \\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs\\", \\"publicKey\\": [{\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs#1\\", \\"type\\": \\"Ed25519VerificationKey2018\\", \\"controller\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs\\", \\"publicKeyBase58\\": \\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"}], \\"authentication\\": [{\\"type\\": \\"Ed25519SignatureAuthentication2018\\", \\"publicKey\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs#1\\"}], \\"service\\": [{\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs;indy\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"], \\"serviceEndpoint\\": \\"http://343d0cf69e12.ngrok.io\\"}, {\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs;indy1\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"], \\"serviceEndpoint\\": \\"ws://343d0cf69e12.ngrok.io\\"}]}","tags":{"did":"TcJ1RMKLi54urRp6eug7xs"}}]}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":[{"type":null,"id":"bb28cb56b73449f997684d7815f671e2","value":"{\\"@context\\": \\"https://w3id.org/did/v1\\", \\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs\\", \\"publicKey\\": [{\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs#1\\", \\"type\\": \\"Ed25519VerificationKey2018\\", \\"controller\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs\\", \\"publicKeyBase58\\": \\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"}], \\"authentication\\": [{\\"type\\": \\"Ed25519SignatureAuthentication2018\\", \\"publicKey\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs#1\\"}], \\"service\\": [{\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs;indy\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"], \\"serviceEndpoint\\": \\"http://343d0cf69e12.ngrok.io\\"}, {\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs;indy1\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"], \\"serviceEndpoint\\": \\"ws://343d0cf69e12.ngrok.io\\"}]}","tags":{"did":"TcJ1RMKLi54urRp6eug7xs"}}]}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":[{"type":null,"id":"bb28cb56b73449f997684d7815f671e2","value":"{\\"@context\\": \\"https://w3id.org/did/v1\\", \\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs\\", \\"publicKey\\": [{\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs#1\\", \\"type\\": \\"Ed25519VerificationKey2018\\", \\"controller\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs\\", \\"publicKeyBase58\\": \\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"}], \\"authentication\\": [{\\"type\\": \\"Ed25519SignatureAuthentication2018\\", \\"publicKey\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs#1\\"}], \\"service\\": [{\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs;indy\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"], \\"serviceEndpoint\\": \\"http://343d0cf69e12.ngrok.io\\"}, {\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs;indy1\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"], \\"serviceEndpoint\\": \\"ws://343d0cf69e12.ngrok.io\\"}]}","tags":{"did":"TcJ1RMKLi54urRp6eug7xs"}}]}'
close_wallet_search: >>> wallet_search_handle: 37
do_call: >>> name: indy_close_wallet_search, args: (c_int(37), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 158, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 158, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
  {"msg_id": "6297398c-9c0b-4854-a2ce-f2f9eabecca6", "thread_id": "5197a8ab-6bba-40c8-a8be-a70602476833", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response", "timestamp": 1621255575.2691667, "str_time": "2021-05-17 12:46:15.269167", "handler": "Medic", "ellapsed_milli": 261, "outcome": "Dispatcher.handle_message.END"}
  {"msg_id": "29393052-9f82-43d5-920c-858dfbf29479", "thread_id": "29393052-9f82-43d5-920c-858dfbf29479", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping", "timestamp": 1621255575.2699816, "str_time": "2021-05-17 12:46:15.269982", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.ENCODE.START"}
  {"msg_id": "29393052-9f82-43d5-920c-858dfbf29479", "thread_id": "29393052-9f82-43d5-920c-858dfbf29479", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping", "timestamp": 1621255575.270598, "str_time": "2021-05-17 12:46:15.270598", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.ENCODE.END"}
pack_message: >>> wallet_handle: 3, message: '{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping", "@id": "29393052-9f82-43d5-920c-858dfbf29479", "~timing": {"in_time": "2021-05-17 12:46:14.986297Z", "out_time": "2021-05-17 12:46:15.215376Z"}, "response_requested": true}', recipient_verkeys: ['FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno'], sender_verkey: 'AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj'
do_call: >>> name: indy_pack_message, args: (c_int(3), b'{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping", "@id": "29393052-9f82-43d5-920c-858dfbf29479", "~timing": {"in_time": "2021-05-17 12:46:14.986297Z", "out_time": "2021-05-17 12:46:15.215376Z"}, "response_requested": true}', c_uint(241), c_char_p(140572651917080), c_char_p(140572652151264), <CFunctionType object at 0x7fd99efcfc00>)
do_call: Function indy_pack_message returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [86, 77, 116, 105, 49, 56, 101, 52, 99, 75, 104, 56, 74, 104, 78, 51, 97, 57, 110, 74, 88, 48, 56, 54, 108, 106, 116, 120, 121, 116, 117, 97, 107, 79, 50, 107, 104, 52, 109, 52, 80, 73, 88, 110, 53, 100, 71, 69, 109, 71, 107, 99, 56, 100, 74, 121, 120, 55, 116, 89, 97, 121, 81, 114, 102, 109, 53, 85, 69, 52, 56, 119, 119, 48, 108, 78, 86, 84, 68, 121, 81, 117, 88, 65, 107, 86, 100, 90, 72, 106, 51, 120, 104, 112, 105, 122], "Medic"]
_indy_callback: >>> command_handle: 159, err , args: (b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJhUDl5TnA2MTZwTUM2QVFUWkpMTENoeEJlY2N1bkdhcG5pWXIzQmh2QXRpMGFzcV9oazJRZFZ2T3NnUzZDb3ZqIiwiaGVhZGVyIjp7ImtpZCI6IkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIiwiaXYiOiJfaHJmLXNEUXN6YmM2WktHQlJpc0RxSWQ1ZDA1Q3djVCIsInNlbmRlciI6Ii0yaFlacUs3U1N4MDdGdlhyNmlWMTdEXzhMX2VEdGpRV21tWXNpOFRSalJRV2otLUhRSHgzOHFPYjdtRFEwc2ZZYy1yRld3R3gzeFR3VndVNUh3b1R1cE9UUVlVTmhqVG82Y3R2ZExsMFJzelRULUlOUDV0Rmo0ZmI1RT0ifX1dfQ==","iv":"ulU4a8PkhA0xbOyy","ciphertext":"xjI37uIer5gkwNab2gswB9bZGGHIU1q7aaPPSsx1QxqouyKm7OIY9HRGBn_NGifS7T9FKp-fSbnjC2rTnFv7iDQARxuRJc0KwU8DMFS_tgk65vnPGdhh6e3yHL7_4U_LQI153nfYoqWlujb3fsYEgDBg3fX9mTrlNBJ9bvIc7ipbu4vW42oppDP1TObT7J3zxm17KXpM1ErQj91v6D5PNnepMYy3nrafUICjOMyA1OlNrka5-3_nSLS8otkJozCE_hWsj0xcvC_M45sTUWJ0mciG3YXKse3d1FvbXPcmdmfe_2H0VYnvDPDN4akZTHL1Dw==","tag":"cJP_JgADQr3Xp3Z87zrmmw=="}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 159, err , args: (b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJhUDl5TnA2MTZwTUM2QVFUWkpMTENoeEJlY2N1bkdhcG5pWXIzQmh2QXRpMGFzcV9oazJRZFZ2T3NnUzZDb3ZqIiwiaGVhZGVyIjp7ImtpZCI6IkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIiwiaXYiOiJfaHJmLXNEUXN6YmM2WktHQlJpc0RxSWQ1ZDA1Q3djVCIsInNlbmRlciI6Ii0yaFlacUs3U1N4MDdGdlhyNmlWMTdEXzhMX2VEdGpRV21tWXNpOFRSalJRV2otLUhRSHgzOHFPYjdtRFEwc2ZZYy1yRld3R3gzeFR3VndVNUh3b1R1cE9UUVlVTmhqVG82Y3R2ZExsMFJzelRULUlOUDV0Rmo0ZmI1RT0ifX1dfQ==","iv":"ulU4a8PkhA0xbOyy","ciphertext":"xjI37uIer5gkwNab2gswB9bZGGHIU1q7aaPPSsx1QxqouyKm7OIY9HRGBn_NGifS7T9FKp-fSbnjC2rTnFv7iDQARxuRJc0KwU8DMFS_tgk65vnPGdhh6e3yHL7_4U_LQI153nfYoqWlujb3fsYEgDBg3fX9mTrlNBJ9bvIc7ipbu4vW42oppDP1TObT7J3zxm17KXpM1ErQj91v6D5PNnepMYy3nrafUICjOMyA1OlNrka5-3_nSLS8otkJozCE_hWsj0xcvC_M45sTUWJ0mciG3YXKse3d1FvbXPcmdmfe_2H0VYnvDPDN4akZTHL1Dw==","tag":"cJP_JgADQr3Xp3Z87zrmmw=="}',)
_indy_loop_callback: Function returned b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJhUDl5TnA2MTZwTUM2QVFUWkpMTENoeEJlY2N1bkdhcG5pWXIzQmh2QXRpMGFzcV9oazJRZFZ2T3NnUzZDb3ZqIiwiaGVhZGVyIjp7ImtpZCI6IkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIiwiaXYiOiJfaHJmLXNEUXN6YmM2WktHQlJpc0RxSWQ1ZDA1Q3djVCIsInNlbmRlciI6Ii0yaFlacUs3U1N4MDdGdlhyNmlWMTdEXzhMX2VEdGpRV21tWXNpOFRSalJRV2otLUhRSHgzOHFPYjdtRFEwc2ZZYy1yRld3R3gzeFR3VndVNUh3b1R1cE9UUVlVTmhqVG82Y3R2ZExsMFJzelRULUlOUDV0Rmo0ZmI1RT0ifX1dfQ==","iv":"ulU4a8PkhA0xbOyy","ciphertext":"xjI37uIer5gkwNab2gswB9bZGGHIU1q7aaPPSsx1QxqouyKm7OIY9HRGBn_NGifS7T9FKp-fSbnjC2rTnFv7iDQARxuRJc0KwU8DMFS_tgk65vnPGdhh6e3yHL7_4U_LQI153nfYoqWlujb3fsYEgDBg3fX9mTrlNBJ9bvIc7ipbu4vW42oppDP1TObT7J3zxm17KXpM1ErQj91v6D5PNnepMYy3nrafUICjOMyA1OlNrka5-3_nSLS8otkJozCE_hWsj0xcvC_M45sTUWJ0mciG3YXKse3d1FvbXPcmdmfe_2H0VYnvDPDN4akZTHL1Dw==","tag":"cJP_JgADQr3Xp3Z87zrmmw=="}'
_indy_loop_callback <<<
pack_message: <<< res: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJhUDl5TnA2MTZwTUM2QVFUWkpMTENoeEJlY2N1bkdhcG5pWXIzQmh2QXRpMGFzcV9oazJRZFZ2T3NnUzZDb3ZqIiwiaGVhZGVyIjp7ImtpZCI6IkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIiwiaXYiOiJfaHJmLXNEUXN6YmM2WktHQlJpc0RxSWQ1ZDA1Q3djVCIsInNlbmRlciI6Ii0yaFlacUs3U1N4MDdGdlhyNmlWMTdEXzhMX2VEdGpRV21tWXNpOFRSalJRV2otLUhRSHgzOHFPYjdtRFEwc2ZZYy1yRld3R3gzeFR3VndVNUh3b1R1cE9UUVlVTmhqVG82Y3R2ZExsMFJzelRULUlOUDV0Rmo0ZmI1RT0ifX1dfQ==","iv":"ulU4a8PkhA0xbOyy","ciphertext":"xjI37uIer5gkwNab2gswB9bZGGHIU1q7aaPPSsx1QxqouyKm7OIY9HRGBn_NGifS7T9FKp-fSbnjC2rTnFv7iDQARxuRJc0KwU8DMFS_tgk65vnPGdhh6e3yHL7_4U_LQI153nfYoqWlujb3fsYEgDBg3fX9mTrlNBJ9bvIc7ipbu4vW42oppDP1TObT7J3zxm17KXpM1ErQj91v6D5PNnepMYy3nrafUICjOMyA1OlNrka5-3_nSLS8otkJozCE_hWsj0xcvC_M45sTUWJ0mciG3YXKse3d1FvbXPcmdmfe_2H0VYnvDPDN4akZTHL1Dw==","tag":"cJP_JgADQr3Xp3Z87zrmmw=="}'
  {"msg_id": "29393052-9f82-43d5-920c-858dfbf29479", "thread_id": "29393052-9f82-43d5-920c-858dfbf29479", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping", "timestamp": 1621255575.280341, "str_time": "2021-05-17 12:46:15.280341", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://343d0cf69e12.ngrok.io"}
  {"msg_id": "29393052-9f82-43d5-920c-858dfbf29479", "thread_id": "29393052-9f82-43d5-920c-858dfbf29479", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping", "timestamp": 1621255575.2810338, "str_time": "2021-05-17 12:46:15.281034", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.END.http://343d0cf69e12.ngrok.io"}
Posting to http://343d0cf69e12.ngrok.io; Data: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJhUDl5TnA2MTZwTUM2QVFUWkpMTENoeEJlY2N1bkdhcG5pWXIzQmh2QXRpMGFzcV9oazJRZFZ2T3NnUzZDb3ZqIiwiaGVhZGVyIjp7ImtpZCI6IkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIiwiaXYiOiJfaHJmLXNEUXN6YmM2WktHQlJpc0RxSWQ1ZDA1Q3djVCIsInNlbmRlciI6Ii0yaFlacUs3U1N4MDdGdlhyNmlWMTdEXzhMX2VEdGpRV21tWXNpOFRSalJRV2otLUhRSHgzOHFPYjdtRFEwc2ZZYy1yRld3R3gzeFR3VndVNUh3b1R1cE9UUVlVTmhqVG82Y3R2ZExsMFJzelRULUlOUDV0Rmo0ZmI1RT0ifX1dfQ==","iv":"ulU4a8PkhA0xbOyy","ciphertext":"xjI37uIer5gkwNab2gswB9bZGGHIU1q7aaPPSsx1QxqouyKm7OIY9HRGBn_NGifS7T9FKp-fSbnjC2rTnFv7iDQARxuRJc0KwU8DMFS_tgk65vnPGdhh6e3yHL7_4U_LQI153nfYoqWlujb3fsYEgDBg3fX9mTrlNBJ9bvIc7ipbu4vW42oppDP1TObT7J3zxm17KXpM1ErQj91v6D5PNnepMYy3nrafUICjOMyA1OlNrka5-3_nSLS8otkJozCE_hWsj0xcvC_M45sTUWJ0mciG3YXKse3d1FvbXPcmdmfe_2H0VYnvDPDN4akZTHL1Dw==","tag":"cJP_JgADQr3Xp3Z87zrmmw=="}'; Headers: {'Content-Type': 'application/ssi-agent-wire'}
unpack_message: >>> wallet_handle: 3, jwe: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJnZ3JyOWhweVZjTEE5ZW9wbWxxWkRVUTRSU1M1dVlqUVhqd3ZuSnlFNUhzVGxRanRWaEFWLUhheFFNdFlfV0ZYIiwiaGVhZGVyIjp7ImtpZCI6IkFnRktra0FQenFCcnFRcEhRNmV0RDdUYzFOQTRFSkhIaU5DSmh5d016RGtqIiwiaXYiOiJUa3JRTG9LS3liYmQydTVtMnpxekFzTlJ1RGJQNHNQWiIsInNlbmRlciI6IldsUmoySXZxTXFOa0ZLVjFhUUVWQjAwcFZyUThKb2dMbFZfaTZkdFhMQnB2d05kUFRnQlZlSlBSR1JKbkpBWU1Ra0ZwWTd5QkZYdU5jeExaaU5sVXNJMWN1aVZFVEFhZ3VRejU5SGF4N0dscmFWUTQzYkswNVRpYWlETT0ifX1dfQ==","iv":"7S2bFJBxIlBeiqcv","ciphertext":"SCeyaTdCLzmvkH91nj6ltd03-bnNrJlcv5ZSE1paAUNJKmCiClbp83RDHoKYIMEwfMDvV4gTd_jqsRt5U1k3UEdvvR2AfD0JVQTecj5a11JVV_M0Ns-98MNwF1L3lMsp5fSDlx2lnNm7jQTgEgQRS_wTgb_zU94cm5LzAhn1TKqPOZyEEyYE3UXUXJ6MlTIS_L58-LTr9b3mxeflq_Xi_ClU980aCym3xJhx6UTsjT5yY3YP14OBCOT_h1J6Jsb595GSel3KSG0gEn_e5Dlw2wqdEb1kMvmCsRhN7Adke2yG38kNZPzADzw-UiyZ6_BJCDmJdj5IWBY-0d4MKU5tugjtbE_0BF30Tjxz47NJtVmGGY2nJf4UGhz_Sg==","tag":"1aTapILA79DBssRAo2VAoA=="}'
do_call: >>> name: indy_unpack_message, args: (c_int(3), b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJnZ3JyOWhweVZjTEE5ZW9wbWxxWkRVUTRSU1M1dVlqUVhqd3ZuSnlFNUhzVGxRanRWaEFWLUhheFFNdFlfV0ZYIiwiaGVhZGVyIjp7ImtpZCI6IkFnRktra0FQenFCcnFRcEhRNmV0RDdUYzFOQTRFSkhIaU5DSmh5d016RGtqIiwiaXYiOiJUa3JRTG9LS3liYmQydTVtMnpxekFzTlJ1RGJQNHNQWiIsInNlbmRlciI6IldsUmoySXZxTXFOa0ZLVjFhUUVWQjAwcFZyUThKb2dMbFZfaTZkdFhMQnB2d05kUFRnQlZlSlBSR1JKbkpBWU1Ra0ZwWTd5QkZYdU5jeExaaU5sVXNJMWN1aVZFVEFhZ3VRejU5SGF4N0dscmFWUTQzYkswNVRpYWlETT0ifX1dfQ==","iv":"7S2bFJBxIlBeiqcv","ciphertext":"SCeyaTdCLzmvkH91nj6ltd03-bnNrJlcv5ZSE1paAUNJKmCiClbp83RDHoKYIMEwfMDvV4gTd_jqsRt5U1k3UEdvvR2AfD0JVQTecj5a11JVV_M0Ns-98MNwF1L3lMsp5fSDlx2lnNm7jQTgEgQRS_wTgb_zU94cm5LzAhn1TKqPOZyEEyYE3UXUXJ6MlTIS_L58-LTr9b3mxeflq_Xi_ClU980aCym3xJhx6UTsjT5yY3YP14OBCOT_h1J6Jsb595GSel3KSG0gEn_e5Dlw2wqdEb1kMvmCsRhN7Adke2yG38kNZPzADzw-UiyZ6_BJCDmJdj5IWBY-0d4MKU5tugjtbE_0BF30Tjxz47NJtVmGGY2nJf4UGhz_Sg==","tag":"1aTapILA79DBssRAo2VAoA=="}', c_uint(1013), <CFunctionType object at 0x7fd99efcfe58>)
do_call: Function indy_unpack_message returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [86, 77, 116, 105, 49, 56, 101, 52, 99, 75, 104, 56, 74, 104, 78, 51, 97, 57, 110, 74, 88, 48, 56, 54, 108, 106, 116, 120, 121, 116, 117, 97, 107, 79, 50, 107, 104, 52, 109, 52, 80, 73, 88, 110, 53, 100, 71, 69, 109, 71, 107, 99, 56, 100, 74, 121, 120, 55, 116, 89, 97, 121, 81, 114, 102, 109, 53, 85, 69, 52, 56, 119, 119, 48, 108, 78, 86, 84, 68, 121, 81, 117, 88, 65, 107, 86, 100, 90, 72, 106, 51, 120, 104, 112, 105, 122], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [86, 77, 116, 105, 49, 56, 101, 52, 99, 75, 104, 56, 74, 104, 78, 51, 97, 57, 110, 74, 88, 48, 56, 54, 108, 106, 116, 120, 121, 116, 117, 97, 107, 79, 50, 107, 104, 52, 109, 52, 80, 73, 88, 110, 53, 100, 71, 69, 109, 71, 107, 99, 56, 100, 74, 121, 120, 55, 116, 89, 97, 121, 81, 114, 102, 109, 53, 85, 69, 52, 56, 119, 119, 48, 108, 78, 86, 84, 68, 121, 81, 117, 88, 65, 107, 86, 100, 90, 72, 106, 51, 120, 104, 112, 105, 122], "Medic"]
_indy_callback: >>> command_handle: 160, err , args: (b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping_response\\", \\"@id\\": \\"9ac1090e-57d7-44c1-b5d7-b3fed08716c2\\", \\"~thread\\": {\\"thid\\": \\"29393052-9f82-43d5-920c-858dfbf29479\\"}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:46:15.395416Z\\", \\"out_time\\": \\"2021-05-17 12:46:15.528691Z\\"}}","recipient_verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","sender_verkey":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 160, err , args: (b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping_response\\", \\"@id\\": \\"9ac1090e-57d7-44c1-b5d7-b3fed08716c2\\", \\"~thread\\": {\\"thid\\": \\"29393052-9f82-43d5-920c-858dfbf29479\\"}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:46:15.395416Z\\", \\"out_time\\": \\"2021-05-17 12:46:15.528691Z\\"}}","recipient_verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","sender_verkey":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}',)
_indy_loop_callback: Function returned b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping_response\\", \\"@id\\": \\"9ac1090e-57d7-44c1-b5d7-b3fed08716c2\\", \\"~thread\\": {\\"thid\\": \\"29393052-9f82-43d5-920c-858dfbf29479\\"}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:46:15.395416Z\\", \\"out_time\\": \\"2021-05-17 12:46:15.528691Z\\"}}","recipient_verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","sender_verkey":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}'
_indy_loop_callback <<<
unpack_message: <<< res: b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping_response\\", \\"@id\\": \\"9ac1090e-57d7-44c1-b5d7-b3fed08716c2\\", \\"~thread\\": {\\"thid\\": \\"29393052-9f82-43d5-920c-858dfbf29479\\"}, \\"~timing\\": {\\"in_time\\": \\"2021-05-17 12:46:15.395416Z\\", \\"out_time\\": \\"2021-05-17 12:46:15.528691Z\\"}}","recipient_verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","sender_verkey":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}'
Expanded message: {'@type': 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping_response', '@id': '9ac1090e-57d7-44c1-b5d7-b3fed08716c2', '~thread': {'thid': '29393052-9f82-43d5-920c-858dfbf29479'}, '~timing': {'in_time': '2021-05-17 12:46:15.395416Z', 'out_time': '2021-05-17 12:46:15.528691Z'}}
  {"msg_id": "9ac1090e-57d7-44c1-b5d7-b3fed08716c2", "thread_id": "29393052-9f82-43d5-920c-858dfbf29479", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping_response", "timestamp": 1621255575.7410495, "str_time": "2021-05-17 12:46:15.741050", "handler": "Medic", "ellapsed_milli": 0, "outcome": "Dispatcher.handle_message.START"}
open_wallet_search: >>> wallet_handle: 3, type_: 'did_key', query_json: '{"key": "FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": true}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140572651893496), c_char_p(140573273288648), c_char_p(140573275298384), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
192.168.208.2 [17/May/2021:12:46:15 +0000] "POST / HTTP/1.1" 200 149 "-" "Python/3.6 aiohttp/3.6.3"
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s9`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s7`: SELECT name, value from tags_plaintext where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s8`: SELECT name, value from tags_encrypted where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s9 with parameters: [[69, 104, 65, 48, 66, 67, 100, 89, 99, 115, 89, 78, 116, 108, 102, 109, 47, 81, 54, 66, 110, 65, 84, 83, 83, 56, 113, 43, 70, 54, 121, 122, 103, 106, 53, 101, 73, 53, 49, 49, 81, 88, 89, 69, 106, 114, 52, 61], [83, 152, 196, 253, 34, 233, 87, 108, 237, 20, 191, 58, 226, 16, 57, 168, 83, 202, 171, 251, 133, 250, 174, 19, 56, 23, 89, 51, 13, 68, 156], [181, 243, 122, 164, 253, 197, 65, 104, 130, 229, 180, 193, 82, 22, 219, 186, 103, 73, 100, 191, 82, 115, 69, 184, 96, 40, 227, 96, 143, 142, 164, 63, 137, 225, 202, 153, 245, 19, 198, 240, 92, 223, 140, 44, 182, 186, 182, 87, 180, 46, 97, 27, 66, 143, 68, 95, 98, 64, 123, 94, 52, 157, 207, 221, 169, 187, 239, 71, 227, 211, 167, 97], "Medic", "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s7 with parameters: [15, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s8 with parameters: [15, "Medic"]
_indy_callback: >>> command_handle: 161, err , args: (38,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 161, err , args: (38,)
_indy_loop_callback: Function returned 38
_indy_loop_callback <<<
open_wallet_search: <<< res: 38
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 38, count: 2
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(38), c_uint(2), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 162, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"61ca3472e52f43279a682bae24774fe2","value":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno","tags":{"key":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno","did":"TcJ1RMKLi54urRp6eug7xs"}}]}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 162, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"61ca3472e52f43279a682bae24774fe2","value":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno","tags":{"key":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno","did":"TcJ1RMKLi54urRp6eug7xs"}}]}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":[{"type":null,"id":"61ca3472e52f43279a682bae24774fe2","value":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno","tags":{"key":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno","did":"TcJ1RMKLi54urRp6eug7xs"}}]}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":[{"type":null,"id":"61ca3472e52f43279a682bae24774fe2","value":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno","tags":{"key":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno","did":"TcJ1RMKLi54urRp6eug7xs"}}]}'
close_wallet_search: >>> wallet_search_handle: 38
do_call: >>> name: indy_close_wallet_search, args: (c_int(38), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
_indy_callback: >>> command_handle: 163, err , args: ()
do_call: <<< <Future pending>
_indy_loop_callback: >>> command_handle: 163, err , args: ()
_indy_loop_callback: Function returned None
_indy_callback: <<<
_indy_loop_callback <<<
close_wallet_search: <<< res: None
list_my_dids_with_meta: >>> wallet_handle: 3
do_call: >>> name: indy_list_my_dids_with_meta, args: (c_int(3), <CFunctionType object at 0x7fd9c8bff818>)
do_call: Function indy_list_my_dids_with_meta returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s10`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s10 with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s9`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s9 with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s11`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s11 with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 164, err , args: (b'[{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null},{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 164, err , args: (b'[{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null},{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]',)
_indy_loop_callback: Function returned b'[{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null},{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]'
_indy_loop_callback <<<
list_my_dids_with_meta: <<< res: '[{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null},{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]'
open_wallet_search: >>> wallet_handle: 3, type_: 'connection', query_json: '{"their_did": "TcJ1RMKLi54urRp6eug7xs", "my_did": "JkkJux3BNa6oWp6AvWMqoY"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140573352774592), c_char_p(140573274576160), c_char_p(140573275298384), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s10`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $7) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND ((i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $4 AND value = $5))) AND i.wallet_id = $6
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s10 with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [124, 188, 227, 212, 249, 145, 68, 148, 206, 221, 218, 202, 197, 44, 202, 175, 68, 115, 188, 201, 151, 19, 118, 100, 161, 169, 36, 131, 17, 142, 122, 97, 175, 70], [138, 197, 128, 141, 65, 156, 75, 211, 88, 65, 252, 212, 249, 31, 129, 39, 97, 155, 100, 249, 145, 228, 254, 39, 50, 126, 230, 231, 97, 58, 15, 202, 67, 242, 162, 152, 220, 210, 85, 13, 210, 63, 10, 240, 108, 62, 214, 220, 139, 34], [78, 213, 186, 199, 131, 172, 211, 195, 230, 130, 194, 70, 132, 64, 9, 145, 19, 166, 37, 83, 121, 118, 191, 114, 39, 224, 225, 136, 78, 26, 140, 84, 126, 47, 149, 34, 242], [241, 197, 203, 236, 83, 196, 93, 99, 48, 167, 5, 146, 45, 108, 86, 79, 62, 67, 190, 97, 98, 47, 136, 114, 80, 22, 183, 47, 169, 64, 76, 63, 228, 40, 228, 54, 227, 212, 195, 62, 73, 201, 223, 156, 127, 200, 253, 151, 60, 187], "Medic", "Medic"]
_indy_callback: >>> command_handle: 165, err , args: (39,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 165, err , args: (39,)
_indy_loop_callback: Function returned 39
_indy_loop_callback <<<
open_wallet_search: <<< res: 39
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 39, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(39), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
_indy_callback: >>> command_handle: 166, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.157367Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"response\\", \\"their_public_did\\": null}","tags":null}]}',)
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 166, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.157367Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"response\\", \\"their_public_did\\": null}","tags":null}]}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":[{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.157367Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"response\\", \\"their_public_did\\": null}","tags":null}]}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":[{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.157367Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"response\\", \\"their_public_did\\": null}","tags":null}]}'
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 39, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(39), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 167, err , args: (b'{"totalCount":null,"records":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 167, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 39
do_call: >>> name: indy_close_wallet_search, args: (c_int(39), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 168, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 168, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
update_wallet_record_value: >>> wallet_handle: 3, type_: 'connection', id: 'eef16ddd-5609-4e39-9915-f29a1c704a04', value: '{"invitation_key": "8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a", "their_did": "TcJ1RMKLi54urRp6eug7xs", "my_did": "JkkJux3BNa6oWp6AvWMqoY", "request_id": "5197a8ab-6bba-40c8-a8be-a70602476833", "created_at": "2021-05-17 12:46:08.973586Z", "updated_at": "2021-05-17 12:46:15.808747Z", "their_role": "inviter", "inbound_connection_id": null, "routing_state": "none", "accept": "manual", "invitation_mode": "once", "invitation_msg_id": null, "alias": null, "error_msg": null, "their_label": "General Medical Council", "state": "active", "their_public_did": null}'
do_call: >>> name: indy_update_wallet_record_value, args: (c_int(3), c_char_p(140573352774592), c_char_p(140573362870968), c_char_p(94095652701392), <CFunctionType object at 0x7fd99efcf110>)
do_call: Function indy_update_wallet_record_value returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s11`: UPDATE items SET value = $1, key = $2 WHERE type = $3 AND name = $4 AND wallet_id = $5
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s11 with parameters: [[77, 134, 71, 62, 64, 116, 78, 44, 185, 161, 54, 202, 37, 177, 60, 11, 84, 135, 171, 112, 40, 69, 116, 24, 51, 111, 144, 49, 152, 193, 248, 139, 182, 199, 23, 250, 68, 171, 85, 11, 123, 75, 187, 191, 156, 250, 176, 122, 86, 170, 23, 14, 116, 90, 195, 73, 212, 209, 246, 234, 50, 209, 96, 253, 122, 217, 146, 114, 42, 185, 172, 250, 95, 173, 36, 199, 55, 98, 223, 97, 49, 132, 161, 130, 85, 232, 138, 198, 12, 111, 69, 148, 156, 72, 244, 226, 24, 21, 183, 187, 5, 243, 165, 73, 130, 22, 4, 240, 253, 19, 17, 149, 87, 80, 135, 205, 124, 100, 244, 212, 46, 206, 188, 133, 200, 107, 117, 38, 12, 169, 56, 42, 158, 246, 205, 140, 250, 220, 227, 120, 174, 48, 38, 251, 130, 97, 53, 249, 141, 245, 190, 176, 87, 56, 109, 243, 115, 90, 236, 203, 173, 207, 17, 233, 81, 100, 199, 158, 98, 0, 84, 173, 64, 118, 80, 92, 113, 22, 196, 110, 32, 251, 228, 58, 244, 9, 23, 110, 189, 148, 245, 6, 215, 234, 129, 154, 170, 227, 54, 243, 48, 154, 218, 238, 9, 143, 50, 198, 235, 50, 160, 78, 230, 91, 87, 123, 26, 12, 15, 75, 241, 250, 231, 172, 106, 26, 22, 222, 10, 253, 150, 204, 160, 100, 178, 36, 208, 231, 170, 251, 63, 157, 197, 6, 13, 211, 228, 185, 18, 122, 69, 109, 78, 177, 241, 66, 94, 232, 98, 11, 208, 64, 140, 209, 24, 35, 211, 153, 202, 114, 77, 53, 42, 172, 228, 65, 48, 243, 192, 59, 229, 225, 91, 149, 146, 61, 184, 255, 156, 151, 38, 122, 232, 179, 74, 85, 174, 224, 110, 172, 33, 131, 107, 38, 237, 127, 155, 186, 240, 83, 162, 90, 214, 230, 63, 241, 107, 223, 104, 43, 110, 249, 181, 245, 28, 225, 121, 71, 50, 49, 193, 130, 150, 239, 176, 242, 221, 13, 116, 217, 19, 68, 26, 183, 150, 64, 73, 222, 158, 232, 166, 50, 45, 215, 128, 172, 72, 95, 94, 189, 27, 149, 4, 84, 103, 108, 143, 137, 159, 112, 15, 5, 28, 89, 232, 19, 203, 130, 44, 48, 29, 66, 220, 173, 47, 188, 182, 79, 146, 155, 118, 158, 14, 83, 102, 120, 33, 192, 193, 62, 93, 53, 120, 235, 207, 185, 157, 61, 132, 226, 75, 210, 62, 126, 84, 205, 90, 15, 22, 112, 142, 227, 207, 99, 104, 114, 88, 146, 86, 230, 215, 200, 238, 99, 249, 245, 23, 94, 110, 15, 126, 75, 136, 90, 150, 117, 135, 12, 96, 65, 252, 160, 181, 229, 88, 131, 24, 39, 135, 204, 241, 19, 184, 41, 196, 63, 242, 164, 235, 10, 98, 24, 138, 19, 217, 127, 217, 114, 187, 150, 122, 12, 123, 87, 175, 8, 177, 206, 218, 202, 46, 125, 57, 241, 48, 203, 206, 49, 176, 116, 76, 167, 252, 131, 202, 62, 37, 146, 210, 79, 231, 103, 163, 138, 88, 122, 170, 202, 151, 222, 192, 22, 65, 68, 6, 25, 254, 80, 222, 129, 249, 237, 196, 213, 179, 138, 1, 130, 253, 174, 77, 241, 145, 73, 231, 188, 43, 88, 65, 32, 71, 59, 111, 149, 86, 63, 216, 61, 79, 61, 0, 202, 6, 240, 104, 238, 44, 201, 119, 55, 99, 69, 180, 92, 15, 94, 230, 61, 104, 11, 241, 33, 8, 189, 73, 23, 82, 16, 179], [237, 207, 222, 74, 164, 210, 119, 217, 8, 96, 161, 66, 189, 157, 133, 212, 78, 74, 144, 64, 114, 145, 152, 108, 140, 56, 150, 97, 86, 250, 162, 168, 206, 155, 51, 198, 195, 164, 158, 14, 12, 165, 19, 136, 133, 214, 1, 252, 162, 73, 180, 167, 246, 219, 60, 88, 199, 140, 26, 236], [73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [109, 73, 104, 49, 120, 54, 51, 101, 73, 56, 70, 48, 50, 104, 119, 52, 113, 120, 74, 121, 56, 108, 113, 50, 88, 122, 43, 110, 49, 88, 75, 118, 109, 116, 117, 55, 83, 89, 117, 115, 68, 88, 54, 84, 121, 121, 68, 119, 104, 71, 65, 56, 81, 53, 88, 113, 89, 112, 104, 99, 66, 67, 56, 88, 74, 79, 101, 74, 89, 121, 87, 114, 108, 54, 65, 102, 99, 55, 49, 79, 103, 121, 108, 67, 122, 103, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 169, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 169, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_value: <<< res: None
update_wallet_record_tags: >>> wallet_handle: 3, type_: 'connection', id: 'eef16ddd-5609-4e39-9915-f29a1c704a04', tags_json: '{"invitation_key": "8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a", "their_did": "TcJ1RMKLi54urRp6eug7xs", "my_did": "JkkJux3BNa6oWp6AvWMqoY", "request_id": "5197a8ab-6bba-40c8-a8be-a70602476833"}'
do_call: >>> name: indy_update_wallet_record_tags, args: (c_int(3), c_char_p(140573352774592), c_char_p(140573362870968), c_char_p(140573275186624), <CFunctionType object at 0x7fd99efcf368>)
do_call: Function indy_update_wallet_record_tags returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s12`: SELECT id FROM items WHERE type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s12 with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [109, 73, 104, 49, 120, 54, 51, 101, 73, 56, 70, 48, 50, 104, 119, 52, 113, 120, 74, 121, 56, 108, 113, 50, 88, 122, 43, 110, 49, 88, 75, 118, 109, 116, 117, 55, 83, 89, 117, 115, 68, 88, 54, 84, 121, 121, 68, 119, 104, 71, 65, 56, 81, 53, 88, 113, 89, 112, 104, 99, 66, 67, 56, 88, 74, 79, 101, 74, 89, 121, 87, 114, 108, 54, 65, 102, 99, 55, 49, 79, 103, 121, 108, 67, 122, 103, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_encrypted WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [10, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_plaintext WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [10, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s13`: INSERT INTO tags_encrypted (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s14`: INSERT INTO tags_plaintext (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s13 with parameters: [10, [78, 213, 186, 199, 131, 172, 211, 195, 230, 130, 194, 70, 132, 64, 9, 145, 19, 166, 37, 83, 121, 118, 191, 114, 39, 224, 225, 136, 78, 26, 140, 84, 126, 47, 149, 34, 242], [241, 197, 203, 236, 83, 196, 93, 99, 48, 167, 5, 146, 45, 108, 86, 79, 62, 67, 190, 97, 98, 47, 136, 114, 80, 22, 183, 47, 169, 64, 76, 63, 228, 40, 228, 54, 227, 212, 195, 62, 73, 201, 223, 156, 127, 200, 253, 151, 60, 187], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s13 with parameters: [10, [124, 188, 227, 212, 249, 145, 68, 148, 206, 221, 218, 202, 197, 44, 202, 175, 68, 115, 188, 201, 151, 19, 118, 100, 161, 169, 36, 131, 17, 142, 122, 97, 175, 70], [138, 197, 128, 141, 65, 156, 75, 211, 88, 65, 252, 212, 249, 31, 129, 39, 97, 155, 100, 249, 145, 228, 254, 39, 50, 126, 230, 231, 97, 58, 15, 202, 67, 242, 162, 152, 220, 210, 85, 13, 210, 63, 10, 240, 108, 62, 214, 220, 139, 34], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s13 with parameters: [10, [167, 23, 192, 116, 15, 80, 7, 17, 243, 99, 244, 59, 154, 126, 107, 57, 135, 84, 159, 190, 13, 172, 65, 255, 177, 138, 12, 161, 20, 85, 206, 120, 152, 242, 71, 250, 30, 185, 163, 95, 53, 127], [193, 61, 31, 142, 35, 18, 64, 221, 55, 160, 142, 71, 232, 200, 159, 138, 15, 108, 199, 86, 163, 83, 7, 74, 24, 135, 33, 190, 46, 233, 253, 121, 229, 126, 162, 190, 149, 28, 204, 167, 213, 60, 85, 218, 78, 245, 82, 138, 215, 21, 39, 190, 186, 15, 153, 70, 121, 5, 109, 161, 119, 243, 237, 56, 253, 10, 189, 109, 47, 81, 177, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s13 with parameters: [10, [27, 226, 221, 240, 203, 243, 82, 65, 0, 81, 190, 180, 210, 22, 123, 46, 87, 60, 91, 123, 197, 182, 67, 89, 146, 121, 217, 236, 110, 174, 137, 104, 108, 127, 139, 128, 29, 20], [22, 22, 10, 53, 78, 155, 217, 149, 136, 71, 74, 244, 254, 215, 183, 129, 229, 69, 130, 200, 85, 132, 25, 164, 17, 103, 210, 101, 1, 112, 101, 30, 124, 76, 133, 229, 240, 6, 1, 60, 214, 129, 173, 73, 25, 119, 163, 218, 164, 122, 204, 140, 245, 222, 3, 206, 126, 211, 240, 40, 50, 28, 40, 186], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 170, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 170, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_tags: <<< res: None
PingResponseHandler called with context: <RequestContext(_connection_ready=True, _connection_record=<ConnRecord(_id='eef16ddd-5609-4e39-9915-f29a1c704a04', _last_state='active', state='active', created_at='2021-05-17 12:46:08.973586Z', updated_at='2021-05-17 12:46:15.808747Z', my_did='JkkJux3BNa6oWp6AvWMqoY', their_did='TcJ1RMKLi54urRp6eug7xs', their_label='General Medical Council', their_role='inviter', invitation_key='8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a', invitation_msg_id=None, request_id='5197a8ab-6bba-40c8-a8be-a70602476833', error_msg=None, inbound_connection_id=None, routing_state='none', accept='manual', invitation_mode='once', alias=None, their_public_did=None)>, _context=<aries_cloudagent.config.injection_context.InjectionContext object at 0x7fd99efb96d8>, _message=<PingResponse(_message_id='9ac1090e-57d7-44c1-b5d7-b3fed08716c2', _message_new_id=False, _message_decorators=<DecoratorSet{~thread: <ThreadDecorator(_thid='29393052-9f82-43d5-920c-858dfbf29479', _pthid=None, _sender_order=None, _received_orders=None)>, ~timing: <TimingDecorator(in_time='2021-05-17 12:46:15.395416Z', out_time='2021-05-17 12:46:15.528691Z', stale_time=None, expires_time=None, delay_milli=None, wait_until_time=None)>}>, comment=None)>, _message_receipt=<MessageReceipt(_connection_id=None, _direct_response_mode=None, _in_time='2021-05-17 12:46:15.721999Z', _raw_message='{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping_response", "@id": "9ac1090e-57d7-44c1-b5d7-b3fed08716c2", "~thread": {"thid": "29393052-9f82-43d5-920c-858dfbf29479"}, "~timing": {"in_time": "2021-05-17 12:46:15.395416Z", "out_time": "2021-05-17 12:46:15.528691Z"}}', _recipient_verkey='AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj', _recipient_did='JkkJux3BNa6oWp6AvWMqoY', _recipient_did_public=None, _sender_did='TcJ1RMKLi54urRp6eug7xs', _sender_verkey='FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno', _thread_id='29393052-9f82-43d5-920c-858dfbf29479')>, _profile=<IndySdkProfile(backend=indy, name=Medic)>)>
Received trust ping response from: TcJ1RMKLi54urRp6eug7xs
  {"msg_id": "9ac1090e-57d7-44c1-b5d7-b3fed08716c2", "thread_id": "29393052-9f82-43d5-920c-858dfbf29479", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping_response", "timestamp": 1621255575.844327, "str_time": "2021-05-17 12:46:15.844327", "handler": "Medic", "ellapsed_milli": 108, "outcome": "Dispatcher.handle_message.END"}
  {"msg_id": "N/A", "thread_id": "N/A", "traced_type": "dict", "timestamp": 1621255575.845126, "str_time": "2021-05-17 12:46:15.845126", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://medic-business-logic:3010/topic/connections/"}
  {"msg_id": "N/A", "thread_id": "N/A", "traced_type": "dict", "timestamp": 1621255575.8457143, "str_time": "2021-05-17 12:46:15.845714", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.END.http://medic-business-logic:3010/topic/connections/"}
Posting to http://medic-business-logic:3010/topic/connections/; Data: {"accept": "manual", "their_role": "inviter", "rfc23_state": "completed", "created_at": "2021-05-17 12:46:08.973586Z", "invitation_key": "8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a", "request_id": "5197a8ab-6bba-40c8-a8be-a70602476833", "routing_state": "none", "invitation_mode": "once", "their_did": "TcJ1RMKLi54urRp6eug7xs", "my_did": "JkkJux3BNa6oWp6AvWMqoY", "their_label": "General Medical Council", "connection_id": "eef16ddd-5609-4e39-9915-f29a1c704a04", "state": "active", "updated_at": "2021-05-17 12:46:15.808747Z"}; Headers: {'Content-Type': 'application/json'}
unpack_message: >>> wallet_handle: 3, jwe: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJkVGR0WnZfOTdyTjNBdHhlNjllM1dXaTFEWUhfNEJEdWlZZFZoVG1YWUsyV0o4bGdWc1pfb3diWW1HbDNsZDdSIiwiaGVhZGVyIjp7ImtpZCI6IkFnRktra0FQenFCcnFRcEhRNmV0RDdUYzFOQTRFSkhIaU5DSmh5d016RGtqIiwiaXYiOiJTMG5ZcndhUXROWFpMM043Y3BiTWFEa0Y1dFlHSGVZYyIsInNlbmRlciI6IjJGSUJrRmJJdXVkNzNuWTh1TkV4LWpHVFZtcFJuekloeW5qRGN6WERUMmg3WW55ZW5WVDRWWjB2UFc1cG1WT2lNRUxIYVFUR0tESFVtTHZOdnVDcmcyTERfd2ltMTdoLU4yakw1eEoweEhGYW0wSU5rM0N1dldqOTlLMD0ifX1dfQ==","iv":"UxK3yc31qb3Rp_gS","ciphertext":"m6gVBCNlRm395UQfyufYs9Vtze7D6ZT5RHj1-Eg18uvNg_3Td5lcQSlKVWksqVSYPfGbx055P9E8WXQAJnslnsEyAtueV4ovUUR_Hj2vUWuJ-fWiMEInM4k3K7MppDdGQUSaS8I7ryNTWICEhA2i-NnG7HXCY7fo2VV9Lp6RcdYOeSqvhijGXFTZPOraq72odGpzw3tAFwLOHAanL3Mg_2T7BfPA24qT23oDjtnkkqMWd42Ao0BYEPfofQ5m1Io8uKqMmA1F8ySfd3_zoJrQuLQA4EGI9Btlda_zUMhLRWduaj-odXShMzBP1ZCVKGByusZqyw9nBJDSnAh1yK7o0AECuWDSYEMI6nuFGQWx0SQiLGF8ir3vCZFyhDSVPfJHyB_aKBb8o39heFte7fvfYan-_H_bseVbmXeM_q7UywJCLppNe08EhR_W8MeCEBeV42JER7x70Cgnglvyocxln9Z7biqWgHqghPITQnxLBy2ZASH9aRyImjsG-Df4QGJEHb-594ADuZuCCZARB3KqjyI456pZGnfg-1cCq6_q7Il3OimwGyhSgyEBQod-75GpfClfp_9bx8zoIu1IbSNZArNWqDjf791Icaw0wDaWZ2jysCmBRD3pihBIJ3PhNWnOP393-Ve8SL5EMLupETs_TZ8CrUI_ui8iT4Y0mZCnssY_3Dmx44ffU3LV9UUQaOEk0JYj5T1-e_XCyIopnDEBetMVWfb2ZeEYg82SmYX8d8nPGVNQSv0qGWPNfBd8AhXW2_sFjk8_QqUiTJWzBpBXpJPi1G0QGJnbW5faEWMB304ikmaNpp8iNKzyiGLgwhLK3TU-iOefiLHajHgVu-9eOQ1NubcPyib4Xe94OIYmKCd-ZaUO265_Fvt3oeQwxBAvgA7fEXG9ts3FmCLgPS0nx-MJUIVXW4IqJE5v0v0isEPa3MIotMLAzaTPKCM82OcApQEF7jUmuiutHkp84oVq3bVc2rrFSoq-IDy-tzjjkiHaLkxg2u3gVxmm0qIS0UJ_9sBaziPg9_UKygasFvDAlbcK-PZODJMzoRv_hjzQVk5af35NR2chRYAx-V9WGHPXJbGgSyLPelEYYBP9RsRzROTGz4eZVosLDHQWlCI99pJ3iUQjyyKkTfVDjjwser5ZuGqKifBFQfbEDueudqopy4H9d2xMvmoP5nwBsAXdRyJL5dKxkbcN4fdjF_YLZL0ASenw7ya3O0uTDsU-gRDfzXy7DQAVMp4LKjPwK0LnN1wd95qIJ6aXZMGYSL0XmMVHfrQ8Q6Cp_j-SRYNoTSqvNIFsSILw91D5agpH8qzZie97EJfOeFW4h10PYsIGxOZjhmbnIq29V-IhUDKV0Ot8uS5NadUCKKEuYI0TsqwOvLYkH3ax0NkL7uBZy0nEPbNxEVo8Ua_KrCmNu4kjSCYmO1y77624fQsxSOd9hLVJZap8R4fqPcnsNbqQZJ4GfLZj1BecOPbvJ6FxtS2Di-ak1xywur16nRV2KkCJ3e9wiGV8fWlCWlFNTi51nieLj9GE9eJ6DjzdWQ-oxY8hrtpSplLde1IxtYwiXHJiIdXJLYuFbkOgiJxxi9F2swMtWh-x-mqBi8wm8B6t8N6iNg==","tag":"0RNh7vM4sLj1kHJA61EQ9g=="}'
do_call: >>> name: indy_unpack_message, args: (c_int(3), b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJkVGR0WnZfOTdyTjNBdHhlNjllM1dXaTFEWUhfNEJEdWlZZFZoVG1YWUsyV0o4bGdWc1pfb3diWW1HbDNsZDdSIiwiaGVhZGVyIjp7ImtpZCI6IkFnRktra0FQenFCcnFRcEhRNmV0RDdUYzFOQTRFSkhIaU5DSmh5d016RGtqIiwiaXYiOiJTMG5ZcndhUXROWFpMM043Y3BiTWFEa0Y1dFlHSGVZYyIsInNlbmRlciI6IjJGSUJrRmJJdXVkNzNuWTh1TkV4LWpHVFZtcFJuekloeW5qRGN6WERUMmg3WW55ZW5WVDRWWjB2UFc1cG1WT2lNRUxIYVFUR0tESFVtTHZOdnVDcmcyTERfd2ltMTdoLU4yakw1eEoweEhGYW0wSU5rM0N1dldqOTlLMD0ifX1dfQ==","iv":"UxK3yc31qb3Rp_gS","ciphertext":"m6gVBCNlRm395UQfyufYs9Vtze7D6ZT5RHj1-Eg18uvNg_3Td5lcQSlKVWksqVSYPfGbx055P9E8WXQAJnslnsEyAtueV4ovUUR_Hj2vUWuJ-fWiMEInM4k3K7MppDdGQUSaS8I7ryNTWICEhA2i-NnG7HXCY7fo2VV9Lp6RcdYOeSqvhijGXFTZPOraq72odGpzw3tAFwLOHAanL3Mg_2T7BfPA24qT23oDjtnkkqMWd42Ao0BYEPfofQ5m1Io8uKqMmA1F8ySfd3_zoJrQuLQA4EGI9Btlda_zUMhLRWduaj-odXShMzBP1ZCVKGByusZqyw9nBJDSnAh1yK7o0AECuWDSYEMI6nuFGQWx0SQiLGF8ir3vCZFyhDSVPfJHyB_aKBb8o39heFte7fvfYan-_H_bseVbmXeM_q7UywJCLppNe08EhR_W8MeCEBeV42JER7x70Cgnglvyocxln9Z7biqWgHqghPITQnxLBy2ZASH9aRyImjsG-Df4QGJEHb-594ADuZuCCZARB3KqjyI456pZGnfg-1cCq6_q7Il3OimwGyhSgyEBQod-75GpfClfp_9bx8zoIu1IbSNZArNWqDjf791Icaw0wDaWZ2jysCmBRD3pihBIJ3PhNWnOP393-Ve8SL5EMLupETs_TZ8CrUI_ui8iT4Y0mZCnssY_3Dmx44ffU3LV9UUQaOEk0JYj5T1-e_XCyIopnDEBetMVWfb2ZeEYg82SmYX8d8nPGVNQSv0qGWPNfBd8AhXW2_sFjk8_QqUiTJWzBpBXpJPi1G0QGJnbW5faEWMB304ikmaNpp8iNKzyiGLgwhLK3TU-iOefiLHajHgVu-9eOQ1NubcPyib4Xe94OIYmKCd-ZaUO265_Fvt3oeQwxBAvgA7fEXG9ts3FmCLgPS0nx-MJUIVXW4IqJE5v0v0isEPa3MIotMLAzaTPKCM82OcApQEF7jUmuiutHkp84oVq3bVc2rrFSoq-IDy-tzjjkiHaLkxg2u3gVxmm0qIS0UJ_9sBaziPg9_UKygasFvDAlbcK-PZODJMzoRv_hjzQVk5af35NR2chRYAx-V9WGHPXJbGgSyLPelEYYBP9RsRzROTGz4eZVosLDHQWlCI99pJ3iUQjyyKkTfVDjjwser5ZuGqKifBFQfbEDueudqopy4H9d2xMvmoP5nwBsAXdRyJL5dKxkbcN4fdjF_YLZL0ASenw7ya3O0uTDsU-gRDfzXy7DQAVMp4LKjPwK0LnN1wd95qIJ6aXZMGYSL0XmMVHfrQ8Q6Cp_j-SRYNoTSqvNIFsSILw91D5agpH8qzZie97EJfOeFW4h10PYsIGxOZjhmbnIq29V-IhUDKV0Ot8uS5NadUCKKEuYI0TsqwOvLYkH3ax0NkL7uBZy0nEPbNxEVo8Ua_KrCmNu4kjSCYmO1y77624fQsxSOd9hLVJZap8R4fqPcnsNbqQZJ4GfLZj1BecOPbvJ6FxtS2Di-ak1xywur16nRV2KkCJ3e9wiGV8fWlCWlFNTi51nieLj9GE9eJ6DjzdWQ-oxY8hrtpSplLde1IxtYwiXHJiIdXJLYuFbkOgiJxxi9F2swMtWh-x-mqBi8wm8B6t8N6iNg==","tag":"0RNh7vM4sLj1kHJA61EQ9g=="}', c_uint(2253), <CFunctionType object at 0x7fd99efcfe58>)
do_call: Function indy_unpack_message returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [86, 77, 116, 105, 49, 56, 101, 52, 99, 75, 104, 56, 74, 104, 78, 51, 97, 57, 110, 74, 88, 48, 56, 54, 108, 106, 116, 120, 121, 116, 117, 97, 107, 79, 50, 107, 104, 52, 109, 52, 80, 73, 88, 110, 53, 100, 71, 69, 109, 71, 107, 99, 56, 100, 74, 121, 120, 55, 116, 89, 97, 121, 81, 114, 102, 109, 53, 85, 69, 52, 56, 119, 119, 48, 108, 78, 86, 84, 68, 121, 81, 117, 88, 65, 107, 86, 100, 90, 72, 106, 51, 120, 104, 112, 105, 122], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [86, 77, 116, 105, 49, 56, 101, 52, 99, 75, 104, 56, 74, 104, 78, 51, 97, 57, 110, 74, 88, 48, 56, 54, 108, 106, 116, 120, 121, 116, 117, 97, 107, 79, 50, 107, 104, 52, 109, 52, 80, 73, 88, 110, 53, 100, 71, 69, 109, 71, 107, 99, 56, 100, 74, 121, 120, 55, 116, 89, 97, 121, 81, 114, 102, 109, 53, 85, 69, 52, 56, 119, 119, 48, 108, 78, 86, 84, 68, 121, 81, 117, 88, 65, 107, 86, 100, 90, 72, 106, 51, 120, 104, 112, 105, 122], "Medic"]
_indy_callback: >>> command_handle: 171, err , args: (b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}","recipient_verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","sender_verkey":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 171, err , args: (b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}","recipient_verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","sender_verkey":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}',)
_indy_loop_callback: Function returned b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}","recipient_verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","sender_verkey":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}'
_indy_loop_callback <<<
unpack_message: <<< res: b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}","recipient_verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","sender_verkey":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}'
Expanded message: {'@type': 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation', '@id': 'c7c6f8dd-0795-41d5-b6de-cfe1038a5315', '~trace': {'target': 'log', 'full_thread': True, 'trace_reports': []}, 'comment': 'Please prove that you have recieved a valid PMQ', 'request_presentations~attach': [{'@id': 'libindy-request-presentation-0', 'mime-type': 'application/json', 'data': {'base64': 'eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9'}}]}
  {"msg_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation", "timestamp": 1621255601.7374434, "str_time": "2021-05-17 12:46:41.737443", "handler": "Medic", "ellapsed_milli": 0, "outcome": "Dispatcher.handle_message.START"}
get_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'eef16ddd-5609-4e39-9915-f29a1c704a04', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573273870064), c_char_p(140572651878088), c_char_p(140573273511736), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
192.168.208.2 [17/May/2021:12:46:41 +0000] "POST / HTTP/1.1" 200 149 "-" "Python/3.6 aiohttp/3.6.3"
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [109, 73, 104, 49, 120, 54, 51, 101, 73, 56, 70, 48, 50, 104, 119, 52, 113, 120, 74, 121, 56, 108, 113, 50, 88, 122, 43, 110, 49, 88, 75, 118, 109, 116, 117, 55, 83, 89, 117, 115, 68, 88, 54, 84, 121, 121, 68, 119, 104, 71, 65, 56, 81, 53, 88, 113, 89, 112, 104, 99, 66, 67, 56, 88, 74, 79, 101, 74, 89, 121, 87, 114, 108, 54, 65, 102, 99, 55, 49, 79, 103, 121, 108, 67, 122, 103, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 172, err , args: (b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.808747Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 172, err , args: (b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.808747Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.808747Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.808747Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
PresentationRequestHandler called with context <RequestContext(_connection_ready=True, _connection_record=<ConnRecord(_id='eef16ddd-5609-4e39-9915-f29a1c704a04', _last_state='active', state='active', created_at='2021-05-17 12:46:08.973586Z', updated_at='2021-05-17 12:46:15.808747Z', my_did='JkkJux3BNa6oWp6AvWMqoY', their_did='TcJ1RMKLi54urRp6eug7xs', their_label='General Medical Council', their_role='inviter', invitation_key='8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a', invitation_msg_id=None, request_id='5197a8ab-6bba-40c8-a8be-a70602476833', error_msg=None, inbound_connection_id=None, routing_state='none', accept='manual', invitation_mode='once', alias=None, their_public_did=None)>, _context=<aries_cloudagent.config.injection_context.InjectionContext object at 0x7fd99ef8c940>, _message=<PresentationRequest(_message_id='c7c6f8dd-0795-41d5-b6de-cfe1038a5315', _message_new_id=False, _message_decorators=<DecoratorSet{~trace: <TraceDecorator(_target='log', _full_thread=True, _trace_reports=None)>}>, comment='Please prove that you have recieved a valid PMQ', request_presentations_attach=[<AttachDecorator(ident='libindy-request-presentation-0', description=None, filename=None, mime_type='application/json', lastmod_time=None, byte_count=None, data=<AttachDecoratorData(base64_='eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9')>)>])>, _message_receipt=<MessageReceipt(_connection_id=None, _direct_response_mode=None, _in_time='2021-05-17 12:46:41.707019Z', _raw_message='{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation", "@id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "~trace": {"target": "log", "full_thread": true, "trace_reports": []}, "comment": "Please prove that you have recieved a valid PMQ", "request_presentations~attach": [{"@id": "libindy-request-presentation-0", "mime-type": "application/json", "data": {"base64": "eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9"}}]}', _recipient_verkey='AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj', _recipient_did='JkkJux3BNa6oWp6AvWMqoY', _recipient_did_public=None, _sender_did='TcJ1RMKLi54urRp6eug7xs', _sender_verkey='FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno', _thread_id='c7c6f8dd-0795-41d5-b6de-cfe1038a5315')>, _profile=<IndySdkProfile(backend=indy, name=Medic)>)>
Received presentation request message: {"@type":"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation","@id":"c7c6f8dd-0795-41d5-b6de-cfe1038a5315","~trace":{"target":"log","full_thread":true,"trace_reports":[]},"comment":"Please prove that you have recieved a valid PMQ","request_presentations~attach":[{"@id":"libindy-request-presentation-0","mime-type":"application/json","data":{"base64":"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9"}}]}
open_wallet_search: >>> wallet_handle: 3, type_: 'presentation_exchange_v10', query_json: '{"thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140572651819088), c_char_p(140572651913736), c_char_p(140573275298384), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[110, 67, 49, 112, 119, 102, 79, 119, 52, 111, 104, 99, 98, 55, 118, 83, 81, 101, 81, 108, 106, 82, 90, 79, 116, 90, 120, 70, 65, 104, 107, 80, 99, 53, 118, 86, 112, 89, 54, 87, 50, 89, 83, 109, 55, 111, 74, 67, 57, 87, 118, 77, 100, 119, 56, 51, 101, 113, 48, 73, 121, 106, 79, 109, 79, 120, 72, 118, 75, 57, 48, 61], [63, 214, 72, 222, 130, 103, 146, 158, 195, 194, 230, 74, 26, 53, 129, 230, 232, 7, 33, 137, 227, 21, 72, 88, 62, 97, 106, 31, 62, 194, 84, 80, 193, 83, 183, 11, 35], [203, 122, 98, 209, 35, 107, 95, 185, 163, 20, 194, 44, 127, 50, 93, 40, 38, 115, 156, 101, 190, 128, 191, 144, 6, 67, 134, 208, 36, 122, 117, 225, 169, 166, 168, 19, 201, 160, 59, 36, 2, 33, 211, 150, 112, 152, 3, 69, 188, 121, 60, 103, 107, 174, 105, 87, 84, 49, 15, 197, 65, 68, 117, 199], "Medic", "Medic"]
_indy_callback: >>> command_handle: 173, err , args: (40,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 173, err , args: (40,)
_indy_loop_callback: Function returned 40
_indy_loop_callback <<<
open_wallet_search: <<< res: 40
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 40, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(40), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
_indy_callback: >>> command_handle: 174, err , args: (b'{"totalCount":null,"records":null}',)
do_call: <<< <Future pending>
_indy_loop_callback: >>> command_handle: 174, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
_indy_callback: <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 40
do_call: >>> name: indy_close_wallet_search, args: (c_int(40), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 175, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 175, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
add_wallet_record: >>> wallet_handle: 3, type_: 'presentation_exchange_v10', id: '6be4dc23-2532-4d2d-9def-6cf78a9bfe09', value: '{"thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "created_at": "2021-05-17 12:46:41.793608Z", "updated_at": "2021-05-17 12:46:41.793608Z", "connection_id": "eef16ddd-5609-4e39-9915-f29a1c704a04", "initiator": "external", "presentation_proposal_dict": null, "presentation_request": {"name": "Proof of Primary Medical Qualification", "version": "1.0", "requested_attributes": {"0_Name_uuid": {"name": "Name", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}, "0_University_uuid": {"name": "University", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}, "0_Date Issued_uuid": {"name": "Date Issued", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}}, "requested_predicates": {}, "non_revoked": {"to": 1621255549}, "nonce": "19740203311469284009343"}, "presentation_request_dict": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation", "@id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "~trace": {"target": "log", "full_thread": true, "trace_reports": []}, "comment": "Please prove that you have recieved a valid PMQ", "request_presentations~attach": [{"@id": "libindy-request-presentation-0", "mime-type": "application/json", "data": {"base64": "eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9"}}]}, "presentation": null, "role": "prover", "state": "request_received", "auto_present": null, "error_msg": null, "verified": null, "trace": true}', tags_json: '{"thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315"}'
do_call: >>> name: indy_add_wallet_record, args: (c_int(3), c_char_p(140572626240720), c_char_p(140572626237272), c_char_p(94095652734176), c_char_p(140572651916640), <CFunctionType object at 0x7fd9c421ba70>)
do_call: Function indy_add_wallet_record returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: INSERT INTO items (type, name, value, key, wallet_id) VALUES ($1, $2, $3, $4, $5) RETURNING id
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [[110, 67, 49, 112, 119, 102, 79, 119, 52, 111, 104, 99, 98, 55, 118, 83, 81, 101, 81, 108, 106, 82, 90, 79, 116, 90, 120, 70, 65, 104, 107, 80, 99, 53, 118, 86, 112, 89, 54, 87, 50, 89, 83, 109, 55, 111, 74, 67, 57, 87, 118, 77, 100, 119, 56, 51, 101, 113, 48, 73, 121, 106, 79, 109, 79, 120, 72, 118, 75, 57, 48, 61], [105, 119, 50, 56, 79, 50, 122, 97, 106, 99, 80, 57, 43, 102, 77, 51, 122, 101, 99, 82, 71, 89, 104, 116, 101, 73, 87, 87, 80, 85, 43, 82, 76, 50, 98, 48, 54, 78, 121, 48, 88, 43, 104, 82, 84, 90, 47, 89, 98, 114, 109, 86, 48, 121, 114, 100, 78, 120, 81, 98, 73, 48, 53, 118, 110, 111, 106, 98, 65, 79, 50, 74, 107, 101, 116, 49, 109, 104, 103, 84, 54, 118, 81, 113, 89, 81, 61, 61], [183, 177, 24, 180, 54, 90, 85, 33, 102, 253, 87, 120, 203, 91, 24, 24, 251, 227, 21, 213, 6, 235, 59, 38, 193, 182, 149, 233, 194, 244, 186, 22, 52, 86, 62, 232, 31, 172, 150, 131, 3, 128, 175, 74, 56, 232, 89, 131, 46, 106, 178, 163, 65, 118, 47, 142, 35, 155, 46, 106, 16, 148, 82, 252, 132, 49, 75, 184, 102, 133, 235, 83, 10, 149, 217, 228, 122, 169, 167, 84, 177, 169, 48, 230, 33, 5, 199, 115, 94, 243, 3, 238, 121, 103, 113, 247, 123, 63, 100, 242, 8, 215, 131, 129, 93, 142, 234, 117, 27, 123, 68, 59, 143, 62, 109, 85, 168, 53, 32, 152, 23, 14, 158, 199, 70, 223, 81, 88, 8, 204, 124, 251, 237, 76, 31, 178, 45, 186, 39, 103, 27, 32, 247, 250, 77, 68, 192, 223, 173, 77, 99, 120, 229, 5, 124, 143, 233, 64, 110, 112, 250, 165, 84, 56, 223, 25, 37, 158, 117, 96, 205, 184, 232, 33, 103, 76, 34, 20, 236, 45, 253, 111, 152, 33, 70, 51, 193, 230, 44, 117, 151, 248, 200, 168, 76, 104, 198, 102, 114, 186, 244, 232, 201, 105, 219, 75, 42, 89, 8, 227, 78, 101, 149, 20, 203, 188, 200, 122, 39, 219, 103, 210, 141, 61, 144, 218, 230, 164, 88, 162, 2, 16, 107, 221, 164, 175, 152, 224, 61, 92, 100, 82, 79, 150, 174, 198, 4, 251, 239, 77, 24, 108, 90, 74, 76, 249, 66, 128, 133, 242, 89, 72, 85, 174, 161, 128, 228, 187, 182, 68, 231, 211, 154, 184, 205, 233, 173, 250, 207, 227, 198, 189, 159, 207, 228, 166, 34, 24, 79, 114, 83, 101, 108, 139, 116, 78, 33, 181, 220, 41, 120, 244, 232, 170, 40, 137, 251, 175, 19, 112, 153, 11, 35, 0, 187, 190, 38, 24, 221, 13, 87, 170, 192, 168, 223, 31, 188, 165, 181, 246, 182, 229, 255, 88, 177, 116, 168, 77, 43, 2, 28, 21, 161, 151, 103, 202, 59, 44, 74, 122, 111, 73, 7, 134, 10, 59, 97, 52, 100, 152, 176, 80, 11, 23, 211, 144, 42, 176, 139, 31, 252, 221, 145, 140, 25, 215, 97, 95, 139, 218, 71, 22, 166, 220, 80, 53, 77, 173, 111, 160, 140, 104, 234, 72, 106, 49, 132, 207, 13, 170, 90, 226, 65, 172, 208, 251, 143, 142, 172, 182, 33, 226, 242, 32, 180, 49, 170, 62, 42, 13, 236, 89, 81, 40, 110, 216, 16, 184, 60, 52, 104, 57, 94, 101, 101, 178, 100, 233, 37, 230, 62, 30, 175, 254, 54, 221, 86, 40, 237, 203, 203, 115, 115, 221, 178, 168, 209, 178, 34, 43, 96, 71, 240, 157, 139, 137, 233, 179, 176, 27, 131, 247, 168, 81, 184, 153, 187, 14, 185, 74, 85, 160, 113, 6, 189, 97, 149, 81, 23, 10, 114, 152, 62, 227, 34, 15, 74, 231, 51, 81, 122, 37, 141, 65, 253, 208, 80, 198, 248, 191, 197, 45, 75, 220, 56, 111, 132, 11, 50, 244, 179, 249, 11, 18, 249, 41, 29, 224, 105, 86, 230, 168, 251, 83, 235, 112, 58, 186, 58, 84, 30, 146, 91, 226, 65, 154, 56, 216, 52, 156, 81, 102, 189, 79, 204, 147, 54, 3, 118, 193, 195, 147, 248, 225, 94, 41, 216, 172, 52, 121, 156, 201, 38, 162, 185, 49, 176, 115, 164, 189, 190, 174, 209, 142, 144, 136, 78, 14, 246, 70, 251, 152, 252, 100, 134, 25, 169, 0, 83, 132, 161, 93, 3, 5, 196, 227, 210, 171, 58, 120, 222, 79, 117, 180, 192, 249, 123, 149, 69, 187, 50, 101, 69, 100, 225, 89, 199, 24, 229, 176, 77, 253, 110, 198, 91, 186, 145, 144, 66, 18, 46, 95, 235, 138, 54, 28, 199, 85, 202, 183, 69, 83, 225, 120, 159, 46, 158, 254, 98, 154, 66, 108, 89, 205, 53, 189, 179, 90, 193, 18, 41, 61, 142, 165, 100, 171, 114, 22, 32, 205, 201, 29, 214, 70, 160, 86, 190, 107, 254, 164, 25, 201, 88, 79, 73, 44, 226, 209, 81, 134, 54, 163, 246, 197, 33, 54, 84, 66, 68, 64, 189, 126, 200, 190, 0, 76, 228, 93, 88, 85, 202, 32, 86, 209, 193, 140, 148, 48, 1, 189, 221, 16, 105, 208, 2, 123, 140, 226, 211, 37, 36, 107, 213, 163, 18, 140, 211, 247, 119, 57, 235, 172, 240, 167, 111, 252, 243, 90, 246, 20, 231, 165, 171, 202, 129, 194, 211, 54, 9, 164, 26, 227, 79, 235, 66, 104, 189, 206, 77, 124, 99, 155, 45, 124, 138, 88, 201, 127, 137, 96, 107, 7, 57, 33, 202, 206, 138, 239, 175, 213, 53, 239, 151, 98, 238, 159, 41, 90, 10, 134, 152, 122, 173, 192, 33, 58, 32, 110, 173, 49, 158, 47, 156, 218, 99, 7, 144, 89, 240, 131, 85, 107, 0, 207, 86, 171, 126, 22, 103, 91, 18, 200, 126, 42, 21, 8, 68, 147, 47, 204, 176, 120, 208, 124, 168, 88, 194, 245, 250, 53, 218, 209, 46, 239, 193, 207, 213, 217, 167, 18, 194, 210, 142, 241, 214, 96, 131, 95, 149, 190, 197, 202, 14, 193, 113, 126, 132, 120, 229, 198, 192, 62, 13, 61, 202, 230, 253, 153, 215, 20, 146, 74, 161, 190, 1, 141, 254, 191, 248, 152, 71, 1, 77, 201, 61, 187, 175, 50, 110, 191, 32, 178, 201, 12, 155, 186, 3, 139, 188, 142, 144, 69, 75, 70, 92, 111, 209, 173, 3, 142, 159, 174, 237, 201, 18, 83, 209, 190, 84, 16, 160, 164, 56, 149, 56, 62, 4, 12, 197, 171, 110, 127, 44, 27, 38, 165, 171, 121, 81, 22, 153, 164, 91, 101, 47, 180, 104, 65, 77, 121, 129, 74, 56, 147, 135, 91, 17, 34, 52, 13, 79, 157, 176, 105, 0, 205, 137, 211, 223, 95, 62, 218, 64, 164, 253, 106, 117, 246, 173, 243, 183, 119, 72, 189, 58, 78, 84, 62, 118, 231, 91, 41, 62, 151, 59, 130, 234, 133, 193, 96, 173, 165, 156, 165, 195, 71, 98, 3, 67, 10, 166, 144, 168, 184, 178, 20, 133, 231, 125, 50, 216, 218, 2, 51, 248, 129, 101, 65, 183, 198, 227, 86, 217, 241, 202, 213, 84, 179, 230, 35, 142, 54, 20, 62, 195, 33, 208, 72, 233, 194, 187, 29, 241, 198, 176, 110, 155, 170, 224, 182, 141, 172, 248, 98, 15, 4, 171, 62, 0, 18, 26, 142, 61, 62, 208, 175, 120, 108, 44, 196, 116, 72, 122, 42, 219, 121, 204, 164, 209, 253, 226, 34, 199, 72, 198, 184, 169, 109, 92, 219, 45, 10, 185, 169, 230, 113, 247, 222, 240, 255, 146, 26, 42, 165, 101, 41, 127, 134, 101, 143, 60, 147, 245, 137, 78, 169, 193, 146, 49, 212, 227, 113, 227, 54, 114, 55, 250, 52, 128, 224, 43, 108, 146, 59, 190, 165, 29, 121, 103, 235, 105, 62, 112, 23, 165, 67, 72, 137, 165, 238, 145, 68, 41, 108, 39, 45, 89, 174, 56, 134, 247, 43, 56, 28, 66, 10, 69, 77, 254, 106, 178, 108, 119, 110, 28, 22, 66, 73, 56, 76, 113, 62, 54, 201, 55, 158, 92, 32, 89, 23, 7, 209, 245, 83, 111, 117, 76, 127, 217, 130, 32, 205, 103, 207, 7, 15, 247, 128, 40, 201, 231, 69, 102, 15, 230, 109, 59, 245, 21, 7, 168, 65, 165, 23, 232, 249, 83, 180, 58, 207, 4, 83, 217, 127, 192, 44, 51, 50, 74, 216, 172, 183, 171, 48, 104, 250, 176, 90, 196, 159, 37, 173, 12, 101, 53, 71, 22, 6, 145, 147, 139, 36, 163, 137, 78, 96, 147, 3, 208, 71, 149, 184, 192, 134, 205, 227, 38, 225, 94, 71, 202, 92, 18, 18, 60, 215, 235, 244, 29, 218, 235, 237, 217, 56, 227, 41, 70, 161, 151, 89, 43, 248, 67, 253, 194, 53, 250, 58, 89, 73, 72, 156, 147, 73, 101, 143, 7, 234, 81, 168, 222, 221, 97, 78, 15, 50, 109, 210, 77, 121, 238, 55, 52, 176, 109, 107, 9, 211, 212, 78, 71, 101, 4, 164, 206, 230, 105, 11, 117, 72, 234, 5, 178, 97, 96, 154, 36, 211, 136, 195, 12, 177, 208, 43, 29, 138, 253, 61, 127, 117, 5, 24, 156, 66, 73, 67, 179, 33, 33, 105, 212, 174, 215, 142, 77, 169, 3, 142, 151, 177, 47, 64, 59, 188, 231, 79, 20, 115, 97, 86, 240, 59, 254, 137, 119, 151, 165, 135, 244, 145, 27, 21, 64, 243, 138, 189, 120, 54, 182, 25, 226, 23, 96, 178, 179, 13, 25, 1, 44, 222, 195, 75, 152, 123, 245, 245, 214, 144, 118, 38, 176, 64, 28, 182, 158, 18, 133, 243, 101, 150, 80, 66, 161, 158, 204, 245, 148, 196, 2, 58, 126, 55, 163, 42, 19, 4, 59, 233, 161, 147, 21, 130, 41, 155, 246, 227, 125, 113, 126, 174, 21, 224, 234, 25, 147, 112, 225, 223, 35, 21, 130, 31, 213, 81, 125, 206, 199, 75, 14, 79, 233, 248, 89, 155, 108, 113, 17, 204, 40, 207, 247, 218, 148, 55, 211, 161, 103, 230, 54, 168, 162, 187, 250, 29, 22, 137, 209, 221, 87, 139, 128, 140, 117, 64, 244, 22, 173, 170, 178, 230, 80, 0, 81, 170, 28, 180, 157, 103, 6, 180, 166, 190, 112, 76, 241, 242, 178, 70, 57, 199, 12, 65, 143, 253, 103, 130, 207, 8, 254, 202, 22, 68, 109, 177, 14, 18, 193, 128, 91, 0, 20, 151, 235, 179, 49, 141, 188, 172, 194, 28, 59, 202, 96, 110, 33, 106, 93, 143, 46, 88, 123, 189, 53, 24, 203, 10, 238, 179, 38, 75, 93, 95, 194, 102, 39, 89, 152, 190, 49, 45, 205, 17, 28, 21, 35, 160, 182, 17, 211, 223, 194, 103, 104, 23, 204, 72, 146, 182, 2, 41, 205, 215, 85, 38, 224, 185, 220, 234, 195, 169, 229, 2, 185, 51, 147, 234, 13, 149, 221, 113, 21, 198, 123, 92, 247, 71, 57, 85, 74, 116, 199, 78, 9, 181, 72, 96, 14, 151, 9, 158, 175, 216, 145, 110, 227, 110, 60, 123, 211, 233, 159, 170, 138, 219, 60, 38, 71, 237, 206, 128, 227, 130, 30, 81, 236, 197, 64, 26, 73, 224, 207, 249, 152, 240, 35, 133, 98, 159, 0, 126, 155, 160, 8, 21, 123, 17, 203, 214, 141, 32, 114, 28, 66, 15, 148, 62, 36, 51, 215, 193, 117, 84, 156, 92, 81, 44, 254, 41, 159, 110, 248, 184, 156, 64, 20, 243, 37, 52, 96, 62, 101, 36, 89, 48, 114, 112, 226, 122, 0, 166, 178, 5, 171, 232, 248, 120, 185, 176, 159, 65, 242, 160, 218, 139, 113, 243, 74, 80, 245, 23, 21, 136, 149, 72, 79, 111, 169, 9, 216, 253, 173, 76, 247, 146, 210, 139, 60, 95, 54, 83, 57, 167, 172, 129, 124, 158, 151, 230, 239, 9, 37, 0, 89, 55, 11, 234, 83, 110, 188, 97, 9, 239, 253, 38, 5, 50, 2, 148, 213, 33, 61, 94, 255, 172, 51, 101, 170, 130, 1, 187, 73, 66, 116, 190, 177, 171, 64, 177, 241, 118, 70, 213, 219, 149, 42, 10, 176, 248, 177, 202, 234, 152, 223, 210, 237, 53, 174, 87, 233, 250, 72, 15, 229, 195, 245, 252, 57, 28, 81, 122, 164, 207, 151, 179, 240, 66, 249, 142, 27, 186, 246, 219, 162, 28, 249, 84, 90, 10, 197, 74, 157, 247, 13, 210, 141, 190, 69, 30, 223, 155, 27, 84, 147, 132, 207, 132, 112, 98, 121, 235, 163, 195, 224, 55, 184, 36, 165, 240, 53, 162, 195, 149, 115, 139, 14, 14, 162, 182, 235, 29, 113, 154, 167, 8, 142, 150, 43, 41, 90, 202, 130, 181, 163, 215, 153, 116, 209, 17, 11, 43, 211, 174, 133, 204, 10, 154, 236, 92, 100, 47, 40, 225, 119, 189, 67, 246, 117, 165, 185, 32, 109, 213, 31, 52, 154, 144, 248, 125, 180, 45, 148, 156, 48, 20, 140, 235, 184, 54, 250, 80, 183, 99, 182, 237, 134, 206, 115, 0, 59, 111, 57, 43, 9, 12, 175, 75, 237, 146, 89, 31, 161, 195, 161, 54, 108, 241, 65, 129, 156, 188, 17, 61, 147, 62, 152, 62, 66, 49, 53, 51, 88, 240, 1, 85, 74, 90, 115, 189, 223, 242, 120, 15, 98, 129, 18, 130, 105, 184, 45, 90, 205, 190, 246, 54, 159, 24, 46, 133, 246, 141, 242, 175, 239, 155, 109, 161, 23, 56, 31, 26, 200, 138, 193, 214, 137, 226, 142, 100, 133, 144, 239, 72, 223, 85, 232, 116, 108, 158, 117, 66, 16, 159, 112, 24, 226, 29, 37, 109, 160, 211, 48, 28, 172, 131, 142, 92, 26, 214, 216, 178, 56, 175, 246, 178, 211, 98, 172, 245, 97, 31, 227, 161, 135, 238, 9, 21, 72, 114, 86, 24, 161, 73, 90, 115, 210, 150, 244, 245, 140, 124, 130, 119, 186, 144, 130, 224, 88, 137, 148, 84, 108, 189, 128, 47, 238, 80, 181, 69, 0, 186, 243, 226, 146, 244, 62, 145, 136, 210, 61, 128, 16, 191, 247, 190, 220, 226, 141, 41, 24, 158, 71, 108, 162, 205, 9, 76, 82, 29, 231, 86, 18, 64, 199, 211, 209, 51, 254, 231, 194, 230, 234, 156, 97, 55, 214, 146, 38, 193, 169, 73, 37, 46, 80, 233, 77, 66, 93, 93, 133, 130, 227, 59, 100, 157, 214, 68, 129, 95, 49, 121, 3, 152, 55, 15, 161, 177, 229, 165, 83, 87, 206, 121, 30, 149, 213, 90, 195, 155, 98, 246, 89], [217, 244, 61, 135, 27, 13, 98, 189, 130, 60, 187, 148, 40, 166, 198, 136, 151, 108, 197, 91, 56, 227, 33, 213, 208, 112, 149, 84, 215, 195, 247, 217, 92, 14, 200, 153, 179, 116, 149, 190, 136, 5, 187, 205, 153, 186, 119, 10, 202, 42, 28, 218, 108, 82, 161, 197, 94, 194, 166, 173], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s2`: INSERT INTO tags_encrypted (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s3`: INSERT INTO tags_plaintext (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s2 with parameters: [16, [63, 214, 72, 222, 130, 103, 146, 158, 195, 194, 230, 74, 26, 53, 129, 230, 232, 7, 33, 137, 227, 21, 72, 88, 62, 97, 106, 31, 62, 194, 84, 80, 193, 83, 183, 11, 35], [203, 122, 98, 209, 35, 107, 95, 185, 163, 20, 194, 44, 127, 50, 93, 40, 38, 115, 156, 101, 190, 128, 191, 144, 6, 67, 134, 208, 36, 122, 117, 225, 169, 166, 168, 19, 201, 160, 59, 36, 2, 33, 211, 150, 112, 152, 3, 69, 188, 121, 60, 103, 107, 174, 105, 87, 84, 49, 15, 197, 65, 68, 117, 199], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 176, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 176, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
add_wallet_record: <<< res: None
  {"msg_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation", "timestamp": 1621255601.8163748, "str_time": "2021-05-17 12:46:41.816375", "handler": "Medic", "ellapsed_milli": 64, "outcome": "PresentationRequestHandler.handle.END"}
  {"msg_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation", "timestamp": 1621255601.8172984, "str_time": "2021-05-17 12:46:41.817298", "handler": "Medic", "ellapsed_milli": 85, "outcome": "Dispatcher.handle_message.END"}
  {"msg_id": "N/A", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "dict:Exchange", "timestamp": 1621255601.818293, "str_time": "2021-05-17 12:46:41.818293", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://medic-business-logic:3010/topic/present_proof/"}
  {"msg_id": "N/A", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "dict:Exchange", "timestamp": 1621255601.8190951, "str_time": "2021-05-17 12:46:41.819095", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.END.http://medic-business-logic:3010/topic/present_proof/"}
Posting to http://medic-business-logic:3010/topic/present_proof/; Data: {"presentation_request": {"name": "Proof of Primary Medical Qualification", "version": "1.0", "requested_attributes": {"0_Name_uuid": {"name": "Name", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}, "0_University_uuid": {"name": "University", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}, "0_Date Issued_uuid": {"name": "Date Issued", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}}, "requested_predicates": {}, "non_revoked": {"to": 1621255549}, "nonce": "19740203311469284009343"}, "presentation_request_dict": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation", "@id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "~trace": {"target": "log", "full_thread": true, "trace_reports": []}, "comment": "Please prove that you have recieved a valid PMQ", "request_presentations~attach": [{"@id": "libindy-request-presentation-0", "mime-type": "application/json", "data": {"base64": "eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9"}}]}, "presentation_exchange_id": "6be4dc23-2532-4d2d-9def-6cf78a9bfe09", "created_at": "2021-05-17 12:46:41.793608Z", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "role": "prover", "trace": true, "connection_id": "eef16ddd-5609-4e39-9915-f29a1c704a04", "initiator": "external", "state": "request_received", "updated_at": "2021-05-17 12:46:41.793608Z"}; Headers: {'Content-Type': 'application/json'}
Incoming request: GET /present-proof/records?connection_id=eef16ddd-5609-4e39-9915-f29a1c704a04&state=request_received&role=prover
Match info: <MatchInfo {}: <ResourceRoute [GET] <PlainResource  /present-proof/records> -> <function presentation_exchange_list at 0x7fd9c42ad9d8>>
Body: 
open_wallet_search: >>> wallet_handle: 3, type_: 'presentation_exchange_v10', query_json: '{}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140572626295376), c_char_p(140572651894216), c_char_p(140573273227504), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[110, 67, 49, 112, 119, 102, 79, 119, 52, 111, 104, 99, 98, 55, 118, 83, 81, 101, 81, 108, 106, 82, 90, 79, 116, 90, 120, 70, 65, 104, 107, 80, 99, 53, 118, 86, 112, 89, 54, 87, 50, 89, 83, 109, 55, 111, 74, 67, 57, 87, 118, 77, 100, 119, 56, 51, 101, 113, 48, 73, 121, 106, 79, 109, 79, 120, 72, 118, 75, 57, 48, 61], "Medic"]
_indy_callback: >>> command_handle: 177, err , args: (41,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 177, err , args: (41,)
_indy_loop_callback: Function returned 41
_indy_loop_callback <<<
open_wallet_search: <<< res: 41
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 41, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(41), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
_indy_callback: >>> command_handle: 178, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"6be4dc23-2532-4d2d-9def-6cf78a9bfe09","value":"{\\"thread_id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"created_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"updated_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"connection_id\\": \\"eef16ddd-5609-4e39-9915-f29a1c704a04\\", \\"initiator\\": \\"external\\", \\"presentation_proposal_dict\\": null, \\"presentation_request\\": {\\"name\\": \\"Proof of Primary Medical Qualification\\", \\"version\\": \\"1.0\\", \\"requested_attributes\\": {\\"0_Name_uuid\\": {\\"name\\": \\"Name\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_University_uuid\\": {\\"name\\": \\"University\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_Date Issued_uuid\\": {\\"name\\": \\"Date Issued\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}}, \\"requested_predicates\\": {}, \\"non_revoked\\": {\\"to\\": 1621255549}, \\"nonce\\": \\"19740203311469284009343\\"}, \\"presentation_request_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}, \\"presentation\\": null, \\"role\\": \\"prover\\", \\"state\\": \\"request_received\\", \\"auto_present\\": null, \\"error_msg\\": null, \\"verified\\": null, \\"trace\\": true}","tags":null}]}',)
_indy_callback: <<<
do_call: <<< <Future pending>
_indy_loop_callback: >>> command_handle: 178, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"6be4dc23-2532-4d2d-9def-6cf78a9bfe09","value":"{\\"thread_id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"created_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"updated_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"connection_id\\": \\"eef16ddd-5609-4e39-9915-f29a1c704a04\\", \\"initiator\\": \\"external\\", \\"presentation_proposal_dict\\": null, \\"presentation_request\\": {\\"name\\": \\"Proof of Primary Medical Qualification\\", \\"version\\": \\"1.0\\", \\"requested_attributes\\": {\\"0_Name_uuid\\": {\\"name\\": \\"Name\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_University_uuid\\": {\\"name\\": \\"University\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_Date Issued_uuid\\": {\\"name\\": \\"Date Issued\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}}, \\"requested_predicates\\": {}, \\"non_revoked\\": {\\"to\\": 1621255549}, \\"nonce\\": \\"19740203311469284009343\\"}, \\"presentation_request_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}, \\"presentation\\": null, \\"role\\": \\"prover\\", \\"state\\": \\"request_received\\", \\"auto_present\\": null, \\"error_msg\\": null, \\"verified\\": null, \\"trace\\": true}","tags":null}]}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":[{"type":null,"id":"6be4dc23-2532-4d2d-9def-6cf78a9bfe09","value":"{\\"thread_id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"created_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"updated_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"connection_id\\": \\"eef16ddd-5609-4e39-9915-f29a1c704a04\\", \\"initiator\\": \\"external\\", \\"presentation_proposal_dict\\": null, \\"presentation_request\\": {\\"name\\": \\"Proof of Primary Medical Qualification\\", \\"version\\": \\"1.0\\", \\"requested_attributes\\": {\\"0_Name_uuid\\": {\\"name\\": \\"Name\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_University_uuid\\": {\\"name\\": \\"University\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_Date Issued_uuid\\": {\\"name\\": \\"Date Issued\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}}, \\"requested_predicates\\": {}, \\"non_revoked\\": {\\"to\\": 1621255549}, \\"nonce\\": \\"19740203311469284009343\\"}, \\"presentation_request_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}, \\"presentation\\": null, \\"role\\": \\"prover\\", \\"state\\": \\"request_received\\", \\"auto_present\\": null, \\"error_msg\\": null, \\"verified\\": null, \\"trace\\": true}","tags":null}]}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":[{"type":null,"id":"6be4dc23-2532-4d2d-9def-6cf78a9bfe09","value":"{\\"thread_id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"created_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"updated_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"connection_id\\": \\"eef16ddd-5609-4e39-9915-f29a1c704a04\\", \\"initiator\\": \\"external\\", \\"presentation_proposal_dict\\": null, \\"presentation_request\\": {\\"name\\": \\"Proof of Primary Medical Qualification\\", \\"version\\": \\"1.0\\", \\"requested_attributes\\": {\\"0_Name_uuid\\": {\\"name\\": \\"Name\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_University_uuid\\": {\\"name\\": \\"University\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_Date Issued_uuid\\": {\\"name\\": \\"Date Issued\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}}, \\"requested_predicates\\": {}, \\"non_revoked\\": {\\"to\\": 1621255549}, \\"nonce\\": \\"19740203311469284009343\\"}, \\"presentation_request_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}, \\"presentation\\": null, \\"role\\": \\"prover\\", \\"state\\": \\"request_received\\", \\"auto_present\\": null, \\"error_msg\\": null, \\"verified\\": null, \\"trace\\": true}","tags":null}]}'
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 41, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(41), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 179, err , args: (b'{"totalCount":null,"records":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 179, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 41
do_call: >>> name: indy_close_wallet_search, args: (c_int(41), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 180, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 180, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
192.168.208.6 [17/May/2021:12:47:15 +0000] "GET /present-proof/records?connection_id=eef16ddd-5609-4e39-9915-f29a1c704a04&state=request_received&role=prover HTTP/1.1" 200 2408 "-" "Python/3.7 aiohttp/3.7.4.post0"
Incoming request: GET /present-proof/records/6be4dc23-2532-4d2d-9def-6cf78a9bfe09/credentials
Match info: <MatchInfo {'pres_ex_id': '6be4dc23-2532-4d2d-9def-6cf78a9bfe09'}: <ResourceRoute [GET] <DynamicResource  /present-proof/records/{pres_ex_id}/credentials> -> <function presentation_exchange_credentials_list at 0x7fd9c42adb70>>
Body: 
get_wallet_record: >>> wallet_handle: 3, type_: 'presentation_exchange_v10', id: '6be4dc23-2532-4d2d-9def-6cf78a9bfe09', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140572626297680), c_char_p(140572626269032), c_char_p(140572651804160), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[110, 67, 49, 112, 119, 102, 79, 119, 52, 111, 104, 99, 98, 55, 118, 83, 81, 101, 81, 108, 106, 82, 90, 79, 116, 90, 120, 70, 65, 104, 107, 80, 99, 53, 118, 86, 112, 89, 54, 87, 50, 89, 83, 109, 55, 111, 74, 67, 57, 87, 118, 77, 100, 119, 56, 51, 101, 113, 48, 73, 121, 106, 79, 109, 79, 120, 72, 118, 75, 57, 48, 61], [105, 119, 50, 56, 79, 50, 122, 97, 106, 99, 80, 57, 43, 102, 77, 51, 122, 101, 99, 82, 71, 89, 104, 116, 101, 73, 87, 87, 80, 85, 43, 82, 76, 50, 98, 48, 54, 78, 121, 48, 88, 43, 104, 82, 84, 90, 47, 89, 98, 114, 109, 86, 48, 121, 114, 100, 78, 120, 81, 98, 73, 48, 53, 118, 110, 111, 106, 98, 65, 79, 50, 74, 107, 101, 116, 49, 109, 104, 103, 84, 54, 118, 81, 113, 89, 81, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 181, err , args: (b'{"type":null,"id":"6be4dc23-2532-4d2d-9def-6cf78a9bfe09","value":"{\\"thread_id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"created_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"updated_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"connection_id\\": \\"eef16ddd-5609-4e39-9915-f29a1c704a04\\", \\"initiator\\": \\"external\\", \\"presentation_proposal_dict\\": null, \\"presentation_request\\": {\\"name\\": \\"Proof of Primary Medical Qualification\\", \\"version\\": \\"1.0\\", \\"requested_attributes\\": {\\"0_Name_uuid\\": {\\"name\\": \\"Name\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_University_uuid\\": {\\"name\\": \\"University\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_Date Issued_uuid\\": {\\"name\\": \\"Date Issued\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}}, \\"requested_predicates\\": {}, \\"non_revoked\\": {\\"to\\": 1621255549}, \\"nonce\\": \\"19740203311469284009343\\"}, \\"presentation_request_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}, \\"presentation\\": null, \\"role\\": \\"prover\\", \\"state\\": \\"request_received\\", \\"auto_present\\": null, \\"error_msg\\": null, \\"verified\\": null, \\"trace\\": true}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 181, err , args: (b'{"type":null,"id":"6be4dc23-2532-4d2d-9def-6cf78a9bfe09","value":"{\\"thread_id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"created_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"updated_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"connection_id\\": \\"eef16ddd-5609-4e39-9915-f29a1c704a04\\", \\"initiator\\": \\"external\\", \\"presentation_proposal_dict\\": null, \\"presentation_request\\": {\\"name\\": \\"Proof of Primary Medical Qualification\\", \\"version\\": \\"1.0\\", \\"requested_attributes\\": {\\"0_Name_uuid\\": {\\"name\\": \\"Name\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_University_uuid\\": {\\"name\\": \\"University\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_Date Issued_uuid\\": {\\"name\\": \\"Date Issued\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}}, \\"requested_predicates\\": {}, \\"non_revoked\\": {\\"to\\": 1621255549}, \\"nonce\\": \\"19740203311469284009343\\"}, \\"presentation_request_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}, \\"presentation\\": null, \\"role\\": \\"prover\\", \\"state\\": \\"request_received\\", \\"auto_present\\": null, \\"error_msg\\": null, \\"verified\\": null, \\"trace\\": true}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"6be4dc23-2532-4d2d-9def-6cf78a9bfe09","value":"{\\"thread_id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"created_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"updated_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"connection_id\\": \\"eef16ddd-5609-4e39-9915-f29a1c704a04\\", \\"initiator\\": \\"external\\", \\"presentation_proposal_dict\\": null, \\"presentation_request\\": {\\"name\\": \\"Proof of Primary Medical Qualification\\", \\"version\\": \\"1.0\\", \\"requested_attributes\\": {\\"0_Name_uuid\\": {\\"name\\": \\"Name\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_University_uuid\\": {\\"name\\": \\"University\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_Date Issued_uuid\\": {\\"name\\": \\"Date Issued\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}}, \\"requested_predicates\\": {}, \\"non_revoked\\": {\\"to\\": 1621255549}, \\"nonce\\": \\"19740203311469284009343\\"}, \\"presentation_request_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}, \\"presentation\\": null, \\"role\\": \\"prover\\", \\"state\\": \\"request_received\\", \\"auto_present\\": null, \\"error_msg\\": null, \\"verified\\": null, \\"trace\\": true}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"6be4dc23-2532-4d2d-9def-6cf78a9bfe09","value":"{\\"thread_id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"created_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"updated_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"connection_id\\": \\"eef16ddd-5609-4e39-9915-f29a1c704a04\\", \\"initiator\\": \\"external\\", \\"presentation_proposal_dict\\": null, \\"presentation_request\\": {\\"name\\": \\"Proof of Primary Medical Qualification\\", \\"version\\": \\"1.0\\", \\"requested_attributes\\": {\\"0_Name_uuid\\": {\\"name\\": \\"Name\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_University_uuid\\": {\\"name\\": \\"University\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_Date Issued_uuid\\": {\\"name\\": \\"Date Issued\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}}, \\"requested_predicates\\": {}, \\"non_revoked\\": {\\"to\\": 1621255549}, \\"nonce\\": \\"19740203311469284009343\\"}, \\"presentation_request_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}, \\"presentation\\": null, \\"role\\": \\"prover\\", \\"state\\": \\"request_received\\", \\"auto_present\\": null, \\"error_msg\\": null, \\"verified\\": null, \\"trace\\": true}","tags":null}'
prover_search_credentials_for_proof_req: >>> wallet_handle: 3, proof_request_json: '{"name": "Proof of Primary Medical Qualification", "version": "1.0", "requested_attributes": {"0_Name_uuid": {"name": "Name", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}, "0_University_uuid": {"name": "University", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}, "0_Date Issued_uuid": {"name": "Date Issued", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}}, "requested_predicates": {}, "non_revoked": {"to": 1621255549}, "nonce": "19740203311469284009343"}', extra_query_json: '{}'
prover_search_credentials_for_proof_req: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99d75a110>
do_call: >>> name: indy_prover_search_credentials_for_proof_req, args: (c_int(3), c_char_p(94095652594960), c_char_p(140572651894216), <CFunctionType object at 0x7fd99d75a110>)
do_call: Function indy_prover_search_credentials_for_proof_req returned err: 0
	src/services/anoncreds/prover.rs:445 | name: Some("University"), names: None
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $9) SELECT count(*) FROM items as i WHERE i.type = $1 AND (((i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) OR (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $4 AND value = $5))) AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $6 AND value = $7))) AND i.wallet_id = $8
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[77, 70, 54, 104, 111, 106, 101, 67, 88, 85, 88, 116, 55, 116, 82, 119, 43, 97, 109, 98, 48, 120, 101, 111, 106, 119, 65, 113, 120, 107, 76, 57, 109, 108, 78, 109, 119, 110, 78, 52, 117, 84, 67, 76, 77, 90, 120, 121, 76, 88, 104, 71, 101, 48, 111, 109, 57, 79, 85, 61], [0, 238, 29, 149, 233, 49, 68, 217, 240, 164, 63, 71, 115, 31, 93, 229, 212, 74, 194, 208, 55, 168, 195, 126, 177, 162, 176, 25, 68, 36, 188, 77, 224, 63, 2, 176, 54], [10, 214, 244, 176, 205, 112, 233, 119, 189, 112, 189, 163, 0, 85, 202, 185, 233, 93, 141, 87, 36, 89, 200, 124, 152, 195, 213, 198, 159, 242, 188, 106, 68, 3, 187, 226, 125, 15, 210, 237, 241, 185, 125, 229, 148, 238, 204, 162, 13, 201, 47, 24, 50, 89, 79, 77, 216, 27, 241, 105, 143, 93, 149, 162, 110, 97, 35, 187, 25, 208, 153, 118, 64, 198, 253, 220, 52, 192, 140, 70, 227, 35, 178, 178, 97, 45, 67, 3], [142, 153, 221, 112, 126, 30, 206, 118, 204, 222, 108, 152, 112, 125, 83, 233, 101, 62, 139, 219, 200, 100, 123, 205, 117, 121, 32, 212, 60, 182, 242, 130, 29, 178, 71, 10, 145, 78, 237, 8, 14, 85, 227], [10, 214, 244, 176, 205, 112, 233, 119, 189, 112, 189, 163, 0, 85, 202, 185, 233, 93, 141, 87, 36, 89, 200, 124, 152, 195, 213, 198, 159, 242, 188, 106, 68, 3, 187, 226, 125, 15, 210, 237, 241, 185, 125, 229, 148, 238, 204, 162, 13, 201, 47, 24, 50, 89, 79, 77, 216, 27, 241, 105, 143, 93, 149, 162, 110, 97, 35, 187, 25, 208, 153, 118, 64, 198, 253, 220, 52, 192, 140, 70, 227, 35, 178, 178, 97, 45, 67, 3], [233, 181, 69, 74, 221, 229, 191, 8, 69, 130, 82, 155, 167, 87, 247, 158, 114, 33, 14, 90, 182, 225, 195, 168, 87, 234, 100, 9, 84, 21, 198, 49, 194, 38, 248, 113, 237, 131, 107, 212, 231, 202, 216, 226, 114, 220, 44, 24, 135, 10, 175, 150], [80, 155, 122, 93, 227, 218, 217, 57, 152, 177, 155, 93, 182, 72, 177, 43, 124, 47, 185, 188, 112, 45, 126, 146, 167, 214, 1, 93, 55], "Medic", "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $9) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (((i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) OR (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $4 AND value = $5))) AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $6 AND value = $7))) AND i.wallet_id = $8
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[77, 70, 54, 104, 111, 106, 101, 67, 88, 85, 88, 116, 55, 116, 82, 119, 43, 97, 109, 98, 48, 120, 101, 111, 106, 119, 65, 113, 120, 107, 76, 57, 109, 108, 78, 109, 119, 110, 78, 52, 117, 84, 67, 76, 77, 90, 120, 121, 76, 88, 104, 71, 101, 48, 111, 109, 57, 79, 85, 61], [0, 238, 29, 149, 233, 49, 68, 217, 240, 164, 63, 71, 115, 31, 93, 229, 212, 74, 194, 208, 55, 168, 195, 126, 177, 162, 176, 25, 68, 36, 188, 77, 224, 63, 2, 176, 54], [10, 214, 244, 176, 205, 112, 233, 119, 189, 112, 189, 163, 0, 85, 202, 185, 233, 93, 141, 87, 36, 89, 200, 124, 152, 195, 213, 198, 159, 242, 188, 106, 68, 3, 187, 226, 125, 15, 210, 237, 241, 185, 125, 229, 148, 238, 204, 162, 13, 201, 47, 24, 50, 89, 79, 77, 216, 27, 241, 105, 143, 93, 149, 162, 110, 97, 35, 187, 25, 208, 153, 118, 64, 198, 253, 220, 52, 192, 140, 70, 227, 35, 178, 178, 97, 45, 67, 3], [142, 153, 221, 112, 126, 30, 206, 118, 204, 222, 108, 152, 112, 125, 83, 233, 101, 62, 139, 219, 200, 100, 123, 205, 117, 121, 32, 212, 60, 182, 242, 130, 29, 178, 71, 10, 145, 78, 237, 8, 14, 85, 227], [10, 214, 244, 176, 205, 112, 233, 119, 189, 112, 189, 163, 0, 85, 202, 185, 233, 93, 141, 87, 36, 89, 200, 124, 152, 195, 213, 198, 159, 242, 188, 106, 68, 3, 187, 226, 125, 15, 210, 237, 241, 185, 125, 229, 148, 238, 204, 162, 13, 201, 47, 24, 50, 89, 79, 77, 216, 27, 241, 105, 143, 93, 149, 162, 110, 97, 35, 187, 25, 208, 153, 118, 64, 198, 253, 220, 52, 192, 140, 70, 227, 35, 178, 178, 97, 45, 67, 3], [233, 181, 69, 74, 221, 229, 191, 8, 69, 130, 82, 155, 167, 87, 247, 158, 114, 33, 14, 90, 182, 225, 195, 168, 87, 234, 100, 9, 84, 21, 198, 49, 194, 38, 248, 113, 237, 131, 107, 212, 231, 202, 216, 226, 114, 220, 44, 24, 135, 10, 175, 150], [80, 155, 122, 93, 227, 218, 217, 57, 152, 177, 155, 93, 182, 72, 177, 43, 124, 47, 185, 188, 112, 45, 126, 146, 167, 214, 1, 93, 55], "Medic", "Medic"]
	src/services/anoncreds/prover.rs:445 | name: Some("Date Issued"), names: None
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $9) SELECT count(*) FROM items as i WHERE i.type = $1 AND (((i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) OR (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $4 AND value = $5))) AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $6 AND value = $7))) AND i.wallet_id = $8
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[77, 70, 54, 104, 111, 106, 101, 67, 88, 85, 88, 116, 55, 116, 82, 119, 43, 97, 109, 98, 48, 120, 101, 111, 106, 119, 65, 113, 120, 107, 76, 57, 109, 108, 78, 109, 119, 110, 78, 52, 117, 84, 67, 76, 77, 90, 120, 121, 76, 88, 104, 71, 101, 48, 111, 109, 57, 79, 85, 61], [0, 238, 29, 149, 233, 49, 68, 217, 240, 164, 63, 71, 115, 31, 93, 229, 212, 74, 194, 208, 55, 168, 195, 126, 177, 162, 176, 25, 68, 36, 188, 77, 224, 63, 2, 176, 54], [10, 214, 244, 176, 205, 112, 233, 119, 189, 112, 189, 163, 0, 85, 202, 185, 233, 93, 141, 87, 36, 89, 200, 124, 152, 195, 213, 198, 159, 242, 188, 106, 68, 3, 187, 226, 125, 15, 210, 237, 241, 185, 125, 229, 148, 238, 204, 162, 13, 201, 47, 24, 50, 89, 79, 77, 216, 27, 241, 105, 143, 93, 149, 162, 110, 97, 35, 187, 25, 208, 153, 118, 64, 198, 253, 220, 52, 192, 140, 70, 227, 35, 178, 178, 97, 45, 67, 3], [142, 153, 221, 112, 126, 30, 206, 118, 204, 222, 108, 152, 112, 125, 83, 233, 101, 62, 139, 219, 200, 100, 123, 205, 117, 121, 32, 212, 60, 182, 242, 130, 29, 178, 71, 10, 145, 78, 237, 8, 14, 85, 227], [10, 214, 244, 176, 205, 112, 233, 119, 189, 112, 189, 163, 0, 85, 202, 185, 233, 93, 141, 87, 36, 89, 200, 124, 152, 195, 213, 198, 159, 242, 188, 106, 68, 3, 187, 226, 125, 15, 210, 237, 241, 185, 125, 229, 148, 238, 204, 162, 13, 201, 47, 24, 50, 89, 79, 77, 216, 27, 241, 105, 143, 93, 149, 162, 110, 97, 35, 187, 25, 208, 153, 118, 64, 198, 253, 220, 52, 192, 140, 70, 227, 35, 178, 178, 97, 45, 67, 3], [125, 201, 59, 134, 156, 61, 148, 133, 67, 221, 7, 86, 101, 16, 41, 122, 192, 163, 107, 253, 211, 55, 85, 224, 143, 137, 178, 149, 109, 197, 151, 202, 191, 41, 141, 251, 81, 9, 1, 221, 143, 120, 215, 194, 199, 111, 221, 97, 71, 81, 233, 220], [80, 155, 122, 93, 227, 218, 217, 57, 152, 177, 155, 93, 182, 72, 177, 43, 124, 47, 185, 188, 112, 45, 126, 146, 167, 214, 1, 93, 55], "Medic", "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $9) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (((i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) OR (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $4 AND value = $5))) AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $6 AND value = $7))) AND i.wallet_id = $8
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [[77, 70, 54, 104, 111, 106, 101, 67, 88, 85, 88, 116, 55, 116, 82, 119, 43, 97, 109, 98, 48, 120, 101, 111, 106, 119, 65, 113, 120, 107, 76, 57, 109, 108, 78, 109, 119, 110, 78, 52, 117, 84, 67, 76, 77, 90, 120, 121, 76, 88, 104, 71, 101, 48, 111, 109, 57, 79, 85, 61], [0, 238, 29, 149, 233, 49, 68, 217, 240, 164, 63, 71, 115, 31, 93, 229, 212, 74, 194, 208, 55, 168, 195, 126, 177, 162, 176, 25, 68, 36, 188, 77, 224, 63, 2, 176, 54], [10, 214, 244, 176, 205, 112, 233, 119, 189, 112, 189, 163, 0, 85, 202, 185, 233, 93, 141, 87, 36, 89, 200, 124, 152, 195, 213, 198, 159, 242, 188, 106, 68, 3, 187, 226, 125, 15, 210, 237, 241, 185, 125, 229, 148, 238, 204, 162, 13, 201, 47, 24, 50, 89, 79, 77, 216, 27, 241, 105, 143, 93, 149, 162, 110, 97, 35, 187, 25, 208, 153, 118, 64, 198, 253, 220, 52, 192, 140, 70, 227, 35, 178, 178, 97, 45, 67, 3], [142, 153, 221, 112, 126, 30, 206, 118, 204, 222, 108, 152, 112, 125, 83, 233, 101, 62, 139, 219, 200, 100, 123, 205, 117, 121, 32, 212, 60, 182, 242, 130, 29, 178, 71, 10, 145, 78, 237, 8, 14, 85, 227], [10, 214, 244, 176, 205, 112, 233, 119, 189, 112, 189, 163, 0, 85, 202, 185, 233, 93, 141, 87, 36, 89, 200, 124, 152, 195, 213, 198, 159, 242, 188, 106, 68, 3, 187, 226, 125, 15, 210, 237, 241, 185, 125, 229, 148, 238, 204, 162, 13, 201, 47, 24, 50, 89, 79, 77, 216, 27, 241, 105, 143, 93, 149, 162, 110, 97, 35, 187, 25, 208, 153, 118, 64, 198, 253, 220, 52, 192, 140, 70, 227, 35, 178, 178, 97, 45, 67, 3], [125, 201, 59, 134, 156, 61, 148, 133, 67, 221, 7, 86, 101, 16, 41, 122, 192, 163, 107, 253, 211, 55, 85, 224, 143, 137, 178, 149, 109, 197, 151, 202, 191, 41, 141, 251, 81, 9, 1, 221, 143, 120, 215, 194, 199, 111, 221, 97, 71, 81, 233, 220], [80, 155, 122, 93, 227, 218, 217, 57, 152, 177, 155, 93, 182, 72, 177, 43, 124, 47, 185, 188, 112, 45, 126, 146, 167, 214, 1, 93, 55], "Medic", "Medic"]
	src/services/anoncreds/prover.rs:445 | name: Some("Name"), names: None
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $9) SELECT count(*) FROM items as i WHERE i.type = $1 AND (((i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) OR (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $4 AND value = $5))) AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $6 AND value = $7))) AND i.wallet_id = $8
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[77, 70, 54, 104, 111, 106, 101, 67, 88, 85, 88, 116, 55, 116, 82, 119, 43, 97, 109, 98, 48, 120, 101, 111, 106, 119, 65, 113, 120, 107, 76, 57, 109, 108, 78, 109, 119, 110, 78, 52, 117, 84, 67, 76, 77, 90, 120, 121, 76, 88, 104, 71, 101, 48, 111, 109, 57, 79, 85, 61], [0, 238, 29, 149, 233, 49, 68, 217, 240, 164, 63, 71, 115, 31, 93, 229, 212, 74, 194, 208, 55, 168, 195, 126, 177, 162, 176, 25, 68, 36, 188, 77, 224, 63, 2, 176, 54], [10, 214, 244, 176, 205, 112, 233, 119, 189, 112, 189, 163, 0, 85, 202, 185, 233, 93, 141, 87, 36, 89, 200, 124, 152, 195, 213, 198, 159, 242, 188, 106, 68, 3, 187, 226, 125, 15, 210, 237, 241, 185, 125, 229, 148, 238, 204, 162, 13, 201, 47, 24, 50, 89, 79, 77, 216, 27, 241, 105, 143, 93, 149, 162, 110, 97, 35, 187, 25, 208, 153, 118, 64, 198, 253, 220, 52, 192, 140, 70, 227, 35, 178, 178, 97, 45, 67, 3], [142, 153, 221, 112, 126, 30, 206, 118, 204, 222, 108, 152, 112, 125, 83, 233, 101, 62, 139, 219, 200, 100, 123, 205, 117, 121, 32, 212, 60, 182, 242, 130, 29, 178, 71, 10, 145, 78, 237, 8, 14, 85, 227], [10, 214, 244, 176, 205, 112, 233, 119, 189, 112, 189, 163, 0, 85, 202, 185, 233, 93, 141, 87, 36, 89, 200, 124, 152, 195, 213, 198, 159, 242, 188, 106, 68, 3, 187, 226, 125, 15, 210, 237, 241, 185, 125, 229, 148, 238, 204, 162, 13, 201, 47, 24, 50, 89, 79, 77, 216, 27, 241, 105, 143, 93, 149, 162, 110, 97, 35, 187, 25, 208, 153, 118, 64, 198, 253, 220, 52, 192, 140, 70, 227, 35, 178, 178, 97, 45, 67, 3], [28, 20, 47, 182, 228, 119, 74, 97, 24, 201, 47, 255, 49, 220, 133, 247, 155, 48, 245, 19, 88, 150, 123, 72, 66, 19, 156, 101, 121, 205, 144, 78, 41, 198, 246, 119, 189, 73, 59, 162, 218, 184, 58, 57, 130, 21], [80, 155, 122, 93, 227, 218, 217, 57, 152, 177, 155, 93, 182, 72, 177, 43, 124, 47, 185, 188, 112, 45, 126, 146, 167, 214, 1, 93, 55], "Medic", "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $9) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (((i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) OR (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $4 AND value = $5))) AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $6 AND value = $7))) AND i.wallet_id = $8
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [[77, 70, 54, 104, 111, 106, 101, 67, 88, 85, 88, 116, 55, 116, 82, 119, 43, 97, 109, 98, 48, 120, 101, 111, 106, 119, 65, 113, 120, 107, 76, 57, 109, 108, 78, 109, 119, 110, 78, 52, 117, 84, 67, 76, 77, 90, 120, 121, 76, 88, 104, 71, 101, 48, 111, 109, 57, 79, 85, 61], [0, 238, 29, 149, 233, 49, 68, 217, 240, 164, 63, 71, 115, 31, 93, 229, 212, 74, 194, 208, 55, 168, 195, 126, 177, 162, 176, 25, 68, 36, 188, 77, 224, 63, 2, 176, 54], [10, 214, 244, 176, 205, 112, 233, 119, 189, 112, 189, 163, 0, 85, 202, 185, 233, 93, 141, 87, 36, 89, 200, 124, 152, 195, 213, 198, 159, 242, 188, 106, 68, 3, 187, 226, 125, 15, 210, 237, 241, 185, 125, 229, 148, 238, 204, 162, 13, 201, 47, 24, 50, 89, 79, 77, 216, 27, 241, 105, 143, 93, 149, 162, 110, 97, 35, 187, 25, 208, 153, 118, 64, 198, 253, 220, 52, 192, 140, 70, 227, 35, 178, 178, 97, 45, 67, 3], [142, 153, 221, 112, 126, 30, 206, 118, 204, 222, 108, 152, 112, 125, 83, 233, 101, 62, 139, 219, 200, 100, 123, 205, 117, 121, 32, 212, 60, 182, 242, 130, 29, 178, 71, 10, 145, 78, 237, 8, 14, 85, 227], [10, 214, 244, 176, 205, 112, 233, 119, 189, 112, 189, 163, 0, 85, 202, 185, 233, 93, 141, 87, 36, 89, 200, 124, 152, 195, 213, 198, 159, 242, 188, 106, 68, 3, 187, 226, 125, 15, 210, 237, 241, 185, 125, 229, 148, 238, 204, 162, 13, 201, 47, 24, 50, 89, 79, 77, 216, 27, 241, 105, 143, 93, 149, 162, 110, 97, 35, 187, 25, 208, 153, 118, 64, 198, 253, 220, 52, 192, 140, 70, 227, 35, 178, 178, 97, 45, 67, 3], [28, 20, 47, 182, 228, 119, 74, 97, 24, 201, 47, 255, 49, 220, 133, 247, 155, 48, 245, 19, 88, 150, 123, 72, 66, 19, 156, 101, 121, 205, 144, 78, 41, 198, 246, 119, 189, 73, 59, 162, 218, 184, 58, 57, 130, 21], [80, 155, 122, 93, 227, 218, 217, 57, 152, 177, 155, 93, 182, 72, 177, 43, 124, 47, 185, 188, 112, 45, 126, 146, 167, 214, 1, 93, 55], "Medic", "Medic"]
_indy_callback: >>> command_handle: 182, err , args: (42,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 182, err , args: (42,)
_indy_loop_callback: Function returned 42
_indy_loop_callback <<<
prover_search_credentials_for_proof_req: <<< res: 42
prover_fetch_credentials_for_proof_req: >>> search_handle: 42, item_referent: '0_Name_uuid', count: 10
prover_fetch_credentials_for_proof_req: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99d75a430>
do_call: >>> name: indy_prover_fetch_credentials_for_proof_req, args: (c_int(42), c_char_p(140573273866992), c_uint(10), <CFunctionType object at 0x7fd99d75a430>)
do_call: Function indy_prover_fetch_credentials_for_proof_req returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 183, err , args: (b'[{"cred_info":{"referent":"PMQ","attrs":{"University":"Edinburgh Medical School","Name":"Will Abramson","Date Issued":"2021-05-17"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null},"interval":{"from":null,"to":1621255549}}]',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 183, err , args: (b'[{"cred_info":{"referent":"PMQ","attrs":{"University":"Edinburgh Medical School","Name":"Will Abramson","Date Issued":"2021-05-17"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null},"interval":{"from":null,"to":1621255549}}]',)
_indy_loop_callback: Function returned b'[{"cred_info":{"referent":"PMQ","attrs":{"University":"Edinburgh Medical School","Name":"Will Abramson","Date Issued":"2021-05-17"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null},"interval":{"from":null,"to":1621255549}}]'
_indy_loop_callback <<<
prover_fetch_credentials_for_proof_req: <<< res: '[{"cred_info":{"referent":"PMQ","attrs":{"University":"Edinburgh Medical School","Name":"Will Abramson","Date Issued":"2021-05-17"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null},"interval":{"from":null,"to":1621255549}}]'
prover_fetch_credentials_for_proof_req: >>> search_handle: 42, item_referent: '0_University_uuid', count: 9
do_call: >>> name: indy_prover_fetch_credentials_for_proof_req, args: (c_int(42), c_char_p(140572651918120), c_uint(9), <CFunctionType object at 0x7fd99d75a430>)
do_call: Function indy_prover_fetch_credentials_for_proof_req returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 184, err , args: (b'[{"cred_info":{"referent":"PMQ","attrs":{"University":"Edinburgh Medical School","Name":"Will Abramson","Date Issued":"2021-05-17"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null},"interval":{"from":null,"to":1621255549}}]',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 184, err , args: (b'[{"cred_info":{"referent":"PMQ","attrs":{"University":"Edinburgh Medical School","Name":"Will Abramson","Date Issued":"2021-05-17"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null},"interval":{"from":null,"to":1621255549}}]',)
_indy_loop_callback: Function returned b'[{"cred_info":{"referent":"PMQ","attrs":{"University":"Edinburgh Medical School","Name":"Will Abramson","Date Issued":"2021-05-17"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null},"interval":{"from":null,"to":1621255549}}]'
_indy_loop_callback <<<
prover_fetch_credentials_for_proof_req: <<< res: '[{"cred_info":{"referent":"PMQ","attrs":{"University":"Edinburgh Medical School","Name":"Will Abramson","Date Issued":"2021-05-17"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null},"interval":{"from":null,"to":1621255549}}]'
prover_fetch_credentials_for_proof_req: >>> search_handle: 42, item_referent: '0_Date Issued_uuid', count: 9
do_call: >>> name: indy_prover_fetch_credentials_for_proof_req, args: (c_int(42), c_char_p(140572651918008), c_uint(9), <CFunctionType object at 0x7fd99d75a430>)
do_call: Function indy_prover_fetch_credentials_for_proof_req returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 185, err , args: (b'[{"cred_info":{"referent":"PMQ","attrs":{"Name":"Will Abramson","University":"Edinburgh Medical School","Date Issued":"2021-05-17"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null},"interval":{"from":null,"to":1621255549}}]',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 185, err , args: (b'[{"cred_info":{"referent":"PMQ","attrs":{"Name":"Will Abramson","University":"Edinburgh Medical School","Date Issued":"2021-05-17"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null},"interval":{"from":null,"to":1621255549}}]',)
_indy_loop_callback: Function returned b'[{"cred_info":{"referent":"PMQ","attrs":{"Name":"Will Abramson","University":"Edinburgh Medical School","Date Issued":"2021-05-17"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null},"interval":{"from":null,"to":1621255549}}]'
_indy_loop_callback <<<
prover_fetch_credentials_for_proof_req: <<< res: '[{"cred_info":{"referent":"PMQ","attrs":{"Name":"Will Abramson","University":"Edinburgh Medical School","Date Issued":"2021-05-17"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null},"interval":{"from":null,"to":1621255549}}]'
prover_close_credentials_search_for_proof_req: >>> search_handle: 42
prover_close_credentials_search_for_proof_req: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99d75a688>
do_call: >>> name: indy_prover_close_credentials_search_for_proof_req, args: (c_int(42), <CFunctionType object at 0x7fd99d75a688>)
do_call: Function indy_prover_close_credentials_search_for_proof_req returned err: 0
_indy_callback: >>> command_handle: 186, err , args: ()
do_call: <<< <Future pending>
_indy_loop_callback: >>> command_handle: 186, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
_indy_callback: <<<
prover_close_credentials_search_for_proof_req: <<< res: None
192.168.208.6 [17/May/2021:12:47:24 +0000] "GET /present-proof/records/6be4dc23-2532-4d2d-9def-6cf78a9bfe09/credentials HTTP/1.1" 200 608 "-" "Python/3.7 aiohttp/3.7.4.post0"
Incoming request: POST /present-proof/records/6be4dc23-2532-4d2d-9def-6cf78a9bfe09/send-presentation
Match info: <MatchInfo {'pres_ex_id': '6be4dc23-2532-4d2d-9def-6cf78a9bfe09'}: <ResourceRoute [POST] <DynamicResource  /present-proof/records/{pres_ex_id}/send-presentation> -> <function presentation_exchange_send_presentation at 0x7fd9c42ade18>>
Body: {"requested_predicates": {}, "requested_attributes": {"0_Name_uuid": {"cred_id": "PMQ", "revealed": true}, "0_University_uuid": {"cred_id": "PMQ", "revealed": true}, "0_Date Issued_uuid": {"cred_id": "PMQ", "revealed": true}}, "self_attested_attributes": {}}
get_wallet_record: >>> wallet_handle: 3, type_: 'presentation_exchange_v10', id: '6be4dc23-2532-4d2d-9def-6cf78a9bfe09', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140572626299728), c_char_p(140572626301512), c_char_p(140572651804264), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[110, 67, 49, 112, 119, 102, 79, 119, 52, 111, 104, 99, 98, 55, 118, 83, 81, 101, 81, 108, 106, 82, 90, 79, 116, 90, 120, 70, 65, 104, 107, 80, 99, 53, 118, 86, 112, 89, 54, 87, 50, 89, 83, 109, 55, 111, 74, 67, 57, 87, 118, 77, 100, 119, 56, 51, 101, 113, 48, 73, 121, 106, 79, 109, 79, 120, 72, 118, 75, 57, 48, 61], [105, 119, 50, 56, 79, 50, 122, 97, 106, 99, 80, 57, 43, 102, 77, 51, 122, 101, 99, 82, 71, 89, 104, 116, 101, 73, 87, 87, 80, 85, 43, 82, 76, 50, 98, 48, 54, 78, 121, 48, 88, 43, 104, 82, 84, 90, 47, 89, 98, 114, 109, 86, 48, 121, 114, 100, 78, 120, 81, 98, 73, 48, 53, 118, 110, 111, 106, 98, 65, 79, 50, 74, 107, 101, 116, 49, 109, 104, 103, 84, 54, 118, 81, 113, 89, 81, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 187, err , args: (b'{"type":null,"id":"6be4dc23-2532-4d2d-9def-6cf78a9bfe09","value":"{\\"thread_id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"created_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"updated_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"connection_id\\": \\"eef16ddd-5609-4e39-9915-f29a1c704a04\\", \\"initiator\\": \\"external\\", \\"presentation_proposal_dict\\": null, \\"presentation_request\\": {\\"name\\": \\"Proof of Primary Medical Qualification\\", \\"version\\": \\"1.0\\", \\"requested_attributes\\": {\\"0_Name_uuid\\": {\\"name\\": \\"Name\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_University_uuid\\": {\\"name\\": \\"University\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_Date Issued_uuid\\": {\\"name\\": \\"Date Issued\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}}, \\"requested_predicates\\": {}, \\"non_revoked\\": {\\"to\\": 1621255549}, \\"nonce\\": \\"19740203311469284009343\\"}, \\"presentation_request_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}, \\"presentation\\": null, \\"role\\": \\"prover\\", \\"state\\": \\"request_received\\", \\"auto_present\\": null, \\"error_msg\\": null, \\"verified\\": null, \\"trace\\": true}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 187, err , args: (b'{"type":null,"id":"6be4dc23-2532-4d2d-9def-6cf78a9bfe09","value":"{\\"thread_id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"created_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"updated_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"connection_id\\": \\"eef16ddd-5609-4e39-9915-f29a1c704a04\\", \\"initiator\\": \\"external\\", \\"presentation_proposal_dict\\": null, \\"presentation_request\\": {\\"name\\": \\"Proof of Primary Medical Qualification\\", \\"version\\": \\"1.0\\", \\"requested_attributes\\": {\\"0_Name_uuid\\": {\\"name\\": \\"Name\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_University_uuid\\": {\\"name\\": \\"University\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_Date Issued_uuid\\": {\\"name\\": \\"Date Issued\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}}, \\"requested_predicates\\": {}, \\"non_revoked\\": {\\"to\\": 1621255549}, \\"nonce\\": \\"19740203311469284009343\\"}, \\"presentation_request_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}, \\"presentation\\": null, \\"role\\": \\"prover\\", \\"state\\": \\"request_received\\", \\"auto_present\\": null, \\"error_msg\\": null, \\"verified\\": null, \\"trace\\": true}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"6be4dc23-2532-4d2d-9def-6cf78a9bfe09","value":"{\\"thread_id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"created_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"updated_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"connection_id\\": \\"eef16ddd-5609-4e39-9915-f29a1c704a04\\", \\"initiator\\": \\"external\\", \\"presentation_proposal_dict\\": null, \\"presentation_request\\": {\\"name\\": \\"Proof of Primary Medical Qualification\\", \\"version\\": \\"1.0\\", \\"requested_attributes\\": {\\"0_Name_uuid\\": {\\"name\\": \\"Name\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_University_uuid\\": {\\"name\\": \\"University\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_Date Issued_uuid\\": {\\"name\\": \\"Date Issued\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}}, \\"requested_predicates\\": {}, \\"non_revoked\\": {\\"to\\": 1621255549}, \\"nonce\\": \\"19740203311469284009343\\"}, \\"presentation_request_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}, \\"presentation\\": null, \\"role\\": \\"prover\\", \\"state\\": \\"request_received\\", \\"auto_present\\": null, \\"error_msg\\": null, \\"verified\\": null, \\"trace\\": true}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"6be4dc23-2532-4d2d-9def-6cf78a9bfe09","value":"{\\"thread_id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"created_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"updated_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"connection_id\\": \\"eef16ddd-5609-4e39-9915-f29a1c704a04\\", \\"initiator\\": \\"external\\", \\"presentation_proposal_dict\\": null, \\"presentation_request\\": {\\"name\\": \\"Proof of Primary Medical Qualification\\", \\"version\\": \\"1.0\\", \\"requested_attributes\\": {\\"0_Name_uuid\\": {\\"name\\": \\"Name\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_University_uuid\\": {\\"name\\": \\"University\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_Date Issued_uuid\\": {\\"name\\": \\"Date Issued\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}}, \\"requested_predicates\\": {}, \\"non_revoked\\": {\\"to\\": 1621255549}, \\"nonce\\": \\"19740203311469284009343\\"}, \\"presentation_request_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}, \\"presentation\\": null, \\"role\\": \\"prover\\", \\"state\\": \\"request_received\\", \\"auto_present\\": null, \\"error_msg\\": null, \\"verified\\": null, \\"trace\\": true}","tags":null}'
get_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'eef16ddd-5609-4e39-9915-f29a1c704a04', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573273867328), c_char_p(140572626301512), c_char_p(140572651804264), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [109, 73, 104, 49, 120, 54, 51, 101, 73, 56, 70, 48, 50, 104, 119, 52, 113, 120, 74, 121, 56, 108, 113, 50, 88, 122, 43, 110, 49, 88, 75, 118, 109, 116, 117, 55, 83, 89, 117, 115, 68, 88, 54, 84, 121, 121, 68, 119, 104, 71, 65, 56, 81, 53, 88, 113, 89, 112, 104, 99, 66, 67, 56, 88, 74, 79, 101, 74, 89, 121, 87, 114, 108, 54, 65, 102, 99, 55, 49, 79, 103, 121, 108, 67, 122, 103, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 188, err , args: (b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.808747Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 188, err , args: (b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.808747Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.808747Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.808747Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
prover_get_credential: >>> wallet_handle: 3, cred_id: 'PMQ'
do_call: >>> name: indy_prover_get_credential, args: (c_int(3), c_char_p(140572651894536), <CFunctionType object at 0x7fd99ef83e58>)
do_call: Function indy_prover_get_credential returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[77, 70, 54, 104, 111, 106, 101, 67, 88, 85, 88, 116, 55, 116, 82, 119, 43, 97, 109, 98, 48, 120, 101, 111, 106, 119, 65, 113, 120, 107, 76, 57, 109, 108, 78, 109, 119, 110, 78, 52, 117, 84, 67, 76, 77, 90, 120, 121, 76, 88, 104, 71, 101, 48, 111, 109, 57, 79, 85, 61], [49, 68, 119, 108, 105, 113, 85, 101, 88, 105, 69, 75, 50, 115, 102, 53, 104, 108, 87, 97, 90, 79, 104, 113, 109, 88, 97, 54, 116, 113, 75, 69, 98, 67, 121, 76, 56, 68, 79, 50, 67, 65, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 189, err , args: (b'{"referent":"PMQ","attrs":{"Date Issued":"2021-05-17","Name":"Will Abramson","University":"Edinburgh Medical School"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 189, err , args: (b'{"referent":"PMQ","attrs":{"Date Issued":"2021-05-17","Name":"Will Abramson","University":"Edinburgh Medical School"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null}',)
_indy_loop_callback: Function returned b'{"referent":"PMQ","attrs":{"Date Issued":"2021-05-17","Name":"Will Abramson","University":"Edinburgh Medical School"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null}'
_indy_loop_callback <<<
prover_get_credential: <<< res: '{"referent":"PMQ","attrs":{"Date Issued":"2021-05-17","Name":"Will Abramson","University":"Edinburgh Medical School"},"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"cred_rev_id":null}'
Opening the pool ledger
set_protocol_version: >>> protocol_version: 2
do_call: >>> name: indy_set_protocol_version, args: (2, <CFunctionType object at 0x7fd9c8bffe58>)
do_call: Function indy_set_protocol_version returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 190, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 190, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
set_protocol_version: <<< res: None
open_pool_ledger: >>> config_name: 'default', config: '{}'
do_call: >>> name: indy_open_pool_ledger, args: (c_char_p(140572651894736), c_char_p(140572651894576), <CFunctionType object at 0x7fd9c63d4048>)
do_call: Function indy_open_pool_ledger returned err: 0
do_call: <<< <Future pending>
	src/commands/pool.rs:75 | OpenAck handle 43, pool_id 43, result Ok(())
_indy_callback: >>> command_handle: 191, err , args: (43,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 191, err , args: (43,)
_indy_loop_callback: Function returned 43
_indy_loop_callback <<<
open_pool_ledger: <<< res: 43
list_my_dids_with_meta: >>> wallet_handle: 3
do_call: >>> name: indy_list_my_dids_with_meta, args: (c_int(3), <CFunctionType object at 0x7fd9c8bff818>)
do_call: Function indy_list_my_dids_with_meta returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s2`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s2 with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s2`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s2 with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s3`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s3 with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 192, err , args: (b'[{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null},{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 192, err , args: (b'[{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null},{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]',)
_indy_loop_callback: Function returned b'[{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null},{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]'
_indy_loop_callback <<<
list_my_dids_with_meta: <<< res: '[{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null},{"did":"Ss9L55FVLDVAE9wH9QUaLm","verkey":"F6dVoRJMxD2frEn6Jk1V4a8LcXhcSLLamNCevZppU1Pq","tempVerkey":null,"metadata":null}]'
build_get_schema_request: >>> submitter_did: None, id: '3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1'
build_get_schema_request: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99d75a818>
do_call: >>> name: indy_build_get_schema_request, args: (None, c_char_p(140572626246160), <CFunctionType object at 0x7fd99d75a818>)
do_call: Function indy_build_get_schema_request returned err: 0
	src/services/ledger/mod.rs:149 | build_get_schema_request() => Ok("{\"reqId\":1621255649148276406,\"identifier\":\"LibindyDid111111111111\",\"operation\":{\"type\":\"107\",\"dest\":\"3jnXQcj9VLFjcUbtDVZZzV\",\"data\":{\"name\":\"Primary Medical Qualification\",\"version\":\"0.0.1\"}},\"protocolVersion\":2}")
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 193, err , args: (b'{"reqId":1621255649148276406,"identifier":"LibindyDid111111111111","operation":{"type":"107","dest":"3jnXQcj9VLFjcUbtDVZZzV","data":{"name":"Primary Medical Qualification","version":"0.0.1"}},"protocolVersion":2}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 193, err , args: (b'{"reqId":1621255649148276406,"identifier":"LibindyDid111111111111","operation":{"type":"107","dest":"3jnXQcj9VLFjcUbtDVZZzV","data":{"name":"Primary Medical Qualification","version":"0.0.1"}},"protocolVersion":2}',)
_indy_loop_callback: Function returned b'{"reqId":1621255649148276406,"identifier":"LibindyDid111111111111","operation":{"type":"107","dest":"3jnXQcj9VLFjcUbtDVZZzV","data":{"name":"Primary Medical Qualification","version":"0.0.1"}},"protocolVersion":2}'
_indy_loop_callback <<<
build_get_schema_request: <<< res: '{"reqId":1621255649148276406,"identifier":"LibindyDid111111111111","operation":{"type":"107","dest":"3jnXQcj9VLFjcUbtDVZZzV","data":{"name":"Primary Medical Qualification","version":"0.0.1"}},"protocolVersion":2}'
submit_request: >>> pool_handle: 43, request_json: '{"reqId":1621255649148276406,"identifier":"LibindyDid111111111111","operation":{"type":"107","dest":"3jnXQcj9VLFjcUbtDVZZzV","data":{"name":"Primary Medical Qualification","version":"0.0.1"}},"protocolVersion":2}'
do_call: >>> name: indy_submit_request, args: (c_int(43), c_char_p(140573275651800), <CFunctionType object at 0x7fd9c63d4368>)
do_call: Function indy_submit_request returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 194, err , args: (b'{"op":"REPLY","result":{"type":"107","dest":"3jnXQcj9VLFjcUbtDVZZzV","data":{"attr_names":["Name","University","Date Issued"],"name":"Primary Medical Qualification","version":"0.0.1"},"identifier":"LibindyDid111111111111","reqId":1621255649148276406,"seqNo":10,"txnTime":1621255034,"state_proof":{"root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","multi_signature":{"signature":"QnTDjgQQFtWL9vehAxY66NbzDm4dMmfRenbTaybuZqXBTweZGYhR83j9LRzZGj1FrqFHhc3mQtfQtkDbYpTDUVy6PBzDWuNZUHJ6rbTbZnEDoyE28DopQhzBPpfPGsRNd6DZNTGR9TnWwsNWUmBtWraHxvSVvoTFt98S4P4qUw4qTd","participants":["Node1","Node3","Node2"],"value":{"ledger_id":1,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","timestamp":1621255411,"txn_root_hash":"33Qn7LL4eu98k6KpZb2KcVvxbHXJiyWLqx2xuPDraijy"}},"proof_nodes":"+QK2+DmXFqblhRY2o5VkxGamNVYnREVlpaelY6OgSTB4yxlMGlDPjmivX37ZhuDvpLa\\/YfeYipaqOzTw7474kYCAgKBEqR+trIkK+QqI5+NvWpBpc9bTacOGUIZN2zZjiB6wPICgv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSiegv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSieAgICAoL8QgC6a78sPnRhjdbUStwqlPP4TOGrPyYC4FAYtN\\/A9gICAgID4gKUgOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xuFj4VrhUeyJsc24iOjEwLCJsdXQiOjE2MjEyNTUwMzQsInZhbCI6eyJhdHRyX25hbWVzIjpbIk5hbWUiLCJVbml2ZXJzaXR5IiwiRGF0ZSBJc3N1ZWQiXX19+HGAoOWVHGrs3NEjY5XPczUzrIdjff6+cwv7AnX\\/MeUtgFYKoAvGrSfGv5D7MSd5UOHH+zdzaLvC8XOG7VHqoPBUO2i3oKkDmj+0QAxepfwWzfVQQsQDPORroE5kzysHCnLaeqBqgICAgICAgICAgICAgPjxoNPSP24JsVps7QufK62cHm4MLrVBpYu1VMlThcJrixajoFiHYK69G3VM22wpOgdo++T8vpiatvplsRjwGewwYJACgKDAQxK1RpIpFb8a3Dz2ZzDFhSsUNJVfjkOhoPtHMxbhrICgwDNthfqgNkQUeYeFg+tc40ZJfJNVDhpusCPyR4Gi8K6g4Szt8zqF22990QYL2QT79AgN5zWTeWQvUfakse0mY56AgICAgICgSPFxE7GIAdYVFQHY6GY9m5Fi6UqwOZuEC3Vx+Yrja9GAoDs6GXxRL8inD2b3RY1v\\/ufksDHNqfFKaK2MEIjNIZwagA=="}}}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 194, err , args: (b'{"op":"REPLY","result":{"type":"107","dest":"3jnXQcj9VLFjcUbtDVZZzV","data":{"attr_names":["Name","University","Date Issued"],"name":"Primary Medical Qualification","version":"0.0.1"},"identifier":"LibindyDid111111111111","reqId":1621255649148276406,"seqNo":10,"txnTime":1621255034,"state_proof":{"root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","multi_signature":{"signature":"QnTDjgQQFtWL9vehAxY66NbzDm4dMmfRenbTaybuZqXBTweZGYhR83j9LRzZGj1FrqFHhc3mQtfQtkDbYpTDUVy6PBzDWuNZUHJ6rbTbZnEDoyE28DopQhzBPpfPGsRNd6DZNTGR9TnWwsNWUmBtWraHxvSVvoTFt98S4P4qUw4qTd","participants":["Node1","Node3","Node2"],"value":{"ledger_id":1,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","timestamp":1621255411,"txn_root_hash":"33Qn7LL4eu98k6KpZb2KcVvxbHXJiyWLqx2xuPDraijy"}},"proof_nodes":"+QK2+DmXFqblhRY2o5VkxGamNVYnREVlpaelY6OgSTB4yxlMGlDPjmivX37ZhuDvpLa\\/YfeYipaqOzTw7474kYCAgKBEqR+trIkK+QqI5+NvWpBpc9bTacOGUIZN2zZjiB6wPICgv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSiegv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSieAgICAoL8QgC6a78sPnRhjdbUStwqlPP4TOGrPyYC4FAYtN\\/A9gICAgID4gKUgOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xuFj4VrhUeyJsc24iOjEwLCJsdXQiOjE2MjEyNTUwMzQsInZhbCI6eyJhdHRyX25hbWVzIjpbIk5hbWUiLCJVbml2ZXJzaXR5IiwiRGF0ZSBJc3N1ZWQiXX19+HGAoOWVHGrs3NEjY5XPczUzrIdjff6+cwv7AnX\\/MeUtgFYKoAvGrSfGv5D7MSd5UOHH+zdzaLvC8XOG7VHqoPBUO2i3oKkDmj+0QAxepfwWzfVQQsQDPORroE5kzysHCnLaeqBqgICAgICAgICAgICAgPjxoNPSP24JsVps7QufK62cHm4MLrVBpYu1VMlThcJrixajoFiHYK69G3VM22wpOgdo++T8vpiatvplsRjwGewwYJACgKDAQxK1RpIpFb8a3Dz2ZzDFhSsUNJVfjkOhoPtHMxbhrICgwDNthfqgNkQUeYeFg+tc40ZJfJNVDhpusCPyR4Gi8K6g4Szt8zqF22990QYL2QT79AgN5zWTeWQvUfakse0mY56AgICAgICgSPFxE7GIAdYVFQHY6GY9m5Fi6UqwOZuEC3Vx+Yrja9GAoDs6GXxRL8inD2b3RY1v\\/ufksDHNqfFKaK2MEIjNIZwagA=="}}}',)
_indy_loop_callback: Function returned b'{"op":"REPLY","result":{"type":"107","dest":"3jnXQcj9VLFjcUbtDVZZzV","data":{"attr_names":["Name","University","Date Issued"],"name":"Primary Medical Qualification","version":"0.0.1"},"identifier":"LibindyDid111111111111","reqId":1621255649148276406,"seqNo":10,"txnTime":1621255034,"state_proof":{"root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","multi_signature":{"signature":"QnTDjgQQFtWL9vehAxY66NbzDm4dMmfRenbTaybuZqXBTweZGYhR83j9LRzZGj1FrqFHhc3mQtfQtkDbYpTDUVy6PBzDWuNZUHJ6rbTbZnEDoyE28DopQhzBPpfPGsRNd6DZNTGR9TnWwsNWUmBtWraHxvSVvoTFt98S4P4qUw4qTd","participants":["Node1","Node3","Node2"],"value":{"ledger_id":1,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","timestamp":1621255411,"txn_root_hash":"33Qn7LL4eu98k6KpZb2KcVvxbHXJiyWLqx2xuPDraijy"}},"proof_nodes":"+QK2+DmXFqblhRY2o5VkxGamNVYnREVlpaelY6OgSTB4yxlMGlDPjmivX37ZhuDvpLa\\/YfeYipaqOzTw7474kYCAgKBEqR+trIkK+QqI5+NvWpBpc9bTacOGUIZN2zZjiB6wPICgv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSiegv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSieAgICAoL8QgC6a78sPnRhjdbUStwqlPP4TOGrPyYC4FAYtN\\/A9gICAgID4gKUgOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xuFj4VrhUeyJsc24iOjEwLCJsdXQiOjE2MjEyNTUwMzQsInZhbCI6eyJhdHRyX25hbWVzIjpbIk5hbWUiLCJVbml2ZXJzaXR5IiwiRGF0ZSBJc3N1ZWQiXX19+HGAoOWVHGrs3NEjY5XPczUzrIdjff6+cwv7AnX\\/MeUtgFYKoAvGrSfGv5D7MSd5UOHH+zdzaLvC8XOG7VHqoPBUO2i3oKkDmj+0QAxepfwWzfVQQsQDPORroE5kzysHCnLaeqBqgICAgICAgICAgICAgPjxoNPSP24JsVps7QufK62cHm4MLrVBpYu1VMlThcJrixajoFiHYK69G3VM22wpOgdo++T8vpiatvplsRjwGewwYJACgKDAQxK1RpIpFb8a3Dz2ZzDFhSsUNJVfjkOhoPtHMxbhrICgwDNthfqgNkQUeYeFg+tc40ZJfJNVDhpusCPyR4Gi8K6g4Szt8zqF22990QYL2QT79AgN5zWTeWQvUfakse0mY56AgICAgICgSPFxE7GIAdYVFQHY6GY9m5Fi6UqwOZuEC3Vx+Yrja9GAoDs6GXxRL8inD2b3RY1v\\/ufksDHNqfFKaK2MEIjNIZwagA=="}}}'
_indy_loop_callback <<<
submit_request: <<< res: '{"op":"REPLY","result":{"type":"107","dest":"3jnXQcj9VLFjcUbtDVZZzV","data":{"attr_names":["Name","University","Date Issued"],"name":"Primary Medical Qualification","version":"0.0.1"},"identifier":"LibindyDid111111111111","reqId":1621255649148276406,"seqNo":10,"txnTime":1621255034,"state_proof":{"root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","multi_signature":{"signature":"QnTDjgQQFtWL9vehAxY66NbzDm4dMmfRenbTaybuZqXBTweZGYhR83j9LRzZGj1FrqFHhc3mQtfQtkDbYpTDUVy6PBzDWuNZUHJ6rbTbZnEDoyE28DopQhzBPpfPGsRNd6DZNTGR9TnWwsNWUmBtWraHxvSVvoTFt98S4P4qUw4qTd","participants":["Node1","Node3","Node2"],"value":{"ledger_id":1,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","timestamp":1621255411,"txn_root_hash":"33Qn7LL4eu98k6KpZb2KcVvxbHXJiyWLqx2xuPDraijy"}},"proof_nodes":"+QK2+DmXFqblhRY2o5VkxGamNVYnREVlpaelY6OgSTB4yxlMGlDPjmivX37ZhuDvpLa\\/YfeYipaqOzTw7474kYCAgKBEqR+trIkK+QqI5+NvWpBpc9bTacOGUIZN2zZjiB6wPICgv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSiegv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSieAgICAoL8QgC6a78sPnRhjdbUStwqlPP4TOGrPyYC4FAYtN\\/A9gICAgID4gKUgOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xuFj4VrhUeyJsc24iOjEwLCJsdXQiOjE2MjEyNTUwMzQsInZhbCI6eyJhdHRyX25hbWVzIjpbIk5hbWUiLCJVbml2ZXJzaXR5IiwiRGF0ZSBJc3N1ZWQiXX19+HGAoOWVHGrs3NEjY5XPczUzrIdjff6+cwv7AnX\\/MeUtgFYKoAvGrSfGv5D7MSd5UOHH+zdzaLvC8XOG7VHqoPBUO2i3oKkDmj+0QAxepfwWzfVQQsQDPORroE5kzysHCnLaeqBqgICAgICAgICAgICAgPjxoNPSP24JsVps7QufK62cHm4MLrVBpYu1VMlThcJrixajoFiHYK69G3VM22wpOgdo++T8vpiatvplsRjwGewwYJACgKDAQxK1RpIpFb8a3Dz2ZzDFhSsUNJVfjkOhoPtHMxbhrICgwDNthfqgNkQUeYeFg+tc40ZJfJNVDhpusCPyR4Gi8K6g4Szt8zqF22990QYL2QT79AgN5zWTeWQvUfakse0mY56AgICAgICgSPFxE7GIAdYVFQHY6GY9m5Fi6UqwOZuEC3Vx+Yrja9GAoDs6GXxRL8inD2b3RY1v\\/ufksDHNqfFKaK2MEIjNIZwagA=="}}}'
parse_get_schema_response: >>> get_schema_response: '{"op":"REPLY","result":{"type":"107","dest":"3jnXQcj9VLFjcUbtDVZZzV","data":{"attr_names":["Name","University","Date Issued"],"name":"Primary Medical Qualification","version":"0.0.1"},"identifier":"LibindyDid111111111111","reqId":1621255649148276406,"seqNo":10,"txnTime":1621255034,"state_proof":{"root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","multi_signature":{"signature":"QnTDjgQQFtWL9vehAxY66NbzDm4dMmfRenbTaybuZqXBTweZGYhR83j9LRzZGj1FrqFHhc3mQtfQtkDbYpTDUVy6PBzDWuNZUHJ6rbTbZnEDoyE28DopQhzBPpfPGsRNd6DZNTGR9TnWwsNWUmBtWraHxvSVvoTFt98S4P4qUw4qTd","participants":["Node1","Node3","Node2"],"value":{"ledger_id":1,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"E65p12p3RUjP27RLSB76KfYguUgp8bfc5tk6S1aCjate","timestamp":1621255411,"txn_root_hash":"33Qn7LL4eu98k6KpZb2KcVvxbHXJiyWLqx2xuPDraijy"}},"proof_nodes":"+QK2+DmXFqblhRY2o5VkxGamNVYnREVlpaelY6OgSTB4yxlMGlDPjmivX37ZhuDvpLa\\/YfeYipaqOzTw7474kYCAgKBEqR+trIkK+QqI5+NvWpBpc9bTacOGUIZN2zZjiB6wPICgv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSiegv803yG2o1iYTEeZxahqK4dWvEoAEIC6uRYt6QqscSieAgICAoL8QgC6a78sPnRhjdbUStwqlPP4TOGrPyYC4FAYtN\\/A9gICAgID4gKUgOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xuFj4VrhUeyJsc24iOjEwLCJsdXQiOjE2MjEyNTUwMzQsInZhbCI6eyJhdHRyX25hbWVzIjpbIk5hbWUiLCJVbml2ZXJzaXR5IiwiRGF0ZSBJc3N1ZWQiXX19+HGAoOWVHGrs3NEjY5XPczUzrIdjff6+cwv7AnX\\/MeUtgFYKoAvGrSfGv5D7MSd5UOHH+zdzaLvC8XOG7VHqoPBUO2i3oKkDmj+0QAxepfwWzfVQQsQDPORroE5kzysHCnLaeqBqgICAgICAgICAgICAgPjxoNPSP24JsVps7QufK62cHm4MLrVBpYu1VMlThcJrixajoFiHYK69G3VM22wpOgdo++T8vpiatvplsRjwGewwYJACgKDAQxK1RpIpFb8a3Dz2ZzDFhSsUNJVfjkOhoPtHMxbhrICgwDNthfqgNkQUeYeFg+tc40ZJfJNVDhpusCPyR4Gi8K6g4Szt8zqF22990QYL2QT79AgN5zWTeWQvUfakse0mY56AgICAgICgSPFxE7GIAdYVFQHY6GY9m5Fi6UqwOZuEC3Vx+Yrja9GAoDs6GXxRL8inD2b3RY1v\\/ufksDHNqfFKaK2MEIjNIZwagA=="}}}'
parse_get_schema_response: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99d75a9a8>
do_call: >>> name: indy_parse_get_schema_response, args: (c_char_p(94095652742704), <CFunctionType object at 0x7fd99d75a9a8>)
do_call: Function indy_parse_get_schema_response returned err: 0
	src/services/ledger/mod.rs:458 | parse_response() => Ok(ReplyV0(ReplyV0 { result: GetSchemaReplyResultV0(GetSchemaResultV0 { seq_no: 10, data: SchemaOperationData { name: "Primary Medical Qualification", version: "0.0.1", attr_names: {"Name", "Date Issued", "University"} }, dest: ShortDidValue("3jnXQcj9VLFjcUbtDVZZzV") }) }))
do_call: <<< <Future pending>
	src/services/ledger/mod.rs:260 | parse_get_schema_response() => Ok(("3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "{\"ver\":\"1.0\",\"id\":\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\",\"name\":\"Primary Medical Qualification\",\"version\":\"0.0.1\",\"attrNames\":[\"Name\",\"Date Issued\",\"University\"],\"seqNo\":10}"))
_indy_callback: >>> command_handle: 195, err , args: (b'3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1', b'{"ver":"1.0","id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","name":"Primary Medical Qualification","version":"0.0.1","attrNames":["Name","Date Issued","University"],"seqNo":10}')
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 195, err , args: (b'3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1', b'{"ver":"1.0","id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","name":"Primary Medical Qualification","version":"0.0.1","attrNames":["Name","Date Issued","University"],"seqNo":10}')
_indy_loop_callback: Function returned (b'3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1', b'{"ver":"1.0","id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","name":"Primary Medical Qualification","version":"0.0.1","attrNames":["Name","Date Issued","University"],"seqNo":10}')
_indy_loop_callback <<<
parse_get_schema_response: <<< res: ('3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1', '{"ver":"1.0","id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","name":"Primary Medical Qualification","version":"0.0.1","attrNames":["Name","Date Issued","University"],"seqNo":10}')
prover_create_proof: >>> wallet_handle: 3, proof_req_json: '{"name": "Proof of Primary Medical Qualification", "version": "1.0", "requested_attributes": {"0_Name_uuid": {"name": "Name", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}, "0_University_uuid": {"name": "University", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}, "0_Date Issued_uuid": {"name": "Date Issued", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}}, "requested_predicates": {}, "non_revoked": {"to": 1621255549}, "nonce": "19740203311469284009343"}', requested_credentials_json: '{"self_attested_attributes": {}, "requested_attributes": {"0_Name_uuid": {"cred_id": "PMQ", "revealed": true}, "0_University_uuid": {"cred_id": "PMQ", "revealed": true}, "0_Date Issued_uuid": {"cred_id": "PMQ", "revealed": true}}, "requested_predicates": {}}', schemas_json: '{"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1": {"ver": "1.0", "id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "name": "Primary Medical Qualification", "version": "0.0.1", "attrNames": ["Name", "Date Issued", "University"], "seqNo": 10}}', master_secret_name: 'Medic', credential_defs_json: '{"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default": {"ver": "1.0", "id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "schemaId": "10", "type": "CL", "tag": "default", "value": {"primary": {"n": "94395789918231228154091785586208843768578611847406303642651586891320930921222577081682230513612376731058197900820380914247688360049152906855525071639682048377145839103957609377714707719996675230706669321219428162692467324558094099599975868966359717071320779088929152605016542346699384011376930722440028896866096433708622612880431237575976995549426585399554650551399842593587963267758910127885708120359104171691736586089614188198196403067253458139734883446766648674330236607203272574691987391068966666586806995593618443807684047062115622841653991664284445314132632263661187734217623134159115481886205370089744580113873", "s": "81015554602046261170194441766593713402652953400350870565114032770101449194297729670972477002174582485434108371542070977617557550121283690070154003153465127142412492947796621604600610943420608021996428452150207616569073697990519854557474268872609763827715371234014675999148925758192510809298846373459463897569613243987836413106444130079827991856407108661830455636123140979595080835420673872438643970902637587408616587774476369311312702638678399091209309062417365872445535935878731892209908961704038522600004246100600971609868679635382295155855245796766811360326275356141899810243775065920199349268650268063905993595880", "r": {"dateissued": "18859023741018797872038815229638117026310339435744972607910760746976197568986451324307784659205603164866675762626845593584383953972951170576488223929403145953405880160997837014576916783672289014577491803877405955021543305639943207054834276533724888622816572222212002817434521247029102961171038131491016993683945958422904951967972242721815515956951687914783455532817412140497820261587057222074602535598277491573901466789858112285556636463931043202870509835082348016849346871822417355851938877835473162167541963027783714110369668288318655034153675621000872099879442600835618083660187178225685391119538793895918988690951", "master_secret": "38018101519921364727663368811618364961198439828773774963837808691300389099073641171173405972255390297743591226127198243269040440391331382005419723386460723507508748134326215218108079487747310689655719830220233038870395851200615467976988479364617945744009175380255178291443316837400065778174525671555554858846963660754273049900258540789750490659565596066796144609195933532365732229205176649943186753690388273648613883847077543436939447724144311053713620313478922939433052250159704813019931470611137912845604761954056274516499163256212589424003418836016270513452406523634776192214967795359655752585855421903408811504820", "name": "36972881227678226440524799834715449272905068152296041598298656344868823425822182142795341444521792489486865867678420406707813366601225310068973916314294496409888578098137466321037329183322105661346445057074775952226980306807756318820908180989553261280373209427144589281724427550334494051418908462936434249924425014938135365683029473367852494388771701690499555627259602163694165048703404978943387681274632934879094520963711354499009945634348271392433647603995327488071723814413654420116984500071622022838652865117264689191402593903686138105531309317348858688060431554155935932858240155529478495227551673149659583878367", "university": "85116886009283016587228837585185311801589234072532060179339162055691896259340973464378227116173921589574143079368170380064143315961104464737805257104371227573987632118021149596346336106979223046724507249243729298609587976484591179974141219437072662798348044620985302987585711515763230783304102509425352385088810988130856153145777680332189971409522233277037621493075538751179102002174462822864033520018868896075058926153340905166677380284040336304204116434323400415636380662101070808244622574958353942889060506400005103199810764605894756304090121203262515557730788468189763417280558801085969455488137667032138426499258"}, "rctxt": "72626192235856995713273878588635875503481156228369835798223682595862896495927599478785691456386732961699963442191790521351546847893842544331284577466655322900390546674081030387374194070100367944808152504857990896324240085608833289560880701109409966502178884502922967259001538262028100840388335398150175296461704717640987560280776117404108475362814709228233187171804851053778460491440104978266175123106542827674110607437222663300473774884530762942299317232900017062741820195136922938188215927090888278399065229552785414585240736808133545586693839331647692030044269603072142186291558337525917277699344952583144729625821", "z": "51405307349344473067543426140468250092978855391487837047919159448408306062742488977366371466579706875599220069757479535367208213512828381608544912208283492410837784787782762642642861456735914591395012090431192866710568924623222136268204112035067662953104257210546855663474292551899072591301630322930203349354091168912443214512040520480983018735448811935672679905506225871744898385465084434247135025413977137413227467339209144247099296863360895679895363096178564770291071017904729821236003386032365050793392320240962960327650486516536201676196280265057090339600515877691397338416693239305406465297046578191629345668206"}}}}', rev_infos_json: '{}'
prover_create_proof: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7fd99d75ab38>
do_call: >>> name: indy_prover_create_proof, args: (c_int(3), c_char_p(94095652747232), c_char_p(140572651847760), c_char_p(140572651894736), c_char_p(140573275124416), c_char_p(94095652771216), c_char_p(140572651894656), <CFunctionType object at 0x7fd99d75ab38>)
do_call: Function indy_prover_create_proof returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[100, 113, 48, 53, 106, 66, 78, 103, 108, 69, 82, 51, 67, 111, 114, 107, 116, 119, 90, 113, 113, 68, 104, 113, 122, 47, 100, 82, 122, 119, 104, 83, 88, 52, 78, 51, 98, 69, 48, 106, 72, 115, 71, 114, 77, 98, 100, 122, 101, 97, 54, 113, 49, 114, 110, 79, 72, 72, 87, 69, 110, 103, 61, 61], [47, 100, 108, 54, 104, 47, 82, 105, 102, 83, 78, 84, 105, 75, 105, 111, 113, 68, 107, 119, 87, 51, 47, 65, 53, 69, 74, 72, 86, 50, 71, 114, 85, 79, 81, 87, 55, 111, 112, 98, 69, 104, 57, 72], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[77, 70, 54, 104, 111, 106, 101, 67, 88, 85, 88, 116, 55, 116, 82, 119, 43, 97, 109, 98, 48, 120, 101, 111, 106, 119, 65, 113, 120, 107, 76, 57, 109, 108, 78, 109, 119, 110, 78, 52, 117, 84, 67, 76, 77, 90, 120, 121, 76, 88, 104, 71, 101, 48, 111, 109, 57, 79, 85, 61], [49, 68, 119, 108, 105, 113, 85, 101, 88, 105, 69, 75, 50, 115, 102, 53, 104, 108, 87, 97, 90, 79, 104, 113, 109, 88, 97, 54, 116, 113, 75, 69, 98, 67, 121, 76, 56, 68, 79, 50, 67, 65, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 196, err , args: (b'{"proof":{"proofs":[{"primary_proof":{"eq_proof":{"revealed_attrs":{"dateissued":"31928709163600735441101476658814216885388252189838058973070792022801591336579","name":"65005548905037764764502350053825769914874082648761230458670796241392891659611","university":"57963125648994666300875361621729313351158154740138173103415020334594043694317"},"a_prime":"87497477164085281713515336297515943429019546474313262770335421765133863845640751068882479821210108833176361422261063340793068905849363855118387211928239661741467086868245856605179886602807155159922066970565879831689722766180595360270807817576558715651422812622112772575366400694451961003420821035410411754938002622161912544531488798019344320388863245692256649083221692716790544568891085743782166444391719113693283895450797771285479050700568689004293473400512892325588549692788865838062815649569931952702341824780972708808792387532031154770405268339962911889615893319854101222033589697014500234175984542003981021812773","e":"154048814774809203958249265530095027153254858125683001027903995570529697898875222881872697502854428674182121253100643612713560841235618320","v":"1075056707481757685302820380549717229682054697230177771108389494064352356360402296905750567040684833964672790067363593404776554862883852716066433245646004976568123906996240484640017436844042528906492407131637814906775223635522805330540821860789570147335385926281889343075837419621936725374512911442589375005207127302660521377811911263963170082152211654863865973074551173468971302064037414991208663319657132370588732440384168336986163798963761061494469536810671296067740391464565818521832398450565394186065363034382061719577698363164227851726618301906985003377355041460420266591228887729792179577148690929889962673469164396309133902236993907580806172768372370897655397502894524941436896504481810090989727162648100833698324938043127809593602060915232870513524082714004782505194802058946770924552591021866603803125486355822467277111110567002144550965455325197736424654917084203540848249866727836219471387065903524753183092544","m":{"master_secret":"2793697494185440264525060860231245239302026234731932628029468109408435569054206729934377817146497096671519204938276353379685637149960731633869827819226246137511338209444740904790"},"m2":"98023185406056981757909108244610452040269911693114387930295449500518864756275015327639118257530305062150523567067133342746408412629638494814612815612658191435536476997557765123"},"ge_proofs":[]},"non_revoc_proof":null}],"aggregated_proof":{"c_hash":"51128778298706816581010548716237320985693016689947197450663483251832695160949","c_list":[[2,181,29,16,75,183,135,189,141,128,82,129,176,52,209,164,228,151,94,134,107,238,28,182,30,69,3,97,130,96,127,94,75,162,173,246,68,103,210,73,112,123,236,91,128,249,234,45,107,131,222,144,98,223,211,194,220,19,224,206,116,171,124,249,184,138,111,79,26,180,3,104,118,181,164,12,250,23,69,182,99,92,120,150,6,210,242,126,99,30,52,117,119,164,76,122,12,125,136,2,225,215,52,219,136,115,173,141,114,6,94,226,213,80,194,171,78,10,182,166,164,190,212,55,148,184,84,58,185,127,94,206,44,150,56,29,59,143,190,226,41,76,22,66,230,19,121,19,222,135,150,7,65,100,236,219,208,183,144,95,214,193,46,190,83,213,225,118,163,181,79,86,57,187,233,213,90,123,201,43,129,77,16,70,199,217,146,108,66,246,182,197,109,181,14,132,103,13,136,47,10,214,61,136,254,6,60,56,106,102,37,163,78,98,120,151,126,255,129,185,106,156,182,186,84,45,1,74,52,118,165,153,15,171,24,31,12,134,64,98,6,206,155,29,72,195,185,120,72,46,17,66,18,37,103,24,37]]}},"requested_proof":{"revealed_attrs":{"0_University_uuid":{"sub_proof_index":0,"raw":"Edinburgh Medical School","encoded":"57963125648994666300875361621729313351158154740138173103415020334594043694317"},"0_Name_uuid":{"sub_proof_index":0,"raw":"Will Abramson","encoded":"65005548905037764764502350053825769914874082648761230458670796241392891659611"},"0_Date Issued_uuid":{"sub_proof_index":0,"raw":"2021-05-17","encoded":"31928709163600735441101476658814216885388252189838058973070792022801591336579"}},"self_attested_attrs":{},"unrevealed_attrs":{},"predicates":{}},"identifiers":[{"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"timestamp":null}]}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 196, err , args: (b'{"proof":{"proofs":[{"primary_proof":{"eq_proof":{"revealed_attrs":{"dateissued":"31928709163600735441101476658814216885388252189838058973070792022801591336579","name":"65005548905037764764502350053825769914874082648761230458670796241392891659611","university":"57963125648994666300875361621729313351158154740138173103415020334594043694317"},"a_prime":"87497477164085281713515336297515943429019546474313262770335421765133863845640751068882479821210108833176361422261063340793068905849363855118387211928239661741467086868245856605179886602807155159922066970565879831689722766180595360270807817576558715651422812622112772575366400694451961003420821035410411754938002622161912544531488798019344320388863245692256649083221692716790544568891085743782166444391719113693283895450797771285479050700568689004293473400512892325588549692788865838062815649569931952702341824780972708808792387532031154770405268339962911889615893319854101222033589697014500234175984542003981021812773","e":"154048814774809203958249265530095027153254858125683001027903995570529697898875222881872697502854428674182121253100643612713560841235618320","v":"1075056707481757685302820380549717229682054697230177771108389494064352356360402296905750567040684833964672790067363593404776554862883852716066433245646004976568123906996240484640017436844042528906492407131637814906775223635522805330540821860789570147335385926281889343075837419621936725374512911442589375005207127302660521377811911263963170082152211654863865973074551173468971302064037414991208663319657132370588732440384168336986163798963761061494469536810671296067740391464565818521832398450565394186065363034382061719577698363164227851726618301906985003377355041460420266591228887729792179577148690929889962673469164396309133902236993907580806172768372370897655397502894524941436896504481810090989727162648100833698324938043127809593602060915232870513524082714004782505194802058946770924552591021866603803125486355822467277111110567002144550965455325197736424654917084203540848249866727836219471387065903524753183092544","m":{"master_secret":"2793697494185440264525060860231245239302026234731932628029468109408435569054206729934377817146497096671519204938276353379685637149960731633869827819226246137511338209444740904790"},"m2":"98023185406056981757909108244610452040269911693114387930295449500518864756275015327639118257530305062150523567067133342746408412629638494814612815612658191435536476997557765123"},"ge_proofs":[]},"non_revoc_proof":null}],"aggregated_proof":{"c_hash":"51128778298706816581010548716237320985693016689947197450663483251832695160949","c_list":[[2,181,29,16,75,183,135,189,141,128,82,129,176,52,209,164,228,151,94,134,107,238,28,182,30,69,3,97,130,96,127,94,75,162,173,246,68,103,210,73,112,123,236,91,128,249,234,45,107,131,222,144,98,223,211,194,220,19,224,206,116,171,124,249,184,138,111,79,26,180,3,104,118,181,164,12,250,23,69,182,99,92,120,150,6,210,242,126,99,30,52,117,119,164,76,122,12,125,136,2,225,215,52,219,136,115,173,141,114,6,94,226,213,80,194,171,78,10,182,166,164,190,212,55,148,184,84,58,185,127,94,206,44,150,56,29,59,143,190,226,41,76,22,66,230,19,121,19,222,135,150,7,65,100,236,219,208,183,144,95,214,193,46,190,83,213,225,118,163,181,79,86,57,187,233,213,90,123,201,43,129,77,16,70,199,217,146,108,66,246,182,197,109,181,14,132,103,13,136,47,10,214,61,136,254,6,60,56,106,102,37,163,78,98,120,151,126,255,129,185,106,156,182,186,84,45,1,74,52,118,165,153,15,171,24,31,12,134,64,98,6,206,155,29,72,195,185,120,72,46,17,66,18,37,103,24,37]]}},"requested_proof":{"revealed_attrs":{"0_University_uuid":{"sub_proof_index":0,"raw":"Edinburgh Medical School","encoded":"57963125648994666300875361621729313351158154740138173103415020334594043694317"},"0_Name_uuid":{"sub_proof_index":0,"raw":"Will Abramson","encoded":"65005548905037764764502350053825769914874082648761230458670796241392891659611"},"0_Date Issued_uuid":{"sub_proof_index":0,"raw":"2021-05-17","encoded":"31928709163600735441101476658814216885388252189838058973070792022801591336579"}},"self_attested_attrs":{},"unrevealed_attrs":{},"predicates":{}},"identifiers":[{"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"timestamp":null}]}',)
_indy_loop_callback: Function returned b'{"proof":{"proofs":[{"primary_proof":{"eq_proof":{"revealed_attrs":{"dateissued":"31928709163600735441101476658814216885388252189838058973070792022801591336579","name":"65005548905037764764502350053825769914874082648761230458670796241392891659611","university":"57963125648994666300875361621729313351158154740138173103415020334594043694317"},"a_prime":"87497477164085281713515336297515943429019546474313262770335421765133863845640751068882479821210108833176361422261063340793068905849363855118387211928239661741467086868245856605179886602807155159922066970565879831689722766180595360270807817576558715651422812622112772575366400694451961003420821035410411754938002622161912544531488798019344320388863245692256649083221692716790544568891085743782166444391719113693283895450797771285479050700568689004293473400512892325588549692788865838062815649569931952702341824780972708808792387532031154770405268339962911889615893319854101222033589697014500234175984542003981021812773","e":"154048814774809203958249265530095027153254858125683001027903995570529697898875222881872697502854428674182121253100643612713560841235618320","v":"1075056707481757685302820380549717229682054697230177771108389494064352356360402296905750567040684833964672790067363593404776554862883852716066433245646004976568123906996240484640017436844042528906492407131637814906775223635522805330540821860789570147335385926281889343075837419621936725374512911442589375005207127302660521377811911263963170082152211654863865973074551173468971302064037414991208663319657132370588732440384168336986163798963761061494469536810671296067740391464565818521832398450565394186065363034382061719577698363164227851726618301906985003377355041460420266591228887729792179577148690929889962673469164396309133902236993907580806172768372370897655397502894524941436896504481810090989727162648100833698324938043127809593602060915232870513524082714004782505194802058946770924552591021866603803125486355822467277111110567002144550965455325197736424654917084203540848249866727836219471387065903524753183092544","m":{"master_secret":"2793697494185440264525060860231245239302026234731932628029468109408435569054206729934377817146497096671519204938276353379685637149960731633869827819226246137511338209444740904790"},"m2":"98023185406056981757909108244610452040269911693114387930295449500518864756275015327639118257530305062150523567067133342746408412629638494814612815612658191435536476997557765123"},"ge_proofs":[]},"non_revoc_proof":null}],"aggregated_proof":{"c_hash":"51128778298706816581010548716237320985693016689947197450663483251832695160949","c_list":[[2,181,29,16,75,183,135,189,141,128,82,129,176,52,209,164,228,151,94,134,107,238,28,182,30,69,3,97,130,96,127,94,75,162,173,246,68,103,210,73,112,123,236,91,128,249,234,45,107,131,222,144,98,223,211,194,220,19,224,206,116,171,124,249,184,138,111,79,26,180,3,104,118,181,164,12,250,23,69,182,99,92,120,150,6,210,242,126,99,30,52,117,119,164,76,122,12,125,136,2,225,215,52,219,136,115,173,141,114,6,94,226,213,80,194,171,78,10,182,166,164,190,212,55,148,184,84,58,185,127,94,206,44,150,56,29,59,143,190,226,41,76,22,66,230,19,121,19,222,135,150,7,65,100,236,219,208,183,144,95,214,193,46,190,83,213,225,118,163,181,79,86,57,187,233,213,90,123,201,43,129,77,16,70,199,217,146,108,66,246,182,197,109,181,14,132,103,13,136,47,10,214,61,136,254,6,60,56,106,102,37,163,78,98,120,151,126,255,129,185,106,156,182,186,84,45,1,74,52,118,165,153,15,171,24,31,12,134,64,98,6,206,155,29,72,195,185,120,72,46,17,66,18,37,103,24,37]]}},"requested_proof":{"revealed_attrs":{"0_University_uuid":{"sub_proof_index":0,"raw":"Edinburgh Medical School","encoded":"57963125648994666300875361621729313351158154740138173103415020334594043694317"},"0_Name_uuid":{"sub_proof_index":0,"raw":"Will Abramson","encoded":"65005548905037764764502350053825769914874082648761230458670796241392891659611"},"0_Date Issued_uuid":{"sub_proof_index":0,"raw":"2021-05-17","encoded":"31928709163600735441101476658814216885388252189838058973070792022801591336579"}},"self_attested_attrs":{},"unrevealed_attrs":{},"predicates":{}},"identifiers":[{"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"timestamp":null}]}'
_indy_loop_callback <<<
prover_create_proof: <<< res: '{"proof":{"proofs":[{"primary_proof":{"eq_proof":{"revealed_attrs":{"dateissued":"31928709163600735441101476658814216885388252189838058973070792022801591336579","name":"65005548905037764764502350053825769914874082648761230458670796241392891659611","university":"57963125648994666300875361621729313351158154740138173103415020334594043694317"},"a_prime":"87497477164085281713515336297515943429019546474313262770335421765133863845640751068882479821210108833176361422261063340793068905849363855118387211928239661741467086868245856605179886602807155159922066970565879831689722766180595360270807817576558715651422812622112772575366400694451961003420821035410411754938002622161912544531488798019344320388863245692256649083221692716790544568891085743782166444391719113693283895450797771285479050700568689004293473400512892325588549692788865838062815649569931952702341824780972708808792387532031154770405268339962911889615893319854101222033589697014500234175984542003981021812773","e":"154048814774809203958249265530095027153254858125683001027903995570529697898875222881872697502854428674182121253100643612713560841235618320","v":"1075056707481757685302820380549717229682054697230177771108389494064352356360402296905750567040684833964672790067363593404776554862883852716066433245646004976568123906996240484640017436844042528906492407131637814906775223635522805330540821860789570147335385926281889343075837419621936725374512911442589375005207127302660521377811911263963170082152211654863865973074551173468971302064037414991208663319657132370588732440384168336986163798963761061494469536810671296067740391464565818521832398450565394186065363034382061719577698363164227851726618301906985003377355041460420266591228887729792179577148690929889962673469164396309133902236993907580806172768372370897655397502894524941436896504481810090989727162648100833698324938043127809593602060915232870513524082714004782505194802058946770924552591021866603803125486355822467277111110567002144550965455325197736424654917084203540848249866727836219471387065903524753183092544","m":{"master_secret":"2793697494185440264525060860231245239302026234731932628029468109408435569054206729934377817146497096671519204938276353379685637149960731633869827819226246137511338209444740904790"},"m2":"98023185406056981757909108244610452040269911693114387930295449500518864756275015327639118257530305062150523567067133342746408412629638494814612815612658191435536476997557765123"},"ge_proofs":[]},"non_revoc_proof":null}],"aggregated_proof":{"c_hash":"51128778298706816581010548716237320985693016689947197450663483251832695160949","c_list":[[2,181,29,16,75,183,135,189,141,128,82,129,176,52,209,164,228,151,94,134,107,238,28,182,30,69,3,97,130,96,127,94,75,162,173,246,68,103,210,73,112,123,236,91,128,249,234,45,107,131,222,144,98,223,211,194,220,19,224,206,116,171,124,249,184,138,111,79,26,180,3,104,118,181,164,12,250,23,69,182,99,92,120,150,6,210,242,126,99,30,52,117,119,164,76,122,12,125,136,2,225,215,52,219,136,115,173,141,114,6,94,226,213,80,194,171,78,10,182,166,164,190,212,55,148,184,84,58,185,127,94,206,44,150,56,29,59,143,190,226,41,76,22,66,230,19,121,19,222,135,150,7,65,100,236,219,208,183,144,95,214,193,46,190,83,213,225,118,163,181,79,86,57,187,233,213,90,123,201,43,129,77,16,70,199,217,146,108,66,246,182,197,109,181,14,132,103,13,136,47,10,214,61,136,254,6,60,56,106,102,37,163,78,98,120,151,126,255,129,185,106,156,182,186,84,45,1,74,52,118,165,153,15,171,24,31,12,134,64,98,6,206,155,29,72,195,185,120,72,46,17,66,18,37,103,24,37]]}},"requested_proof":{"revealed_attrs":{"0_University_uuid":{"sub_proof_index":0,"raw":"Edinburgh Medical School","encoded":"57963125648994666300875361621729313351158154740138173103415020334594043694317"},"0_Name_uuid":{"sub_proof_index":0,"raw":"Will Abramson","encoded":"65005548905037764764502350053825769914874082648761230458670796241392891659611"},"0_Date Issued_uuid":{"sub_proof_index":0,"raw":"2021-05-17","encoded":"31928709163600735441101476658814216885388252189838058973070792022801591336579"}},"self_attested_attrs":{},"unrevealed_attrs":{},"predicates":{}},"identifiers":[{"schema_id":"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1","cred_def_id":"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default","rev_reg_id":null,"timestamp":null}]}'
update_wallet_record_value: >>> wallet_handle: 3, type_: 'presentation_exchange_v10', id: '6be4dc23-2532-4d2d-9def-6cf78a9bfe09', value: '{"thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "created_at": "2021-05-17 12:46:41.793608Z", "updated_at": "2021-05-17 12:47:29.293544Z", "connection_id": "eef16ddd-5609-4e39-9915-f29a1c704a04", "initiator": "external", "presentation_proposal_dict": null, "presentation_request": {"name": "Proof of Primary Medical Qualification", "version": "1.0", "requested_attributes": {"0_Name_uuid": {"name": "Name", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}, "0_University_uuid": {"name": "University", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}, "0_Date Issued_uuid": {"name": "Date Issued", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}}, "requested_predicates": {}, "non_revoked": {"to": 1621255549}, "nonce": "19740203311469284009343"}, "presentation_request_dict": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation", "@id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "~trace": {"target": "log", "full_thread": true, "trace_reports": []}, "comment": "Please prove that you have recieved a valid PMQ", "request_presentations~attach": [{"@id": "libindy-request-presentation-0", "mime-type": "application/json", "data": {"base64": "eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9"}}]}, "presentation": {"proof": {"proofs": [{"primary_proof": {"eq_proof": {"revealed_attrs": {"dateissued": "31928709163600735441101476658814216885388252189838058973070792022801591336579", "name": "65005548905037764764502350053825769914874082648761230458670796241392891659611", "university": "57963125648994666300875361621729313351158154740138173103415020334594043694317"}, "a_prime": "87497477164085281713515336297515943429019546474313262770335421765133863845640751068882479821210108833176361422261063340793068905849363855118387211928239661741467086868245856605179886602807155159922066970565879831689722766180595360270807817576558715651422812622112772575366400694451961003420821035410411754938002622161912544531488798019344320388863245692256649083221692716790544568891085743782166444391719113693283895450797771285479050700568689004293473400512892325588549692788865838062815649569931952702341824780972708808792387532031154770405268339962911889615893319854101222033589697014500234175984542003981021812773", "e": "154048814774809203958249265530095027153254858125683001027903995570529697898875222881872697502854428674182121253100643612713560841235618320", "v": "1075056707481757685302820380549717229682054697230177771108389494064352356360402296905750567040684833964672790067363593404776554862883852716066433245646004976568123906996240484640017436844042528906492407131637814906775223635522805330540821860789570147335385926281889343075837419621936725374512911442589375005207127302660521377811911263963170082152211654863865973074551173468971302064037414991208663319657132370588732440384168336986163798963761061494469536810671296067740391464565818521832398450565394186065363034382061719577698363164227851726618301906985003377355041460420266591228887729792179577148690929889962673469164396309133902236993907580806172768372370897655397502894524941436896504481810090989727162648100833698324938043127809593602060915232870513524082714004782505194802058946770924552591021866603803125486355822467277111110567002144550965455325197736424654917084203540848249866727836219471387065903524753183092544", "m": {"master_secret": "2793697494185440264525060860231245239302026234731932628029468109408435569054206729934377817146497096671519204938276353379685637149960731633869827819226246137511338209444740904790"}, "m2": "98023185406056981757909108244610452040269911693114387930295449500518864756275015327639118257530305062150523567067133342746408412629638494814612815612658191435536476997557765123"}, "ge_proofs": []}, "non_revoc_proof": null}], "aggregated_proof": {"c_hash": "51128778298706816581010548716237320985693016689947197450663483251832695160949", "c_list": [[2, 181, 29, 16, 75, 183, 135, 189, 141, 128, 82, 129, 176, 52, 209, 164, 228, 151, 94, 134, 107, 238, 28, 182, 30, 69, 3, 97, 130, 96, 127, 94, 75, 162, 173, 246, 68, 103, 210, 73, 112, 123, 236, 91, 128, 249, 234, 45, 107, 131, 222, 144, 98, 223, 211, 194, 220, 19, 224, 206, 116, 171, 124, 249, 184, 138, 111, 79, 26, 180, 3, 104, 118, 181, 164, 12, 250, 23, 69, 182, 99, 92, 120, 150, 6, 210, 242, 126, 99, 30, 52, 117, 119, 164, 76, 122, 12, 125, 136, 2, 225, 215, 52, 219, 136, 115, 173, 141, 114, 6, 94, 226, 213, 80, 194, 171, 78, 10, 182, 166, 164, 190, 212, 55, 148, 184, 84, 58, 185, 127, 94, 206, 44, 150, 56, 29, 59, 143, 190, 226, 41, 76, 22, 66, 230, 19, 121, 19, 222, 135, 150, 7, 65, 100, 236, 219, 208, 183, 144, 95, 214, 193, 46, 190, 83, 213, 225, 118, 163, 181, 79, 86, 57, 187, 233, 213, 90, 123, 201, 43, 129, 77, 16, 70, 199, 217, 146, 108, 66, 246, 182, 197, 109, 181, 14, 132, 103, 13, 136, 47, 10, 214, 61, 136, 254, 6, 60, 56, 106, 102, 37, 163, 78, 98, 120, 151, 126, 255, 129, 185, 106, 156, 182, 186, 84, 45, 1, 74, 52, 118, 165, 153, 15, 171, 24, 31, 12, 134, 64, 98, 6, 206, 155, 29, 72, 195, 185, 120, 72, 46, 17, 66, 18, 37, 103, 24, 37]]}}, "requested_proof": {"revealed_attrs": {"0_University_uuid": {"sub_proof_index": 0, "raw": "Edinburgh Medical School", "encoded": "57963125648994666300875361621729313351158154740138173103415020334594043694317"}, "0_Name_uuid": {"sub_proof_index": 0, "raw": "Will Abramson", "encoded": "65005548905037764764502350053825769914874082648761230458670796241392891659611"}, "0_Date Issued_uuid": {"sub_proof_index": 0, "raw": "2021-05-17", "encoded": "31928709163600735441101476658814216885388252189838058973070792022801591336579"}}, "self_attested_attrs": {}, "unrevealed_attrs": {}, "predicates": {}}, "identifiers": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "rev_reg_id": null, "timestamp": null}]}, "role": "prover", "state": "presentation_sent", "auto_present": null, "error_msg": null, "verified": null, "trace": true}'
do_call: >>> name: indy_update_wallet_record_value, args: (c_int(3), c_char_p(140572626315472), c_char_p(140573274221672), c_char_p(94095652793200), <CFunctionType object at 0x7fd99efcf110>)
do_call: Function indy_update_wallet_record_value returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s4`: UPDATE items SET value = $1, key = $2 WHERE type = $3 AND name = $4 AND wallet_id = $5
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s4 with parameters: [[129, 86, 95, 213, 91, 70, 135, 16, 10, 165, 79, 53, 117, 196, 54, 214, 80, 97, 41, 56, 203, 19, 90, 72, 215, 101, 76, 207, 97, 233, 76, 104, 113, 17, 49, 197, 226, 193, 175, 1, 176, 151, 229, 247, 145, 125, 52, 40, 68, 222, 19, 63, 41, 160, 108, 124, 153, 144, 240, 117, 86, 61, 20, 67, 110, 91, 119, 84, 95, 48, 159, 207, 127, 112, 147, 129, 44, 212, 24, 115, 127, 146, 253, 105, 33, 203, 180, 243, 30, 72, 11, 115, 43, 119, 220, 125, 116, 167, 135, 71, 212, 53, 51, 166, 9, 127, 120, 254, 117, 103, 81, 199, 0, 48, 249, 81, 239, 73, 163, 226, 146, 87, 107, 237, 94, 214, 177, 79, 158, 103, 46, 218, 21, 234, 153, 190, 103, 71, 154, 37, 219, 208, 98, 110, 201, 132, 79, 177, 185, 193, 175, 134, 92, 115, 24, 68, 65, 204, 77, 76, 254, 252, 108, 175, 172, 246, 83, 212, 53, 176, 27, 69, 250, 6, 31, 182, 25, 153, 203, 98, 121, 115, 74, 97, 107, 19, 203, 87, 191, 226, 155, 169, 232, 72, 235, 211, 44, 122, 207, 145, 64, 127, 41, 80, 80, 1, 58, 208, 5, 99, 138, 221, 84, 39, 32, 88, 12, 221, 196, 181, 230, 141, 30, 118, 149, 237, 213, 87, 127, 6, 124, 98, 3, 107, 136, 72, 93, 237, 66, 114, 106, 94, 33, 59, 190, 184, 91, 157, 163, 242, 233, 26, 150, 123, 123, 166, 161, 219, 70, 198, 28, 117, 236, 156, 63, 22, 104, 9, 239, 206, 76, 247, 92, 50, 69, 196, 200, 228, 167, 22, 192, 0, 101, 255, 72, 160, 91, 53, 140, 103, 51, 126, 89, 12, 65, 35, 167, 128, 229, 200, 61, 199, 163, 235, 228, 93, 235, 133, 120, 68, 20, 65, 34, 175, 161, 156, 152, 206, 203, 175, 32, 130, 213, 19, 242, 166, 85, 237, 129, 170, 38, 156, 109, 21, 143, 225, 52, 234, 72, 213, 134, 9, 88, 55, 85, 2, 98, 191, 35, 96, 10, 152, 99, 225, 164, 16, 140, 136, 8, 254, 45, 166, 247, 97, 227, 248, 7, 11, 148, 18, 175, 207, 246, 190, 53, 59, 60, 24, 242, 32, 207, 107, 176, 232, 224, 157, 134, 231, 43, 198, 123, 77, 109, 45, 120, 207, 47, 205, 75, 98, 252, 45, 214, 214, 228, 148, 239, 27, 219, 168, 62, 82, 47, 24, 175, 232, 120, 132, 134, 130, 0, 75, 245, 235, 173, 130, 114, 108, 106, 37, 192, 117, 138, 8, 215, 101, 180, 159, 173, 44, 247, 246, 115, 7, 210, 156, 186, 153, 192, 179, 18, 75, 100, 229, 57, 213, 47, 112, 98, 51, 224, 242, 228, 27, 214, 147, 156, 214, 62, 162, 131, 6, 239, 63, 59, 87, 46, 52, 254, 155, 173, 52, 200, 90, 129, 81, 101, 167, 70, 227, 44, 186, 49, 3, 56, 206, 190, 20, 149, 110, 160, 216, 80, 192, 186, 77, 197, 143, 159, 145, 163, 253, 42, 246, 95, 118, 227, 151, 182, 34, 118, 82, 65, 24, 233, 80, 255, 7, 32, 168, 132, 74, 227, 24, 47, 17, 61, 246, 56, 33, 51, 3, 243, 238, 159, 230, 86, 170, 71, 5, 239, 28, 252, 148, 226, 236, 192, 156, 230, 69, 134, 233, 141, 111, 128, 39, 172, 85, 250, 187, 203, 44, 247, 179, 11, 173, 178, 209, 162, 133, 114, 84, 63, 173, 130, 160, 73, 99, 196, 61, 19, 60, 146, 172, 16, 111, 45, 197, 223, 239, 235, 91, 165, 167, 141, 43, 239, 251, 171, 70, 97, 166, 18, 249, 72, 90, 147, 128, 12, 136, 62, 226, 134, 71, 141, 205, 252, 196, 7, 112, 19, 204, 42, 52, 7, 203, 88, 65, 195, 46, 28, 164, 9, 39, 202, 83, 170, 230, 246, 179, 88, 97, 61, 123, 225, 212, 145, 247, 2, 1, 98, 152, 203, 220, 5, 60, 39, 173, 140, 23, 209, 4, 188, 135, 253, 142, 12, 121, 22, 79, 70, 184, 110, 123, 101, 25, 107, 30, 170, 205, 10, 149, 46, 229, 143, 97, 225, 66, 179, 59, 20, 219, 203, 242, 25, 249, 222, 83, 18, 208, 233, 49, 160, 213, 80, 103, 125, 146, 117, 151, 192, 108, 88, 253, 86, 12, 37, 162, 229, 3, 157, 56, 122, 252, 117, 203, 149, 149, 172, 54, 198, 245, 207, 142, 228, 43, 252, 61, 3, 96, 142, 96, 210, 117, 68, 165, 162, 63, 251, 221, 101, 37, 247, 47, 152, 118, 100, 242, 250, 184, 216, 183, 60, 249, 59, 201, 10, 6, 64, 54, 157, 33, 132, 128, 217, 170, 245, 81, 66, 154, 24, 40, 197, 134, 67, 196, 253, 161, 136, 106, 110, 199, 244, 243, 154, 42, 143, 51, 44, 13, 68, 110, 189, 111, 22, 220, 39, 4, 189, 223, 150, 149, 24, 81, 73, 200, 33, 172, 226, 213, 234, 81, 0, 202, 163, 116, 84, 205, 161, 104, 94, 95, 148, 19, 232, 239, 142, 88, 65, 250, 61, 112, 5, 194, 15, 110, 227, 29, 57, 237, 157, 209, 81, 150, 89, 138, 90, 41, 26, 100, 105, 131, 38, 86, 43, 73, 206, 27, 126, 113, 55, 82, 72, 135, 21, 42, 201, 74, 122, 6, 8, 90, 228, 185, 143, 5, 246, 6, 71, 150, 65, 228, 66, 42, 10, 214, 119, 203, 175, 161, 186, 48, 245, 200, 74, 92, 87, 100, 1, 161, 83, 72, 8, 78, 64, 78, 99, 33, 46, 61, 51, 45, 124, 91, 240, 134, 26, 229, 72, 138, 45, 10, 154, 102, 9, 35, 70, 52, 130, 9, 245, 68, 135, 13, 55, 87, 17, 22, 181, 166, 226, 175, 217, 135, 64, 27, 253, 141, 172, 209, 196, 153, 9, 50, 172, 215, 39, 2, 100, 126, 18, 98, 60, 111, 222, 171, 122, 159, 112, 26, 83, 96, 214, 230, 156, 69, 35, 187, 153, 24, 253, 82, 254, 0, 229, 186, 57, 166, 170, 188, 55, 53, 33, 22, 156, 155, 57, 198, 187, 89, 113, 54, 173, 118, 68, 200, 201, 246, 142, 36, 50, 255, 178, 217, 216, 68, 191, 141, 38, 181, 147, 84, 94, 211, 94, 196, 40, 191, 157, 235, 55, 111, 85, 34, 12, 87, 53, 168, 60, 107, 123, 74, 36, 117, 161, 22, 76, 59, 173, 206, 82, 120, 87, 201, 154, 142, 19, 63, 173, 228, 65, 246, 161, 132, 136, 43, 15, 161, 3, 77, 195, 82, 106, 209, 145, 152, 216, 126, 120, 223, 229, 166, 125, 3, 190, 160, 181, 41, 237, 62, 43, 170, 123, 63, 58, 183, 71, 227, 219, 153, 184, 201, 252, 166, 27, 61, 130, 255, 21, 226, 214, 130, 171, 199, 3, 246, 144, 27, 202, 69, 123, 162, 219, 120, 167, 190, 56, 177, 1, 91, 196, 131, 155, 153, 109, 210, 237, 89, 161, 207, 51, 155, 142, 115, 99, 84, 67, 107, 212, 10, 100, 112, 194, 18, 206, 198, 94, 17, 223, 130, 102, 20, 63, 175, 153, 168, 49, 222, 2, 164, 24, 225, 146, 103, 198, 137, 130, 84, 222, 111, 78, 233, 104, 65, 192, 132, 203, 213, 76, 73, 83, 66, 34, 129, 159, 150, 64, 108, 201, 252, 44, 249, 116, 118, 40, 241, 255, 211, 97, 240, 251, 111, 100, 71, 15, 32, 177, 186, 82, 11, 139, 141, 180, 60, 103, 169, 185, 179, 47, 36, 83, 32, 160, 61, 19, 209, 47, 142, 83, 230, 176, 99, 16, 24, 82, 72, 95, 138, 30, 240, 21, 112, 60, 205, 95, 16, 39, 82, 197, 72, 147, 146, 196, 247, 78, 183, 106, 94, 134, 254, 140, 162, 74, 249, 134, 186, 73, 49, 201, 45, 236, 33, 176, 66, 28, 248, 187, 74, 89, 244, 76, 17, 180, 205, 22, 245, 174, 68, 194, 122, 188, 174, 53, 136, 185, 245, 244, 230, 8, 9, 226, 15, 49, 110, 177, 137, 95, 63, 25, 238, 147, 245, 94, 218, 151, 81, 8, 30, 149, 146, 209, 207, 186, 45, 190, 70, 157, 12, 142, 8, 227, 32, 133, 92, 138, 13, 123, 98, 68, 139, 31, 236, 130, 166, 72, 247, 72, 97, 215, 80, 4, 129, 78, 107, 227, 42, 140, 198, 5, 236, 113, 169, 69, 124, 185, 35, 222, 135, 203, 201, 120, 229, 114, 61, 165, 157, 214, 151, 204, 107, 205, 9, 73, 98, 168, 159, 15, 53, 139, 172, 116, 135, 91, 32, 77, 60, 214, 47, 87, 102, 14, 37, 77, 53, 50, 5, 162, 156, 19, 206, 61, 249, 87, 66, 178, 164, 109, 68, 30, 51, 4, 47, 55, 189, 193, 199, 16, 41, 6, 171, 149, 109, 243, 53, 54, 69, 207, 222, 47, 203, 234, 17, 132, 30, 227, 111, 101, 2, 62, 122, 8, 205, 210, 181, 96, 61, 159, 241, 80, 230, 8, 48, 156, 65, 35, 168, 247, 221, 81, 248, 238, 156, 159, 185, 233, 197, 212, 111, 169, 147, 249, 252, 173, 48, 143, 84, 156, 72, 27, 30, 84, 88, 18, 108, 243, 26, 215, 184, 130, 5, 203, 111, 123, 105, 115, 10, 178, 187, 125, 69, 77, 13, 139, 38, 182, 238, 73, 37, 116, 225, 104, 107, 92, 15, 120, 17, 137, 237, 200, 244, 10, 40, 62, 67, 27, 31, 234, 117, 212, 154, 175, 213, 157, 70, 193, 168, 234, 183, 168, 65, 156, 81, 72, 243, 123, 61, 101, 147, 95, 199, 144, 114, 51, 173, 3, 139, 147, 255, 83, 81, 101, 102, 222, 39, 193, 244, 112, 71, 27, 171, 67, 245, 225, 210, 101, 140, 241, 99, 98, 131, 17, 22, 227, 231, 154, 112, 224, 187, 4, 61, 14, 6, 74, 81, 243, 164, 216, 208, 152, 164, 99, 155, 25, 83, 184, 237, 17, 114, 40, 142, 239, 60, 136, 223, 43, 241, 37, 20, 248, 131, 112, 173, 213, 108, 153, 44, 118, 15, 70, 90, 62, 105, 225, 185, 202, 184, 1, 254, 217, 108, 21, 254, 43, 114, 83, 201, 252, 80, 176, 185, 45, 249, 156, 200, 243, 246, 228, 188, 105, 21, 216, 164, 33, 159, 241, 44, 76, 202, 96, 56, 67, 126, 171, 181, 140, 190, 37, 246, 181, 154, 210, 41, 164, 26, 125, 31, 175, 135, 225, 217, 115, 119, 91, 235, 144, 126, 93, 234, 182, 105, 132, 211, 212, 17, 58, 120, 134, 78, 17, 243, 23, 250, 158, 170, 141, 137, 223, 116, 186, 129, 199, 157, 210, 71, 145, 199, 201, 15, 152, 150, 29, 149, 113, 18, 237, 1, 148, 141, 46, 144, 246, 36, 165, 182, 115, 94, 218, 35, 19, 177, 162, 236, 15, 124, 217, 248, 76, 57, 217, 77, 170, 168, 80, 243, 150, 44, 45, 128, 211, 191, 140, 52, 85, 221, 59, 77, 91, 52, 170, 181, 142, 101, 253, 189, 97, 62, 248, 142, 63, 104, 205, 206, 169, 170, 105, 39, 247, 8, 135, 36, 209, 247, 190, 39, 216, 89, 63, 240, 7, 164, 137, 172, 156, 216, 43, 90, 30, 140, 119, 145, 84, 131, 9, 209, 56, 237, 110, 131, 38, 30, 250, 107, 194, 182, 39, 84, 123, 138, 88, 68, 36, 225, 110, 20, 55, 174, 114, 106, 159, 158, 192, 220, 252, 65, 71, 55, 244, 81, 76, 165, 1, 199, 0, 135, 104, 81, 205, 67, 180, 59, 163, 156, 18, 85, 106, 244, 194, 112, 124, 105, 61, 74, 85, 63, 146, 241, 36, 207, 50, 95, 36, 99, 76, 249, 110, 79, 86, 104, 138, 109, 241, 19, 21, 44, 61, 238, 170, 32, 255, 24, 175, 24, 133, 52, 67, 204, 239, 234, 40, 66, 160, 238, 195, 60, 57, 26, 148, 172, 97, 171, 242, 202, 162, 96, 67, 219, 118, 144, 34, 103, 57, 219, 37, 42, 22, 64, 55, 22, 120, 73, 234, 49, 51, 26, 19, 135, 230, 114, 62, 213, 124, 231, 203, 253, 238, 137, 181, 121, 80, 204, 18, 15, 218, 31, 62, 150, 146, 115, 253, 181, 70, 30, 243, 121, 161, 20, 216, 65, 185, 23, 224, 84, 118, 243, 116, 36, 234, 222, 162, 165, 34, 184, 255, 31, 81, 201, 59, 239, 103, 63, 193, 248, 140, 29, 226, 182, 189, 179, 128, 114, 209, 99, 207, 10, 205, 94, 230, 38, 159, 223, 174, 1, 240, 121, 252, 104, 123, 145, 177, 83, 124, 200, 25, 63, 26, 56, 228, 30, 125, 193, 55, 229, 172, 157, 141, 149, 49, 239, 134, 250, 6, 255, 240, 45, 4, 231, 41, 139, 0, 125, 78, 19, 9, 113, 210, 140, 106, 119, 253, 136, 50, 190, 100, 197, 123, 136, 2, 15, 92, 176, 96, 117, 130, 187, 93, 148, 32, 2, 20, 180, 160, 10, 75, 29, 79, 167, 119, 144, 31, 17, 119, 128, 172, 226, 22, 240, 246, 69, 179, 156, 104, 117, 230, 1, 16, 190, 176, 201, 44, 53, 113, 192, 15, 73, 245, 75, 168, 49, 184, 232, 118, 161, 4, 48, 196, 4, 215, 104, 162, 238, 210, 227, 205, 12, 79, 236, 6, 180, 157, 67, 100, 28, 68, 221, 59, 121, 160, 236, 159, 126, 137, 181, 67, 125, 123, 226, 199, 232, 159, 144, 74, 223, 156, 191, 163, 15, 199, 96, 32, 215, 206, 125, 121, 15, 244, 96, 4, 17, 238, 230, 215, 56, 167, 136, 15, 123, 101, 173, 82, 38, 210, 87, 219, 161, 232, 64, 141, 80, 166, 81, 225, 5, 228, 225, 169, 102, 52, 138, 113, 77, 134, 248, 79, 193, 181, 99, 176, 199, 148, 124, 209, 162, 224, 222, 247, 197, 31, 48, 136, 89, 231, 226, 159, 226, 67, 25, 175, 201, 249, 86, 13, 35, 172, 162, 65, 200, 196, 128, 33, 29, 110, 25, 206, 114, 94, 246, 124, 225, 116, 172, 140, 55, 146, 90, 159, 155, 185, 244, 218, 201, 150, 197, 140, 49, 173, 28, 6, 4, 180, 148, 155, 241, 183, 73, 135, 82, 140, 36, 99, 114, 119, 204, 138, 119, 152, 105, 91, 78, 6, 25, 94, 96, 120, 171, 11, 15, 95, 215, 226, 94, 18, 1, 218, 140, 38, 135, 22, 136, 1, 11, 103, 220, 214, 114, 138, 246, 210, 21, 107, 174, 93, 115, 12, 189, 24, 123, 128, 156, 230, 94, 55, 181, 7, 205, 218, 5, 35, 99, 124, 40, 145, 133, 141, 167, 185, 44, 246, 26, 12, 63, 204, 189, 191, 177, 14, 190, 161, 230, 73, 29, 234, 18, 63, 189, 124, 162, 80, 147, 14, 227, 198, 37, 176, 88, 204, 254, 145, 116, 231, 183, 1, 219, 66, 125, 236, 70, 178, 68, 92, 74, 98, 236, 75, 132, 128, 93, 26, 146, 86, 68, 249, 79, 19, 129, 152, 59, 87, 51, 175, 38, 253, 204, 143, 236, 81, 11, 243, 37, 210, 146, 1, 191, 128, 250, 112, 101, 87, 243, 74, 147, 173, 215, 248, 236, 161, 48, 234, 178, 80, 46, 79, 19, 67, 196, 222, 164, 246, 158, 244, 82, 196, 58, 49, 137, 147, 104, 24, 187, 112, 93, 194, 160, 202, 185, 69, 39, 251, 90, 198, 252, 11, 45, 241, 133, 229, 153, 44, 48, 60, 251, 201, 157, 153, 28, 53, 112, 116, 14, 221, 40, 113, 179, 98, 172, 106, 56, 170, 124, 164, 191, 204, 146, 165, 165, 133, 238, 198, 238, 55, 146, 81, 7, 95, 107, 117, 17, 250, 148, 50, 179, 159, 136, 254, 233, 40, 6, 95, 182, 134, 225, 170, 87, 222, 0, 165, 176, 255, 220, 105, 108, 132, 247, 19, 41, 43, 88, 176, 122, 70, 49, 213, 50, 165, 190, 113, 127, 227, 177, 215, 16, 244, 76, 199, 79, 177, 57, 86, 89, 180, 169, 121, 72, 141, 162, 17, 76, 74, 42, 10, 144, 235, 173, 199, 155, 132, 69, 13, 219, 220, 58, 64, 51, 121, 193, 230, 11, 213, 59, 172, 167, 199, 81, 223, 16, 11, 59, 208, 131, 167, 233, 43, 121, 61, 177, 199, 145, 68, 183, 63, 170, 146, 25, 204, 176, 72, 176, 112, 123, 18, 155, 173, 147, 13, 4, 209, 69, 228, 130, 153, 125, 202, 31, 110, 17, 18, 29, 250, 182, 91, 121, 84, 5, 104, 108, 33, 168, 202, 124, 218, 20, 203, 219, 213, 65, 25, 247, 37, 30, 216, 127, 66, 90, 43, 219, 153, 167, 109, 115, 220, 50, 36, 67, 69, 196, 18, 116, 203, 199, 208, 177, 146, 77, 89, 95, 179, 87, 26, 146, 150, 184, 118, 146, 244, 7, 130, 21, 200, 128, 208, 230, 155, 38, 37, 193, 235, 36, 170, 201, 129, 5, 138, 190, 51, 232, 121, 199, 66, 81, 75, 240, 95, 108, 12, 164, 241, 41, 205, 46, 64, 147, 153, 199, 52, 82, 216, 165, 8, 4, 65, 221, 204, 81, 240, 51, 202, 38, 174, 219, 103, 90, 65, 190, 104, 107, 195, 146, 246, 140, 43, 175, 110, 25, 172, 58, 147, 190, 176, 47, 219, 45, 174, 201, 100, 185, 36, 53, 31, 66, 169, 207, 136, 242, 35, 177, 19, 129, 113, 251, 127, 186, 88, 37, 247, 96, 183, 67, 227, 35, 90, 169, 177, 66, 180, 36, 67, 148, 99, 122, 108, 121, 247, 182, 24, 193, 161, 69, 96, 195, 78, 250, 218, 153, 228, 238, 73, 37, 252, 182, 125, 197, 58, 185, 95, 198, 223, 157, 46, 128, 67, 8, 169, 38, 235, 112, 185, 238, 132, 197, 125, 221, 112, 239, 159, 200, 124, 210, 242, 97, 142, 183, 185, 113, 48, 74, 60, 107, 89, 210, 165, 126, 70, 60, 7, 166, 81, 237, 219, 145, 217, 45, 168, 33, 41, 3, 145, 40, 79, 76, 21, 26, 235, 94, 163, 205, 96, 63, 77, 97, 215, 180, 116, 102, 52, 41, 68, 43, 161, 164, 27, 162, 203, 50, 113, 109, 23, 174, 237, 124, 137, 3, 83, 112, 168, 188, 239, 26, 50, 218, 55, 194, 227, 175, 12, 178, 30, 121, 11, 35, 105, 1, 242, 246, 181, 70, 102, 143, 42, 246, 62, 9, 223, 149, 52, 24, 109, 244, 92, 148, 116, 218, 129, 40, 32, 193, 136, 249, 118, 156, 232, 42, 27, 90, 13, 33, 251, 41, 202, 31, 8, 180, 67, 146, 137, 99, 205, 209, 178, 129, 57, 110, 21, 52, 174, 150, 231, 122, 14, 140, 242, 229, 183, 182, 32, 24, 254, 238, 61, 183, 238, 216, 18, 20, 128, 62, 146, 56, 195, 212, 215, 67, 191, 109, 57, 71, 71, 92, 28, 248, 69, 27, 81, 20, 89, 223, 151, 180, 69, 59, 97, 133, 248, 177, 195, 40, 111, 162, 39, 5, 111, 220, 3, 96, 54, 39, 210, 12, 0, 115, 157, 3, 132, 49, 3, 237, 250, 153, 112, 26, 191, 209, 185, 197, 21, 173, 116, 54, 205, 43, 218, 187, 13, 0, 167, 254, 142, 251, 220, 24, 218, 208, 227, 84, 149, 67, 124, 82, 118, 14, 224, 21, 134, 29, 212, 59, 189, 242, 53, 242, 94, 46, 154, 214, 13, 38, 205, 35, 44, 0, 183, 69, 136, 22, 51, 142, 80, 66, 254, 57, 0, 94, 186, 253, 13, 174, 241, 198, 232, 240, 212, 14, 211, 137, 49, 74, 168, 181, 255, 48, 163, 40, 172, 140, 220, 111, 53, 211, 92, 178, 232, 113, 213, 185, 179, 33, 227, 248, 16, 75, 49, 87, 183, 103, 89, 139, 166, 13, 105, 17, 64, 225, 236, 121, 185, 232, 130, 229, 108, 93, 133, 219, 89, 13, 176, 108, 194, 202, 188, 150, 233, 132, 131, 56, 194, 231, 27, 163, 115, 196, 255, 206, 165, 28, 247, 114, 22, 179, 174, 70, 135, 50, 195, 168, 232, 148, 162, 22, 40, 99, 117, 216, 17, 93, 45, 41, 10, 201, 25, 183, 64, 79, 181, 10, 138, 124, 175, 231, 46, 110, 103, 89, 249, 1, 31, 177, 83, 220, 105, 152, 80, 43, 21, 50, 2, 208, 178, 214, 240, 89, 21, 3, 230, 201, 36, 225, 21, 81, 3, 33, 188, 38, 243, 43, 24, 175, 58, 235, 87, 100, 173, 19, 128, 209, 13, 177, 182, 138, 64, 73, 153, 157, 25, 135, 22, 64, 78, 89, 244, 246, 51, 228, 229, 172, 164, 200, 34, 32, 229, 48, 107, 145, 110, 254, 48, 209, 23, 38, 227, 164, 182, 224, 175, 184, 63, 254, 163, 163, 90, 228, 63, 91, 186, 74, 102, 31, 162, 223, 158, 194, 36, 60, 70, 106, 149, 144, 73, 49, 62, 216, 10, 68, 169, 247, 178, 237, 159, 102, 134, 247, 206, 50, 193, 15, 195, 213, 181, 241, 26, 35, 94, 222, 223, 194, 35, 180, 169, 253, 55, 70, 3, 162, 224, 108, 106, 41, 134, 51, 136, 95, 230, 229, 134, 113, 210, 77, 21, 168, 147, 36, 117, 137, 89, 21, 208, 58, 111, 50, 178, 236, 202, 109, 118, 250, 139, 227, 194, 90, 169, 220, 121, 121, 97, 0, 76, 66, 86, 56, 190, 149, 208, 74, 111, 13, 236, 234, 229, 72, 91, 214, 46, 85, 242, 228, 228, 200, 124, 177, 89, 131, 195, 72, 183, 177, 24, 55, 129, 255, 60, 39, 207, 180, 28, 68, 247, 58, 179, 191, 58, 252, 4, 218, 75, 46, 216, 19, 66, 164, 80, 169, 192, 34, 171, 202, 119, 14, 209, 249, 73, 132, 229, 119, 78, 163, 92, 64, 25, 5, 170, 25, 133, 65, 230, 101, 115, 253, 48, 163, 13, 83, 47, 175, 145, 125, 94, 115, 125, 17, 53, 26, 21, 227, 89, 173, 149, 188, 88, 154, 137, 161, 62, 196, 189, 220, 153, 101, 195, 65, 18, 151, 206, 179, 124, 47, 153, 118, 233, 9, 252, 101, 195, 101, 83, 33, 217, 128, 112, 67, 117, 67, 65, 168, 0, 196, 232, 2, 132, 170, 168, 221, 180, 127, 150, 78, 115, 120, 162, 41, 209, 255, 75, 41, 109, 53, 89, 248, 239, 213, 53, 216, 64, 143, 189, 29, 248, 204, 95, 77, 107, 76, 227, 113, 244, 175, 229, 81, 149, 64, 240, 27, 78, 239, 115, 154, 138, 189, 164, 254, 236, 151, 97, 248, 168, 55, 55, 206, 161, 91, 23, 23, 162, 157, 238, 216, 189, 79, 230, 30, 144, 175, 31, 226, 243, 156, 96, 232, 128, 38, 175, 201, 153, 44, 176, 112, 114, 173, 142, 12, 202, 131, 26, 75, 82, 202, 63, 13, 186, 60, 219, 251, 19, 23, 50, 218, 61, 110, 201, 100, 84, 175, 54, 234, 250, 203, 254, 136, 87, 42, 117, 157, 129, 24, 156, 79, 153, 111, 248, 130, 19, 33, 118, 137, 109, 95, 160, 157, 153, 201, 213, 110, 140, 182, 36, 186, 32, 254, 59, 158, 199, 152, 192, 166, 127, 127, 1, 212, 129, 185, 197, 108, 82, 230, 130, 42, 94, 101, 211, 175, 30, 192, 204, 181, 227, 151, 15, 231, 255, 119, 240, 57, 128, 167, 126, 10, 147, 83, 76, 146, 207, 144, 195, 102, 21, 132, 38, 21, 41, 206, 34, 244, 140, 73, 88, 98, 19, 242, 248, 123, 111, 9, 139, 192, 167, 240, 100, 15, 203, 135, 7, 195, 142, 134, 235, 91, 38, 141, 190, 162, 210, 164, 250, 34, 160, 164, 16, 242, 118, 20, 232, 99, 218, 161, 137, 221, 40, 196, 26, 57, 252, 150, 185, 4, 150, 58, 210, 122, 57, 175, 155, 107, 34, 246, 88, 129, 68, 110, 11, 97, 74, 182, 107, 42, 120, 12, 137, 168, 157, 254, 159, 10, 83, 143, 204, 103, 20, 227, 20, 150, 39, 166, 67, 10, 117, 44, 61, 170, 239, 100, 54, 103, 0, 158, 15, 115, 107, 102, 96, 207, 171, 235, 200, 176, 229, 99, 250, 11, 51, 80, 152, 209, 71, 209, 110, 110, 230, 132, 233, 225, 57, 243, 107, 230, 254, 87, 81, 24, 131, 213, 49, 89, 102, 16, 15, 20, 230, 139, 242, 34, 51, 37, 28, 200, 25, 45, 55, 119, 22, 42, 171, 170, 185, 157, 112, 48, 90, 152, 14, 209, 101, 5, 58, 228, 14, 64, 59, 130, 79, 160, 97, 156, 73, 121, 79, 250, 172, 217, 6, 178, 144, 143, 223, 26, 89, 107, 250, 93, 139, 216, 129, 126, 194, 231, 24, 234, 126, 212, 194, 211, 237, 252, 247, 120, 181, 134, 241, 98, 89, 57, 251, 163, 133, 175, 210, 116, 80, 182, 172, 212, 146, 124, 58, 208, 143, 90, 200, 190, 250, 252, 183, 82, 96, 243, 114, 140, 254, 2, 116, 215, 48, 224, 97, 72, 219, 49, 94, 57, 174, 127, 77, 215, 115, 208, 248, 244, 168, 129, 162, 75, 166, 32, 204, 39, 167, 246, 209, 46, 190, 212, 179, 195, 125, 98, 181, 124, 60, 0, 33, 56, 104, 42, 164, 120, 127, 70, 201, 135, 223, 121, 44, 247, 183, 156, 151, 104, 153, 164, 48, 10, 80, 233, 220, 186, 120, 249, 35, 138, 84, 189, 21, 230, 29, 250, 59, 111, 181, 207, 135, 96, 30, 99, 196, 51, 17, 23, 85, 23, 159, 225, 4, 7, 27, 61, 40, 254, 185, 155, 10, 125, 224, 77, 16, 211, 52, 145, 24, 124, 105, 249, 85, 112, 43, 192, 33, 125, 246, 142, 202, 26, 185, 202, 210, 215, 241, 93, 135, 47, 161, 80, 148, 111, 182, 140, 188, 64, 128, 59, 9, 11, 83, 253, 221, 137, 199, 32, 105, 114, 37, 153, 111, 212, 3, 38, 4, 18, 173, 203, 56, 3, 106, 41, 119, 11, 22, 68, 135, 12, 78, 205, 60, 208, 161, 46, 37, 164, 105, 19, 54, 54, 62, 237, 21, 196, 230, 39, 15, 154, 196, 88, 222, 166, 115, 96, 155, 148, 170, 193, 47, 1, 46, 163, 53, 5, 138, 152, 9, 97, 227, 81, 133, 83, 223, 96, 105, 207, 106, 38, 20, 105, 139, 90, 39, 175, 178, 94, 61, 139, 209, 74, 139, 207, 43, 239, 124, 51, 231, 192, 75, 236, 142, 8, 174, 216, 186, 149, 33, 170, 62, 246, 44, 57, 153, 224, 229, 170, 194, 23, 17, 181, 133, 128, 243, 131, 70, 115, 112, 8, 25, 186, 176, 205, 243, 73, 180, 186, 1, 91, 7, 243, 243, 17, 80, 128, 27, 124, 132, 146, 172, 64, 243, 154, 31, 254, 75, 87, 146, 164, 9, 4, 219, 48, 151, 132, 217, 11, 187, 241, 90, 1, 77, 144, 204, 188, 32, 119, 181, 49, 78, 130, 11, 213, 211, 203, 213, 203, 84, 81, 210, 148, 112, 220, 85, 131, 11, 191, 225, 3, 152, 95, 126, 213, 94, 117, 18, 20, 189, 90, 187, 141, 175, 156, 37, 238, 111, 48, 91, 252, 81, 104, 161, 239, 44, 138, 108, 155, 209, 168, 52, 17, 46, 59, 196, 218, 72, 78, 138, 135, 26, 27, 69, 227, 194, 143, 94, 138, 142, 117, 158, 244, 85, 74, 212, 231, 197, 209, 108, 178, 195, 37, 211, 54, 87, 228, 154, 236, 217, 102, 226, 179, 16, 148, 72, 225, 226, 92, 129, 59, 160, 15, 16, 207, 66, 182, 92, 117, 248, 243, 133, 57, 37, 234, 55, 195, 53, 144, 18, 148, 143, 131, 156, 22, 42, 185, 124, 234, 162, 177, 84, 89, 169, 234, 167, 116, 15, 5, 10, 134, 191, 167, 235, 153, 196, 76, 196, 238, 39, 68, 54, 39, 49, 93, 206, 248, 34, 50, 199, 235, 209, 217, 53, 47, 188, 191, 182, 24, 135, 21, 247, 178, 124, 141, 103, 251, 146, 146, 169, 32, 106, 217, 233, 208, 239, 103, 56, 116, 71, 103, 160, 82, 114, 37, 207, 102, 202, 4, 99, 91, 114, 66, 100, 176, 107, 170, 59, 163, 56, 61, 55, 35, 131, 114, 210, 232, 179, 235, 131, 186, 218, 127, 179, 211, 9, 41, 96, 178, 78, 171, 213, 46, 247, 127, 175, 0, 203, 164, 190, 3, 9, 134, 139, 158, 59, 240, 78, 12, 72, 194, 132, 47, 236, 145, 89, 107, 160, 21, 130, 98, 20, 173, 34, 115, 179, 230, 9, 115, 90, 55, 23, 90, 140, 225, 158, 68, 53, 70, 142, 120, 202, 224, 59, 56, 177, 149, 219, 215, 249, 7, 95, 110, 181, 242, 198, 60, 193, 111, 199, 203, 99, 93, 89, 172, 232, 167, 129, 241, 71, 143, 22, 104, 181, 100, 242, 175, 167, 252, 144, 102, 38, 160, 84, 233, 116, 74, 197, 82, 111, 121, 78, 222, 202, 100, 244, 202, 196, 31, 105, 15, 165, 251, 0, 153, 185, 211, 157, 180, 140, 158, 191, 60, 47, 63, 33, 75, 57, 235, 224, 253, 112, 145, 241, 169, 47, 22, 82, 21, 79, 222, 57, 131, 66, 119, 11, 110, 169, 253, 138, 81, 239, 71, 204, 34, 55, 33, 6, 124, 100, 166, 220, 208, 182, 93, 185, 128, 249, 130, 164, 11, 176, 172, 224, 85, 60, 34, 183, 141, 15, 219, 148, 132, 30, 182, 122, 205, 21, 232, 154, 92, 200, 43, 23, 56, 132, 232, 6, 220, 255, 57, 81, 29, 216, 172, 223, 77, 235, 174, 242, 74, 146, 180, 78, 9, 201, 78, 7, 188, 34, 243, 42, 253, 164, 69, 29, 89, 46, 52, 78, 123, 0, 118, 239, 38, 124, 170, 79, 141, 211, 224, 126, 45, 180, 98, 189, 210, 199, 46, 76, 139, 188, 98, 233, 202, 109, 181, 158, 41, 177, 147, 97, 91, 235, 238, 132, 74, 2, 184, 107, 61, 240, 219, 67, 195, 161, 97, 36, 35, 91, 98, 36, 73, 101, 250, 63, 253, 106, 47, 84, 82, 132, 117, 172, 128, 140, 54, 31, 31, 240, 119, 88, 235, 32, 204, 58, 182, 71, 4, 36, 193, 84, 168, 201, 215, 174, 200, 82, 200, 17, 220, 64, 241, 210, 180, 140, 225, 238, 194, 181, 108, 65, 183, 220, 78, 237, 28, 38, 123, 231, 130, 23, 161, 195, 233, 72, 12, 148, 177, 199, 75, 112, 112, 0, 224, 189, 70, 244, 144, 175, 92, 242, 219, 249, 81, 183, 51, 200, 147, 157, 4, 36, 73, 99, 238, 162, 191, 154, 242, 250, 7, 43, 28, 47, 249, 233, 49, 102, 21, 185, 217, 185, 151, 98, 26, 153, 2, 8, 125, 254, 230, 166, 204, 251, 168, 154, 106, 144, 0, 235, 212, 249, 76, 100, 75, 167, 143, 99, 110, 206, 37, 139, 37, 179, 38, 250, 33, 69, 149, 96, 215, 114, 88, 40, 40, 250, 64, 213, 25, 136, 249, 142, 204, 127, 40, 193, 134, 190, 217, 58, 163, 146, 201, 184, 125, 82, 204, 128, 58, 205, 36, 11, 1, 88, 11, 151, 54, 182, 25, 16, 162, 60, 35, 84, 175, 243, 189, 242, 140, 45, 36, 33, 21, 198, 14, 202, 186, 206, 50, 81, 29, 123, 63, 14, 196, 115, 211, 153, 106, 23, 169, 26, 102, 87, 84, 59, 81, 120, 220, 140, 31, 161, 60, 113, 54, 50, 126, 60, 156, 209, 247, 233, 231, 110, 143, 76, 191, 76, 133, 145, 27, 92, 242, 11, 104, 226, 66, 252, 217, 196, 253, 143, 233, 103, 47, 87, 31, 181, 1, 172, 103, 49, 179, 51, 190, 218, 134, 225, 50, 154, 50, 188, 201, 248, 119, 229, 220, 133, 76, 254, 11, 4, 17, 101, 81, 46, 182, 189, 225, 206, 17, 182, 208, 135, 113, 207, 104, 44, 161, 103, 92, 15, 3, 160, 182, 52, 167, 53, 53, 221, 212, 5, 198, 6, 181, 175, 237, 61, 193, 165, 115, 229, 128, 61, 229, 191, 90, 111, 54, 45, 76, 229, 154, 178, 77, 191, 84, 76, 192, 226, 183, 165, 83, 160, 88, 233, 120, 183, 254, 195, 249, 33, 121, 218, 221, 95, 158, 177, 29, 198, 90, 16, 75, 253, 43, 68, 40, 126, 104, 144, 175, 157, 139, 192, 104, 182, 95, 63, 158, 113, 88, 12, 153, 13, 106, 142, 136, 14, 76, 171, 91, 114, 205, 230, 18, 103, 228, 20, 29, 33, 6, 35, 84, 254, 194, 0, 120, 236, 53, 42, 54, 178, 247, 46, 241, 99, 72, 246, 234, 14, 159, 122, 212, 147, 100, 145, 195, 239, 75, 97, 42, 11, 104, 144, 50, 8, 192, 244, 76, 119, 104, 18, 218, 39, 43, 164, 199, 87, 163, 239, 47, 107, 163, 205, 198, 241, 34, 218, 37, 213, 26, 235, 8, 45, 231, 197, 64, 221, 145, 247, 15, 255, 198, 80, 93, 88, 159, 53, 79, 153, 74, 13, 12, 40, 64, 192, 22, 113, 28, 164, 73, 94, 74, 218, 112, 50, 237, 101, 220, 122, 3, 240, 88, 96, 166, 108, 225, 75, 67, 241, 40, 205, 247, 135, 18, 121, 72, 27, 187, 173, 28, 65, 26, 247, 31, 141, 59, 213, 8, 94, 157, 232, 221, 54, 45, 219, 211, 99, 211, 0, 3, 85, 48, 66, 187, 120, 101, 57, 94, 41, 5, 29, 48, 126, 108, 66, 54, 233, 227, 99, 73, 61, 163, 36, 223, 100, 220, 157, 244, 63, 82, 209, 28, 227, 116, 220, 66, 159, 253, 232, 255, 69, 188, 164, 24, 234, 227, 254, 242, 162, 246, 28, 92, 229, 7, 86, 81, 124, 238, 54, 102, 193, 109, 77, 11, 181, 162, 9, 226, 170, 179, 231, 217, 122, 231, 66, 82, 123, 115, 104, 54, 190, 135, 185, 244, 197, 100, 194, 70, 148, 235, 235, 186, 54, 83, 224, 174, 92, 240, 127, 22, 200, 88, 193, 17, 91, 149, 5, 122, 221, 196, 19, 182, 206, 175, 37, 22, 35, 82, 238, 117, 141, 36, 35, 106, 159, 225, 95, 145, 160, 214, 46, 210, 39, 237, 95, 206, 87, 211, 59, 55, 65, 148, 55, 111, 228, 215, 117, 156, 201, 241, 249, 38, 8, 84, 157, 158, 241, 115, 145, 152, 162, 61, 42, 52, 255, 72, 103, 73, 117, 174, 223, 11, 254, 187, 56, 161, 188, 199, 175, 209, 22, 152, 152, 53, 49, 10, 23, 249, 241, 221, 70, 223, 232, 237, 56, 47, 54, 21, 148, 17, 16, 200, 75, 112, 237, 255, 54, 11, 252, 19, 6, 75, 129, 34, 12, 101, 138, 232, 171, 133, 193, 204, 155, 238, 193, 1, 128, 112, 250, 219, 175, 243, 247, 247, 51, 133, 166, 36, 173, 33, 1, 79, 143, 54, 167, 142, 31, 213, 146, 190, 138, 102, 14, 110, 161, 86, 248, 43, 113, 59, 140, 5, 159, 55, 204, 98, 164, 206, 215, 203, 123, 164, 216, 50, 161, 191, 153, 181, 175, 216, 127, 204, 105, 121, 74, 139, 125, 79, 40, 178, 76, 12, 159, 199, 9, 181, 234, 181, 249, 83, 201, 114, 94, 147, 99, 240, 198, 244, 100, 188, 158, 74, 65, 152, 178, 131, 48, 33, 224, 51, 128, 187, 13, 12, 223, 17, 65, 205, 113, 201, 79, 167, 246, 36, 157, 35, 194, 47, 67, 174, 86, 33, 51, 116, 169, 189, 106, 77, 214, 55, 68, 90, 7, 22, 45, 95, 102, 38, 80, 207, 79, 93, 169, 62, 106, 33, 22, 80, 82, 211, 246, 15, 220, 160, 3, 16, 101, 199, 243, 230, 230, 4, 255, 94, 57, 158, 85, 218, 3, 1, 81, 205, 91, 19, 198, 34, 117, 242, 236, 154, 57, 146, 109, 75, 55, 191, 203, 165, 124, 103, 46, 118, 106, 223, 208, 137, 16, 140, 139, 168, 148, 79, 125, 225, 4, 206, 133, 58, 93, 215, 108, 17, 200, 157, 173, 171, 22, 33, 71, 254, 236, 163, 247, 31, 166, 64, 194, 139, 227, 140, 103, 65, 64, 225, 239, 241, 201, 102, 223, 79, 47, 241, 137, 66, 30, 235, 36, 141, 37, 26, 127, 219, 74, 140, 242, 205, 60, 175, 207, 37, 122, 3, 214, 203, 131, 33, 137, 195, 171, 171, 79, 123, 51, 249, 85, 157, 82, 21, 138, 1, 58, 228, 162, 59, 207, 33, 178, 138, 22, 215, 148, 151, 11, 229, 183, 26, 28, 96, 135, 201, 154, 86, 153, 81, 37, 245, 25, 63, 11, 22, 176, 84, 62, 15, 197, 243, 86, 52, 205, 132, 30, 224, 236, 43, 219, 184, 222, 93, 47, 48, 187, 246, 129, 203, 199, 34, 231, 168, 250, 172, 71, 35, 18, 106, 21, 7, 21, 38, 191, 83, 77, 45, 47, 38, 230, 128, 109, 19, 126, 87, 100, 148, 45, 195, 213, 12, 48, 192, 247, 31, 13, 91, 17, 50, 36, 3, 174, 235, 183, 132, 235, 212, 243, 10, 235, 169, 91, 32, 192, 208, 3, 31, 191, 108, 213, 128, 49, 48, 126, 78, 63, 97, 225, 98, 91, 56, 75, 157, 141, 128, 10, 87, 185, 17, 41, 139, 28, 91, 207, 105, 75, 198, 248, 208, 85, 70, 56, 236, 236, 189, 128, 11, 26, 217, 116, 181, 214, 167, 200, 113, 226, 146, 76, 46, 249, 11, 208, 219, 55, 226, 5, 155, 141, 194, 164, 165, 54, 15, 241, 110, 100, 26, 131, 79, 213, 101, 249, 32, 50, 116, 51, 46, 56, 143, 64, 137, 191, 169, 211, 24, 76, 14, 237, 191, 56, 204, 160, 137, 108, 243, 22, 77, 179, 238, 146, 194, 246, 3, 248, 119, 177, 236, 189, 220, 202, 16, 94, 30, 191, 46, 97, 95, 211, 247, 102, 47, 123, 187, 132, 177, 124, 132, 204, 128, 44, 183, 204, 93, 6, 45, 226, 76, 251, 106, 151, 224, 213, 207, 161, 35, 16, 154, 133, 189, 55, 100, 70, 103, 219, 157, 255, 125, 191, 230, 221, 94, 147, 189, 188, 71, 174, 115, 86, 174, 115, 38, 211, 82, 51, 33, 234, 46, 56, 200, 56, 133, 198, 173, 101, 166, 12, 39, 7, 16, 224, 7, 215, 102, 17, 136, 158, 40, 206, 115, 61, 32, 197, 193, 252, 138, 201, 250, 153, 228, 228, 57, 217, 92, 140, 212, 125, 166, 140, 183, 179, 52, 163, 157, 13, 183, 58, 246, 57, 136, 3, 14, 245, 37, 81, 68, 85, 58, 119, 67, 18, 254, 165, 0, 218, 88, 21, 97, 16, 15, 89, 210, 196, 245, 79, 125, 77, 170, 89, 46, 130, 49, 212, 34, 93, 67, 96, 116, 96, 96, 212, 103, 82, 86, 194, 71, 240, 45, 224, 155, 255, 242, 159, 57, 135, 153, 97, 226, 165, 252, 152, 27, 177, 165, 190, 118, 153, 112, 120, 128, 230, 83, 102, 91, 166, 20, 72, 177, 114, 61, 175, 102, 71, 168, 9, 255, 161, 131, 117, 185, 78, 94, 186, 224, 91, 46, 211, 213, 164, 117, 91, 26, 92, 244, 209, 168, 168, 56, 20, 151, 193, 229, 180, 88, 158, 54, 48, 25, 221, 23, 170, 19, 239, 159, 174, 49, 67, 186, 58, 250, 80, 113, 130, 118, 39, 150, 25, 191, 125, 62, 76, 31, 128, 182, 84, 22, 112, 78, 229, 100, 97, 204, 109, 222, 31, 109, 67, 117, 19, 240, 54, 96, 89, 106, 82, 1, 217, 50, 9, 205, 244, 117, 5, 216, 120, 45, 134, 84, 54, 74, 7, 141, 2, 88, 150, 2, 82, 142, 98, 69, 226, 48, 214, 20, 230, 242, 44, 36, 212, 143, 213, 105, 108, 147, 43, 11, 173, 250, 79, 106, 210, 95, 20, 213, 19, 83, 45, 153, 182, 128, 98, 67, 63, 64, 107, 117, 62, 120, 54, 237, 155, 131, 77, 138, 250, 122, 111, 164, 252, 119, 235, 77, 15, 21, 181, 156, 68, 113, 35, 54, 138, 56, 110, 44, 62, 166, 14, 181, 196, 213, 251, 25, 94, 79, 7, 184, 165, 37, 71, 253, 255, 239, 34, 223, 173, 101, 224, 251, 62, 47, 162, 16, 234, 147, 251, 162, 130, 163, 18, 118, 167, 55, 171, 9, 119, 102, 93, 207, 80, 239, 98, 89, 113, 10, 26, 29, 131, 146, 149, 224, 79, 137, 12, 233, 7, 154, 44, 202, 232, 112, 174, 235, 8, 192, 104, 123, 241, 147, 79, 187, 167, 17, 95, 186, 184, 24, 47, 111, 208, 92, 88, 67, 125, 47, 246, 136, 176, 88, 102, 220, 254, 125, 155, 241, 179, 3, 78, 161, 86, 145, 120, 210, 163, 66, 194, 20, 10, 198, 13, 85, 176, 107, 195, 112, 77, 198, 49, 189, 13, 15, 30, 177, 215, 205, 176, 53, 207, 51, 64, 136, 144, 147, 78, 203, 248, 54, 186, 71, 218, 67, 21, 10, 239, 198, 170, 192, 190, 92, 70, 98, 77, 247, 102, 150, 67, 213, 6, 30, 165, 194, 125, 59, 54, 146, 111, 152, 86, 130, 167, 224, 227, 207, 179, 220, 78, 248, 180, 121, 65, 15, 177, 40, 232, 110, 195, 38, 137, 21, 70, 135, 208, 172, 105, 101, 35, 236, 0, 127, 52, 11, 202, 168, 230, 48, 150, 212, 199, 52, 250, 237, 61, 55, 41, 145, 233, 78, 44, 25, 151, 77, 56, 125, 148, 137, 53, 182, 84, 150, 184, 228, 24, 216, 26, 211, 250, 192, 35, 185, 210, 109, 58, 180, 1, 66, 143, 13, 105, 199, 11, 166, 6, 61, 105, 251, 53, 34, 49, 31, 180, 96, 14, 207, 249, 84, 148, 207, 184, 139, 187, 68, 137, 88, 174, 168, 239, 6, 104, 75, 235, 65, 186, 229, 30, 164, 74, 141, 161, 216, 251, 135, 177, 147, 49, 19, 111, 238, 35, 217, 143, 6, 147, 252, 213, 134, 240, 236, 245, 16], [188, 144, 53, 62, 166, 127, 18, 22, 163, 66, 220, 210, 174, 218, 136, 127, 23, 140, 180, 222, 150, 110, 134, 243, 5, 216, 160, 34, 222, 196, 119, 172, 229, 179, 71, 205, 121, 101, 30, 166, 42, 173, 214, 218, 93, 54, 45, 15, 89, 122, 74, 54, 204, 255, 5, 39, 241, 77, 79, 0], [110, 67, 49, 112, 119, 102, 79, 119, 52, 111, 104, 99, 98, 55, 118, 83, 81, 101, 81, 108, 106, 82, 90, 79, 116, 90, 120, 70, 65, 104, 107, 80, 99, 53, 118, 86, 112, 89, 54, 87, 50, 89, 83, 109, 55, 111, 74, 67, 57, 87, 118, 77, 100, 119, 56, 51, 101, 113, 48, 73, 121, 106, 79, 109, 79, 120, 72, 118, 75, 57, 48, 61], [105, 119, 50, 56, 79, 50, 122, 97, 106, 99, 80, 57, 43, 102, 77, 51, 122, 101, 99, 82, 71, 89, 104, 116, 101, 73, 87, 87, 80, 85, 43, 82, 76, 50, 98, 48, 54, 78, 121, 48, 88, 43, 104, 82, 84, 90, 47, 89, 98, 114, 109, 86, 48, 121, 114, 100, 78, 120, 81, 98, 73, 48, 53, 118, 110, 111, 106, 98, 65, 79, 50, 74, 107, 101, 116, 49, 109, 104, 103, 84, 54, 118, 81, 113, 89, 81, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 197, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 197, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_value: <<< res: None
update_wallet_record_tags: >>> wallet_handle: 3, type_: 'presentation_exchange_v10', id: '6be4dc23-2532-4d2d-9def-6cf78a9bfe09', tags_json: '{"thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315"}'
do_call: >>> name: indy_update_wallet_record_tags, args: (c_int(3), c_char_p(140572626315536), c_char_p(140573274221672), c_char_p(140572626317744), <CFunctionType object at 0x7fd99efcf368>)
do_call: Function indy_update_wallet_record_tags returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s5`: SELECT id FROM items WHERE type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s5 with parameters: [[110, 67, 49, 112, 119, 102, 79, 119, 52, 111, 104, 99, 98, 55, 118, 83, 81, 101, 81, 108, 106, 82, 90, 79, 116, 90, 120, 70, 65, 104, 107, 80, 99, 53, 118, 86, 112, 89, 54, 87, 50, 89, 83, 109, 55, 111, 74, 67, 57, 87, 118, 77, 100, 119, 56, 51, 101, 113, 48, 73, 121, 106, 79, 109, 79, 120, 72, 118, 75, 57, 48, 61], [105, 119, 50, 56, 79, 50, 122, 97, 106, 99, 80, 57, 43, 102, 77, 51, 122, 101, 99, 82, 71, 89, 104, 116, 101, 73, 87, 87, 80, 85, 43, 82, 76, 50, 98, 48, 54, 78, 121, 48, 88, 43, 104, 82, 84, 90, 47, 89, 98, 114, 109, 86, 48, 121, 114, 100, 78, 120, 81, 98, 73, 48, 53, 118, 110, 111, 106, 98, 65, 79, 50, 74, 107, 101, 116, 49, 109, 104, 103, 84, 54, 118, 81, 113, 89, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_encrypted WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [16, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_plaintext WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [16, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s6`: INSERT INTO tags_encrypted (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s7`: INSERT INTO tags_plaintext (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s6 with parameters: [16, [63, 214, 72, 222, 130, 103, 146, 158, 195, 194, 230, 74, 26, 53, 129, 230, 232, 7, 33, 137, 227, 21, 72, 88, 62, 97, 106, 31, 62, 194, 84, 80, 193, 83, 183, 11, 35], [203, 122, 98, 209, 35, 107, 95, 185, 163, 20, 194, 44, 127, 50, 93, 40, 38, 115, 156, 101, 190, 128, 191, 144, 6, 67, 134, 208, 36, 122, 117, 225, 169, 166, 168, 19, 201, 160, 59, 36, 2, 33, 211, 150, 112, 152, 3, 69, 188, 121, 60, 103, 107, 174, 105, 87, 84, 49, 15, 197, 65, 68, 117, 199], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 198, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 198, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_tags: <<< res: None
  {"msg_id": "N/A", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "dict:Exchange", "timestamp": 1621255649.345499, "str_time": "2021-05-17 12:47:29.345499", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://medic-business-logic:3010/topic/present_proof/"}
  {"msg_id": "N/A", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "dict:Exchange", "timestamp": 1621255649.346531, "str_time": "2021-05-17 12:47:29.346531", "handler": "Medic", "ellapsed_milli": 1, "outcome": "OutboundTransportManager.DELIVER.END.http://medic-business-logic:3010/topic/present_proof/"}
get_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'eef16ddd-5609-4e39-9915-f29a1c704a04', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573273870160), c_char_p(140572626334640), c_char_p(140572651804576), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
Posting to http://medic-business-logic:3010/topic/present_proof/; Data: {"presentation": {"proof": {"proofs": [{"primary_proof": {"eq_proof": {"revealed_attrs": {"dateissued": "31928709163600735441101476658814216885388252189838058973070792022801591336579", "name": "65005548905037764764502350053825769914874082648761230458670796241392891659611", "university": "57963125648994666300875361621729313351158154740138173103415020334594043694317"}, "a_prime": "87497477164085281713515336297515943429019546474313262770335421765133863845640751068882479821210108833176361422261063340793068905849363855118387211928239661741467086868245856605179886602807155159922066970565879831689722766180595360270807817576558715651422812622112772575366400694451961003420821035410411754938002622161912544531488798019344320388863245692256649083221692716790544568891085743782166444391719113693283895450797771285479050700568689004293473400512892325588549692788865838062815649569931952702341824780972708808792387532031154770405268339962911889615893319854101222033589697014500234175984542003981021812773", "e": "154048814774809203958249265530095027153254858125683001027903995570529697898875222881872697502854428674182121253100643612713560841235618320", "v": "1075056707481757685302820380549717229682054697230177771108389494064352356360402296905750567040684833964672790067363593404776554862883852716066433245646004976568123906996240484640017436844042528906492407131637814906775223635522805330540821860789570147335385926281889343075837419621936725374512911442589375005207127302660521377811911263963170082152211654863865973074551173468971302064037414991208663319657132370588732440384168336986163798963761061494469536810671296067740391464565818521832398450565394186065363034382061719577698363164227851726618301906985003377355041460420266591228887729792179577148690929889962673469164396309133902236993907580806172768372370897655397502894524941436896504481810090989727162648100833698324938043127809593602060915232870513524082714004782505194802058946770924552591021866603803125486355822467277111110567002144550965455325197736424654917084203540848249866727836219471387065903524753183092544", "m": {"master_secret": "2793697494185440264525060860231245239302026234731932628029468109408435569054206729934377817146497096671519204938276353379685637149960731633869827819226246137511338209444740904790"}, "m2": "98023185406056981757909108244610452040269911693114387930295449500518864756275015327639118257530305062150523567067133342746408412629638494814612815612658191435536476997557765123"}, "ge_proofs": []}, "non_revoc_proof": null}], "aggregated_proof": {"c_hash": "51128778298706816581010548716237320985693016689947197450663483251832695160949", "c_list": [[2, 181, 29, 16, 75, 183, 135, 189, 141, 128, 82, 129, 176, 52, 209, 164, 228, 151, 94, 134, 107, 238, 28, 182, 30, 69, 3, 97, 130, 96, 127, 94, 75, 162, 173, 246, 68, 103, 210, 73, 112, 123, 236, 91, 128, 249, 234, 45, 107, 131, 222, 144, 98, 223, 211, 194, 220, 19, 224, 206, 116, 171, 124, 249, 184, 138, 111, 79, 26, 180, 3, 104, 118, 181, 164, 12, 250, 23, 69, 182, 99, 92, 120, 150, 6, 210, 242, 126, 99, 30, 52, 117, 119, 164, 76, 122, 12, 125, 136, 2, 225, 215, 52, 219, 136, 115, 173, 141, 114, 6, 94, 226, 213, 80, 194, 171, 78, 10, 182, 166, 164, 190, 212, 55, 148, 184, 84, 58, 185, 127, 94, 206, 44, 150, 56, 29, 59, 143, 190, 226, 41, 76, 22, 66, 230, 19, 121, 19, 222, 135, 150, 7, 65, 100, 236, 219, 208, 183, 144, 95, 214, 193, 46, 190, 83, 213, 225, 118, 163, 181, 79, 86, 57, 187, 233, 213, 90, 123, 201, 43, 129, 77, 16, 70, 199, 217, 146, 108, 66, 246, 182, 197, 109, 181, 14, 132, 103, 13, 136, 47, 10, 214, 61, 136, 254, 6, 60, 56, 106, 102, 37, 163, 78, 98, 120, 151, 126, 255, 129, 185, 106, 156, 182, 186, 84, 45, 1, 74, 52, 118, 165, 153, 15, 171, 24, 31, 12, 134, 64, 98, 6, 206, 155, 29, 72, 195, 185, 120, 72, 46, 17, 66, 18, 37, 103, 24, 37]]}}, "requested_proof": {"revealed_attrs": {"0_University_uuid": {"sub_proof_index": 0, "raw": "Edinburgh Medical School", "encoded": "57963125648994666300875361621729313351158154740138173103415020334594043694317"}, "0_Name_uuid": {"sub_proof_index": 0, "raw": "Will Abramson", "encoded": "65005548905037764764502350053825769914874082648761230458670796241392891659611"}, "0_Date Issued_uuid": {"sub_proof_index": 0, "raw": "2021-05-17", "encoded": "31928709163600735441101476658814216885388252189838058973070792022801591336579"}}, "self_attested_attrs": {}, "unrevealed_attrs": {}, "predicates": {}}, "identifiers": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "rev_reg_id": null, "timestamp": null}]}, "presentation_request": {"name": "Proof of Primary Medical Qualification", "version": "1.0", "requested_attributes": {"0_Name_uuid": {"name": "Name", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}, "0_University_uuid": {"name": "University", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}, "0_Date Issued_uuid": {"name": "Date Issued", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}}, "requested_predicates": {}, "non_revoked": {"to": 1621255549}, "nonce": "19740203311469284009343"}, "presentation_request_dict": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation", "@id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "~trace": {"target": "log", "full_thread": true, "trace_reports": []}, "comment": "Please prove that you have recieved a valid PMQ", "request_presentations~attach": [{"@id": "libindy-request-presentation-0", "mime-type": "application/json", "data": {"base64": "eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9"}}]}, "presentation_exchange_id": "6be4dc23-2532-4d2d-9def-6cf78a9bfe09", "created_at": "2021-05-17 12:46:41.793608Z", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "role": "prover", "trace": true, "connection_id": "eef16ddd-5609-4e39-9915-f29a1c704a04", "initiator": "external", "state": "presentation_sent", "updated_at": "2021-05-17 12:47:29.293544Z"}; Headers: {'Content-Type': 'application/json'}
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [109, 73, 104, 49, 120, 54, 51, 101, 73, 56, 70, 48, 50, 104, 119, 52, 113, 120, 74, 121, 56, 108, 113, 50, 88, 122, 43, 110, 49, 88, 75, 118, 109, 116, 117, 55, 83, 89, 117, 115, 68, 88, 54, 84, 121, 121, 68, 119, 104, 71, 65, 56, 81, 53, 88, 113, 89, 112, 104, 99, 66, 67, 56, 88, 74, 79, 101, 74, 89, 121, 87, 114, 108, 54, 65, 102, 99, 55, 49, 79, 103, 121, 108, 67, 122, 103, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 199, err , args: (b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.808747Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_loop_callback: >>> command_handle: 199, err , args: (b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.808747Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.808747Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
_indy_callback: <<<
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.808747Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
get_my_did_with_meta: >>> wallet_handle: 3, did: 'JkkJux3BNa6oWp6AvWMqoY'
do_call: >>> name: indy_get_my_did_with_meta, args: (c_int(3), c_char_p(140572651788056), <CFunctionType object at 0x7fd99efcf4f8>)
do_call: Function indy_get_my_did_with_meta returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 43, 99, 121, 73, 77, 73, 112, 97, 52, 75, 114, 112, 104, 65, 108, 110, 66, 84, 55, 70, 85, 88, 50, 99, 120, 77, 116, 85, 53, 108, 70, 67, 98, 79, 120, 99, 66, 55, 83, 51, 73, 120, 83, 77, 55, 54, 73, 106, 81, 61, 61], [57, 47, 55, 65, 102, 72, 100, 66, 66, 122, 116, 102, 43, 98, 105, 51, 68, 120, 67, 73, 117, 103, 69, 80, 79, 118, 49, 107, 78, 52, 49, 122, 56, 54, 73, 120, 116, 79, 68, 112, 121, 115, 118, 97, 84, 67, 119, 121, 99, 118, 112, 115, 116, 116, 65, 122, 105, 120, 71, 49, 43, 104, 84, 107, 84, 90, 85, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[55, 116, 116, 107, 98, 75, 100, 108, 50, 122, 117, 118, 72, 121, 104, 84, 67, 122, 66, 43, 104, 71, 108, 47, 90, 81, 67, 115, 82, 121, 117, 103, 110, 66, 118, 84, 101, 72, 67, 116, 104, 78, 55, 105, 99, 101, 55, 87, 108, 84, 49, 82, 111, 71, 65, 86, 97, 86, 65, 88], [57, 47, 55, 65, 102, 72, 100, 66, 66, 122, 116, 102, 43, 98, 105, 51, 68, 120, 67, 73, 117, 103, 69, 80, 79, 118, 49, 107, 78, 52, 49, 122, 56, 54, 73, 120, 116, 79, 68, 112, 121, 115, 118, 97, 84, 67, 119, 121, 99, 118, 112, 115, 116, 116, 65, 122, 105, 120, 71, 49, 43, 104, 84, 107, 84, 90, 85, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[51, 103, 102, 85, 68, 98, 88, 74, 73, 122, 66, 111, 69, 53, 74, 49, 69, 103, 72, 101, 75, 116, 48, 115, 108, 68, 69, 81, 122, 114, 88, 87, 112, 109, 100, 119, 109, 75, 78, 83, 121, 50, 115, 78, 70, 107, 79, 78, 102, 74, 87, 99, 120, 118, 57, 66, 66, 84, 48, 97, 66, 119, 61, 61], [57, 47, 55, 65, 102, 72, 100, 66, 66, 122, 116, 102, 43, 98, 105, 51, 68, 120, 67, 73, 117, 103, 69, 80, 79, 118, 49, 107, 78, 52, 49, 122, 56, 54, 73, 120, 116, 79, 68, 112, 121, 115, 118, 97, 84, 67, 119, 121, 99, 118, 112, 115, 116, 116, 65, 122, 105, 120, 71, 49, 43, 104, 84, 107, 84, 90, 85, 61], "Medic"]
_indy_callback: >>> command_handle: 200, err , args: (b'{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 200, err , args: (b'{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null}',)
_indy_loop_callback: Function returned b'{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null}'
_indy_loop_callback <<<
get_my_did_with_meta: <<< res: '{"did":"JkkJux3BNa6oWp6AvWMqoY","verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","tempVerkey":null,"metadata":null}'
open_wallet_search: >>> wallet_handle: 3, type_: 'did_doc', query_json: '{"did": "TcJ1RMKLi54urRp6eug7xs"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": true}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140573273220672), c_char_p(140572626334856), c_char_p(140572626305104), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s3`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: SELECT name, value from tags_plaintext where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: SELECT name, value from tags_encrypted where item_id = $1 and wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s3 with parameters: [[77, 85, 81, 56, 56, 50, 111, 87, 117, 47, 43, 110, 108, 54, 77, 79, 67, 109, 79, 115, 111, 120, 56, 72, 81, 120, 72, 101, 87, 76, 105, 66, 43, 82, 83, 87, 99, 99, 71, 90, 69, 77, 77, 69, 120, 43, 107, 61], [33, 18, 52, 163, 210, 24, 37, 66, 106, 67, 212, 175, 233, 149, 190, 158, 181, 229, 125, 4, 126, 116, 61, 127, 247, 85, 218, 130, 29, 17, 97], [241, 197, 203, 236, 83, 196, 93, 99, 48, 167, 5, 146, 45, 108, 86, 79, 62, 67, 190, 97, 98, 47, 136, 114, 80, 22, 183, 47, 169, 64, 76, 63, 228, 40, 228, 54, 227, 212, 195, 62, 73, 201, 223, 156, 127, 200, 253, 151, 60, 187], "Medic", "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [14, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [14, "Medic"]
_indy_callback: >>> command_handle: 201, err , args: (46,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 201, err , args: (46,)
_indy_loop_callback: Function returned 46
_indy_loop_callback <<<
open_wallet_search: <<< res: 46
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 46, count: 2
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(46), c_uint(2), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 202, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"bb28cb56b73449f997684d7815f671e2","value":"{\\"@context\\": \\"https://w3id.org/did/v1\\", \\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs\\", \\"publicKey\\": [{\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs#1\\", \\"type\\": \\"Ed25519VerificationKey2018\\", \\"controller\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs\\", \\"publicKeyBase58\\": \\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"}], \\"authentication\\": [{\\"type\\": \\"Ed25519SignatureAuthentication2018\\", \\"publicKey\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs#1\\"}], \\"service\\": [{\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs;indy\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"], \\"serviceEndpoint\\": \\"http://343d0cf69e12.ngrok.io\\"}, {\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs;indy1\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"], \\"serviceEndpoint\\": \\"ws://343d0cf69e12.ngrok.io\\"}]}","tags":{"did":"TcJ1RMKLi54urRp6eug7xs"}}]}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 202, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"bb28cb56b73449f997684d7815f671e2","value":"{\\"@context\\": \\"https://w3id.org/did/v1\\", \\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs\\", \\"publicKey\\": [{\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs#1\\", \\"type\\": \\"Ed25519VerificationKey2018\\", \\"controller\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs\\", \\"publicKeyBase58\\": \\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"}], \\"authentication\\": [{\\"type\\": \\"Ed25519SignatureAuthentication2018\\", \\"publicKey\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs#1\\"}], \\"service\\": [{\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs;indy\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"], \\"serviceEndpoint\\": \\"http://343d0cf69e12.ngrok.io\\"}, {\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs;indy1\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"], \\"serviceEndpoint\\": \\"ws://343d0cf69e12.ngrok.io\\"}]}","tags":{"did":"TcJ1RMKLi54urRp6eug7xs"}}]}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":[{"type":null,"id":"bb28cb56b73449f997684d7815f671e2","value":"{\\"@context\\": \\"https://w3id.org/did/v1\\", \\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs\\", \\"publicKey\\": [{\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs#1\\", \\"type\\": \\"Ed25519VerificationKey2018\\", \\"controller\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs\\", \\"publicKeyBase58\\": \\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"}], \\"authentication\\": [{\\"type\\": \\"Ed25519SignatureAuthentication2018\\", \\"publicKey\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs#1\\"}], \\"service\\": [{\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs;indy\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"], \\"serviceEndpoint\\": \\"http://343d0cf69e12.ngrok.io\\"}, {\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs;indy1\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"], \\"serviceEndpoint\\": \\"ws://343d0cf69e12.ngrok.io\\"}]}","tags":{"did":"TcJ1RMKLi54urRp6eug7xs"}}]}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":[{"type":null,"id":"bb28cb56b73449f997684d7815f671e2","value":"{\\"@context\\": \\"https://w3id.org/did/v1\\", \\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs\\", \\"publicKey\\": [{\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs#1\\", \\"type\\": \\"Ed25519VerificationKey2018\\", \\"controller\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs\\", \\"publicKeyBase58\\": \\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"}], \\"authentication\\": [{\\"type\\": \\"Ed25519SignatureAuthentication2018\\", \\"publicKey\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs#1\\"}], \\"service\\": [{\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs;indy\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"], \\"serviceEndpoint\\": \\"http://343d0cf69e12.ngrok.io\\"}, {\\"id\\": \\"did:sov:TcJ1RMKLi54urRp6eug7xs;indy1\\", \\"type\\": \\"IndyAgent\\", \\"priority\\": 0, \\"recipientKeys\\": [\\"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno\\"], \\"serviceEndpoint\\": \\"ws://343d0cf69e12.ngrok.io\\"}]}","tags":{"did":"TcJ1RMKLi54urRp6eug7xs"}}]}'
close_wallet_search: >>> wallet_search_handle: 46
do_call: >>> name: indy_close_wallet_search, args: (c_int(46), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 203, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 203, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
  {"msg_id": "22e47779-f33d-433d-bdce-6cb67b8839b6", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation", "timestamp": 1621255649.423176, "str_time": "2021-05-17 12:47:29.423176", "handler": "Medic", "ellapsed_milli": 418, "outcome": "presentation_exchange_send_request.END"}
  {"msg_id": "22e47779-f33d-433d-bdce-6cb67b8839b6", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation", "timestamp": 1621255649.4247372, "str_time": "2021-05-17 12:47:29.424737", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.ENCODE.START"}
  {"msg_id": "22e47779-f33d-433d-bdce-6cb67b8839b6", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation", "timestamp": 1621255649.425727, "str_time": "2021-05-17 12:47:29.425727", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.ENCODE.END"}
192.168.208.6 [17/May/2021:12:47:28 +0000] "POST /present-proof/records/6be4dc23-2532-4d2d-9def-6cf78a9bfe09/send-presentation HTTP/1.1" 200 7000 "-" "Python/3.7 aiohttp/3.7.4.post0"
pack_message: >>> wallet_handle: 3, message: '{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation", "@id": "22e47779-f33d-433d-bdce-6cb67b8839b6", "~thread": {"thid": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315"}, "~trace": {"target": "log", "full_thread": true, "trace_reports": []}, "presentations~attach": [{"@id": "libindy-presentation-0", "mime-type": "application/json", "data": {"base64": "eyJwcm9vZiI6IHsicHJvb2ZzIjogW3sicHJpbWFyeV9wcm9vZiI6IHsiZXFfcHJvb2YiOiB7InJldmVhbGVkX2F0dHJzIjogeyJkYXRlaXNzdWVkIjogIjMxOTI4NzA5MTYzNjAwNzM1NDQxMTAxNDc2NjU4ODE0MjE2ODg1Mzg4MjUyMTg5ODM4MDU4OTczMDcwNzkyMDIyODAxNTkxMzM2NTc5IiwgIm5hbWUiOiAiNjUwMDU1NDg5MDUwMzc3NjQ3NjQ1MDIzNTAwNTM4MjU3Njk5MTQ4NzQwODI2NDg3NjEyMzA0NTg2NzA3OTYyNDEzOTI4OTE2NTk2MTEiLCAidW5pdmVyc2l0eSI6ICI1Nzk2MzEyNTY0ODk5NDY2NjMwMDg3NTM2MTYyMTcyOTMxMzM1MTE1ODE1NDc0MDEzODE3MzEwMzQxNTAyMDMzNDU5NDA0MzY5NDMxNyJ9LCAiYV9wcmltZSI6ICI4NzQ5NzQ3NzE2NDA4NTI4MTcxMzUxNTMzNjI5NzUxNTk0MzQyOTAxOTU0NjQ3NDMxMzI2Mjc3MDMzNTQyMTc2NTEzMzg2Mzg0NTY0MDc1MTA2ODg4MjQ3OTgyMTIxMDEwODgzMzE3NjM2MTQyMjI2MTA2MzM0MDc5MzA2ODkwNTg0OTM2Mzg1NTExODM4NzIxMTkyODIzOTY2MTc0MTQ2NzA4Njg2ODI0NTg1NjYwNTE3OTg4NjYwMjgwNzE1NTE1OTkyMjA2Njk3MDU2NTg3OTgzMTY4OTcyMjc2NjE4MDU5NTM2MDI3MDgwNzgxNzU3NjU1ODcxNTY1MTQyMjgxMjYyMjExMjc3MjU3NTM2NjQwMDY5NDQ1MTk2MTAwMzQyMDgyMTAzNTQxMDQxMTc1NDkzODAwMjYyMjE2MTkxMjU0NDUzMTQ4ODc5ODAxOTM0NDMyMDM4ODg2MzI0NTY5MjI1NjY0OTA4MzIyMTY5MjcxNjc5MDU0NDU2ODg5MTA4NTc0Mzc4MjE2NjQ0NDM5MTcxOTExMzY5MzI4Mzg5NTQ1MDc5Nzc3MTI4NTQ3OTA1MDcwMDU2ODY4OTAwNDI5MzQ3MzQwMDUxMjg5MjMyNTU4ODU0OTY5Mjc4ODg2NTgzODA2MjgxNTY0OTU2OTkzMTk1MjcwMjM0MTgyNDc4MDk3MjcwODgwODc5MjM4NzUzMjAzMTE1NDc3MDQwNTI2ODMzOTk2MjkxMTg4OTYxNTg5MzMxOTg1NDEwMTIyMjAzMzU4OTY5NzAxNDUwMDIzNDE3NTk4NDU0MjAwMzk4MTAyMTgxMjc3MyIsICJlIjogIjE1NDA0ODgxNDc3NDgwOTIwMzk1ODI0OTI2NTUzMDA5NTAyNzE1MzI1NDg1ODEyNTY4MzAwMTAyNzkwMzk5NTU3MDUyOTY5Nzg5ODg3NTIyMjg4MTg3MjY5NzUwMjg1NDQyODY3NDE4MjEyMTI1MzEwMDY0MzYxMjcxMzU2MDg0MTIzNTYxODMyMCIsICJ2IjogIjEwNzUwNTY3MDc0ODE3NTc2ODUzMDI4MjAzODA1NDk3MTcyMjk2ODIwNTQ2OTcyMzAxNzc3NzExMDgzODk0OTQwNjQzNTIzNTYzNjA0MDIyOTY5MDU3NTA1NjcwNDA2ODQ4MzM5NjQ2NzI3OTAwNjczNjM1OTM0MDQ3NzY1NTQ4NjI4ODM4NTI3MTYwNjY0MzMyNDU2NDYwMDQ5NzY1NjgxMjM5MDY5OTYyNDA0ODQ2NDAwMTc0MzY4NDQwNDI1Mjg5MDY0OTI0MDcxMzE2Mzc4MTQ5MDY3NzUyMjM2MzU1MjI4MDUzMzA1NDA4MjE4NjA3ODk1NzAxNDczMzUzODU5MjYyODE4ODkzNDMwNzU4Mzc0MTk2MjE5MzY3MjUzNzQ1MTI5MTE0NDI1ODkzNzUwMDUyMDcxMjczMDI2NjA1MjEzNzc4MTE5MTEyNjM5NjMxNzAwODIxNTIyMTE2NTQ4NjM4NjU5NzMwNzQ1NTExNzM0Njg5NzEzMDIwNjQwMzc0MTQ5OTEyMDg2NjMzMTk2NTcxMzIzNzA1ODg3MzI0NDAzODQxNjgzMzY5ODYxNjM3OTg5NjM3NjEwNjE0OTQ0Njk1MzY4MTA2NzEyOTYwNjc3NDAzOTE0NjQ1NjU4MTg1MjE4MzIzOTg0NTA1NjUzOTQxODYwNjUzNjMwMzQzODIwNjE3MTk1Nzc2OTgzNjMxNjQyMjc4NTE3MjY2MTgzMDE5MDY5ODUwMDMzNzczNTUwNDE0NjA0MjAyNjY1OTEyMjg4ODc3Mjk3OTIxNzk1NzcxNDg2OTA5Mjk4ODk5NjI2NzM0NjkxNjQzOTYzMDkxMzM5MDIyMzY5OTM5MDc1ODA4MDYxNzI3NjgzNzIzNzA4OTc2NTUzOTc1MDI4OTQ1MjQ5NDE0MzY4OTY1MDQ0ODE4MTAwOTA5ODk3MjcxNjI2NDgxMDA4MzM2OTgzMjQ5MzgwNDMxMjc4MDk1OTM2MDIwNjA5MTUyMzI4NzA1MTM1MjQwODI3MTQwMDQ3ODI1MDUxOTQ4MDIwNTg5NDY3NzA5MjQ1NTI1OTEwMjE4NjY2MDM4MDMxMjU0ODYzNTU4MjI0NjcyNzcxMTExMTA1NjcwMDIxNDQ1NTA5NjU0NTUzMjUxOTc3MzY0MjQ2NTQ5MTcwODQyMDM1NDA4NDgyNDk4NjY3Mjc4MzYyMTk0NzEzODcwNjU5MDM1MjQ3NTMxODMwOTI1NDQiLCAibSI6IHsibWFzdGVyX3NlY3JldCI6ICIyNzkzNjk3NDk0MTg1NDQwMjY0NTI1MDYwODYwMjMxMjQ1MjM5MzAyMDI2MjM0NzMxOTMyNjI4MDI5NDY4MTA5NDA4NDM1NTY5MDU0MjA2NzI5OTM0Mzc3ODE3MTQ2NDk3MDk2NjcxNTE5MjA0OTM4Mjc2MzUzMzc5Njg1NjM3MTQ5OTYwNzMxNjMzODY5ODI3ODE5MjI2MjQ2MTM3NTExMzM4MjA5NDQ0NzQwOTA0NzkwIn0sICJtMiI6ICI5ODAyMzE4NTQwNjA1Njk4MTc1NzkwOTEwODI0NDYxMDQ1MjA0MDI2OTkxMTY5MzExNDM4NzkzMDI5NTQ0OTUwMDUxODg2NDc1NjI3NTAxNTMyNzYzOTExODI1NzUzMDMwNTA2MjE1MDUyMzU2NzA2NzEzMzM0Mjc0NjQwODQxMjYyOTYzODQ5NDgxNDYxMjgxNTYxMjY1ODE5MTQzNTUzNjQ3Njk5NzU1Nzc2NTEyMyJ9LCAiZ2VfcHJvb2ZzIjogW119LCAibm9uX3Jldm9jX3Byb29mIjogbnVsbH1dLCAiYWdncmVnYXRlZF9wcm9vZiI6IHsiY19oYXNoIjogIjUxMTI4Nzc4Mjk4NzA2ODE2NTgxMDEwNTQ4NzE2MjM3MzIwOTg1NjkzMDE2Njg5OTQ3MTk3NDUwNjYzNDgzMjUxODMyNjk1MTYwOTQ5IiwgImNfbGlzdCI6IFtbMiwgMTgxLCAyOSwgMTYsIDc1LCAxODMsIDEzNSwgMTg5LCAxNDEsIDEyOCwgODIsIDEyOSwgMTc2LCA1MiwgMjA5LCAxNjQsIDIyOCwgMTUxLCA5NCwgMTM0LCAxMDcsIDIzOCwgMjgsIDE4MiwgMzAsIDY5LCAzLCA5NywgMTMwLCA5NiwgMTI3LCA5NCwgNzUsIDE2MiwgMTczLCAyNDYsIDY4LCAxMDMsIDIxMCwgNzMsIDExMiwgMTIzLCAyMzYsIDkxLCAxMjgsIDI0OSwgMjM0LCA0NSwgMTA3LCAxMzEsIDIyMiwgMTQ0LCA5OCwgMjIzLCAyMTEsIDE5NCwgMjIwLCAxOSwgMjI0LCAyMDYsIDExNiwgMTcxLCAxMjQsIDI0OSwgMTg0LCAxMzgsIDExMSwgNzksIDI2LCAxODAsIDMsIDEwNCwgMTE4LCAxODEsIDE2NCwgMTIsIDI1MCwgMjMsIDY5LCAxODIsIDk5LCA5MiwgMTIwLCAxNTAsIDYsIDIxMCwgMjQyLCAxMjYsIDk5LCAzMCwgNTIsIDExNywgMTE5LCAxNjQsIDc2LCAxMjIsIDEyLCAxMjUsIDEzNiwgMiwgMjI1LCAyMTUsIDUyLCAyMTksIDEzNiwgMTE1LCAxNzMsIDE0MSwgMTE0LCA2LCA5NCwgMjI2LCAyMTMsIDgwLCAxOTQsIDE3MSwgNzgsIDEwLCAxODIsIDE2NiwgMTY0LCAxOTAsIDIxMiwgNTUsIDE0OCwgMTg0LCA4NCwgNTgsIDE4NSwgMTI3LCA5NCwgMjA2LCA0NCwgMTUwLCA1NiwgMjksIDU5LCAxNDMsIDE5MCwgMjI2LCA0MSwgNzYsIDIyLCA2NiwgMjMwLCAxOSwgMTIxLCAxOSwgMjIyLCAxMzUsIDE1MCwgNywgNjUsIDEwMCwgMjM2LCAyMTksIDIwOCwgMTgzLCAxNDQsIDk1LCAyMTQsIDE5MywgNDYsIDE5MCwgODMsIDIxMywgMjI1LCAxMTgsIDE2MywgMTgxLCA3OSwgODYsIDU3LCAxODcsIDIzMywgMjEzLCA5MCwgMTIzLCAyMDEsIDQzLCAxMjksIDc3LCAxNiwgNzAsIDE5OSwgMjE3LCAxNDYsIDEwOCwgNjYsIDI0NiwgMTgyLCAxOTcsIDEwOSwgMTgxLCAxNCwgMTMyLCAxMDMsIDEzLCAxMzYsIDQ3LCAxMCwgMjE0LCA2MSwgMTM2LCAyNTQsIDYsIDYwLCA1NiwgMTA2LCAxMDIsIDM3LCAxNjMsIDc4LCA5OCwgMTIwLCAxNTEsIDEyNiwgMjU1LCAxMjksIDE4NSwgMTA2LCAxNTYsIDE4MiwgMTg2LCA4NCwgNDUsIDEsIDc0LCA1MiwgMTE4LCAxNjUsIDE1MywgMTUsIDE3MSwgMjQsIDMxLCAxMiwgMTM0LCA2NCwgOTgsIDYsIDIwNiwgMTU1LCAyOSwgNzIsIDE5NSwgMTg1LCAxMjAsIDcyLCA0NiwgMTcsIDY2LCAxOCwgMzcsIDEwMywgMjQsIDM3XV19fSwgInJlcXVlc3RlZF9wcm9vZiI6IHsicmV2ZWFsZWRfYXR0cnMiOiB7IjBfVW5pdmVyc2l0eV91dWlkIjogeyJzdWJfcHJvb2ZfaW5kZXgiOiAwLCAicmF3IjogIkVkaW5idXJnaCBNZWRpY2FsIFNjaG9vbCIsICJlbmNvZGVkIjogIjU3OTYzMTI1NjQ4OTk0NjY2MzAwODc1MzYxNjIxNzI5MzEzMzUxMTU4MTU0NzQwMTM4MTczMTAzNDE1MDIwMzM0NTk0MDQzNjk0MzE3In0sICIwX05hbWVfdXVpZCI6IHsic3ViX3Byb29mX2luZGV4IjogMCwgInJhdyI6ICJXaWxsIEFicmFtc29uIiwgImVuY29kZWQiOiAiNjUwMDU1NDg5MDUwMzc3NjQ3NjQ1MDIzNTAwNTM4MjU3Njk5MTQ4NzQwODI2NDg3NjEyMzA0NTg2NzA3OTYyNDEzOTI4OTE2NTk2MTEifSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsic3ViX3Byb29mX2luZGV4IjogMCwgInJhdyI6ICIyMDIxLTA1LTE3IiwgImVuY29kZWQiOiAiMzE5Mjg3MDkxNjM2MDA3MzU0NDExMDE0NzY2NTg4MTQyMTY4ODUzODgyNTIxODk4MzgwNTg5NzMwNzA3OTIwMjI4MDE1OTEzMzY1NzkifX0sICJzZWxmX2F0dGVzdGVkX2F0dHJzIjoge30sICJ1bnJldmVhbGVkX2F0dHJzIjoge30sICJwcmVkaWNhdGVzIjoge319LCAiaWRlbnRpZmllcnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgInJldl9yZWdfaWQiOiBudWxsLCAidGltZXN0YW1wIjogbnVsbH1dfQ=="}}]}', recipient_verkeys: ['FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno'], sender_verkey: 'AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj'
do_call: >>> name: indy_pack_message, args: (c_int(3), b'{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation", "@id": "22e47779-f33d-433d-bdce-6cb67b8839b6", "~thread": {"thid": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315"}, "~trace": {"target": "log", "full_thread": true, "trace_reports": []}, "presentations~attach": [{"@id": "libindy-presentation-0", "mime-type": "application/json", "data": {"base64": "eyJwcm9vZiI6IHsicHJvb2ZzIjogW3sicHJpbWFyeV9wcm9vZiI6IHsiZXFfcHJvb2YiOiB7InJldmVhbGVkX2F0dHJzIjogeyJkYXRlaXNzdWVkIjogIjMxOTI4NzA5MTYzNjAwNzM1NDQxMTAxNDc2NjU4ODE0MjE2ODg1Mzg4MjUyMTg5ODM4MDU4OTczMDcwNzkyMDIyODAxNTkxMzM2NTc5IiwgIm5hbWUiOiAiNjUwMDU1NDg5MDUwMzc3NjQ3NjQ1MDIzNTAwNTM4MjU3Njk5MTQ4NzQwODI2NDg3NjEyMzA0NTg2NzA3OTYyNDEzOTI4OTE2NTk2MTEiLCAidW5pdmVyc2l0eSI6ICI1Nzk2MzEyNTY0ODk5NDY2NjMwMDg3NTM2MTYyMTcyOTMxMzM1MTE1ODE1NDc0MDEzODE3MzEwMzQxNTAyMDMzNDU5NDA0MzY5NDMxNyJ9LCAiYV9wcmltZSI6ICI4NzQ5NzQ3NzE2NDA4NTI4MTcxMzUxNTMzNjI5NzUxNTk0MzQyOTAxOTU0NjQ3NDMxMzI2Mjc3MDMzNTQyMTc2NTEzMzg2Mzg0NTY0MDc1MTA2ODg4MjQ3OTgyMTIxMDEwODgzMzE3NjM2MTQyMjI2MTA2MzM0MDc5MzA2ODkwNTg0OTM2Mzg1NTExODM4NzIxMTkyODIzOTY2MTc0MTQ2NzA4Njg2ODI0NTg1NjYwNTE3OTg4NjYwMjgwNzE1NTE1OTkyMjA2Njk3MDU2NTg3OTgzMTY4OTcyMjc2NjE4MDU5NTM2MDI3MDgwNzgxNzU3NjU1ODcxNTY1MTQyMjgxMjYyMjExMjc3MjU3NTM2NjQwMDY5NDQ1MTk2MTAwMzQyMDgyMTAzNTQxMDQxMTc1NDkzODAwMjYyMjE2MTkxMjU0NDUzMTQ4ODc5ODAxOTM0NDMyMDM4ODg2MzI0NTY5MjI1NjY0OTA4MzIyMTY5MjcxNjc5MDU0NDU2ODg5MTA4NTc0Mzc4MjE2NjQ0NDM5MTcxOTExMzY5MzI4Mzg5NTQ1MDc5Nzc3MTI4NTQ3OTA1MDcwMDU2ODY4OTAwNDI5MzQ3MzQwMDUxMjg5MjMyNTU4ODU0OTY5Mjc4ODg2NTgzODA2MjgxNTY0OTU2OTkzMTk1MjcwMjM0MTgyNDc4MDk3MjcwODgwODc5MjM4NzUzMjAzMTE1NDc3MDQwNTI2ODMzOTk2MjkxMTg4OTYxNTg5MzMxOTg1NDEwMTIyMjAzMzU4OTY5NzAxNDUwMDIzNDE3NTk4NDU0MjAwMzk4MTAyMTgxMjc3MyIsICJlIjogIjE1NDA0ODgxNDc3NDgwOTIwMzk1ODI0OTI2NTUzMDA5NTAyNzE1MzI1NDg1ODEyNTY4MzAwMTAyNzkwMzk5NTU3MDUyOTY5Nzg5ODg3NTIyMjg4MTg3MjY5NzUwMjg1NDQyODY3NDE4MjEyMTI1MzEwMDY0MzYxMjcxMzU2MDg0MTIzNTYxODMyMCIsICJ2IjogIjEwNzUwNTY3MDc0ODE3NTc2ODUzMDI4MjAzODA1NDk3MTcyMjk2ODIwNTQ2OTcyMzAxNzc3NzExMDgzODk0OTQwNjQzNTIzNTYzNjA0MDIyOTY5MDU3NTA1NjcwNDA2ODQ4MzM5NjQ2NzI3OTAwNjczNjM1OTM0MDQ3NzY1NTQ4NjI4ODM4NTI3MTYwNjY0MzMyNDU2NDYwMDQ5NzY1NjgxMjM5MDY5OTYyNDA0ODQ2NDAwMTc0MzY4NDQwNDI1Mjg5MDY0OTI0MDcxMzE2Mzc4MTQ5MDY3NzUyMjM2MzU1MjI4MDUzMzA1NDA4MjE4NjA3ODk1NzAxNDczMzUzODU5MjYyODE4ODkzNDMwNzU4Mzc0MTk2MjE5MzY3MjUzNzQ1MTI5MTE0NDI1ODkzNzUwMDUyMDcxMjczMDI2NjA1MjEzNzc4MTE5MTEyNjM5NjMxNzAwODIxNTIyMTE2NTQ4NjM4NjU5NzMwNzQ1NTExNzM0Njg5NzEzMDIwNjQwMzc0MTQ5OTEyMDg2NjMzMTk2NTcxMzIzNzA1ODg3MzI0NDAzODQxNjgzMzY5ODYxNjM3OTg5NjM3NjEwNjE0OTQ0Njk1MzY4MTA2NzEyOTYwNjc3NDAzOTE0NjQ1NjU4MTg1MjE4MzIzOTg0NTA1NjUzOTQxODYwNjUzNjMwMzQzODIwNjE3MTk1Nzc2OTgzNjMxNjQyMjc4NTE3MjY2MTgzMDE5MDY5ODUwMDMzNzczNTUwNDE0NjA0MjAyNjY1OTEyMjg4ODc3Mjk3OTIxNzk1NzcxNDg2OTA5Mjk4ODk5NjI2NzM0NjkxNjQzOTYzMDkxMzM5MDIyMzY5OTM5MDc1ODA4MDYxNzI3NjgzNzIzNzA4OTc2NTUzOTc1MDI4OTQ1MjQ5NDE0MzY4OTY1MDQ0ODE4MTAwOTA5ODk3MjcxNjI2NDgxMDA4MzM2OTgzMjQ5MzgwNDMxMjc4MDk1OTM2MDIwNjA5MTUyMzI4NzA1MTM1MjQwODI3MTQwMDQ3ODI1MDUxOTQ4MDIwNTg5NDY3NzA5MjQ1NTI1OTEwMjE4NjY2MDM4MDMxMjU0ODYzNTU4MjI0NjcyNzcxMTExMTA1NjcwMDIxNDQ1NTA5NjU0NTUzMjUxOTc3MzY0MjQ2NTQ5MTcwODQyMDM1NDA4NDgyNDk4NjY3Mjc4MzYyMTk0NzEzODcwNjU5MDM1MjQ3NTMxODMwOTI1NDQiLCAibSI6IHsibWFzdGVyX3NlY3JldCI6ICIyNzkzNjk3NDk0MTg1NDQwMjY0NTI1MDYwODYwMjMxMjQ1MjM5MzAyMDI2MjM0NzMxOTMyNjI4MDI5NDY4MTA5NDA4NDM1NTY5MDU0MjA2NzI5OTM0Mzc3ODE3MTQ2NDk3MDk2NjcxNTE5MjA0OTM4Mjc2MzUzMzc5Njg1NjM3MTQ5OTYwNzMxNjMzODY5ODI3ODE5MjI2MjQ2MTM3NTExMzM4MjA5NDQ0NzQwOTA0NzkwIn0sICJtMiI6ICI5ODAyMzE4NTQwNjA1Njk4MTc1NzkwOTEwODI0NDYxMDQ1MjA0MDI2OTkxMTY5MzExNDM4NzkzMDI5NTQ0OTUwMDUxODg2NDc1NjI3NTAxNTMyNzYzOTExODI1NzUzMDMwNTA2MjE1MDUyMzU2NzA2NzEzMzM0Mjc0NjQwODQxMjYyOTYzODQ5NDgxNDYxMjgxNTYxMjY1ODE5MTQzNTUzNjQ3Njk5NzU1Nzc2NTEyMyJ9LCAiZ2VfcHJvb2ZzIjogW119LCAibm9uX3Jldm9jX3Byb29mIjogbnVsbH1dLCAiYWdncmVnYXRlZF9wcm9vZiI6IHsiY19oYXNoIjogIjUxMTI4Nzc4Mjk4NzA2ODE2NTgxMDEwNTQ4NzE2MjM3MzIwOTg1NjkzMDE2Njg5OTQ3MTk3NDUwNjYzNDgzMjUxODMyNjk1MTYwOTQ5IiwgImNfbGlzdCI6IFtbMiwgMTgxLCAyOSwgMTYsIDc1LCAxODMsIDEzNSwgMTg5LCAxNDEsIDEyOCwgODIsIDEyOSwgMTc2LCA1MiwgMjA5LCAxNjQsIDIyOCwgMTUxLCA5NCwgMTM0LCAxMDcsIDIzOCwgMjgsIDE4MiwgMzAsIDY5LCAzLCA5NywgMTMwLCA5NiwgMTI3LCA5NCwgNzUsIDE2MiwgMTczLCAyNDYsIDY4LCAxMDMsIDIxMCwgNzMsIDExMiwgMTIzLCAyMzYsIDkxLCAxMjgsIDI0OSwgMjM0LCA0NSwgMTA3LCAxMzEsIDIyMiwgMTQ0LCA5OCwgMjIzLCAyMTEsIDE5NCwgMjIwLCAxOSwgMjI0LCAyMDYsIDExNiwgMTcxLCAxMjQsIDI0OSwgMTg0LCAxMzgsIDExMSwgNzksIDI2LCAxODAsIDMsIDEwNCwgMTE4LCAxODEsIDE2NCwgMTIsIDI1MCwgMjMsIDY5LCAxODIsIDk5LCA5MiwgMTIwLCAxNTAsIDYsIDIxMCwgMjQyLCAxMjYsIDk5LCAzMCwgNTIsIDExNywgMTE5LCAxNjQsIDc2LCAxMjIsIDEyLCAxMjUsIDEzNiwgMiwgMjI1LCAyMTUsIDUyLCAyMTksIDEzNiwgMTE1LCAxNzMsIDE0MSwgMTE0LCA2LCA5NCwgMjI2LCAyMTMsIDgwLCAxOTQsIDE3MSwgNzgsIDEwLCAxODIsIDE2NiwgMTY0LCAxOTAsIDIxMiwgNTUsIDE0OCwgMTg0LCA4NCwgNTgsIDE4NSwgMTI3LCA5NCwgMjA2LCA0NCwgMTUwLCA1NiwgMjksIDU5LCAxNDMsIDE5MCwgMjI2LCA0MSwgNzYsIDIyLCA2NiwgMjMwLCAxOSwgMTIxLCAxOSwgMjIyLCAxMzUsIDE1MCwgNywgNjUsIDEwMCwgMjM2LCAyMTksIDIwOCwgMTgzLCAxNDQsIDk1LCAyMTQsIDE5MywgNDYsIDE5MCwgODMsIDIxMywgMjI1LCAxMTgsIDE2MywgMTgxLCA3OSwgODYsIDU3LCAxODcsIDIzMywgMjEzLCA5MCwgMTIzLCAyMDEsIDQzLCAxMjksIDc3LCAxNiwgNzAsIDE5OSwgMjE3LCAxNDYsIDEwOCwgNjYsIDI0NiwgMTgyLCAxOTcsIDEwOSwgMTgxLCAxNCwgMTMyLCAxMDMsIDEzLCAxMzYsIDQ3LCAxMCwgMjE0LCA2MSwgMTM2LCAyNTQsIDYsIDYwLCA1NiwgMTA2LCAxMDIsIDM3LCAxNjMsIDc4LCA5OCwgMTIwLCAxNTEsIDEyNiwgMjU1LCAxMjksIDE4NSwgMTA2LCAxNTYsIDE4MiwgMTg2LCA4NCwgNDUsIDEsIDc0LCA1MiwgMTE4LCAxNjUsIDE1MywgMTUsIDE3MSwgMjQsIDMxLCAxMiwgMTM0LCA2NCwgOTgsIDYsIDIwNiwgMTU1LCAyOSwgNzIsIDE5NSwgMTg1LCAxMjAsIDcyLCA0NiwgMTcsIDY2LCAxOCwgMzcsIDEwMywgMjQsIDM3XV19fSwgInJlcXVlc3RlZF9wcm9vZiI6IHsicmV2ZWFsZWRfYXR0cnMiOiB7IjBfVW5pdmVyc2l0eV91dWlkIjogeyJzdWJfcHJvb2ZfaW5kZXgiOiAwLCAicmF3IjogIkVkaW5idXJnaCBNZWRpY2FsIFNjaG9vbCIsICJlbmNvZGVkIjogIjU3OTYzMTI1NjQ4OTk0NjY2MzAwODc1MzYxNjIxNzI5MzEzMzUxMTU4MTU0NzQwMTM4MTczMTAzNDE1MDIwMzM0NTk0MDQzNjk0MzE3In0sICIwX05hbWVfdXVpZCI6IHsic3ViX3Byb29mX2luZGV4IjogMCwgInJhdyI6ICJXaWxsIEFicmFtc29uIiwgImVuY29kZWQiOiAiNjUwMDU1NDg5MDUwMzc3NjQ3NjQ1MDIzNTAwNTM4MjU3Njk5MTQ4NzQwODI2NDg3NjEyMzA0NTg2NzA3OTYyNDEzOTI4OTE2NTk2MTEifSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsic3ViX3Byb29mX2luZGV4IjogMCwgInJhdyI6ICIyMDIxLTA1LTE3IiwgImVuY29kZWQiOiAiMzE5Mjg3MDkxNjM2MDA3MzU0NDExMDE0NzY2NTg4MTQyMTY4ODUzODgyNTIxODk4MzgwNTg5NzMwNzA3OTIwMjI4MDE1OTEzMzY1NzkifX0sICJzZWxmX2F0dGVzdGVkX2F0dHJzIjoge30sICJ1bnJldmVhbGVkX2F0dHJzIjoge30sICJwcmVkaWNhdGVzIjoge319LCAiaWRlbnRpZmllcnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIiwgImNyZWRfZGVmX2lkIjogIjNqblhRY2o5VkxGamNVYnREVlpaelY6MzpDTDoxMDpkZWZhdWx0IiwgInJldl9yZWdfaWQiOiBudWxsLCAidGltZXN0YW1wIjogbnVsbH1dfQ=="}}]}', c_uint(6496), c_char_p(140572651916640), c_char_p(140572651814496), <CFunctionType object at 0x7fd99efcfc00>)
do_call: Function indy_pack_message returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [86, 77, 116, 105, 49, 56, 101, 52, 99, 75, 104, 56, 74, 104, 78, 51, 97, 57, 110, 74, 88, 48, 56, 54, 108, 106, 116, 120, 121, 116, 117, 97, 107, 79, 50, 107, 104, 52, 109, 52, 80, 73, 88, 110, 53, 100, 71, 69, 109, 71, 107, 99, 56, 100, 74, 121, 120, 55, 116, 89, 97, 121, 81, 114, 102, 109, 53, 85, 69, 52, 56, 119, 119, 48, 108, 78, 86, 84, 68, 121, 81, 117, 88, 65, 107, 86, 100, 90, 72, 106, 51, 120, 104, 112, 105, 122], "Medic"]
_indy_callback: >>> command_handle: 204, err , args: (b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJrc2hyNzZRYWxvLUJqdnpsS2IzRWJPbWtCRDNiZHJUVGhPWXctRG5QUW1RU1BQeXE1WGJqWmZtT1ZCMVh6R1VoIiwiaGVhZGVyIjp7ImtpZCI6IkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIiwiaXYiOiJhU2RFbDNZV0ZaMHVZeWo5anNnWm5BUEVlUGdRM0M4YyIsInNlbmRlciI6ImRqTWJLRVpIeEhvSHNFcFFNZDFmYVBmNUltZ3ZxYUdjREtaOWNXNXZsMzktd1RQOFhxRGV4NlM2M2YzTEQ4M0Y5ZGFKVnpiRkk1TXZ6SDh4by1WQVVYa0tDb2RhdTRxMVFYWEV0d2I0a0ZfZWVEM3RBUWJjV3NjRkJOND0ifX1dfQ==","iv":"bFNR19E7ZRwLcif-","ciphertext":"","tag":"d36GJJ1AU-rKQV4HD39NVw=="}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 204, err , args: (b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJrc2hyNzZRYWxvLUJqdnpsS2IzRWJPbWtCRDNiZHJUVGhPWXctRG5QUW1RU1BQeXE1WGJqWmZtT1ZCMVh6R1VoIiwiaGVhZGVyIjp7ImtpZCI6IkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIiwiaXYiOiJhU2RFbDNZV0ZaMHVZeWo5anNnWm5BUEVlUGdRM0M4YyIsInNlbmRlciI6ImRqTWJLRVpIeEhvSHNFcFFNZDFmYVBmNUltZ3ZxYUdjREtaOWNXNXZsMzktd1RQOFhxRGV4NlM2M2YzTEQ4M0Y5ZGFKVnpiRkk1TXZ6SDh4by1WQVVYa0tDb2RhdTRxMVFYWEV0d2I0a0ZfZWVEM3RBUWJjV3NjRkJOND0ifX1dfQ==","iv":"bFNR19E7ZRwLcif-","ciphertext":"","tag":"d36GJJ1AU-rKQV4HD39NVw=="}',)
_indy_loop_callback: Function returned b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJrc2hyNzZRYWxvLUJqdnpsS2IzRWJPbWtCRDNiZHJUVGhPWXctRG5QUW1RU1BQeXE1WGJqWmZtT1ZCMVh6R1VoIiwiaGVhZGVyIjp7ImtpZCI6IkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIiwiaXYiOiJhU2RFbDNZV0ZaMHVZeWo5anNnWm5BUEVlUGdRM0M4YyIsInNlbmRlciI6ImRqTWJLRVpIeEhvSHNFcFFNZDFmYVBmNUltZ3ZxYUdjREtaOWNXNXZsMzktd1RQOFhxRGV4NlM2M2YzTEQ4M0Y5ZGFKVnpiRkk1TXZ6SDh4by1WQVVYa0tDb2RhdTRxMVFYWEV0d2I0a0ZfZWVEM3RBUWJjV3NjRkJOND0ifX1dfQ==","iv":"bFNR19E7ZRwLcif-","ciphertext":"","tag":"d36GJJ1AU-rKQV4HD39NVw=="}'
_indy_loop_callback <<<
pack_message: <<< res: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJrc2hyNzZRYWxvLUJqdnpsS2IzRWJPbWtCRDNiZHJUVGhPWXctRG5QUW1RU1BQeXE1WGJqWmZtT1ZCMVh6R1VoIiwiaGVhZGVyIjp7ImtpZCI6IkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIiwiaXYiOiJhU2RFbDNZV0ZaMHVZeWo5anNnWm5BUEVlUGdRM0M4YyIsInNlbmRlciI6ImRqTWJLRVpIeEhvSHNFcFFNZDFmYVBmNUltZ3ZxYUdjREtaOWNXNXZsMzktd1RQOFhxRGV4NlM2M2YzTEQ4M0Y5ZGFKVnpiRkk1TXZ6SDh4by1WQVVYa0tDb2RhdTRxMVFYWEV0d2I0a0ZfZWVEM3RBUWJjV3NjRkJOND0ifX1dfQ==","iv":"bFNR19E7ZRwLcif-","ciphertext":"","tag":"d36GJJ1AU-rKQV4HD39NVw=="}'
  {"msg_id": "22e47779-f33d-433d-bdce-6cb67b8839b6", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation", "timestamp": 1621255649.4457002, "str_time": "2021-05-17 12:47:29.445700", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://343d0cf69e12.ngrok.io"}
  {"msg_id": "22e47779-f33d-433d-bdce-6cb67b8839b6", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation", "timestamp": 1621255649.4467258, "str_time": "2021-05-17 12:47:29.446726", "handler": "Medic", "ellapsed_milli": 1, "outcome": "OutboundTransportManager.DELIVER.END.http://343d0cf69e12.ngrok.io"}
Posting to http://343d0cf69e12.ngrok.io; Data: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJrc2hyNzZRYWxvLUJqdnpsS2IzRWJPbWtCRDNiZHJUVGhPWXctRG5QUW1RU1BQeXE1WGJqWmZtT1ZCMVh6R1VoIiwiaGVhZGVyIjp7ImtpZCI6IkZXOVlRQkhEMUd5dkZ1bmU5bVZrMXQ3VldySHMyWUFaRFd5OFAyOWJ2a25vIiwiaXYiOiJhU2RFbDNZV0ZaMHVZeWo5anNnWm5BUEVlUGdRM0M4YyIsInNlbmRlciI6ImRqTWJLRVpIeEhvSHNFcFFNZDFmYVBmNUltZ3ZxYUdjREtaOWNXNXZsMzktd1RQOFhxRGV4NlM2M2YzTEQ4M0Y5ZGFKVnpiRkk1TXZ6SDh4by1WQVVYa0tDb2RhdTRxMVFYWEV0d2I0a0ZfZWVEM3RBUWJjV3NjRkJOND0ifX1dfQ==","iv":"bFNR19E7ZRwLcif-","ciphertext":"","tag":"d36GJJ1AU-rKQV4HD39NVw=="}'; Headers: {'Content-Type': 'application/ssi-agent-wire'}
Closing pool ledger after timeout
close_pool_ledger: >>> config_name: 43
do_call: >>> name: indy_close_pool_ledger, args: (c_int(43), <CFunctionType object at 0x7fd9c421b8e0>)
do_call: Function indy_close_pool_ledger returned err: 0
do_call: <<< <Future pending>
	src/services/pool/pool.rs:749 | Drop started
	src/services/pool/pool.rs:757 | Drop wait worker
	src/services/pool/pool.rs:760 | Drop finished
_indy_callback: >>> command_handle: 205, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 205, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_pool_ledger: <<< res: None
unpack_message: >>> wallet_handle: 3, jwe: b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJIa2I2bGVDYTB0a3BfTE45Y0RFS0N4N1NmVVVHVTFIajY3X2RuZXhfTHhEb1pJcXNRNGY2Vk1UVGdhU2VUQXhCIiwiaGVhZGVyIjp7ImtpZCI6IkFnRktra0FQenFCcnFRcEhRNmV0RDdUYzFOQTRFSkhIaU5DSmh5d016RGtqIiwiaXYiOiJUNlpTMHc2MVpjUHRxdkdrZElMUDRvYk9NT2NKTXR1TiIsInNlbmRlciI6Ik5zMFYzZXd3TVFvYW9Sbm1hY1MtXzBtN2dKNFFabWVrMWJ5azdPZkJuRldCSndZSmdldTFxa2N2UGNTeGhIdDNUbm5oY203bTk2QXJpaDJCOTBLSnRZbTI3eHZ4Mngwamw3VGNYeXE1aTJOeWZkVGpQa2xzaXRVaDVkVT0ifX1dfQ==","iv":"X7QfwxgeDPbwQ44r","ciphertext":"IEoVQKW6oaK8KqO-b-G8ejFa42EjcfL2bUUjb7rEbQJbET0gvxUEB0XS112-E9O5vLr6Yvrw10NJfIhOMTmqPk9uVfCURSsjiVmk9QLwe9BQIcM--56dBsoM8LS9Q6QvorO9l1umGugfIx0EiIganRYl89lU9Qru4Uu0ehYwen1IjPi3EoQV0uFiyNopBgW_6uAtLbenvXTV5CYZtEDsGFQm5e5wmXk8gYg7pWimw5Mp5fFJSLsnxg0PC1qqYiPq6pP1WUEd_j0GCqYt3ErKESXTWuVwxp5tSrSWMxwAGnslkc_KnJsd2n4tWfCVuhd9QxT6hImdAowJgU2gRKGhwRDjLh27p3lrSg==","tag":"-kbDe9BB87uST1uw5_Qmug=="}'
do_call: >>> name: indy_unpack_message, args: (c_int(3), b'{"protected":"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkF1dGhjcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiJIa2I2bGVDYTB0a3BfTE45Y0RFS0N4N1NmVVVHVTFIajY3X2RuZXhfTHhEb1pJcXNRNGY2Vk1UVGdhU2VUQXhCIiwiaGVhZGVyIjp7ImtpZCI6IkFnRktra0FQenFCcnFRcEhRNmV0RDdUYzFOQTRFSkhIaU5DSmh5d016RGtqIiwiaXYiOiJUNlpTMHc2MVpjUHRxdkdrZElMUDRvYk9NT2NKTXR1TiIsInNlbmRlciI6Ik5zMFYzZXd3TVFvYW9Sbm1hY1MtXzBtN2dKNFFabWVrMWJ5azdPZkJuRldCSndZSmdldTFxa2N2UGNTeGhIdDNUbm5oY203bTk2QXJpaDJCOTBLSnRZbTI3eHZ4Mngwamw3VGNYeXE1aTJOeWZkVGpQa2xzaXRVaDVkVT0ifX1dfQ==","iv":"X7QfwxgeDPbwQ44r","ciphertext":"IEoVQKW6oaK8KqO-b-G8ejFa42EjcfL2bUUjb7rEbQJbET0gvxUEB0XS112-E9O5vLr6Yvrw10NJfIhOMTmqPk9uVfCURSsjiVmk9QLwe9BQIcM--56dBsoM8LS9Q6QvorO9l1umGugfIx0EiIganRYl89lU9Qru4Uu0ehYwen1IjPi3EoQV0uFiyNopBgW_6uAtLbenvXTV5CYZtEDsGFQm5e5wmXk8gYg7pWimw5Mp5fFJSLsnxg0PC1qqYiPq6pP1WUEd_j0GCqYt3ErKESXTWuVwxp5tSrSWMxwAGnslkc_KnJsd2n4tWfCVuhd9QxT6hImdAowJgU2gRKGhwRDjLh27p3lrSg==","tag":"-kbDe9BB87uST1uw5_Qmug=="}', c_uint(989), <CFunctionType object at 0x7fd99efcfe58>)
do_call: Function indy_unpack_message returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [86, 77, 116, 105, 49, 56, 101, 52, 99, 75, 104, 56, 74, 104, 78, 51, 97, 57, 110, 74, 88, 48, 56, 54, 108, 106, 116, 120, 121, 116, 117, 97, 107, 79, 50, 107, 104, 52, 109, 52, 80, 73, 88, 110, 53, 100, 71, 69, 109, 71, 107, 99, 56, 100, 74, 121, 120, 55, 116, 89, 97, 121, 81, 114, 102, 109, 53, 85, 69, 52, 56, 119, 119, 48, 108, 78, 86, 84, 68, 121, 81, 117, 88, 65, 107, 86, 100, 90, 72, 106, 51, 120, 104, 112, 105, 122], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[115, 101, 107, 68, 79, 97, 105, 54, 86, 121, 43, 52, 86, 68, 67, 117, 67, 52, 84, 98, 71, 100, 43, 118, 43, 79, 86, 74, 117, 116, 110, 82, 119, 73, 85, 116, 53, 57, 48, 71, 88, 67, 82, 118, 76, 98, 112, 77, 117, 103, 61, 61], [86, 77, 116, 105, 49, 56, 101, 52, 99, 75, 104, 56, 74, 104, 78, 51, 97, 57, 110, 74, 88, 48, 56, 54, 108, 106, 116, 120, 121, 116, 117, 97, 107, 79, 50, 107, 104, 52, 109, 52, 80, 73, 88, 110, 53, 100, 71, 69, 109, 71, 107, 99, 56, 100, 74, 121, 120, 55, 116, 89, 97, 121, 81, 114, 102, 109, 53, 85, 69, 52, 56, 119, 119, 48, 108, 78, 86, 84, 68, 121, 81, 117, 88, 65, 107, 86, 100, 90, 72, 106, 51, 120, 104, 112, 105, 122], "Medic"]
_indy_callback: >>> command_handle: 206, err , args: (b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/ack\\", \\"@id\\": \\"bf319a70-160f-4bad-99ff-20aa56e2ea04\\", \\"~thread\\": {\\"thid\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\"}, \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"status\\": \\"OK\\"}","recipient_verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","sender_verkey":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 206, err , args: (b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/ack\\", \\"@id\\": \\"bf319a70-160f-4bad-99ff-20aa56e2ea04\\", \\"~thread\\": {\\"thid\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\"}, \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"status\\": \\"OK\\"}","recipient_verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","sender_verkey":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}',)
_indy_loop_callback: Function returned b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/ack\\", \\"@id\\": \\"bf319a70-160f-4bad-99ff-20aa56e2ea04\\", \\"~thread\\": {\\"thid\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\"}, \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"status\\": \\"OK\\"}","recipient_verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","sender_verkey":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}'
_indy_loop_callback <<<
unpack_message: <<< res: b'{"message":"{\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/ack\\", \\"@id\\": \\"bf319a70-160f-4bad-99ff-20aa56e2ea04\\", \\"~thread\\": {\\"thid\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\"}, \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"status\\": \\"OK\\"}","recipient_verkey":"AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj","sender_verkey":"FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno"}'
Expanded message: {'@type': 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/ack', '@id': 'bf319a70-160f-4bad-99ff-20aa56e2ea04', '~thread': {'thid': 'c7c6f8dd-0795-41d5-b6de-cfe1038a5315'}, '~trace': {'target': 'log', 'full_thread': True, 'trace_reports': []}, 'status': 'OK'}
  {"msg_id": "bf319a70-160f-4bad-99ff-20aa56e2ea04", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/ack", "timestamp": 1621255695.6258872, "str_time": "2021-05-17 12:48:15.625887", "handler": "Medic", "ellapsed_milli": 0, "outcome": "Dispatcher.handle_message.START"}
get_wallet_record: >>> wallet_handle: 3, type_: 'connection', id: 'eef16ddd-5609-4e39-9915-f29a1c704a04', options_json: '{"retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_get_wallet_record, args: (c_int(3), c_char_p(140573273868672), c_char_p(140572626268528), c_char_p(140572651804368), <CFunctionType object at 0x7fd9c421bcc8>)
do_call: Function indy_get_wallet_record returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
192.168.208.2 [17/May/2021:12:48:15 +0000] "POST / HTTP/1.1" 200 149 "-" "Python/3.6 aiohttp/3.6.3"
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[73, 112, 117, 54, 90, 50, 78, 112, 79, 83, 105, 81, 57, 43, 119, 66, 71, 115, 101, 72, 57, 65, 122, 69, 116, 80, 74, 111, 68, 67, 106, 112, 121, 99, 89, 73, 82, 77, 56, 100, 47, 122, 71, 118, 118, 119, 88, 43, 80, 71, 85, 61], [109, 73, 104, 49, 120, 54, 51, 101, 73, 56, 70, 48, 50, 104, 119, 52, 113, 120, 74, 121, 56, 108, 113, 50, 88, 122, 43, 110, 49, 88, 75, 118, 109, 116, 117, 55, 83, 89, 117, 115, 68, 88, 54, 84, 121, 121, 68, 119, 104, 71, 65, 56, 81, 53, 88, 113, 89, 112, 104, 99, 66, 67, 56, 88, 74, 79, 101, 74, 89, 121, 87, 114, 108, 54, 65, 102, 99, 55, 49, 79, 103, 121, 108, 67, 122, 103, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 207, err , args: (b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.808747Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 207, err , args: (b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.808747Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}',)
_indy_loop_callback: Function returned b'{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.808747Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
_indy_loop_callback <<<
get_wallet_record: <<< res: '{"type":null,"id":"eef16ddd-5609-4e39-9915-f29a1c704a04","value":"{\\"invitation_key\\": \\"8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a\\", \\"their_did\\": \\"TcJ1RMKLi54urRp6eug7xs\\", \\"my_did\\": \\"JkkJux3BNa6oWp6AvWMqoY\\", \\"request_id\\": \\"5197a8ab-6bba-40c8-a8be-a70602476833\\", \\"created_at\\": \\"2021-05-17 12:46:08.973586Z\\", \\"updated_at\\": \\"2021-05-17 12:46:15.808747Z\\", \\"their_role\\": \\"inviter\\", \\"inbound_connection_id\\": null, \\"routing_state\\": \\"none\\", \\"accept\\": \\"manual\\", \\"invitation_mode\\": \\"once\\", \\"invitation_msg_id\\": null, \\"alias\\": null, \\"error_msg\\": null, \\"their_label\\": \\"General Medical Council\\", \\"state\\": \\"active\\", \\"their_public_did\\": null}","tags":null}'
PresentationAckHandler called with context <RequestContext(_connection_ready=True, _connection_record=<ConnRecord(_id='eef16ddd-5609-4e39-9915-f29a1c704a04', _last_state='active', state='active', created_at='2021-05-17 12:46:08.973586Z', updated_at='2021-05-17 12:46:15.808747Z', my_did='JkkJux3BNa6oWp6AvWMqoY', their_did='TcJ1RMKLi54urRp6eug7xs', their_label='General Medical Council', their_role='inviter', invitation_key='8cCZD7aeNfp1W72qpgL1RCd4yfeBxG6aPMGeAULGw35a', invitation_msg_id=None, request_id='5197a8ab-6bba-40c8-a8be-a70602476833', error_msg=None, inbound_connection_id=None, routing_state='none', accept='manual', invitation_mode='once', alias=None, their_public_did=None)>, _context=<aries_cloudagent.config.injection_context.InjectionContext object at 0x7fd99efb9e80>, _message=<PresentationAck(_message_id='bf319a70-160f-4bad-99ff-20aa56e2ea04', _message_new_id=False, _message_decorators=<DecoratorSet{~thread: <ThreadDecorator(_thid='c7c6f8dd-0795-41d5-b6de-cfe1038a5315', _pthid=None, _sender_order=None, _received_orders=None)>, ~trace: <TraceDecorator(_target='log', _full_thread=True, _trace_reports=None)>}>, status='OK')>, _message_receipt=<MessageReceipt(_connection_id=None, _direct_response_mode=None, _in_time='2021-05-17 12:48:15.598693Z', _raw_message='{"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/ack", "@id": "bf319a70-160f-4bad-99ff-20aa56e2ea04", "~thread": {"thid": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315"}, "~trace": {"target": "log", "full_thread": true, "trace_reports": []}, "status": "OK"}', _recipient_verkey='AgFKkkAPzqBrqQpHQ6etD7Tc1NA4EJHHiNCJhywMzDkj', _recipient_did='JkkJux3BNa6oWp6AvWMqoY', _recipient_did_public=None, _sender_did='TcJ1RMKLi54urRp6eug7xs', _sender_verkey='FW9YQBHD1GyvFune9mVk1t7VWrHs2YAZDWy8P29bvkno', _thread_id='c7c6f8dd-0795-41d5-b6de-cfe1038a5315')>, _profile=<IndySdkProfile(backend=indy, name=Medic)>)>
Received presentation ack message: {"@type":"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/ack","@id":"bf319a70-160f-4bad-99ff-20aa56e2ea04","~thread":{"thid":"c7c6f8dd-0795-41d5-b6de-cfe1038a5315"},"~trace":{"target":"log","full_thread":true,"trace_reports":[]},"status":"OK"}
open_wallet_search: >>> wallet_handle: 3, type_: 'presentation_exchange_v10', query_json: '{"thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315"}', options_json: '{"retrieveRecords": true, "retrieveTotalCount": false, "retrieveType": false, "retrieveValue": true, "retrieveTags": false}'
do_call: >>> name: indy_open_wallet_search, args: (c_int(3), c_char_p(140572626313296), c_char_p(140573273288120), c_char_p(140573275298384), <CFunctionType object at 0x7fd99efcf750>)
do_call: Function indy_open_wallet_search returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: WITH tags_encrypted as (select * from tags_encrypted where wallet_id = $5) SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND (i.id in (SELECT item_id FROM tags_encrypted WHERE name = $2 AND value = $3)) AND i.wallet_id = $4
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[110, 67, 49, 112, 119, 102, 79, 119, 52, 111, 104, 99, 98, 55, 118, 83, 81, 101, 81, 108, 106, 82, 90, 79, 116, 90, 120, 70, 65, 104, 107, 80, 99, 53, 118, 86, 112, 89, 54, 87, 50, 89, 83, 109, 55, 111, 74, 67, 57, 87, 118, 77, 100, 119, 56, 51, 101, 113, 48, 73, 121, 106, 79, 109, 79, 120, 72, 118, 75, 57, 48, 61], [63, 214, 72, 222, 130, 103, 146, 158, 195, 194, 230, 74, 26, 53, 129, 230, 232, 7, 33, 137, 227, 21, 72, 88, 62, 97, 106, 31, 62, 194, 84, 80, 193, 83, 183, 11, 35], [203, 122, 98, 209, 35, 107, 95, 185, 163, 20, 194, 44, 127, 50, 93, 40, 38, 115, 156, 101, 190, 128, 191, 144, 6, 67, 134, 208, 36, 122, 117, 225, 169, 166, 168, 19, 201, 160, 59, 36, 2, 33, 211, 150, 112, 152, 3, 69, 188, 121, 60, 103, 107, 174, 105, 87, 84, 49, 15, 197, 65, 68, 117, 199], "Medic", "Medic"]
_indy_callback: >>> command_handle: 208, err , args: (48,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 208, err , args: (48,)
_indy_loop_callback: Function returned 48
_indy_loop_callback <<<
open_wallet_search: <<< res: 48
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 48, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(48), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 209, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"6be4dc23-2532-4d2d-9def-6cf78a9bfe09","value":"{\\"thread_id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"created_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"updated_at\\": \\"2021-05-17 12:47:29.293544Z\\", \\"connection_id\\": \\"eef16ddd-5609-4e39-9915-f29a1c704a04\\", \\"initiator\\": \\"external\\", \\"presentation_proposal_dict\\": null, \\"presentation_request\\": {\\"name\\": \\"Proof of Primary Medical Qualification\\", \\"version\\": \\"1.0\\", \\"requested_attributes\\": {\\"0_Name_uuid\\": {\\"name\\": \\"Name\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_University_uuid\\": {\\"name\\": \\"University\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_Date Issued_uuid\\": {\\"name\\": \\"Date Issued\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}}, \\"requested_predicates\\": {}, \\"non_revoked\\": {\\"to\\": 1621255549}, \\"nonce\\": \\"19740203311469284009343\\"}, \\"presentation_request_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}, \\"presentation\\": {\\"proof\\": {\\"proofs\\": [{\\"primary_proof\\": {\\"eq_proof\\": {\\"revealed_attrs\\": {\\"dateissued\\": \\"31928709163600735441101476658814216885388252189838058973070792022801591336579\\", \\"name\\": \\"65005548905037764764502350053825769914874082648761230458670796241392891659611\\", \\"university\\": \\"57963125648994666300875361621729313351158154740138173103415020334594043694317\\"}, \\"a_prime\\": \\"87497477164085281713515336297515943429019546474313262770335421765133863845640751068882479821210108833176361422261063340793068905849363855118387211928239661741467086868245856605179886602807155159922066970565879831689722766180595360270807817576558715651422812622112772575366400694451961003420821035410411754938002622161912544531488798019344320388863245692256649083221692716790544568891085743782166444391719113693283895450797771285479050700568689004293473400512892325588549692788865838062815649569931952702341824780972708808792387532031154770405268339962911889615893319854101222033589697014500234175984542003981021812773\\", \\"e\\": \\"154048814774809203958249265530095027153254858125683001027903995570529697898875222881872697502854428674182121253100643612713560841235618320\\", \\"v\\": \\"1075056707481757685302820380549717229682054697230177771108389494064352356360402296905750567040684833964672790067363593404776554862883852716066433245646004976568123906996240484640017436844042528906492407131637814906775223635522805330540821860789570147335385926281889343075837419621936725374512911442589375005207127302660521377811911263963170082152211654863865973074551173468971302064037414991208663319657132370588732440384168336986163798963761061494469536810671296067740391464565818521832398450565394186065363034382061719577698363164227851726618301906985003377355041460420266591228887729792179577148690929889962673469164396309133902236993907580806172768372370897655397502894524941436896504481810090989727162648100833698324938043127809593602060915232870513524082714004782505194802058946770924552591021866603803125486355822467277111110567002144550965455325197736424654917084203540848249866727836219471387065903524753183092544\\", \\"m\\": {\\"master_secret\\": \\"2793697494185440264525060860231245239302026234731932628029468109408435569054206729934377817146497096671519204938276353379685637149960731633869827819226246137511338209444740904790\\"}, \\"m2\\": \\"98023185406056981757909108244610452040269911693114387930295449500518864756275015327639118257530305062150523567067133342746408412629638494814612815612658191435536476997557765123\\"}, \\"ge_proofs\\": []}, \\"non_revoc_proof\\": null}], \\"aggregated_proof\\": {\\"c_hash\\": \\"51128778298706816581010548716237320985693016689947197450663483251832695160949\\", \\"c_list\\": [[2, 181, 29, 16, 75, 183, 135, 189, 141, 128, 82, 129, 176, 52, 209, 164, 228, 151, 94, 134, 107, 238, 28, 182, 30, 69, 3, 97, 130, 96, 127, 94, 75, 162, 173, 246, 68, 103, 210, 73, 112, 123, 236, 91, 128, 249, 234, 45, 107, 131, 222, 144, 98, 223, 211, 194, 220, 19, 224, 206, 116, 171, 124, 249, 184, 138, 111, 79, 26, 180, 3, 104, 118, 181, 164, 12, 250, 23, 69, 182, 99, 92, 120, 150, 6, 210, 242, 126, 99, 30, 52, 117, 119, 164, 76, 122, 12, 125, 136, 2, 225, 215, 52, 219, 136, 115, 173, 141, 114, 6, 94, 226, 213, 80, 194, 171, 78, 10, 182, 166, 164, 190, 212, 55, 148, 184, 84, 58, 185, 127, 94, 206, 44, 150, 56, 29, 59, 143, 190, 226, 41, 76, 22, 66, 230, 19, 121, 19, 222, 135, 150, 7, 65, 100, 236, 219, 208, 183, 144, 95, 214, 193, 46, 190, 83, 213, 225, 118, 163, 181, 79, 86, 57, 187, 233, 213, 90, 123, 201, 43, 129, 77, 16, 70, 199, 217, 146, 108, 66, 246, 182, 197, 109, 181, 14, 132, 103, 13, 136, 47, 10, 214, 61, 136, 254, 6, 60, 56, 106, 102, 37, 163, 78, 98, 120, 151, 126, 255, 129, 185, 106, 156, 182, 186, 84, 45, 1, 74, 52, 118, 165, 153, 15, 171, 24, 31, 12, 134, 64, 98, 6, 206, 155, 29, 72, 195, 185, 120, 72, 46, 17, 66, 18, 37, 103, 24, 37]]}}, \\"requested_proof\\": {\\"revealed_attrs\\": {\\"0_University_uuid\\": {\\"sub_proof_index\\": 0, \\"raw\\": \\"Edinburgh Medical School\\", \\"encoded\\": \\"57963125648994666300875361621729313351158154740138173103415020334594043694317\\"}, \\"0_Name_uuid\\": {\\"sub_proof_index\\": 0, \\"raw\\": \\"Will Abramson\\", \\"encoded\\": \\"65005548905037764764502350053825769914874082648761230458670796241392891659611\\"}, \\"0_Date Issued_uuid\\": {\\"sub_proof_index\\": 0, \\"raw\\": \\"2021-05-17\\", \\"encoded\\": \\"31928709163600735441101476658814216885388252189838058973070792022801591336579\\"}}, \\"self_attested_attrs\\": {}, \\"unrevealed_attrs\\": {}, \\"predicates\\": {}}, \\"identifiers\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"rev_reg_id\\": null, \\"timestamp\\": null}]}, \\"role\\": \\"prover\\", \\"state\\": \\"presentation_sent\\", \\"auto_present\\": null, \\"error_msg\\": null, \\"verified\\": null, \\"trace\\": true}","tags":null}]}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 209, err , args: (b'{"totalCount":null,"records":[{"type":null,"id":"6be4dc23-2532-4d2d-9def-6cf78a9bfe09","value":"{\\"thread_id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"created_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"updated_at\\": \\"2021-05-17 12:47:29.293544Z\\", \\"connection_id\\": \\"eef16ddd-5609-4e39-9915-f29a1c704a04\\", \\"initiator\\": \\"external\\", \\"presentation_proposal_dict\\": null, \\"presentation_request\\": {\\"name\\": \\"Proof of Primary Medical Qualification\\", \\"version\\": \\"1.0\\", \\"requested_attributes\\": {\\"0_Name_uuid\\": {\\"name\\": \\"Name\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_University_uuid\\": {\\"name\\": \\"University\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_Date Issued_uuid\\": {\\"name\\": \\"Date Issued\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}}, \\"requested_predicates\\": {}, \\"non_revoked\\": {\\"to\\": 1621255549}, \\"nonce\\": \\"19740203311469284009343\\"}, \\"presentation_request_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}, \\"presentation\\": {\\"proof\\": {\\"proofs\\": [{\\"primary_proof\\": {\\"eq_proof\\": {\\"revealed_attrs\\": {\\"dateissued\\": \\"31928709163600735441101476658814216885388252189838058973070792022801591336579\\", \\"name\\": \\"65005548905037764764502350053825769914874082648761230458670796241392891659611\\", \\"university\\": \\"57963125648994666300875361621729313351158154740138173103415020334594043694317\\"}, \\"a_prime\\": \\"87497477164085281713515336297515943429019546474313262770335421765133863845640751068882479821210108833176361422261063340793068905849363855118387211928239661741467086868245856605179886602807155159922066970565879831689722766180595360270807817576558715651422812622112772575366400694451961003420821035410411754938002622161912544531488798019344320388863245692256649083221692716790544568891085743782166444391719113693283895450797771285479050700568689004293473400512892325588549692788865838062815649569931952702341824780972708808792387532031154770405268339962911889615893319854101222033589697014500234175984542003981021812773\\", \\"e\\": \\"154048814774809203958249265530095027153254858125683001027903995570529697898875222881872697502854428674182121253100643612713560841235618320\\", \\"v\\": \\"1075056707481757685302820380549717229682054697230177771108389494064352356360402296905750567040684833964672790067363593404776554862883852716066433245646004976568123906996240484640017436844042528906492407131637814906775223635522805330540821860789570147335385926281889343075837419621936725374512911442589375005207127302660521377811911263963170082152211654863865973074551173468971302064037414991208663319657132370588732440384168336986163798963761061494469536810671296067740391464565818521832398450565394186065363034382061719577698363164227851726618301906985003377355041460420266591228887729792179577148690929889962673469164396309133902236993907580806172768372370897655397502894524941436896504481810090989727162648100833698324938043127809593602060915232870513524082714004782505194802058946770924552591021866603803125486355822467277111110567002144550965455325197736424654917084203540848249866727836219471387065903524753183092544\\", \\"m\\": {\\"master_secret\\": \\"2793697494185440264525060860231245239302026234731932628029468109408435569054206729934377817146497096671519204938276353379685637149960731633869827819226246137511338209444740904790\\"}, \\"m2\\": \\"98023185406056981757909108244610452040269911693114387930295449500518864756275015327639118257530305062150523567067133342746408412629638494814612815612658191435536476997557765123\\"}, \\"ge_proofs\\": []}, \\"non_revoc_proof\\": null}], \\"aggregated_proof\\": {\\"c_hash\\": \\"51128778298706816581010548716237320985693016689947197450663483251832695160949\\", \\"c_list\\": [[2, 181, 29, 16, 75, 183, 135, 189, 141, 128, 82, 129, 176, 52, 209, 164, 228, 151, 94, 134, 107, 238, 28, 182, 30, 69, 3, 97, 130, 96, 127, 94, 75, 162, 173, 246, 68, 103, 210, 73, 112, 123, 236, 91, 128, 249, 234, 45, 107, 131, 222, 144, 98, 223, 211, 194, 220, 19, 224, 206, 116, 171, 124, 249, 184, 138, 111, 79, 26, 180, 3, 104, 118, 181, 164, 12, 250, 23, 69, 182, 99, 92, 120, 150, 6, 210, 242, 126, 99, 30, 52, 117, 119, 164, 76, 122, 12, 125, 136, 2, 225, 215, 52, 219, 136, 115, 173, 141, 114, 6, 94, 226, 213, 80, 194, 171, 78, 10, 182, 166, 164, 190, 212, 55, 148, 184, 84, 58, 185, 127, 94, 206, 44, 150, 56, 29, 59, 143, 190, 226, 41, 76, 22, 66, 230, 19, 121, 19, 222, 135, 150, 7, 65, 100, 236, 219, 208, 183, 144, 95, 214, 193, 46, 190, 83, 213, 225, 118, 163, 181, 79, 86, 57, 187, 233, 213, 90, 123, 201, 43, 129, 77, 16, 70, 199, 217, 146, 108, 66, 246, 182, 197, 109, 181, 14, 132, 103, 13, 136, 47, 10, 214, 61, 136, 254, 6, 60, 56, 106, 102, 37, 163, 78, 98, 120, 151, 126, 255, 129, 185, 106, 156, 182, 186, 84, 45, 1, 74, 52, 118, 165, 153, 15, 171, 24, 31, 12, 134, 64, 98, 6, 206, 155, 29, 72, 195, 185, 120, 72, 46, 17, 66, 18, 37, 103, 24, 37]]}}, \\"requested_proof\\": {\\"revealed_attrs\\": {\\"0_University_uuid\\": {\\"sub_proof_index\\": 0, \\"raw\\": \\"Edinburgh Medical School\\", \\"encoded\\": \\"57963125648994666300875361621729313351158154740138173103415020334594043694317\\"}, \\"0_Name_uuid\\": {\\"sub_proof_index\\": 0, \\"raw\\": \\"Will Abramson\\", \\"encoded\\": \\"65005548905037764764502350053825769914874082648761230458670796241392891659611\\"}, \\"0_Date Issued_uuid\\": {\\"sub_proof_index\\": 0, \\"raw\\": \\"2021-05-17\\", \\"encoded\\": \\"31928709163600735441101476658814216885388252189838058973070792022801591336579\\"}}, \\"self_attested_attrs\\": {}, \\"unrevealed_attrs\\": {}, \\"predicates\\": {}}, \\"identifiers\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"rev_reg_id\\": null, \\"timestamp\\": null}]}, \\"role\\": \\"prover\\", \\"state\\": \\"presentation_sent\\", \\"auto_present\\": null, \\"error_msg\\": null, \\"verified\\": null, \\"trace\\": true}","tags":null}]}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":[{"type":null,"id":"6be4dc23-2532-4d2d-9def-6cf78a9bfe09","value":"{\\"thread_id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"created_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"updated_at\\": \\"2021-05-17 12:47:29.293544Z\\", \\"connection_id\\": \\"eef16ddd-5609-4e39-9915-f29a1c704a04\\", \\"initiator\\": \\"external\\", \\"presentation_proposal_dict\\": null, \\"presentation_request\\": {\\"name\\": \\"Proof of Primary Medical Qualification\\", \\"version\\": \\"1.0\\", \\"requested_attributes\\": {\\"0_Name_uuid\\": {\\"name\\": \\"Name\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_University_uuid\\": {\\"name\\": \\"University\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_Date Issued_uuid\\": {\\"name\\": \\"Date Issued\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}}, \\"requested_predicates\\": {}, \\"non_revoked\\": {\\"to\\": 1621255549}, \\"nonce\\": \\"19740203311469284009343\\"}, \\"presentation_request_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}, \\"presentation\\": {\\"proof\\": {\\"proofs\\": [{\\"primary_proof\\": {\\"eq_proof\\": {\\"revealed_attrs\\": {\\"dateissued\\": \\"31928709163600735441101476658814216885388252189838058973070792022801591336579\\", \\"name\\": \\"65005548905037764764502350053825769914874082648761230458670796241392891659611\\", \\"university\\": \\"57963125648994666300875361621729313351158154740138173103415020334594043694317\\"}, \\"a_prime\\": \\"87497477164085281713515336297515943429019546474313262770335421765133863845640751068882479821210108833176361422261063340793068905849363855118387211928239661741467086868245856605179886602807155159922066970565879831689722766180595360270807817576558715651422812622112772575366400694451961003420821035410411754938002622161912544531488798019344320388863245692256649083221692716790544568891085743782166444391719113693283895450797771285479050700568689004293473400512892325588549692788865838062815649569931952702341824780972708808792387532031154770405268339962911889615893319854101222033589697014500234175984542003981021812773\\", \\"e\\": \\"154048814774809203958249265530095027153254858125683001027903995570529697898875222881872697502854428674182121253100643612713560841235618320\\", \\"v\\": \\"1075056707481757685302820380549717229682054697230177771108389494064352356360402296905750567040684833964672790067363593404776554862883852716066433245646004976568123906996240484640017436844042528906492407131637814906775223635522805330540821860789570147335385926281889343075837419621936725374512911442589375005207127302660521377811911263963170082152211654863865973074551173468971302064037414991208663319657132370588732440384168336986163798963761061494469536810671296067740391464565818521832398450565394186065363034382061719577698363164227851726618301906985003377355041460420266591228887729792179577148690929889962673469164396309133902236993907580806172768372370897655397502894524941436896504481810090989727162648100833698324938043127809593602060915232870513524082714004782505194802058946770924552591021866603803125486355822467277111110567002144550965455325197736424654917084203540848249866727836219471387065903524753183092544\\", \\"m\\": {\\"master_secret\\": \\"2793697494185440264525060860231245239302026234731932628029468109408435569054206729934377817146497096671519204938276353379685637149960731633869827819226246137511338209444740904790\\"}, \\"m2\\": \\"98023185406056981757909108244610452040269911693114387930295449500518864756275015327639118257530305062150523567067133342746408412629638494814612815612658191435536476997557765123\\"}, \\"ge_proofs\\": []}, \\"non_revoc_proof\\": null}], \\"aggregated_proof\\": {\\"c_hash\\": \\"51128778298706816581010548716237320985693016689947197450663483251832695160949\\", \\"c_list\\": [[2, 181, 29, 16, 75, 183, 135, 189, 141, 128, 82, 129, 176, 52, 209, 164, 228, 151, 94, 134, 107, 238, 28, 182, 30, 69, 3, 97, 130, 96, 127, 94, 75, 162, 173, 246, 68, 103, 210, 73, 112, 123, 236, 91, 128, 249, 234, 45, 107, 131, 222, 144, 98, 223, 211, 194, 220, 19, 224, 206, 116, 171, 124, 249, 184, 138, 111, 79, 26, 180, 3, 104, 118, 181, 164, 12, 250, 23, 69, 182, 99, 92, 120, 150, 6, 210, 242, 126, 99, 30, 52, 117, 119, 164, 76, 122, 12, 125, 136, 2, 225, 215, 52, 219, 136, 115, 173, 141, 114, 6, 94, 226, 213, 80, 194, 171, 78, 10, 182, 166, 164, 190, 212, 55, 148, 184, 84, 58, 185, 127, 94, 206, 44, 150, 56, 29, 59, 143, 190, 226, 41, 76, 22, 66, 230, 19, 121, 19, 222, 135, 150, 7, 65, 100, 236, 219, 208, 183, 144, 95, 214, 193, 46, 190, 83, 213, 225, 118, 163, 181, 79, 86, 57, 187, 233, 213, 90, 123, 201, 43, 129, 77, 16, 70, 199, 217, 146, 108, 66, 246, 182, 197, 109, 181, 14, 132, 103, 13, 136, 47, 10, 214, 61, 136, 254, 6, 60, 56, 106, 102, 37, 163, 78, 98, 120, 151, 126, 255, 129, 185, 106, 156, 182, 186, 84, 45, 1, 74, 52, 118, 165, 153, 15, 171, 24, 31, 12, 134, 64, 98, 6, 206, 155, 29, 72, 195, 185, 120, 72, 46, 17, 66, 18, 37, 103, 24, 37]]}}, \\"requested_proof\\": {\\"revealed_attrs\\": {\\"0_University_uuid\\": {\\"sub_proof_index\\": 0, \\"raw\\": \\"Edinburgh Medical School\\", \\"encoded\\": \\"57963125648994666300875361621729313351158154740138173103415020334594043694317\\"}, \\"0_Name_uuid\\": {\\"sub_proof_index\\": 0, \\"raw\\": \\"Will Abramson\\", \\"encoded\\": \\"65005548905037764764502350053825769914874082648761230458670796241392891659611\\"}, \\"0_Date Issued_uuid\\": {\\"sub_proof_index\\": 0, \\"raw\\": \\"2021-05-17\\", \\"encoded\\": \\"31928709163600735441101476658814216885388252189838058973070792022801591336579\\"}}, \\"self_attested_attrs\\": {}, \\"unrevealed_attrs\\": {}, \\"predicates\\": {}}, \\"identifiers\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"rev_reg_id\\": null, \\"timestamp\\": null}]}, \\"role\\": \\"prover\\", \\"state\\": \\"presentation_sent\\", \\"auto_present\\": null, \\"error_msg\\": null, \\"verified\\": null, \\"trace\\": true}","tags":null}]}'
_indy_loop_callback <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":[{"type":null,"id":"6be4dc23-2532-4d2d-9def-6cf78a9bfe09","value":"{\\"thread_id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"created_at\\": \\"2021-05-17 12:46:41.793608Z\\", \\"updated_at\\": \\"2021-05-17 12:47:29.293544Z\\", \\"connection_id\\": \\"eef16ddd-5609-4e39-9915-f29a1c704a04\\", \\"initiator\\": \\"external\\", \\"presentation_proposal_dict\\": null, \\"presentation_request\\": {\\"name\\": \\"Proof of Primary Medical Qualification\\", \\"version\\": \\"1.0\\", \\"requested_attributes\\": {\\"0_Name_uuid\\": {\\"name\\": \\"Name\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_University_uuid\\": {\\"name\\": \\"University\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}, \\"0_Date Issued_uuid\\": {\\"name\\": \\"Date Issued\\", \\"restrictions\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\"}]}}, \\"requested_predicates\\": {}, \\"non_revoked\\": {\\"to\\": 1621255549}, \\"nonce\\": \\"19740203311469284009343\\"}, \\"presentation_request_dict\\": {\\"@type\\": \\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation\\", \\"@id\\": \\"c7c6f8dd-0795-41d5-b6de-cfe1038a5315\\", \\"~trace\\": {\\"target\\": \\"log\\", \\"full_thread\\": true, \\"trace_reports\\": []}, \\"comment\\": \\"Please prove that you have recieved a valid PMQ\\", \\"request_presentations~attach\\": [{\\"@id\\": \\"libindy-request-presentation-0\\", \\"mime-type\\": \\"application/json\\", \\"data\\": {\\"base64\\": \\"eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9\\"}}]}, \\"presentation\\": {\\"proof\\": {\\"proofs\\": [{\\"primary_proof\\": {\\"eq_proof\\": {\\"revealed_attrs\\": {\\"dateissued\\": \\"31928709163600735441101476658814216885388252189838058973070792022801591336579\\", \\"name\\": \\"65005548905037764764502350053825769914874082648761230458670796241392891659611\\", \\"university\\": \\"57963125648994666300875361621729313351158154740138173103415020334594043694317\\"}, \\"a_prime\\": \\"87497477164085281713515336297515943429019546474313262770335421765133863845640751068882479821210108833176361422261063340793068905849363855118387211928239661741467086868245856605179886602807155159922066970565879831689722766180595360270807817576558715651422812622112772575366400694451961003420821035410411754938002622161912544531488798019344320388863245692256649083221692716790544568891085743782166444391719113693283895450797771285479050700568689004293473400512892325588549692788865838062815649569931952702341824780972708808792387532031154770405268339962911889615893319854101222033589697014500234175984542003981021812773\\", \\"e\\": \\"154048814774809203958249265530095027153254858125683001027903995570529697898875222881872697502854428674182121253100643612713560841235618320\\", \\"v\\": \\"1075056707481757685302820380549717229682054697230177771108389494064352356360402296905750567040684833964672790067363593404776554862883852716066433245646004976568123906996240484640017436844042528906492407131637814906775223635522805330540821860789570147335385926281889343075837419621936725374512911442589375005207127302660521377811911263963170082152211654863865973074551173468971302064037414991208663319657132370588732440384168336986163798963761061494469536810671296067740391464565818521832398450565394186065363034382061719577698363164227851726618301906985003377355041460420266591228887729792179577148690929889962673469164396309133902236993907580806172768372370897655397502894524941436896504481810090989727162648100833698324938043127809593602060915232870513524082714004782505194802058946770924552591021866603803125486355822467277111110567002144550965455325197736424654917084203540848249866727836219471387065903524753183092544\\", \\"m\\": {\\"master_secret\\": \\"2793697494185440264525060860231245239302026234731932628029468109408435569054206729934377817146497096671519204938276353379685637149960731633869827819226246137511338209444740904790\\"}, \\"m2\\": \\"98023185406056981757909108244610452040269911693114387930295449500518864756275015327639118257530305062150523567067133342746408412629638494814612815612658191435536476997557765123\\"}, \\"ge_proofs\\": []}, \\"non_revoc_proof\\": null}], \\"aggregated_proof\\": {\\"c_hash\\": \\"51128778298706816581010548716237320985693016689947197450663483251832695160949\\", \\"c_list\\": [[2, 181, 29, 16, 75, 183, 135, 189, 141, 128, 82, 129, 176, 52, 209, 164, 228, 151, 94, 134, 107, 238, 28, 182, 30, 69, 3, 97, 130, 96, 127, 94, 75, 162, 173, 246, 68, 103, 210, 73, 112, 123, 236, 91, 128, 249, 234, 45, 107, 131, 222, 144, 98, 223, 211, 194, 220, 19, 224, 206, 116, 171, 124, 249, 184, 138, 111, 79, 26, 180, 3, 104, 118, 181, 164, 12, 250, 23, 69, 182, 99, 92, 120, 150, 6, 210, 242, 126, 99, 30, 52, 117, 119, 164, 76, 122, 12, 125, 136, 2, 225, 215, 52, 219, 136, 115, 173, 141, 114, 6, 94, 226, 213, 80, 194, 171, 78, 10, 182, 166, 164, 190, 212, 55, 148, 184, 84, 58, 185, 127, 94, 206, 44, 150, 56, 29, 59, 143, 190, 226, 41, 76, 22, 66, 230, 19, 121, 19, 222, 135, 150, 7, 65, 100, 236, 219, 208, 183, 144, 95, 214, 193, 46, 190, 83, 213, 225, 118, 163, 181, 79, 86, 57, 187, 233, 213, 90, 123, 201, 43, 129, 77, 16, 70, 199, 217, 146, 108, 66, 246, 182, 197, 109, 181, 14, 132, 103, 13, 136, 47, 10, 214, 61, 136, 254, 6, 60, 56, 106, 102, 37, 163, 78, 98, 120, 151, 126, 255, 129, 185, 106, 156, 182, 186, 84, 45, 1, 74, 52, 118, 165, 153, 15, 171, 24, 31, 12, 134, 64, 98, 6, 206, 155, 29, 72, 195, 185, 120, 72, 46, 17, 66, 18, 37, 103, 24, 37]]}}, \\"requested_proof\\": {\\"revealed_attrs\\": {\\"0_University_uuid\\": {\\"sub_proof_index\\": 0, \\"raw\\": \\"Edinburgh Medical School\\", \\"encoded\\": \\"57963125648994666300875361621729313351158154740138173103415020334594043694317\\"}, \\"0_Name_uuid\\": {\\"sub_proof_index\\": 0, \\"raw\\": \\"Will Abramson\\", \\"encoded\\": \\"65005548905037764764502350053825769914874082648761230458670796241392891659611\\"}, \\"0_Date Issued_uuid\\": {\\"sub_proof_index\\": 0, \\"raw\\": \\"2021-05-17\\", \\"encoded\\": \\"31928709163600735441101476658814216885388252189838058973070792022801591336579\\"}}, \\"self_attested_attrs\\": {}, \\"unrevealed_attrs\\": {}, \\"predicates\\": {}}, \\"identifiers\\": [{\\"schema_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1\\", \\"cred_def_id\\": \\"3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default\\", \\"rev_reg_id\\": null, \\"timestamp\\": null}]}, \\"role\\": \\"prover\\", \\"state\\": \\"presentation_sent\\", \\"auto_present\\": null, \\"error_msg\\": null, \\"verified\\": null, \\"trace\\": true}","tags":null}]}'
fetch_wallet_search_next_records: >>> wallet_handle: 3, wallet_search_handle: 48, count: 100
do_call: >>> name: indy_fetch_wallet_search_next_records, args: (c_int(3), c_int(48), c_uint(100), <CFunctionType object at 0x7fd99efcf818>)
do_call: Function indy_fetch_wallet_search_next_records returned err: 0
_indy_callback: >>> command_handle: 210, err , args: (b'{"totalCount":null,"records":null}',)
do_call: <<< <Future pending>
_indy_loop_callback: >>> command_handle: 210, err , args: (b'{"totalCount":null,"records":null}',)
_indy_loop_callback: Function returned b'{"totalCount":null,"records":null}'
_indy_loop_callback <<<
_indy_callback: <<<
fetch_wallet_search_next_records: <<< res: '{"totalCount":null,"records":null}'
close_wallet_search: >>> wallet_search_handle: 48
do_call: >>> name: indy_close_wallet_search, args: (c_int(48), <CFunctionType object at 0x7fd99efcfa70>)
do_call: Function indy_close_wallet_search returned err: 0
_indy_callback: >>> command_handle: 211, err , args: ()
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 211, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_wallet_search: <<< res: None
update_wallet_record_value: >>> wallet_handle: 3, type_: 'presentation_exchange_v10', id: '6be4dc23-2532-4d2d-9def-6cf78a9bfe09', value: '{"thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "created_at": "2021-05-17 12:46:41.793608Z", "updated_at": "2021-05-17 12:48:15.688714Z", "connection_id": "eef16ddd-5609-4e39-9915-f29a1c704a04", "initiator": "external", "presentation_proposal_dict": null, "presentation_request": {"name": "Proof of Primary Medical Qualification", "version": "1.0", "requested_attributes": {"0_Name_uuid": {"name": "Name", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}, "0_University_uuid": {"name": "University", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}, "0_Date Issued_uuid": {"name": "Date Issued", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}}, "requested_predicates": {}, "non_revoked": {"to": 1621255549}, "nonce": "19740203311469284009343"}, "presentation_request_dict": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation", "@id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "~trace": {"target": "log", "full_thread": true, "trace_reports": []}, "comment": "Please prove that you have recieved a valid PMQ", "request_presentations~attach": [{"@id": "libindy-request-presentation-0", "mime-type": "application/json", "data": {"base64": "eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9"}}]}, "presentation": {"proof": {"proofs": [{"primary_proof": {"eq_proof": {"revealed_attrs": {"dateissued": "31928709163600735441101476658814216885388252189838058973070792022801591336579", "name": "65005548905037764764502350053825769914874082648761230458670796241392891659611", "university": "57963125648994666300875361621729313351158154740138173103415020334594043694317"}, "a_prime": "87497477164085281713515336297515943429019546474313262770335421765133863845640751068882479821210108833176361422261063340793068905849363855118387211928239661741467086868245856605179886602807155159922066970565879831689722766180595360270807817576558715651422812622112772575366400694451961003420821035410411754938002622161912544531488798019344320388863245692256649083221692716790544568891085743782166444391719113693283895450797771285479050700568689004293473400512892325588549692788865838062815649569931952702341824780972708808792387532031154770405268339962911889615893319854101222033589697014500234175984542003981021812773", "e": "154048814774809203958249265530095027153254858125683001027903995570529697898875222881872697502854428674182121253100643612713560841235618320", "v": "1075056707481757685302820380549717229682054697230177771108389494064352356360402296905750567040684833964672790067363593404776554862883852716066433245646004976568123906996240484640017436844042528906492407131637814906775223635522805330540821860789570147335385926281889343075837419621936725374512911442589375005207127302660521377811911263963170082152211654863865973074551173468971302064037414991208663319657132370588732440384168336986163798963761061494469536810671296067740391464565818521832398450565394186065363034382061719577698363164227851726618301906985003377355041460420266591228887729792179577148690929889962673469164396309133902236993907580806172768372370897655397502894524941436896504481810090989727162648100833698324938043127809593602060915232870513524082714004782505194802058946770924552591021866603803125486355822467277111110567002144550965455325197736424654917084203540848249866727836219471387065903524753183092544", "m": {"master_secret": "2793697494185440264525060860231245239302026234731932628029468109408435569054206729934377817146497096671519204938276353379685637149960731633869827819226246137511338209444740904790"}, "m2": "98023185406056981757909108244610452040269911693114387930295449500518864756275015327639118257530305062150523567067133342746408412629638494814612815612658191435536476997557765123"}, "ge_proofs": []}, "non_revoc_proof": null}], "aggregated_proof": {"c_hash": "51128778298706816581010548716237320985693016689947197450663483251832695160949", "c_list": [[2, 181, 29, 16, 75, 183, 135, 189, 141, 128, 82, 129, 176, 52, 209, 164, 228, 151, 94, 134, 107, 238, 28, 182, 30, 69, 3, 97, 130, 96, 127, 94, 75, 162, 173, 246, 68, 103, 210, 73, 112, 123, 236, 91, 128, 249, 234, 45, 107, 131, 222, 144, 98, 223, 211, 194, 220, 19, 224, 206, 116, 171, 124, 249, 184, 138, 111, 79, 26, 180, 3, 104, 118, 181, 164, 12, 250, 23, 69, 182, 99, 92, 120, 150, 6, 210, 242, 126, 99, 30, 52, 117, 119, 164, 76, 122, 12, 125, 136, 2, 225, 215, 52, 219, 136, 115, 173, 141, 114, 6, 94, 226, 213, 80, 194, 171, 78, 10, 182, 166, 164, 190, 212, 55, 148, 184, 84, 58, 185, 127, 94, 206, 44, 150, 56, 29, 59, 143, 190, 226, 41, 76, 22, 66, 230, 19, 121, 19, 222, 135, 150, 7, 65, 100, 236, 219, 208, 183, 144, 95, 214, 193, 46, 190, 83, 213, 225, 118, 163, 181, 79, 86, 57, 187, 233, 213, 90, 123, 201, 43, 129, 77, 16, 70, 199, 217, 146, 108, 66, 246, 182, 197, 109, 181, 14, 132, 103, 13, 136, 47, 10, 214, 61, 136, 254, 6, 60, 56, 106, 102, 37, 163, 78, 98, 120, 151, 126, 255, 129, 185, 106, 156, 182, 186, 84, 45, 1, 74, 52, 118, 165, 153, 15, 171, 24, 31, 12, 134, 64, 98, 6, 206, 155, 29, 72, 195, 185, 120, 72, 46, 17, 66, 18, 37, 103, 24, 37]]}}, "requested_proof": {"revealed_attrs": {"0_University_uuid": {"sub_proof_index": 0, "raw": "Edinburgh Medical School", "encoded": "57963125648994666300875361621729313351158154740138173103415020334594043694317"}, "0_Name_uuid": {"sub_proof_index": 0, "raw": "Will Abramson", "encoded": "65005548905037764764502350053825769914874082648761230458670796241392891659611"}, "0_Date Issued_uuid": {"sub_proof_index": 0, "raw": "2021-05-17", "encoded": "31928709163600735441101476658814216885388252189838058973070792022801591336579"}}, "self_attested_attrs": {}, "unrevealed_attrs": {}, "predicates": {}}, "identifiers": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "rev_reg_id": null, "timestamp": null}]}, "role": "prover", "state": "presentation_acked", "auto_present": null, "error_msg": null, "verified": null, "trace": true}'
do_call: >>> name: indy_update_wallet_record_value, args: (c_int(3), c_char_p(140572626316688), c_char_p(140572651913016), c_char_p(94095652785920), <CFunctionType object at 0x7fd99efcf110>)
do_call: Function indy_update_wallet_record_value returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: UPDATE items SET value = $1, key = $2 WHERE type = $3 AND name = $4 AND wallet_id = $5
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [[101, 245, 139, 180, 152, 127, 253, 18, 254, 132, 186, 2, 7, 172, 93, 128, 198, 210, 110, 145, 74, 235, 230, 135, 183, 38, 134, 170, 1, 205, 167, 247, 28, 7, 116, 121, 186, 184, 46, 188, 40, 81, 19, 161, 66, 240, 165, 158, 112, 29, 241, 120, 59, 50, 178, 123, 97, 230, 221, 146, 5, 205, 63, 7, 210, 216, 169, 225, 222, 115, 36, 93, 242, 168, 116, 116, 163, 240, 238, 17, 243, 1, 213, 164, 45, 162, 61, 217, 214, 224, 103, 54, 164, 101, 25, 100, 104, 235, 212, 30, 87, 184, 197, 254, 240, 103, 163, 65, 56, 129, 99, 123, 104, 90, 1, 147, 25, 36, 195, 30, 66, 8, 49, 113, 106, 5, 201, 222, 31, 126, 242, 79, 235, 159, 53, 163, 232, 43, 148, 136, 20, 101, 143, 252, 99, 11, 20, 91, 150, 254, 153, 58, 123, 86, 182, 132, 201, 239, 25, 45, 47, 173, 227, 108, 225, 136, 161, 26, 119, 243, 248, 103, 113, 8, 190, 29, 152, 189, 18, 234, 140, 156, 211, 214, 197, 104, 53, 52, 80, 127, 58, 99, 158, 233, 13, 78, 54, 25, 116, 30, 193, 78, 132, 220, 101, 184, 70, 148, 55, 61, 122, 36, 73, 36, 20, 242, 222, 193, 119, 176, 144, 111, 189, 233, 133, 154, 218, 180, 198, 52, 13, 116, 35, 187, 24, 21, 55, 180, 227, 78, 125, 213, 240, 104, 50, 200, 225, 142, 244, 203, 99, 149, 34, 219, 96, 125, 141, 184, 63, 8, 222, 10, 113, 216, 41, 20, 128, 179, 157, 68, 192, 148, 98, 248, 197, 248, 22, 130, 255, 89, 183, 168, 72, 199, 9, 81, 79, 76, 176, 141, 57, 191, 35, 230, 59, 164, 199, 142, 216, 97, 32, 57, 42, 84, 0, 231, 189, 223, 50, 210, 92, 140, 201, 5, 30, 82, 95, 251, 66, 202, 85, 200, 182, 226, 239, 246, 14, 37, 203, 164, 32, 34, 46, 165, 47, 142, 164, 251, 216, 45, 139, 9, 6, 187, 131, 57, 182, 108, 4, 149, 156, 23, 212, 179, 112, 1, 158, 142, 92, 110, 43, 26, 141, 80, 59, 160, 67, 33, 2, 155, 201, 178, 12, 145, 181, 137, 176, 1, 39, 127, 160, 2, 68, 127, 198, 175, 40, 149, 0, 134, 57, 55, 91, 73, 211, 61, 223, 163, 90, 85, 93, 249, 219, 187, 254, 210, 140, 10, 244, 185, 199, 76, 27, 253, 162, 240, 206, 161, 189, 145, 177, 203, 100, 47, 202, 126, 24, 4, 149, 36, 49, 117, 65, 220, 63, 78, 42, 132, 60, 145, 131, 222, 157, 205, 238, 3, 221, 236, 188, 125, 221, 71, 45, 218, 146, 28, 202, 210, 236, 202, 39, 46, 100, 130, 6, 96, 231, 255, 187, 128, 201, 74, 106, 129, 154, 122, 144, 183, 187, 39, 3, 207, 199, 94, 133, 221, 214, 105, 17, 105, 50, 168, 252, 41, 60, 142, 250, 172, 129, 164, 111, 195, 188, 4, 155, 32, 20, 52, 167, 115, 185, 226, 211, 191, 162, 118, 10, 95, 14, 115, 8, 147, 28, 193, 109, 31, 122, 28, 210, 157, 111, 242, 152, 10, 132, 86, 20, 113, 64, 34, 207, 6, 132, 21, 196, 177, 116, 65, 111, 223, 128, 171, 98, 158, 35, 143, 124, 141, 178, 188, 70, 175, 195, 136, 155, 188, 51, 103, 199, 104, 106, 25, 50, 243, 155, 25, 104, 136, 152, 75, 204, 128, 12, 252, 52, 131, 200, 247, 199, 160, 133, 32, 175, 194, 70, 191, 34, 187, 60, 119, 114, 189, 109, 100, 192, 52, 54, 64, 143, 168, 213, 231, 88, 241, 83, 133, 74, 64, 120, 105, 254, 97, 78, 227, 20, 115, 112, 224, 212, 193, 143, 221, 138, 47, 82, 171, 117, 39, 202, 201, 57, 154, 65, 88, 59, 207, 154, 157, 128, 123, 213, 229, 164, 96, 161, 128, 175, 232, 29, 162, 176, 178, 16, 19, 70, 138, 227, 149, 128, 2, 74, 219, 196, 102, 44, 228, 29, 163, 79, 218, 146, 51, 21, 152, 129, 177, 47, 6, 106, 197, 45, 61, 246, 148, 115, 87, 31, 174, 214, 190, 203, 3, 147, 13, 148, 50, 17, 31, 21, 51, 202, 75, 32, 185, 10, 92, 123, 240, 40, 90, 146, 185, 32, 17, 6, 238, 250, 45, 140, 145, 37, 213, 88, 39, 247, 172, 189, 170, 219, 31, 26, 190, 117, 45, 135, 106, 240, 232, 187, 158, 190, 34, 231, 119, 126, 174, 178, 85, 178, 241, 147, 38, 175, 156, 5, 142, 85, 47, 6, 103, 61, 168, 212, 51, 49, 248, 217, 24, 50, 212, 114, 2, 205, 31, 60, 80, 83, 174, 176, 128, 209, 112, 117, 173, 58, 50, 177, 248, 225, 120, 28, 34, 166, 83, 249, 137, 29, 248, 138, 134, 157, 105, 62, 25, 124, 198, 113, 225, 231, 152, 187, 179, 112, 145, 244, 192, 138, 148, 155, 217, 107, 205, 112, 58, 235, 24, 229, 147, 85, 88, 120, 52, 234, 215, 86, 91, 52, 66, 227, 153, 19, 54, 171, 164, 59, 254, 247, 84, 54, 197, 164, 253, 63, 180, 191, 68, 107, 112, 65, 85, 21, 133, 230, 98, 227, 88, 216, 5, 15, 157, 123, 206, 10, 73, 175, 10, 122, 255, 133, 47, 57, 22, 249, 232, 246, 117, 254, 147, 201, 124, 130, 247, 111, 248, 149, 20, 231, 176, 137, 100, 62, 169, 145, 210, 160, 232, 3, 115, 50, 107, 121, 194, 111, 117, 194, 46, 37, 205, 130, 184, 171, 20, 169, 29, 167, 136, 108, 69, 172, 247, 23, 129, 252, 128, 11, 244, 18, 157, 132, 186, 42, 126, 158, 213, 236, 79, 182, 145, 124, 183, 251, 121, 31, 174, 88, 189, 215, 22, 24, 109, 21, 239, 173, 247, 109, 219, 190, 233, 101, 126, 98, 178, 187, 4, 41, 97, 163, 38, 244, 10, 158, 115, 116, 157, 89, 2, 252, 182, 0, 45, 177, 157, 200, 68, 251, 189, 19, 108, 189, 142, 160, 230, 49, 47, 36, 244, 132, 159, 142, 62, 142, 18, 102, 139, 88, 182, 238, 167, 219, 195, 12, 153, 221, 32, 98, 138, 213, 210, 152, 121, 189, 27, 39, 206, 162, 157, 163, 225, 73, 52, 32, 122, 182, 242, 215, 164, 64, 208, 143, 224, 60, 190, 202, 23, 135, 40, 214, 123, 222, 138, 167, 135, 136, 189, 108, 164, 96, 20, 177, 237, 231, 149, 244, 183, 120, 104, 74, 158, 52, 171, 152, 149, 119, 226, 24, 142, 42, 96, 103, 237, 57, 27, 230, 178, 78, 230, 148, 197, 23, 24, 223, 247, 49, 208, 188, 201, 231, 74, 169, 77, 143, 200, 102, 166, 252, 204, 128, 112, 9, 254, 72, 98, 208, 127, 117, 111, 60, 168, 63, 107, 21, 96, 116, 54, 87, 227, 248, 179, 20, 174, 220, 89, 133, 152, 94, 170, 149, 140, 38, 157, 125, 12, 85, 98, 78, 17, 123, 29, 92, 75, 7, 132, 161, 219, 54, 27, 132, 174, 34, 0, 41, 244, 193, 78, 81, 231, 120, 254, 4, 6, 29, 143, 210, 231, 129, 193, 243, 247, 141, 84, 162, 110, 86, 99, 219, 237, 209, 144, 21, 232, 68, 156, 55, 59, 152, 150, 120, 171, 0, 194, 94, 64, 125, 232, 234, 161, 42, 250, 11, 196, 209, 190, 84, 245, 7, 198, 80, 13, 52, 33, 76, 250, 175, 76, 225, 115, 44, 154, 242, 161, 222, 213, 3, 129, 113, 72, 72, 61, 201, 99, 48, 36, 36, 20, 52, 138, 61, 91, 143, 36, 108, 116, 77, 180, 5, 74, 27, 120, 40, 115, 232, 234, 211, 244, 30, 99, 31, 83, 221, 158, 119, 109, 113, 172, 232, 100, 88, 44, 20, 135, 9, 38, 133, 235, 232, 253, 183, 218, 144, 160, 27, 161, 2, 8, 190, 171, 247, 124, 254, 30, 26, 206, 168, 12, 170, 62, 66, 209, 245, 226, 29, 197, 55, 136, 99, 254, 99, 197, 171, 225, 255, 76, 226, 215, 4, 112, 215, 138, 220, 181, 198, 62, 61, 82, 100, 240, 82, 25, 43, 126, 232, 248, 169, 179, 52, 168, 173, 73, 181, 142, 67, 75, 6, 126, 180, 53, 156, 150, 18, 91, 124, 118, 138, 253, 111, 36, 112, 219, 73, 135, 204, 109, 91, 136, 129, 89, 65, 14, 193, 183, 217, 160, 16, 28, 205, 155, 47, 38, 40, 165, 218, 221, 87, 44, 96, 125, 128, 168, 78, 242, 247, 93, 41, 145, 23, 243, 241, 32, 183, 51, 196, 169, 142, 27, 218, 83, 102, 131, 135, 211, 119, 218, 99, 227, 172, 227, 202, 26, 92, 51, 152, 181, 6, 16, 76, 111, 216, 132, 43, 164, 11, 184, 102, 130, 55, 127, 125, 203, 34, 96, 138, 210, 110, 205, 157, 144, 20, 189, 44, 122, 253, 139, 191, 38, 84, 166, 20, 42, 127, 209, 65, 211, 190, 246, 192, 186, 38, 159, 136, 84, 218, 134, 62, 78, 74, 236, 63, 201, 75, 64, 181, 82, 169, 19, 131, 14, 119, 28, 220, 113, 142, 152, 115, 132, 198, 85, 172, 212, 14, 133, 169, 133, 85, 125, 19, 30, 52, 156, 33, 174, 84, 233, 190, 92, 250, 214, 4, 237, 13, 66, 70, 107, 188, 163, 17, 254, 78, 9, 161, 128, 70, 64, 114, 233, 53, 32, 175, 74, 126, 34, 94, 242, 164, 213, 210, 134, 15, 208, 200, 20, 180, 105, 194, 97, 83, 157, 96, 202, 130, 22, 48, 49, 180, 128, 159, 204, 36, 21, 215, 92, 249, 101, 197, 96, 44, 26, 73, 53, 229, 183, 255, 53, 238, 115, 77, 36, 90, 193, 132, 52, 25, 186, 135, 240, 211, 169, 37, 228, 38, 130, 232, 243, 156, 24, 163, 213, 191, 92, 69, 60, 248, 90, 127, 3, 15, 143, 103, 31, 121, 158, 231, 49, 239, 217, 112, 49, 200, 247, 112, 247, 51, 63, 60, 182, 205, 146, 238, 34, 101, 50, 238, 84, 35, 180, 186, 99, 25, 16, 15, 105, 117, 10, 31, 70, 176, 214, 175, 73, 241, 106, 141, 157, 15, 101, 161, 253, 122, 25, 125, 73, 176, 12, 15, 39, 197, 162, 42, 56, 53, 134, 74, 95, 99, 252, 129, 161, 197, 116, 128, 177, 253, 64, 227, 59, 46, 202, 177, 244, 185, 141, 6, 94, 86, 24, 76, 147, 7, 42, 124, 207, 220, 198, 54, 242, 239, 161, 242, 200, 113, 62, 128, 106, 131, 202, 93, 124, 25, 204, 251, 0, 27, 126, 242, 56, 40, 147, 18, 9, 236, 215, 72, 140, 254, 233, 90, 86, 31, 53, 42, 45, 60, 60, 221, 228, 216, 169, 203, 54, 128, 155, 88, 56, 250, 122, 64, 165, 38, 177, 214, 127, 69, 2, 182, 22, 206, 83, 87, 197, 67, 53, 217, 22, 29, 223, 124, 111, 74, 42, 107, 26, 235, 148, 37, 16, 8, 77, 35, 132, 163, 173, 161, 72, 207, 249, 167, 226, 155, 238, 250, 81, 13, 53, 103, 175, 180, 11, 52, 51, 117, 115, 119, 203, 200, 139, 65, 37, 8, 134, 150, 52, 235, 239, 54, 140, 139, 145, 120, 38, 186, 94, 36, 136, 254, 165, 40, 3, 132, 207, 68, 1, 170, 145, 158, 197, 57, 86, 63, 214, 50, 194, 95, 205, 189, 162, 73, 188, 241, 61, 2, 139, 20, 135, 102, 46, 173, 72, 92, 166, 181, 18, 55, 100, 198, 198, 132, 105, 73, 229, 246, 238, 169, 205, 113, 64, 164, 137, 65, 254, 192, 117, 57, 146, 105, 41, 233, 113, 121, 243, 39, 36, 157, 60, 147, 85, 51, 62, 55, 156, 243, 31, 249, 156, 33, 90, 101, 163, 50, 172, 155, 179, 77, 57, 8, 69, 139, 101, 145, 251, 244, 105, 241, 15, 134, 104, 217, 107, 105, 218, 132, 67, 146, 78, 128, 120, 163, 172, 17, 178, 192, 98, 154, 52, 156, 226, 95, 0, 50, 186, 204, 89, 90, 37, 189, 203, 252, 34, 146, 49, 231, 137, 106, 188, 118, 181, 59, 118, 103, 89, 155, 185, 181, 128, 169, 144, 63, 229, 177, 156, 176, 242, 41, 115, 232, 34, 20, 50, 5, 146, 217, 14, 186, 186, 115, 46, 169, 207, 109, 69, 69, 252, 236, 128, 210, 6, 234, 158, 174, 10, 95, 90, 110, 138, 236, 212, 6, 59, 38, 48, 205, 54, 136, 250, 80, 93, 191, 158, 142, 187, 68, 99, 28, 108, 31, 44, 157, 8, 168, 251, 67, 84, 136, 214, 137, 141, 191, 43, 109, 91, 22, 202, 17, 29, 43, 245, 35, 255, 61, 104, 173, 161, 142, 22, 80, 43, 17, 106, 214, 151, 168, 214, 47, 84, 43, 199, 117, 76, 98, 25, 219, 248, 32, 245, 137, 6, 29, 216, 58, 17, 140, 180, 220, 226, 248, 185, 89, 38, 20, 142, 18, 193, 239, 227, 134, 167, 245, 36, 191, 123, 218, 213, 2, 200, 240, 107, 207, 246, 104, 125, 78, 246, 79, 253, 133, 160, 81, 6, 124, 213, 158, 181, 169, 28, 166, 120, 123, 132, 159, 243, 61, 105, 150, 199, 35, 195, 170, 115, 108, 203, 170, 87, 174, 92, 51, 20, 64, 162, 152, 25, 82, 174, 109, 111, 212, 218, 94, 14, 66, 33, 110, 144, 177, 74, 17, 13, 0, 213, 76, 36, 80, 247, 175, 208, 147, 19, 36, 84, 214, 225, 42, 29, 167, 103, 74, 95, 247, 129, 222, 85, 210, 42, 13, 214, 32, 69, 216, 193, 94, 65, 90, 86, 160, 74, 245, 114, 30, 219, 167, 49, 60, 30, 145, 10, 201, 236, 56, 2, 13, 140, 96, 41, 106, 161, 106, 181, 211, 22, 244, 51, 205, 72, 61, 180, 206, 199, 174, 6, 197, 59, 226, 54, 201, 159, 71, 18, 157, 67, 55, 97, 10, 15, 16, 34, 111, 245, 44, 238, 254, 77, 250, 52, 189, 160, 204, 88, 239, 216, 89, 245, 151, 39, 78, 80, 178, 42, 16, 205, 169, 123, 17, 93, 254, 125, 135, 59, 62, 56, 10, 250, 213, 187, 225, 140, 228, 242, 222, 69, 71, 169, 91, 104, 38, 247, 12, 221, 215, 138, 139, 93, 92, 0, 109, 239, 217, 168, 172, 93, 193, 89, 207, 25, 237, 0, 240, 138, 138, 76, 56, 2, 14, 83, 31, 239, 228, 238, 177, 33, 221, 48, 197, 167, 234, 181, 131, 217, 202, 109, 160, 115, 161, 112, 104, 27, 99, 14, 55, 111, 201, 243, 6, 170, 129, 38, 160, 115, 21, 47, 173, 185, 107, 98, 12, 150, 225, 226, 59, 7, 46, 152, 16, 179, 77, 201, 135, 70, 131, 225, 138, 70, 186, 68, 220, 38, 65, 243, 176, 179, 216, 69, 18, 80, 172, 167, 45, 161, 38, 164, 134, 29, 19, 30, 4, 135, 41, 131, 31, 121, 249, 124, 106, 198, 211, 243, 84, 8, 174, 117, 216, 169, 242, 176, 139, 50, 180, 188, 66, 33, 245, 218, 248, 111, 93, 233, 191, 90, 89, 167, 136, 238, 140, 75, 22, 36, 234, 145, 205, 70, 249, 134, 10, 26, 154, 102, 50, 215, 61, 65, 166, 133, 231, 149, 219, 6, 194, 3, 101, 50, 139, 196, 209, 63, 243, 38, 203, 162, 124, 192, 71, 233, 124, 25, 245, 59, 107, 99, 237, 107, 73, 72, 147, 46, 151, 122, 157, 183, 221, 232, 166, 241, 182, 158, 43, 39, 13, 62, 13, 34, 192, 15, 248, 241, 20, 10, 237, 106, 130, 22, 208, 128, 237, 149, 83, 11, 23, 208, 142, 212, 181, 9, 197, 64, 255, 76, 62, 100, 224, 87, 171, 169, 117, 195, 193, 130, 4, 249, 185, 45, 222, 191, 78, 131, 175, 77, 168, 40, 165, 220, 196, 213, 187, 147, 253, 149, 216, 69, 140, 204, 147, 249, 6, 140, 142, 63, 158, 99, 88, 216, 17, 100, 49, 151, 0, 147, 244, 80, 104, 218, 83, 83, 175, 185, 62, 117, 228, 251, 161, 125, 113, 98, 194, 80, 85, 14, 246, 62, 50, 223, 16, 113, 101, 10, 171, 245, 84, 221, 220, 11, 200, 109, 248, 197, 89, 183, 238, 192, 133, 114, 204, 143, 97, 127, 5, 220, 36, 58, 4, 131, 149, 181, 197, 92, 151, 188, 13, 129, 75, 36, 76, 37, 78, 38, 175, 49, 211, 119, 37, 249, 181, 237, 178, 244, 14, 90, 104, 206, 24, 176, 74, 27, 21, 117, 135, 131, 55, 174, 63, 162, 140, 105, 116, 73, 203, 231, 202, 229, 161, 110, 133, 91, 229, 237, 193, 104, 147, 180, 165, 153, 156, 77, 31, 213, 36, 40, 173, 178, 181, 87, 80, 140, 86, 83, 66, 38, 26, 54, 32, 107, 68, 12, 204, 136, 227, 177, 83, 224, 40, 61, 134, 206, 119, 156, 4, 207, 61, 25, 250, 58, 142, 218, 42, 132, 235, 100, 75, 247, 211, 215, 137, 89, 79, 13, 243, 26, 89, 213, 175, 209, 140, 28, 23, 5, 72, 99, 250, 185, 252, 173, 234, 188, 247, 2, 192, 66, 174, 111, 78, 86, 34, 177, 103, 186, 58, 13, 125, 125, 107, 119, 112, 34, 251, 184, 180, 2, 194, 24, 205, 151, 255, 205, 38, 215, 178, 29, 136, 198, 143, 86, 41, 221, 198, 0, 134, 228, 76, 178, 230, 252, 161, 29, 119, 40, 227, 97, 143, 175, 175, 130, 92, 79, 14, 206, 49, 82, 64, 113, 77, 44, 108, 147, 90, 61, 153, 85, 223, 212, 133, 18, 230, 69, 39, 9, 188, 40, 40, 224, 228, 115, 131, 80, 3, 30, 98, 241, 220, 25, 151, 165, 232, 117, 63, 112, 57, 234, 67, 20, 106, 209, 20, 87, 56, 4, 109, 21, 232, 176, 205, 186, 214, 242, 127, 45, 148, 53, 25, 199, 160, 68, 234, 229, 235, 230, 103, 236, 237, 222, 126, 242, 118, 84, 128, 103, 30, 204, 129, 183, 43, 68, 80, 194, 195, 125, 12, 154, 75, 110, 77, 174, 112, 92, 43, 180, 168, 57, 213, 98, 237, 252, 92, 15, 185, 15, 100, 13, 32, 92, 155, 29, 90, 13, 54, 77, 173, 201, 163, 201, 31, 193, 134, 126, 67, 4, 171, 191, 210, 199, 205, 63, 235, 70, 175, 150, 201, 139, 89, 32, 179, 76, 248, 186, 143, 115, 24, 16, 190, 213, 135, 47, 208, 149, 246, 9, 146, 20, 128, 43, 36, 231, 155, 85, 54, 112, 111, 245, 126, 24, 89, 193, 193, 242, 131, 147, 192, 177, 19, 188, 72, 148, 76, 230, 240, 39, 80, 75, 27, 83, 21, 194, 70, 174, 1, 253, 249, 45, 2, 29, 203, 16, 198, 51, 108, 155, 75, 129, 4, 57, 244, 196, 235, 67, 225, 140, 31, 229, 245, 57, 81, 62, 1, 180, 80, 224, 144, 191, 169, 155, 150, 46, 181, 87, 166, 143, 137, 84, 139, 140, 189, 153, 247, 177, 155, 243, 227, 142, 23, 62, 226, 184, 172, 74, 221, 200, 79, 21, 131, 20, 20, 131, 209, 125, 37, 96, 241, 20, 58, 112, 99, 205, 227, 37, 221, 248, 5, 147, 121, 8, 92, 123, 222, 243, 209, 220, 144, 248, 190, 10, 160, 136, 245, 247, 3, 120, 146, 97, 43, 180, 79, 176, 141, 229, 116, 150, 218, 251, 164, 131, 46, 29, 149, 133, 41, 61, 179, 71, 32, 247, 161, 207, 12, 185, 154, 195, 50, 136, 3, 204, 19, 104, 242, 170, 5, 42, 77, 225, 209, 97, 113, 66, 40, 219, 6, 136, 119, 24, 21, 204, 6, 87, 52, 128, 67, 128, 184, 7, 96, 229, 248, 69, 186, 113, 31, 252, 23, 49, 158, 59, 85, 26, 215, 149, 111, 167, 51, 226, 213, 196, 189, 201, 6, 171, 203, 131, 233, 58, 124, 2, 83, 194, 149, 182, 58, 100, 158, 217, 188, 34, 40, 183, 126, 95, 152, 92, 111, 79, 214, 142, 14, 48, 178, 232, 188, 235, 110, 48, 122, 71, 71, 51, 186, 211, 170, 30, 8, 246, 104, 13, 98, 231, 39, 185, 182, 11, 246, 183, 38, 6, 174, 53, 243, 227, 13, 153, 201, 68, 118, 92, 144, 7, 85, 133, 73, 11, 97, 234, 167, 58, 241, 67, 48, 67, 244, 66, 177, 12, 104, 136, 65, 200, 192, 204, 216, 133, 75, 178, 61, 20, 85, 238, 26, 8, 207, 83, 28, 132, 205, 231, 75, 69, 46, 178, 18, 150, 166, 157, 195, 181, 193, 28, 57, 141, 32, 39, 59, 13, 250, 92, 213, 70, 236, 103, 190, 128, 201, 38, 9, 85, 29, 178, 168, 140, 82, 82, 49, 210, 133, 87, 204, 66, 43, 222, 252, 70, 39, 9, 81, 36, 202, 230, 223, 149, 167, 108, 124, 200, 91, 234, 165, 144, 209, 84, 42, 93, 9, 32, 156, 52, 62, 241, 155, 94, 121, 161, 112, 151, 130, 69, 168, 84, 72, 231, 191, 229, 15, 245, 206, 66, 254, 178, 112, 125, 91, 161, 64, 79, 164, 225, 215, 12, 242, 206, 250, 52, 35, 230, 225, 242, 193, 119, 203, 39, 39, 0, 28, 133, 249, 154, 39, 194, 58, 144, 212, 45, 150, 166, 65, 115, 181, 215, 172, 211, 81, 128, 49, 225, 108, 32, 203, 2, 198, 109, 8, 92, 22, 184, 144, 154, 168, 1, 55, 182, 238, 217, 25, 115, 100, 30, 184, 120, 121, 248, 217, 184, 107, 83, 89, 56, 6, 21, 207, 205, 2, 144, 53, 157, 179, 64, 221, 142, 79, 128, 27, 0, 57, 198, 171, 203, 27, 150, 100, 118, 214, 1, 181, 9, 145, 121, 91, 21, 9, 128, 97, 208, 27, 227, 8, 205, 254, 2, 9, 106, 93, 225, 69, 128, 34, 200, 54, 119, 83, 104, 175, 52, 154, 36, 219, 24, 9, 103, 223, 0, 150, 24, 209, 209, 212, 16, 148, 13, 51, 41, 97, 198, 193, 123, 145, 66, 31, 243, 112, 191, 216, 160, 149, 107, 38, 210, 57, 27, 221, 14, 180, 213, 70, 121, 128, 167, 126, 8, 118, 219, 198, 201, 230, 168, 90, 50, 173, 156, 118, 56, 193, 244, 96, 106, 50, 202, 92, 197, 11, 85, 184, 26, 65, 229, 10, 67, 0, 13, 235, 238, 160, 12, 25, 19, 245, 160, 219, 124, 9, 67, 180, 160, 230, 183, 51, 19, 62, 66, 23, 183, 238, 223, 101, 229, 192, 189, 221, 22, 119, 184, 67, 78, 72, 7, 128, 246, 12, 83, 3, 108, 90, 91, 156, 159, 73, 227, 168, 151, 111, 65, 254, 142, 114, 26, 36, 202, 115, 206, 1, 72, 244, 88, 105, 188, 70, 243, 120, 201, 139, 233, 53, 51, 74, 173, 40, 178, 0, 128, 72, 96, 153, 3, 106, 133, 135, 102, 132, 181, 126, 69, 21, 250, 11, 104, 241, 104, 232, 62, 220, 248, 101, 236, 107, 143, 128, 250, 222, 154, 13, 134, 26, 41, 220, 172, 16, 167, 89, 226, 111, 70, 104, 46, 43, 253, 196, 31, 226, 159, 180, 180, 38, 82, 36, 245, 187, 178, 165, 22, 116, 64, 105, 98, 97, 154, 46, 172, 8, 121, 25, 238, 63, 201, 144, 78, 131, 170, 91, 61, 110, 27, 89, 211, 28, 165, 16, 212, 126, 191, 72, 26, 94, 146, 95, 38, 1, 48, 241, 244, 179, 186, 130, 204, 90, 8, 107, 12, 66, 198, 104, 128, 209, 18, 27, 25, 230, 163, 122, 125, 30, 140, 34, 107, 11, 213, 250, 172, 239, 76, 176, 183, 117, 173, 168, 156, 6, 184, 116, 241, 159, 17, 133, 213, 205, 13, 60, 66, 196, 250, 151, 25, 127, 14, 120, 18, 57, 75, 50, 115, 165, 240, 210, 30, 155, 43, 253, 42, 217, 85, 47, 42, 86, 80, 204, 150, 175, 208, 204, 6, 51, 86, 17, 6, 227, 16, 92, 159, 135, 150, 60, 173, 219, 126, 184, 103, 31, 162, 84, 136, 191, 36, 91, 18, 73, 207, 212, 251, 73, 0, 199, 165, 139, 148, 70, 195, 250, 222, 21, 109, 190, 145, 129, 112, 155, 8, 60, 175, 221, 37, 1, 236, 88, 137, 197, 16, 230, 200, 206, 101, 210, 224, 232, 168, 88, 149, 252, 146, 139, 180, 180, 45, 78, 99, 202, 140, 175, 125, 148, 80, 175, 27, 35, 140, 218, 98, 76, 18, 226, 177, 167, 175, 124, 112, 57, 125, 33, 161, 178, 212, 118, 74, 222, 80, 129, 144, 212, 88, 210, 78, 107, 182, 7, 102, 222, 163, 44, 175, 143, 150, 90, 176, 180, 186, 5, 3, 155, 85, 27, 132, 137, 111, 202, 40, 173, 95, 153, 73, 93, 214, 250, 217, 152, 8, 30, 121, 177, 49, 209, 60, 199, 252, 190, 149, 78, 89, 10, 227, 135, 247, 198, 253, 158, 163, 15, 191, 168, 16, 22, 167, 186, 33, 42, 10, 196, 212, 104, 89, 187, 89, 85, 151, 246, 239, 3, 73, 46, 122, 145, 109, 127, 30, 14, 255, 94, 40, 148, 54, 251, 43, 177, 56, 88, 106, 73, 2, 134, 156, 213, 168, 193, 87, 134, 162, 132, 74, 248, 208, 16, 79, 78, 140, 75, 6, 188, 166, 42, 254, 102, 196, 56, 11, 102, 164, 185, 182, 239, 210, 241, 3, 195, 118, 252, 247, 254, 177, 73, 193, 88, 115, 87, 109, 241, 8, 45, 138, 203, 35, 119, 136, 96, 241, 195, 76, 85, 112, 45, 237, 241, 229, 0, 76, 199, 231, 109, 1, 45, 138, 157, 118, 184, 66, 225, 7, 99, 174, 36, 170, 135, 39, 132, 42, 90, 142, 206, 13, 98, 133, 120, 79, 235, 201, 54, 21, 151, 220, 114, 232, 21, 56, 98, 137, 233, 164, 251, 161, 87, 68, 56, 162, 128, 216, 128, 87, 255, 19, 235, 20, 101, 92, 137, 43, 108, 179, 166, 37, 75, 182, 30, 186, 170, 225, 106, 85, 143, 192, 162, 112, 131, 180, 5, 203, 85, 124, 168, 31, 31, 187, 99, 128, 250, 210, 172, 119, 142, 159, 4, 154, 177, 79, 110, 5, 110, 145, 52, 166, 165, 81, 180, 48, 93, 73, 208, 20, 191, 222, 123, 216, 77, 139, 131, 42, 97, 152, 186, 54, 69, 30, 3, 68, 151, 83, 36, 157, 44, 113, 251, 21, 9, 107, 156, 190, 110, 206, 95, 235, 42, 43, 21, 223, 237, 236, 131, 115, 122, 199, 141, 7, 76, 216, 176, 28, 232, 195, 12, 118, 176, 179, 41, 56, 217, 185, 184, 164, 53, 223, 236, 17, 238, 27, 116, 205, 61, 169, 108, 18, 62, 128, 165, 36, 35, 139, 235, 43, 246, 141, 224, 252, 71, 128, 252, 172, 124, 38, 130, 119, 248, 161, 149, 44, 182, 176, 139, 34, 182, 42, 70, 182, 175, 202, 161, 247, 7, 80, 104, 163, 103, 193, 8, 88, 81, 152, 11, 242, 7, 79, 87, 254, 126, 114, 165, 181, 37, 175, 183, 219, 161, 163, 49, 116, 200, 12, 123, 178, 157, 153, 133, 15, 173, 140, 16, 246, 86, 169, 122, 120, 36, 143, 173, 27, 111, 64, 159, 172, 57, 237, 44, 187, 18, 222, 44, 253, 187, 160, 178, 34, 59, 137, 27, 54, 53, 114, 103, 26, 253, 69, 8, 249, 216, 134, 85, 21, 56, 51, 43, 115, 217, 163, 104, 33, 32, 43, 168, 69, 102, 42, 78, 19, 85, 8, 217, 59, 52, 90, 151, 131, 227, 151, 198, 24, 175, 109, 66, 72, 16, 198, 215, 83, 16, 195, 69, 158, 33, 163, 227, 90, 154, 190, 179, 36, 218, 207, 56, 29, 81, 44, 151, 113, 235, 252, 65, 35, 209, 201, 237, 76, 247, 49, 198, 21, 211, 100, 50, 194, 70, 220, 92, 144, 25, 159, 67, 106, 128, 214, 162, 156, 102, 166, 204, 116, 43, 78, 248, 240, 92, 81, 254, 199, 126, 152, 242, 56, 223, 137, 49, 33, 88, 146, 25, 175, 164, 11, 236, 65, 150, 230, 120, 204, 155, 68, 178, 68, 9, 201, 85, 10, 194, 36, 53, 175, 140, 49, 189, 110, 169, 95, 43, 57, 46, 52, 236, 175, 48, 76, 122, 65, 137, 229, 52, 160, 43, 172, 88, 135, 24, 170, 125, 10, 143, 154, 83, 151, 225, 156, 185, 146, 96, 183, 147, 166, 188, 70, 137, 138, 100, 238, 234, 209, 53, 164, 40, 133, 9, 27, 151, 206, 255, 56, 76, 137, 28, 232, 237, 21, 105, 176, 46, 76, 142, 116, 120, 133, 128, 34, 132, 209, 130, 78, 119, 183, 95, 242, 24, 74, 241, 146, 8, 133, 143, 233, 145, 6, 252, 205, 79, 252, 162, 104, 191, 154, 176, 213, 133, 216, 230, 155, 223, 224, 45, 57, 30, 142, 151, 11, 227, 141, 70, 48, 141, 167, 102, 22, 181, 251, 211, 132, 235, 111, 21, 195, 5, 226, 156, 212, 201, 50, 62, 151, 80, 59, 102, 99, 196, 147, 254, 16, 224, 222, 36, 50, 187, 193, 89, 5, 142, 112, 176, 182, 164, 215, 168, 230, 215, 56, 131, 134, 148, 6, 7, 9, 139, 15, 216, 84, 75, 91, 181, 105, 71, 158, 195, 135, 218, 176, 151, 130, 163, 204, 155, 117, 113, 230, 156, 89, 52, 21, 225, 100, 120, 68, 234, 109, 70, 155, 209, 208, 55, 96, 233, 177, 2, 47, 224, 119, 244, 82, 76, 53, 173, 65, 82, 72, 139, 99, 216, 160, 168, 108, 231, 61, 153, 32, 10, 117, 11, 21, 235, 203, 220, 79, 38, 3, 70, 221, 39, 81, 1, 111, 190, 134, 9, 85, 42, 87, 72, 64, 97, 175, 141, 116, 60, 61, 129, 74, 184, 60, 226, 196, 76, 66, 220, 127, 151, 35, 235, 205, 111, 6, 168, 192, 210, 223, 79, 59, 101, 76, 229, 68, 64, 64, 64, 160, 48, 29, 86, 128, 217, 240, 2, 130, 122, 238, 96, 151, 85, 193, 140, 83, 111, 6, 231, 152, 211, 204, 178, 206, 206, 180, 56, 245, 231, 179, 184, 200, 119, 250, 236, 89, 121, 63, 140, 218, 203, 177, 236, 237, 154, 247, 160, 178, 145, 96, 97, 214, 17, 192, 63, 187, 167, 14, 203, 152, 26, 32, 128, 219, 249, 172, 175, 43, 170, 58, 186, 128, 193, 37, 191, 26, 195, 133, 198, 228, 180, 5, 195, 10, 97, 145, 139, 173, 121, 157, 104, 25, 54, 103, 12, 76, 192, 210, 211, 44, 194, 6, 153, 30, 201, 7, 86, 146, 60, 11, 58, 86, 167, 136, 104, 232, 139, 253, 45, 107, 161, 7, 108, 218, 189, 68, 159, 187, 142, 210, 110, 245, 230, 228, 227, 227, 28, 46, 112, 235, 251, 39, 179, 217, 98, 172, 175, 54, 86, 180, 39, 16, 96, 179, 232, 248, 165, 202, 214, 160, 91, 153, 168, 58, 44, 179, 136, 190, 79, 73, 142, 154, 234, 157, 3, 214, 84, 227, 16, 113, 219, 150, 82, 138, 1, 21, 247, 110, 163, 15, 166, 57, 51, 94, 154, 89, 229, 150, 186, 150, 144, 255, 106, 43, 58, 54, 222, 1, 24, 45, 183, 205, 72, 128, 89, 75, 249, 221, 113, 210, 192, 76, 194, 206, 155, 31, 127, 34, 184, 2, 58, 114, 84, 38, 21, 119, 128, 147, 193, 134, 204, 137, 106, 153, 212, 169, 98, 14, 117, 188, 191, 101, 231, 69, 65, 233, 215, 142, 155, 25, 93, 66, 243, 246, 49, 83, 119, 56, 187, 31, 187, 89, 224, 151, 134, 52, 217, 32, 51, 236, 238, 221, 61, 243, 226, 172, 201, 249, 15, 222, 239, 240, 207, 78, 255, 84, 90, 26, 107, 91, 219, 35, 137, 14, 82, 192, 123, 4, 166, 193, 145, 167, 64, 205, 41, 5, 180, 46, 24, 94, 99, 181, 31, 99, 100, 74, 18, 248, 53, 15, 107, 4, 134, 167, 148, 107, 48, 114, 126, 107, 199, 208, 199, 165, 61, 220, 137, 255, 162, 9, 66, 119, 159, 50, 208, 106, 24, 129, 206, 187, 129, 142, 245, 39, 151, 156, 0, 236, 110, 10, 254, 135, 22, 227, 255, 141, 78, 43, 71, 180, 45, 224, 205, 67, 190, 25, 92, 196, 212, 99, 95, 43, 186, 221, 176, 211, 235, 213, 112, 36, 255, 133, 247, 132, 225, 106, 78, 162, 10, 21, 132, 179, 93, 27, 155, 104, 97, 62, 112, 165, 139, 208, 72, 4, 38, 77, 73, 218, 126, 194, 96, 217, 44, 215, 75, 29, 119, 193, 10, 220, 174, 74, 97, 207, 118, 84, 83, 5, 132, 33, 251, 121, 167, 36, 207, 103, 147, 163, 83, 38, 168, 61, 213, 134, 230, 186, 41, 250, 21, 11, 54, 252, 60, 234, 173, 13, 18, 119, 180, 77, 189, 60, 145, 131, 229, 88, 50, 114, 197, 107, 163, 213, 89, 83, 78, 127, 184, 251, 254, 188, 30, 214, 247, 120, 102, 151, 253, 108, 98, 252, 58, 207, 92, 83, 78, 33, 224, 69, 210, 186, 160, 226, 53, 2, 100, 205, 208, 8, 44, 2, 232, 51, 235, 192, 133, 178, 4, 114, 200, 123, 244, 175, 77, 249, 193, 186, 45, 221, 24, 248, 74, 15, 190, 87, 137, 193, 161, 118, 192, 95, 163, 26, 39, 73, 233, 241, 154, 118, 26, 167, 18, 14, 53, 219, 42, 113, 3, 226, 185, 99, 65, 50, 19, 42, 113, 188, 3, 74, 189, 35, 74, 208, 139, 141, 64, 232, 243, 162, 194, 171, 21, 210, 183, 77, 153, 86, 27, 71, 10, 191, 87, 58, 222, 178, 15, 78, 34, 194, 113, 120, 182, 177, 148, 86, 98, 88, 164, 199, 142, 104, 88, 41, 37, 133, 96, 132, 127, 17, 79, 119, 242, 242, 91, 1, 59, 224, 186, 73, 174, 116, 102, 73, 79, 175, 10, 108, 216, 198, 244, 235, 157, 215, 69, 141, 105, 204, 203, 70, 54, 68, 78, 69, 181, 172, 188, 186, 160, 207, 131, 113, 102, 84, 163, 149, 184, 34, 231, 186, 145, 82, 165, 193, 115, 49, 232, 98, 110, 77, 143, 131, 154, 247, 235, 34, 126, 241, 152, 104, 226, 87, 81, 164, 46, 38, 3, 255, 142, 0, 219, 132, 21, 214, 6, 30, 179, 94, 48, 67, 192, 157, 136, 154, 97, 11, 138, 69, 120, 147, 79, 228, 221, 186, 110, 116, 131, 234, 219, 5, 240, 226, 143, 127, 62, 49, 146, 194, 185, 249, 236, 183, 58, 175, 90, 66, 83, 107, 201, 9, 19, 42, 32, 189, 196, 113, 95, 130, 229, 124, 241, 67, 206, 230, 76, 201, 54, 78, 204, 162, 62, 229, 69, 52, 48, 34, 69, 162, 121, 241, 85, 108, 86, 80, 33, 137, 163, 172, 248, 151, 83, 156, 169, 58, 182, 31, 234, 202, 215, 107, 179, 60, 26, 127, 1, 168, 55, 39, 59, 63, 175, 1, 36, 117, 70, 222, 242, 148, 147, 149, 157, 50, 62, 104, 15, 154, 62, 248, 143, 42, 150, 67, 33, 167, 0, 132, 77, 16, 113, 21, 12, 230, 89, 36, 193, 38, 75, 250, 85, 86, 180, 77, 132, 150, 47, 103, 251, 182, 248, 226, 149, 251, 41, 75, 241, 142, 119, 47, 239, 162, 182, 207, 80, 133, 186, 28, 5, 196, 10, 251, 45, 25, 27, 17, 60, 92, 83, 171, 154, 197, 59, 108, 20, 8, 35, 86, 2, 145, 62, 26, 119, 46, 152, 161, 230, 137, 77, 113, 22, 110, 239, 113, 122, 138, 83, 255, 88, 18, 122, 139, 183, 30, 124, 159, 32, 254, 218, 82, 243, 230, 95, 133, 196, 184, 145, 0, 125, 31, 98, 67, 152, 137, 230, 29, 66, 253, 132, 212, 17, 236, 181, 185, 0, 85, 68, 67, 35, 220, 124, 176, 174, 131, 152, 28, 239, 110, 254, 137, 23, 14, 129, 158, 99, 121, 2, 199, 1, 116, 147, 187, 115, 57, 156, 49, 4, 114, 68, 100, 197, 169, 12, 8, 240, 17, 176, 154, 21, 172, 254, 232, 103, 104, 193, 156, 233, 66, 155, 97, 99, 70, 150, 43, 210, 34, 177, 104, 227, 184, 19, 130, 127, 255, 89, 25, 65, 228, 23, 248, 187, 25, 167, 235, 37, 201, 192, 251, 59, 1, 183, 221, 209, 200, 9, 224, 206, 138, 144, 213, 8, 118, 82, 128, 28, 193, 221, 52, 131, 81, 150, 121, 49, 3, 156, 84, 54, 209, 161, 183, 210, 174, 205, 207, 106, 217, 163, 80, 59, 146, 52, 156, 132, 205, 138, 208, 248, 175, 62, 254, 69, 221, 34, 199, 82, 219, 137, 104, 180, 69, 141, 11, 89, 234, 86, 99, 226, 240, 26, 107, 207, 113, 63, 18, 248, 172, 186, 114, 245, 1, 127, 233, 211, 205, 139, 129, 47, 126, 81, 117, 199, 86, 141, 186, 145, 224, 216, 211, 220, 123, 239, 224, 151, 32, 7, 118, 79, 27, 171, 255, 86, 208, 198, 121, 86, 219, 79, 192, 61, 231, 238, 28, 211, 217, 111, 70, 166, 9, 206, 9, 172, 141, 141, 162, 21, 154, 25, 160, 74, 246, 29, 62, 151, 253, 176, 103, 61, 218, 149, 103, 194, 10, 96, 98, 73, 166, 215, 160, 159, 77, 74, 32, 79, 238, 92, 205, 234, 65, 122, 196, 28, 249, 13, 42, 96, 160, 196, 240, 180, 216, 132, 155, 196, 205, 147, 108, 101, 63, 89, 93, 111, 193, 146, 225, 240, 65, 224, 61, 231, 109, 121, 15, 15, 194, 89, 150, 89, 63, 37, 89, 17, 35, 169, 114, 185, 187, 64, 176, 186, 42, 178, 96, 57, 248, 224, 176, 113, 212, 60, 220, 98, 162, 200, 252, 27, 54, 8, 68, 15, 29, 223, 127, 218, 104, 87, 58, 55, 228, 113, 195, 85, 47, 129, 221, 129, 63, 95, 13, 39, 154, 235, 48, 37, 228, 182, 5, 248, 176, 83, 142, 136, 140, 48, 100, 63, 39, 155, 118, 210, 96, 172, 141, 155, 52, 85, 152, 209, 38, 187, 206, 71, 45, 17, 248, 33, 11, 137, 132, 82, 254, 96, 169, 96, 7, 114, 52, 54, 228, 213, 125, 167, 167, 14, 156, 232, 154, 142, 39, 243, 109, 203, 141, 83, 249, 199, 59, 161, 254, 58, 40, 221, 103, 51, 76, 55, 188, 223, 161, 254, 170, 187, 222, 202, 125, 37, 158, 209, 121, 187, 133, 127, 215, 220, 73, 152, 222, 2, 216, 66, 4, 121, 231, 11, 78, 220, 150, 23, 63, 90, 171, 101, 61, 48, 153, 175, 71, 230, 15, 79, 150, 233, 208, 91, 44, 226, 32, 25, 150, 73, 154, 201, 2, 242, 27, 234, 1, 78, 174, 14, 86, 83, 67, 229, 233, 191, 244, 240, 11, 30, 190, 141, 137, 171, 104, 138, 64, 251, 122, 23, 7, 187, 47, 76, 165, 154, 108, 217, 146, 225, 10, 151, 123, 166, 195, 61, 80, 230, 18, 252, 14, 58, 160, 150, 95, 198, 122, 170, 101, 38, 157, 63, 20, 51, 91, 209, 81, 194, 124, 231, 122, 167, 103, 6, 79, 10, 185, 133, 245, 133, 99, 67, 12, 240, 217, 44, 124, 207, 224, 168, 81, 233, 103, 218, 211, 29, 80, 130, 96, 53, 118, 195, 67, 206, 7, 188, 204, 224, 202, 123, 45, 216, 12, 81, 99, 44, 57, 92, 220, 116, 154, 99, 12, 136, 71, 95, 6, 73, 32, 243, 137, 234, 34, 211, 5, 78, 118, 16, 246, 169, 200, 123, 75, 240, 190, 73, 140, 55, 236, 114, 23, 124, 16, 210, 38, 201, 59, 61, 157, 201, 4, 247, 230, 226, 215, 63, 225, 96, 68, 38, 169, 153, 198, 72, 224, 2, 213, 240, 156, 195, 237, 219, 21, 130, 71, 203, 35, 86, 185, 58, 11, 48, 126, 183, 248, 156, 15, 60, 104, 255, 29, 119, 162, 172, 20, 91, 170, 206, 215, 29, 99, 202, 113, 37, 8, 237, 109, 21, 57, 97, 155, 25, 254, 111, 129, 12, 99, 206, 49, 238, 251, 59, 140, 144, 33, 127, 93, 131, 139, 82, 117, 124, 46, 64, 47, 138, 190, 203, 245, 148, 9, 242, 95, 149, 173, 56, 91, 154, 54, 26, 50, 12, 198, 233, 229, 226, 100, 36, 66, 36, 241, 60, 74, 229, 59, 113, 244, 200, 140, 14, 104, 86, 157, 133, 110, 26, 204, 70, 45, 253, 39, 2, 17, 175, 226, 151, 151, 162, 141, 230, 10, 59, 218, 45, 104, 183, 165, 129, 68, 143, 179, 71, 113, 109, 170, 107, 60, 20, 141, 101, 71, 219, 234, 113, 192, 163, 29, 119, 163, 91, 223, 75, 254, 84, 77, 58, 127, 225, 21, 244, 180, 65, 57, 25, 33, 221, 10, 5, 3, 132, 139, 116, 115, 243, 150, 175, 165, 168, 154, 209, 242, 63, 27, 48, 162, 187, 196, 92, 66, 30, 148, 108, 138, 126, 4, 116, 130, 247, 81, 181, 120, 8, 239, 230, 163, 186, 34, 126, 104, 139, 135, 93, 79, 133, 202, 235, 31, 53, 235, 243, 224, 100, 253, 161, 248, 232, 156, 132, 74, 57, 1, 241, 235, 55, 197, 205, 58, 178, 211, 78, 73, 171, 242, 67, 165, 13, 172, 137, 87, 114, 45, 241, 196, 81, 18, 25, 175, 110, 41, 219, 169, 25, 124, 167, 162, 219, 214, 75, 100, 224, 251, 251, 24, 216, 67, 113, 120, 217, 0, 159, 157, 167, 63, 3, 3, 50, 63, 247, 236, 168, 68, 148, 36, 172, 203, 143, 70, 59, 109, 248, 171, 22, 252, 192, 188, 128, 176, 96, 200, 157, 118, 17, 65, 27, 182, 228, 118, 131, 95, 19, 183, 225, 82, 143], [77, 187, 147, 245, 19, 189, 98, 32, 203, 213, 47, 194, 143, 182, 146, 114, 183, 254, 3, 2, 164, 187, 142, 56, 166, 51, 78, 22, 101, 127, 58, 207, 232, 67, 38, 120, 213, 16, 78, 108, 56, 209, 223, 44, 62, 134, 205, 116, 136, 26, 238, 244, 115, 26, 125, 249, 80, 100, 108, 137], [110, 67, 49, 112, 119, 102, 79, 119, 52, 111, 104, 99, 98, 55, 118, 83, 81, 101, 81, 108, 106, 82, 90, 79, 116, 90, 120, 70, 65, 104, 107, 80, 99, 53, 118, 86, 112, 89, 54, 87, 50, 89, 83, 109, 55, 111, 74, 67, 57, 87, 118, 77, 100, 119, 56, 51, 101, 113, 48, 73, 121, 106, 79, 109, 79, 120, 72, 118, 75, 57, 48, 61], [105, 119, 50, 56, 79, 50, 122, 97, 106, 99, 80, 57, 43, 102, 77, 51, 122, 101, 99, 82, 71, 89, 104, 116, 101, 73, 87, 87, 80, 85, 43, 82, 76, 50, 98, 48, 54, 78, 121, 48, 88, 43, 104, 82, 84, 90, 47, 89, 98, 114, 109, 86, 48, 121, 114, 100, 78, 120, 81, 98, 73, 48, 53, 118, 110, 111, 106, 98, 65, 79, 50, 74, 107, 101, 116, 49, 109, 104, 103, 84, 54, 118, 81, 113, 89, 81, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 212, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 212, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_value: <<< res: None
update_wallet_record_tags: >>> wallet_handle: 3, type_: 'presentation_exchange_v10', id: '6be4dc23-2532-4d2d-9def-6cf78a9bfe09', tags_json: '{"thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315"}'
do_call: >>> name: indy_update_wallet_record_tags, args: (c_int(3), c_char_p(140572626314320), c_char_p(140572651913016), c_char_p(140573273285128), <CFunctionType object at 0x7fd99efcf368>)
do_call: Function indy_update_wallet_record_tags returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s2`: SELECT id FROM items WHERE type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s2 with parameters: [[110, 67, 49, 112, 119, 102, 79, 119, 52, 111, 104, 99, 98, 55, 118, 83, 81, 101, 81, 108, 106, 82, 90, 79, 116, 90, 120, 70, 65, 104, 107, 80, 99, 53, 118, 86, 112, 89, 54, 87, 50, 89, 83, 109, 55, 111, 74, 67, 57, 87, 118, 77, 100, 119, 56, 51, 101, 113, 48, 73, 121, 106, 79, 109, 79, 120, 72, 118, 75, 57, 48, 61], [105, 119, 50, 56, 79, 50, 122, 97, 106, 99, 80, 57, 43, 102, 77, 51, 122, 101, 99, 82, 71, 89, 104, 116, 101, 73, 87, 87, 80, 85, 43, 82, 76, 50, 98, 48, 54, 78, 121, 48, 88, 43, 104, 82, 84, 90, 47, 89, 98, 114, 109, 86, 48, 121, 114, 100, 78, 120, 81, 98, 73, 48, 53, 118, 110, 111, 106, 98, 65, 79, 50, 74, 107, 101, 116, 49, 109, 104, 103, 84, 54, 118, 81, 113, 89, 81, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_encrypted WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [16, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: DELETE FROM tags_plaintext WHERE item_id = $1 AND wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [16, "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s3`: INSERT INTO tags_encrypted (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s4`: INSERT INTO tags_plaintext (item_id, name, value, wallet_id) VALUES ($1, $2, $3, $4)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s3 with parameters: [16, [63, 214, 72, 222, 130, 103, 146, 158, 195, 194, 230, 74, 26, 53, 129, 230, 232, 7, 33, 137, 227, 21, 72, 88, 62, 97, 106, 31, 62, 194, 84, 80, 193, 83, 183, 11, 35], [203, 122, 98, 209, 35, 107, 95, 185, 163, 20, 194, 44, 127, 50, 93, 40, 38, 115, 156, 101, 190, 128, 191, 144, 6, 67, 134, 208, 36, 122, 117, 225, 169, 166, 168, 19, 201, 160, 59, 36, 2, 33, 211, 150, 112, 152, 3, 69, 188, 121, 60, 103, 107, 174, 105, 87, 84, 49, 15, 197, 65, 68, 117, 199], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 213, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 213, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
update_wallet_record_tags: <<< res: None
  {"msg_id": "bf319a70-160f-4bad-99ff-20aa56e2ea04", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/ack", "timestamp": 1621255695.7269797, "str_time": "2021-05-17 12:48:15.726980", "handler": "Medic", "ellapsed_milli": 86, "outcome": "PresentationAckHandler.handle.END"}
  {"msg_id": "bf319a70-160f-4bad-99ff-20aa56e2ea04", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/ack", "timestamp": 1621255695.7278595, "str_time": "2021-05-17 12:48:15.727859", "handler": "Medic", "ellapsed_milli": 105, "outcome": "Dispatcher.handle_message.END"}
  {"msg_id": "N/A", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "dict:Exchange", "timestamp": 1621255695.7289073, "str_time": "2021-05-17 12:48:15.728907", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.START.http://medic-business-logic:3010/topic/present_proof/"}
  {"msg_id": "N/A", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "traced_type": "dict:Exchange", "timestamp": 1621255695.729892, "str_time": "2021-05-17 12:48:15.729892", "handler": "Medic", "ellapsed_milli": 0, "outcome": "OutboundTransportManager.DELIVER.END.http://medic-business-logic:3010/topic/present_proof/"}
Posting to http://medic-business-logic:3010/topic/present_proof/; Data: {"presentation": {"proof": {"proofs": [{"primary_proof": {"eq_proof": {"revealed_attrs": {"dateissued": "31928709163600735441101476658814216885388252189838058973070792022801591336579", "name": "65005548905037764764502350053825769914874082648761230458670796241392891659611", "university": "57963125648994666300875361621729313351158154740138173103415020334594043694317"}, "a_prime": "87497477164085281713515336297515943429019546474313262770335421765133863845640751068882479821210108833176361422261063340793068905849363855118387211928239661741467086868245856605179886602807155159922066970565879831689722766180595360270807817576558715651422812622112772575366400694451961003420821035410411754938002622161912544531488798019344320388863245692256649083221692716790544568891085743782166444391719113693283895450797771285479050700568689004293473400512892325588549692788865838062815649569931952702341824780972708808792387532031154770405268339962911889615893319854101222033589697014500234175984542003981021812773", "e": "154048814774809203958249265530095027153254858125683001027903995570529697898875222881872697502854428674182121253100643612713560841235618320", "v": "1075056707481757685302820380549717229682054697230177771108389494064352356360402296905750567040684833964672790067363593404776554862883852716066433245646004976568123906996240484640017436844042528906492407131637814906775223635522805330540821860789570147335385926281889343075837419621936725374512911442589375005207127302660521377811911263963170082152211654863865973074551173468971302064037414991208663319657132370588732440384168336986163798963761061494469536810671296067740391464565818521832398450565394186065363034382061719577698363164227851726618301906985003377355041460420266591228887729792179577148690929889962673469164396309133902236993907580806172768372370897655397502894524941436896504481810090989727162648100833698324938043127809593602060915232870513524082714004782505194802058946770924552591021866603803125486355822467277111110567002144550965455325197736424654917084203540848249866727836219471387065903524753183092544", "m": {"master_secret": "2793697494185440264525060860231245239302026234731932628029468109408435569054206729934377817146497096671519204938276353379685637149960731633869827819226246137511338209444740904790"}, "m2": "98023185406056981757909108244610452040269911693114387930295449500518864756275015327639118257530305062150523567067133342746408412629638494814612815612658191435536476997557765123"}, "ge_proofs": []}, "non_revoc_proof": null}], "aggregated_proof": {"c_hash": "51128778298706816581010548716237320985693016689947197450663483251832695160949", "c_list": [[2, 181, 29, 16, 75, 183, 135, 189, 141, 128, 82, 129, 176, 52, 209, 164, 228, 151, 94, 134, 107, 238, 28, 182, 30, 69, 3, 97, 130, 96, 127, 94, 75, 162, 173, 246, 68, 103, 210, 73, 112, 123, 236, 91, 128, 249, 234, 45, 107, 131, 222, 144, 98, 223, 211, 194, 220, 19, 224, 206, 116, 171, 124, 249, 184, 138, 111, 79, 26, 180, 3, 104, 118, 181, 164, 12, 250, 23, 69, 182, 99, 92, 120, 150, 6, 210, 242, 126, 99, 30, 52, 117, 119, 164, 76, 122, 12, 125, 136, 2, 225, 215, 52, 219, 136, 115, 173, 141, 114, 6, 94, 226, 213, 80, 194, 171, 78, 10, 182, 166, 164, 190, 212, 55, 148, 184, 84, 58, 185, 127, 94, 206, 44, 150, 56, 29, 59, 143, 190, 226, 41, 76, 22, 66, 230, 19, 121, 19, 222, 135, 150, 7, 65, 100, 236, 219, 208, 183, 144, 95, 214, 193, 46, 190, 83, 213, 225, 118, 163, 181, 79, 86, 57, 187, 233, 213, 90, 123, 201, 43, 129, 77, 16, 70, 199, 217, 146, 108, 66, 246, 182, 197, 109, 181, 14, 132, 103, 13, 136, 47, 10, 214, 61, 136, 254, 6, 60, 56, 106, 102, 37, 163, 78, 98, 120, 151, 126, 255, 129, 185, 106, 156, 182, 186, 84, 45, 1, 74, 52, 118, 165, 153, 15, 171, 24, 31, 12, 134, 64, 98, 6, 206, 155, 29, 72, 195, 185, 120, 72, 46, 17, 66, 18, 37, 103, 24, 37]]}}, "requested_proof": {"revealed_attrs": {"0_University_uuid": {"sub_proof_index": 0, "raw": "Edinburgh Medical School", "encoded": "57963125648994666300875361621729313351158154740138173103415020334594043694317"}, "0_Name_uuid": {"sub_proof_index": 0, "raw": "Will Abramson", "encoded": "65005548905037764764502350053825769914874082648761230458670796241392891659611"}, "0_Date Issued_uuid": {"sub_proof_index": 0, "raw": "2021-05-17", "encoded": "31928709163600735441101476658814216885388252189838058973070792022801591336579"}}, "self_attested_attrs": {}, "unrevealed_attrs": {}, "predicates": {}}, "identifiers": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1", "cred_def_id": "3jnXQcj9VLFjcUbtDVZZzV:3:CL:10:default", "rev_reg_id": null, "timestamp": null}]}, "presentation_request": {"name": "Proof of Primary Medical Qualification", "version": "1.0", "requested_attributes": {"0_Name_uuid": {"name": "Name", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}, "0_University_uuid": {"name": "University", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}, "0_Date Issued_uuid": {"name": "Date Issued", "restrictions": [{"schema_id": "3jnXQcj9VLFjcUbtDVZZzV:2:Primary Medical Qualification:0.0.1"}]}}, "requested_predicates": {}, "non_revoked": {"to": 1621255549}, "nonce": "19740203311469284009343"}, "presentation_request_dict": {"@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation", "@id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "~trace": {"target": "log", "full_thread": true, "trace_reports": []}, "comment": "Please prove that you have recieved a valid PMQ", "request_presentations~attach": [{"@id": "libindy-request-presentation-0", "mime-type": "application/json", "data": {"base64": "eyJuYW1lIjogIlByb29mIG9mIFByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uIiwgInZlcnNpb24iOiAiMS4wIiwgInJlcXVlc3RlZF9hdHRyaWJ1dGVzIjogeyIwX05hbWVfdXVpZCI6IHsibmFtZSI6ICJOYW1lIiwgInJlc3RyaWN0aW9ucyI6IFt7InNjaGVtYV9pZCI6ICIzam5YUWNqOVZMRmpjVWJ0RFZaWnpWOjI6UHJpbWFyeSBNZWRpY2FsIFF1YWxpZmljYXRpb246MC4wLjEifV19LCAiMF9Vbml2ZXJzaXR5X3V1aWQiOiB7Im5hbWUiOiAiVW5pdmVyc2l0eSIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfSwgIjBfRGF0ZSBJc3N1ZWRfdXVpZCI6IHsibmFtZSI6ICJEYXRlIElzc3VlZCIsICJyZXN0cmljdGlvbnMiOiBbeyJzY2hlbWFfaWQiOiAiM2puWFFjajlWTEZqY1VidERWWlp6VjoyOlByaW1hcnkgTWVkaWNhbCBRdWFsaWZpY2F0aW9uOjAuMC4xIn1dfX0sICJyZXF1ZXN0ZWRfcHJlZGljYXRlcyI6IHt9LCAibm9uX3Jldm9rZWQiOiB7InRvIjogMTYyMTI1NTU0OX0sICJub25jZSI6ICIxOTc0MDIwMzMxMTQ2OTI4NDAwOTM0MyJ9"}}]}, "presentation_exchange_id": "6be4dc23-2532-4d2d-9def-6cf78a9bfe09", "created_at": "2021-05-17 12:46:41.793608Z", "thread_id": "c7c6f8dd-0795-41d5-b6de-cfe1038a5315", "role": "prover", "trace": true, "connection_id": "eef16ddd-5609-4e39-9915-f29a1c704a04", "initiator": "external", "state": "presentation_acked", "updated_at": "2021-05-17 12:48:15.688714Z"}; Headers: {'Content-Type': 'application/json'}
Using selector: EpollSelector
Loaded module: aries_cloudagent.protocols.out_of_band
Loaded module: aries_cloudagent.protocols.discovery
Loaded module: aries_cloudagent.protocols.basicmessage
Loaded module: aries_cloudagent.protocols.trustping
Loaded module: aries_cloudagent.protocols.connections
Loaded module: aries_cloudagent.protocols.problem_report
Loaded module: aries_cloudagent.protocols.coordinate_mediation
Loaded module: aries_cloudagent.protocols.didexchange
Loaded module: aries_cloudagent.protocols.present_proof
Loaded module: aries_cloudagent.protocols.issue_credential
Loaded module: aries_cloudagent.protocols.routing
Loaded module: aries_cloudagent.protocols.actionmenu
Loaded module: aries_cloudagent.protocols.introduction
Loaded module: aries_cloudagent.holder
Loaded module: aries_cloudagent.ledger
Loaded module: aries_cloudagent.messaging.credential_definitions
Loaded module: aries_cloudagent.messaging.schemas
Loaded module: aries_cloudagent.revocation
Loaded module: aries_cloudagent.wallet
Reading ledger genesis transactions from: /home/indy/genesis-txns
Create profile manager: indy
Checking input postgres storage_config and storage_creds arguments
Initializing postgres wallet
Success, loaded postgres wallet storage
open_wallet: >>> config: '{"id": "Medic", "freshness_time": false, "storage_type": "postgres_storage", "storage_config": {"url": "medic-wallet-db:5432", "wallet_scheme": "MultiWalletSingleTable"}}', credentials: '{"key": "MyMedicalWalletKey", "key_derivation_method": "ARGON2I_MOD", "storage_credentials": {"account": "postgres", "password": "dbpass", "admin_account": "postgres", "admin_password": "dbpass"}}'
open_wallet: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7f93f30be1d8>
do_call: >>> name: indy_open_wallet, args: (c_char_p(140273372307536), c_char_p(140273414649512), <CFunctionType object at 0x7f93f30be1d8>)
_load_cdll: >>>
_load_cdll: Detected OS name: linux
_load_cdll: Resolved libindy name is: libindy.so
_load_cdll: <<< res: <CDLL 'libindy.so', handle 5563c90b5870 at 0x7f93f30bcc50>
set_logger: >>>
do_call_sync: >>> name: indy_set_logger, args: (None, None, <CFunctionType object at 0x7f93f30be2a0>, None)
do_call_sync: <<< 0
set_logger: <<<
do_call: Function indy_open_wallet returned err: 0
do_call: <<< <Future pending>
	src/postgres_storage.rs:897 | wallet_db_name: "wallets"
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT value FROM metadata WHERE wallet_id = $1
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: ["Medic"]
_get_error_details: >>>
_get_error_details: <<< error_details: {'backtrace': '', 'message': 'Error: Wallet not found\n  Caused by: Plugin returned error\n'}
_indy_callback: >>> command_handle: 0, err , args: (0,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 0, err , args: (0,)
_indy_loop_callback: Function returned error 
_indy_loop_callback <<<
create_wallet: >>> config: '{"id": "Medic", "freshness_time": false, "storage_type": "postgres_storage", "storage_config": {"url": "medic-wallet-db:5432", "wallet_scheme": "MultiWalletSingleTable"}}', credentials: '{"key": "MyMedicalWalletKey", "key_derivation_method": "ARGON2I_MOD", "storage_credentials": {"account": "postgres", "password": "dbpass", "admin_account": "postgres", "admin_password": "dbpass"}}'
create_wallet: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7f93f30be4f8>
do_call: >>> name: indy_create_wallet, args: (c_char_p(140273372307952), c_char_p(140273414649280), <CFunctionType object at 0x7f93f30be4f8>)
do_call: Function indy_create_wallet returned err: 0
do_call: <<< <Future pending>
	src/postgres_storage.rs:867 | wallet_db_name: "wallets"
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: INSERT INTO metadata(wallet_id, value) VALUES($1, $2)
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: ["Medic", [101, 121, 74, 114, 90, 88, 108, 122, 73, 106, 112, 98, 77, 122, 77, 115, 77, 84, 85, 115, 77, 84, 65, 122, 76, 68, 73, 49, 77, 67, 119, 120, 78, 84, 73, 115, 77, 84, 99, 119, 76, 68, 85, 53, 76, 68, 77, 48, 76, 68, 73, 121, 76, 68, 69, 121, 77, 83, 119, 48, 77, 83, 119, 120, 79, 68, 89, 115, 78, 84, 77, 115, 77, 84, 77, 53, 76, 68, 103, 120, 76, 68, 77, 121, 76, 68, 69, 120, 77, 67, 119, 50, 78, 105, 119, 121, 77, 68, 85, 115, 77, 122, 85, 115, 77, 84, 99, 48, 76, 68, 85, 51, 76, 68, 73, 48, 77, 121, 119, 53, 78, 121, 119, 120, 77, 84, 65, 115, 77, 106, 65, 115, 77, 84, 103, 51, 76, 68, 85, 122, 76, 68, 69, 120, 78, 83, 119, 49, 78, 121, 119, 120, 79, 84, 65, 115, 79, 84, 99, 115, 77, 84, 73, 48, 76, 68, 69, 48, 78, 121, 119, 121, 78, 84, 65, 115, 78, 68, 103, 115, 77, 106, 69, 51, 76, 68, 69, 50, 77, 67, 119, 121, 78, 68, 73, 115, 77, 84, 103, 52, 76, 68, 89, 51, 76, 68, 69, 53, 77, 121, 119, 120, 78, 106, 65, 115, 79, 84, 65, 115, 77, 84, 85, 121, 76, 68, 69, 50, 77, 83, 119, 120, 78, 106, 85, 115, 77, 84, 73, 120, 76, 68, 73, 120, 79, 83, 119, 121, 77, 84, 77, 115, 77, 106, 65, 49, 76, 68, 99, 48, 76, 68, 69, 119, 77, 67, 119, 121, 77, 106, 85, 115, 77, 84, 99, 52, 76, 68, 73, 120, 79, 67, 119, 121, 77, 106, 89, 115, 77, 84, 69, 53, 76, 68, 69, 120, 79, 83, 119, 121, 78, 68, 103, 115, 77, 106, 107, 115, 77, 84, 99, 53, 76, 68, 73, 121, 77, 67, 119, 121, 79, 67, 119, 53, 79, 83, 119, 120, 77, 84, 73, 115, 77, 106, 85, 120, 76, 68, 99, 115, 78, 122, 73, 115, 77, 84, 81, 52, 76, 68, 73, 121, 77, 121, 119, 120, 78, 68, 85, 115, 77, 84, 73, 48, 76, 68, 85, 49, 76, 68, 69, 120, 77, 83, 119, 120, 78, 68, 73, 115, 78, 84, 89, 115, 77, 84, 77, 120, 76, 68, 69, 121, 77, 105, 119, 51, 76, 68, 69, 120, 77, 105, 119, 50, 78, 105, 119, 53, 79, 83, 119, 49, 77, 83, 119, 48, 78, 83, 119, 121, 78, 67, 119, 48, 77, 121, 119, 120, 77, 68, 69, 115, 77, 84, 103, 120, 76, 68, 77, 48, 76, 68, 69, 53, 77, 121, 119, 120, 78, 68, 81, 115, 78, 84, 81, 115, 77, 84, 89, 52, 76, 68, 69, 120, 76, 68, 81, 51, 76, 68, 73, 119, 76, 68, 69, 48, 76, 68, 73, 49, 77, 83, 119, 120, 79, 84, 89, 115, 77, 84, 73, 115, 79, 83, 119, 53, 78, 83, 119, 120, 78, 106, 99, 115, 77, 84, 89, 121, 76, 68, 73, 122, 76, 68, 69, 48, 78, 67, 119, 120, 78, 122, 99, 115, 77, 84, 81, 52, 76, 68, 99, 52, 76, 68, 69, 48, 78, 83, 119, 120, 78, 68, 65, 115, 77, 84, 77, 122, 76, 68, 73, 119, 76, 68, 89, 119, 76, 68, 69, 122, 77, 121, 119, 121, 77, 84, 107, 115, 77, 84, 89, 51, 76, 68, 69, 121, 78, 121, 119, 122, 78, 105, 119, 50, 77, 67, 119, 48, 79, 67, 119, 120, 79, 68, 69, 115, 77, 84, 81, 120, 76, 68, 99, 53, 76, 68, 69, 52, 79, 67, 119, 120, 78, 106, 65, 115, 78, 122, 99, 115, 77, 84, 65, 49, 76, 68, 85, 119, 76, 68, 73, 119, 76, 68, 81, 115, 77, 106, 77, 53, 76, 68, 73, 50, 76, 68, 69, 122, 78, 105, 119, 120, 77, 122, 69, 115, 77, 106, 85, 115, 77, 84, 107, 51, 76, 68, 103, 50, 76, 68, 73, 48, 77, 105, 119, 49, 76, 68, 73, 48, 77, 121, 119, 122, 78, 67, 119, 120, 77, 84, 107, 115, 77, 84, 103, 52, 76, 68, 73, 122, 79, 83, 119, 122, 78, 105, 119, 120, 77, 122, 103, 115, 77, 106, 81, 122, 76, 68, 69, 53, 78, 67, 119, 121, 77, 84, 69, 115, 77, 84, 99, 120, 76, 68, 69, 49, 78, 67, 119, 120, 77, 84, 107, 115, 78, 106, 69, 115, 77, 106, 77, 115, 77, 106, 65, 119, 76, 68, 69, 122, 76, 68, 69, 122, 77, 67, 119, 120, 77, 122, 77, 115, 77, 84, 73, 53, 76, 68, 69, 121, 78, 105, 119, 120, 78, 122, 73, 115, 77, 84, 89, 50, 76, 68, 69, 49, 78, 83, 119, 49, 79, 67, 119, 122, 78, 83, 119, 121, 78, 84, 81, 115, 78, 106, 107, 115, 78, 84, 85, 115, 77, 106, 69, 48, 76, 68, 69, 120, 78, 67, 119, 121, 77, 68, 77, 115, 77, 106, 81, 115, 77, 84, 69, 122, 76, 68, 89, 121, 76, 68, 73, 120, 78, 121, 119, 122, 78, 83, 119, 52, 78, 83, 119, 120, 78, 122, 99, 115, 79, 67, 119, 120, 77, 84, 85, 115, 77, 84, 85, 115, 78, 106, 85, 115, 77, 106, 81, 115, 78, 122, 85, 115, 77, 106, 73, 48, 76, 68, 69, 51, 77, 67, 119, 53, 78, 121, 119, 121, 78, 68, 103, 115, 78, 84, 81, 115, 78, 68, 77, 115, 77, 84, 77, 50, 76, 68, 89, 51, 76, 68, 69, 50, 78, 67, 119, 53, 77, 105, 119, 120, 77, 68, 89, 115, 77, 84, 99, 51, 76, 68, 85, 120, 76, 68, 69, 51, 77, 67, 119, 53, 78, 67, 119, 121, 77, 106, 85, 115, 77, 84, 81, 121, 76, 68, 73, 120, 79, 83, 119, 121, 77, 122, 81, 115, 79, 84, 99, 115, 77, 106, 69, 49, 76, 68, 73, 48, 79, 67, 119, 50, 78, 83, 119, 122, 78, 105, 119, 122, 78, 67, 119, 121, 77, 83, 119, 120, 78, 122, 107, 115, 77, 122, 107, 115, 77, 84, 69, 120, 76, 68, 107, 121, 76, 68, 69, 50, 78, 105, 119, 48, 79, 83, 119, 120, 77, 122, 107, 115, 77, 106, 85, 122, 76, 68, 73, 49, 78, 67, 119, 121, 77, 68, 85, 115, 78, 68, 85, 115, 77, 106, 73, 120, 76, 68, 69, 53, 79, 67, 119, 121, 77, 106, 81, 115, 78, 122, 107, 115, 77, 84, 103, 120, 76, 68, 81, 53, 76, 68, 69, 49, 77, 105, 119, 121, 78, 68, 65, 115, 77, 84, 89, 119, 76, 68, 69, 51, 76, 68, 69, 120, 76, 68, 103, 115, 78, 106, 69, 115, 77, 106, 73, 121, 76, 68, 77, 50, 76, 68, 73, 119, 77, 121, 119, 121, 77, 122, 89, 115, 77, 106, 81, 49, 76, 68, 73, 122, 78, 121, 119, 120, 79, 68, 73, 115, 77, 106, 81, 121, 76, 68, 77, 52, 76, 68, 77, 121, 76, 68, 85, 51, 76, 68, 81, 51, 76, 68, 69, 51, 79, 67, 119, 48, 77, 105, 119, 120, 78, 122, 85, 115, 77, 84, 99, 53, 76, 68, 69, 53, 78, 67, 119, 52, 78, 83, 119, 121, 77, 68, 103, 115, 77, 84, 65, 122, 76, 68, 69, 48, 78, 105, 119, 50, 78, 121, 119, 121, 77, 68, 81, 115, 77, 106, 69, 115, 77, 122, 73, 115, 78, 68, 89, 115, 78, 122, 77, 115, 77, 106, 69, 121, 76, 68, 73, 119, 76, 68, 103, 49, 76, 68, 99, 122, 88, 83, 119, 105, 98, 87, 70, 122, 100, 71, 86, 121, 88, 50, 116, 108, 101, 86, 57, 122, 89, 87, 120, 48, 73, 106, 112, 98, 77, 106, 89, 115, 77, 84, 81, 53, 76, 68, 73, 120, 78, 121, 119, 120, 77, 122, 103, 115, 77, 122, 99, 115, 77, 106, 81, 121, 76, 68, 85, 48, 76, 68, 81, 115, 77, 105, 119, 121, 77, 68, 73, 115, 77, 106, 73, 121, 76, 68, 69, 119, 77, 83, 119, 120, 77, 122, 77, 115, 77, 106, 69, 115, 79, 68, 89, 115, 77, 84, 103, 120, 76, 68, 73, 121, 78, 83, 119, 120, 78, 84, 89, 115, 77, 106, 65, 120, 76, 68, 69, 48, 78, 105, 119, 52, 77, 105, 119, 52, 79, 67, 119, 120, 77, 84, 107, 115, 77, 106, 81, 51, 76, 68, 69, 122, 79, 83, 119, 120, 78, 68, 103, 115, 78, 68, 107, 115, 78, 68, 103, 115, 77, 84, 65, 122, 76, 68, 69, 119, 79, 67, 119, 121, 77, 68, 73, 115, 77, 106, 81, 121, 88, 88, 48, 61]]
_indy_callback: >>> command_handle: 1, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 1, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
create_wallet: <<<
open_wallet: >>> config: '{"id": "Medic", "freshness_time": false, "storage_type": "postgres_storage", "storage_config": {"url": "medic-wallet-db:5432", "wallet_scheme": "MultiWalletSingleTable"}}', credentials: '{"key": "MyMedicalWalletKey", "key_derivation_method": "ARGON2I_MOD", "storage_credentials": {"account": "postgres", "password": "dbpass", "admin_account": "postgres", "admin_password": "dbpass"}}'
do_call: >>> name: indy_open_wallet, args: (c_char_p(140273372307952), c_char_p(140273414649280), <CFunctionType object at 0x7f93f30be1d8>)
do_call: Function indy_open_wallet returned err: 0
do_call: <<< <Future pending>
	src/postgres_storage.rs:897 | wallet_db_name: "wallets"
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT value FROM metadata WHERE wallet_id = $1
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: ["Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT value FROM metadata WHERE wallet_id = $1
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: ["Medic"]
_indy_callback: >>> command_handle: 2, err , args: (3,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 2, err , args: (3,)
_indy_loop_callback: Function returned 3
_indy_loop_callback <<<
open_wallet: <<< res: 3
Creating master secret...
prover_create_master_secret: >>> wallet_handle: 3, master_secret_name: 'Medic'
prover_create_master_secret: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7f93f30be688>
do_call: >>> name: indy_prover_create_master_secret, args: (c_int(3), c_char_p(140273414586968), <CFunctionType object at 0x7f93f30be688>)
do_call: Function indy_prover_create_master_secret returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT id, value, key FROM items where type = $1 AND name = $2 AND wallet_id = $3
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[114, 53, 52, 68, 100, 87, 73, 56, 111, 68, 103, 97, 119, 43, 122, 86, 56, 65, 86, 54, 70, 43, 72, 102, 55, 88, 48, 99, 99, 118, 57, 47, 66, 47, 66, 98, 106, 71, 115, 101, 104, 112, 70, 76, 43, 102, 47, 107, 57, 104, 57, 72, 81, 68, 71, 117, 78, 108, 47, 53, 107, 119, 61, 61], [89, 101, 56, 83, 49, 48, 104, 50, 115, 74, 55, 105, 109, 48, 110, 109, 54, 73, 122, 108, 88, 104, 54, 73, 69, 54, 109, 52, 80, 119, 105, 106, 100, 79, 109, 99, 114, 114, 72, 98, 109, 51, 100, 80], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: START TRANSACTION
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: INSERT INTO items (type, name, value, key, wallet_id) VALUES ($1, $2, $3, $4, $5) RETURNING id
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[114, 53, 52, 68, 100, 87, 73, 56, 111, 68, 103, 97, 119, 43, 122, 86, 56, 65, 86, 54, 70, 43, 72, 102, 55, 88, 48, 99, 99, 118, 57, 47, 66, 47, 66, 98, 106, 71, 115, 101, 104, 112, 70, 76, 43, 102, 47, 107, 57, 104, 57, 72, 81, 68, 71, 117, 78, 108, 47, 53, 107, 119, 61, 61], [89, 101, 56, 83, 49, 48, 104, 50, 115, 74, 55, 105, 109, 48, 110, 109, 54, 73, 122, 108, 88, 104, 54, 73, 69, 54, 109, 52, 80, 119, 105, 106, 100, 79, 109, 99, 114, 114, 72, 98, 109, 51, 100, 80], [161, 200, 201, 170, 42, 187, 39, 25, 239, 82, 16, 89, 126, 46, 90, 225, 137, 3, 82, 241, 78, 17, 243, 195, 109, 242, 202, 113, 80, 149, 223, 30, 25, 187, 71, 37, 155, 15, 225, 77, 229, 234, 235, 174, 66, 126, 228, 175, 107, 189, 83, 148, 236, 70, 193, 107, 184, 238, 221, 67, 246, 91, 145, 112, 254, 23, 21, 33, 53, 55, 145, 165, 67, 193, 122, 11, 25, 252, 103, 250, 231, 232, 198, 200, 219, 169, 192, 125, 216, 248, 65, 83, 3, 196, 154, 187, 207, 192, 157, 167, 208, 138, 66, 224, 229, 135, 112, 65, 27, 172, 96, 242, 169, 30, 111, 25, 11, 74, 106, 64, 111, 64, 222, 249, 10], [131, 136, 246, 121, 251, 215, 128, 11, 216, 216, 48, 157, 145, 37, 60, 29, 44, 52, 131, 200, 153, 69, 191, 168, 135, 4, 68, 131, 30, 104, 120, 81, 8, 42, 91, 145, 194, 92, 155, 12, 72, 57, 226, 224, 113, 38, 205, 247, 57, 241, 157, 3, 69, 88, 49, 63, 99, 30, 239, 171], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: COMMIT
_indy_callback: >>> command_handle: 3, err , args: (b'Medic',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 3, err , args: (b'Medic',)
_indy_loop_callback: Function returned b'Medic'
_indy_loop_callback <<<
prover_create_master_secret: <<< res: 'Medic'
list_my_dids_with_meta: >>> wallet_handle: 3
list_my_dids_with_meta: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7f93f30be818>
do_call: >>> name: indy_list_my_dids_with_meta, args: (c_int(3), <CFunctionType object at 0x7f93f30be818>)
do_call: Function indy_list_my_dids_with_meta returned err: 0
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[86, 116, 73, 79, 116, 109, 54, 97, 100, 66, 70, 87, 105, 75, 117, 83, 105, 102, 73, 75, 104, 48, 117, 54, 116, 65, 51, 71, 99, 51, 121, 109, 71, 115, 106, 82, 84, 119, 115, 101, 108, 119, 56, 74, 98, 114, 79, 108, 113, 119, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s0`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s0 with parameters: [[86, 116, 73, 79, 116, 109, 54, 97, 100, 66, 70, 87, 105, 75, 117, 83, 105, 102, 73, 75, 104, 48, 117, 54, 116, 65, 51, 71, 99, 51, 121, 109, 71, 115, 106, 82, 84, 119, 115, 101, 108, 119, 56, 74, 98, 114, 79, 108, 113, 119, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[75, 67, 83, 55, 73, 88, 86, 43, 109, 49, 50, 51, 103, 83, 113, 76, 57, 66, 78, 81, 121, 79, 103, 85, 72, 98, 100, 112, 84, 71, 84, 118, 81, 90, 105, 103, 122, 122, 100, 78, 52, 57, 119, 90, 47, 50, 87, 113, 110, 53, 118, 72, 121, 103, 90, 102, 83, 70, 115, 65], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [[75, 67, 83, 55, 73, 88, 86, 43, 109, 49, 50, 51, 103, 83, 113, 76, 57, 66, 78, 81, 121, 79, 103, 85, 72, 98, 100, 112, 84, 71, 84, 118, 81, 90, 105, 103, 122, 122, 100, 78, 52, 57, 119, 90, 47, 50, 87, 113, 110, 53, 118, 72, 121, 103, 90, 102, 83, 70, 115, 65], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[56, 105, 116, 99, 111, 47, 89, 100, 105, 97, 107, 53, 52, 87, 104, 107, 80, 100, 74, 82, 75, 49, 100, 85, 55, 55, 43, 114, 76, 67, 115, 103, 80, 112, 84, 114, 104, 57, 100, 99, 75, 89, 109, 121, 79, 101, 75, 111, 111, 55, 67, 55, 89, 120, 84, 102, 109, 43, 47, 71, 43, 103, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s1`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s1 with parameters: [[56, 105, 116, 99, 111, 47, 89, 100, 105, 97, 107, 53, 52, 87, 104, 107, 80, 100, 74, 82, 75, 49, 100, 85, 55, 55, 43, 114, 76, 67, 115, 103, 80, 112, 84, 114, 104, 57, 100, 99, 75, 89, 109, 121, 79, 101, 75, 111, 111, 55, 67, 55, 89, 120, 84, 102, 109, 43, 47, 71, 43, 103, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 4, err , args: (b'[]',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 4, err , args: (b'[]',)
_indy_loop_callback: Function returned b'[]'
_indy_loop_callback <<<
list_my_dids_with_meta: <<< res: '[]'
Opening the pool ledger
list_pools: >>> 
list_pools: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7f93f30be9a8>
do_call: >>> name: indy_list_pools, args: (<CFunctionType object at 0x7f93f30be9a8>,)
do_call: Function indy_list_pools returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 5, err , args: (b'[]',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 5, err , args: (b'[]',)
_indy_loop_callback: Function returned b'[]'
_indy_loop_callback <<<
list_pools: <<< res: []
Creating pool ledger config
create_pool_ledger_config: >>> config_name: 'default', config: '{"genesis_txn": "/tmp/default_indy_genesis_transactions.txt"}'
create_pool_ledger_config: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7f93f30bec00>
do_call: >>> name: indy_create_pool_ledger_config, args: (c_char_p(140273414587048), c_char_p(140273414675824), <CFunctionType object at 0x7f93f30bec00>)
_indy_callback: >>> command_handle: 6, err , args: ()
_indy_callback: <<<
do_call: Function indy_create_pool_ledger_config returned err: 0
do_call: <<< <Future pending>
_indy_loop_callback: >>> command_handle: 6, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
create_pool_ledger_config: <<< res: None
set_protocol_version: >>> protocol_version: 2
set_protocol_version: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7f93f30bee58>
do_call: >>> name: indy_set_protocol_version, args: (2, <CFunctionType object at 0x7f93f30bee58>)
do_call: Function indy_set_protocol_version returned err: 0
_indy_callback: >>> command_handle: 7, err , args: ()
do_call: <<< <Future pending>
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 7, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
set_protocol_version: <<< res: None
open_pool_ledger: >>> config_name: 'default', config: '{}'
open_pool_ledger: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7f93f0890048>
do_call: >>> name: indy_open_pool_ledger, args: (c_char_p(140273414588008), c_char_p(140273414587048), <CFunctionType object at 0x7f93f0890048>)
do_call: Function indy_open_pool_ledger returned err: 0
do_call: <<< <Future pending>
	src/commands/pool.rs:75 | OpenAck handle 4, pool_id 4, result Ok(())
_indy_callback: >>> command_handle: 8, err , args: (4,)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 8, err , args: (4,)
_indy_loop_callback: Function returned 4
_indy_loop_callback <<<
open_pool_ledger: <<< res: 4
list_my_dids_with_meta: >>> wallet_handle: 3
do_call: >>> name: indy_list_my_dids_with_meta, args: (c_int(3), <CFunctionType object at 0x7f93f30be818>)
do_call: Function indy_list_my_dids_with_meta returned err: 0
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
do_call: <<< <Future pending>
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[86, 116, 73, 79, 116, 109, 54, 97, 100, 66, 70, 87, 105, 75, 117, 83, 105, 102, 73, 75, 104, 48, 117, 54, 116, 65, 51, 71, 99, 51, 121, 109, 71, 115, 106, 82, 84, 119, 115, 101, 108, 119, 56, 74, 98, 114, 79, 108, 113, 119, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s2`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s2 with parameters: [[86, 116, 73, 79, 116, 109, 54, 97, 100, 66, 70, 87, 105, 75, 117, 83, 105, 102, 73, 75, 104, 48, 117, 54, 116, 65, 51, 71, 99, 51, 121, 109, 71, 115, 106, 82, 84, 119, 115, 101, 108, 119, 56, 74, 98, 114, 79, 108, 113, 119, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[75, 67, 83, 55, 73, 88, 86, 43, 109, 49, 50, 51, 103, 83, 113, 76, 57, 66, 78, 81, 121, 79, 103, 85, 72, 98, 100, 112, 84, 71, 84, 118, 81, 90, 105, 103, 122, 122, 100, 78, 52, 57, 119, 90, 47, 50, 87, 113, 110, 53, 118, 72, 121, 103, 90, 102, 83, 70, 115, 65], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s2`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s2 with parameters: [[75, 67, 83, 55, 73, 88, 86, 43, 109, 49, 50, 51, 103, 83, 113, 76, 57, 66, 78, 81, 121, 79, 103, 85, 72, 98, 100, 112, 84, 71, 84, 118, 81, 90, 105, 103, 122, 122, 100, 78, 52, 57, 119, 90, 47, 50, 87, 113, 110, 53, 118, 72, 121, 103, 90, 102, 83, 70, 115, 65], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name ``: SELECT count(*) FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement  with parameters: [[56, 105, 116, 99, 111, 47, 89, 100, 105, 97, 107, 53, 52, 87, 104, 107, 80, 100, 74, 82, 75, 49, 100, 85, 55, 55, 43, 114, 76, 67, 115, 103, 80, 112, 84, 114, 104, 57, 100, 99, 75, 89, 109, 121, 79, 101, 75, 111, 111, 55, 67, 55, 89, 120, 84, 102, 109, 43, 47, 71, 43, 103, 61, 61], "Medic"]
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:901 | executing query: 
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:489 | preparing query with name `s3`: SELECT i.id, i.name, i.value, i.key, i.type FROM items as i WHERE i.type = $1 AND i.wallet_id = $2
	/home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/postgres-0.15.2/src/lib.rs:608 | executing statement s3 with parameters: [[56, 105, 116, 99, 111, 47, 89, 100, 105, 97, 107, 53, 52, 87, 104, 107, 80, 100, 74, 82, 75, 49, 100, 85, 55, 55, 43, 114, 76, 67, 115, 103, 80, 112, 84, 114, 104, 57, 100, 99, 75, 89, 109, 121, 79, 101, 75, 111, 111, 55, 67, 55, 89, 120, 84, 102, 109, 43, 47, 71, 43, 103, 61, 61], "Medic"]
_indy_callback: >>> command_handle: 9, err , args: (b'[]',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 9, err , args: (b'[]',)
_indy_loop_callback: Function returned b'[]'
_indy_loop_callback <<<
list_my_dids_with_meta: <<< res: '[]'
build_get_acceptance_mechanisms_request: >>> submitter_did: None, timestamp: None, version: None
build_get_acceptance_mechanisms_request: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7f93f08901d8>
do_call: >>> name: indy_build_get_acceptance_mechanisms_request, args: (None, c_long(-1), None, <CFunctionType object at 0x7f93f08901d8>)
do_call: Function indy_build_get_acceptance_mechanisms_request returned err: 0
	src/services/ledger/mod.rs:449 | build_get_acceptance_mechanisms_request() => Ok("{\"reqId\":1621523684219060636,\"identifier\":\"LibindyDid111111111111\",\"operation\":{\"type\":\"7\"},\"protocolVersion\":2}")
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 10, err , args: (b'{"reqId":1621523684219060636,"identifier":"LibindyDid111111111111","operation":{"type":"7"},"protocolVersion":2}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 10, err , args: (b'{"reqId":1621523684219060636,"identifier":"LibindyDid111111111111","operation":{"type":"7"},"protocolVersion":2}',)
_indy_loop_callback: Function returned b'{"reqId":1621523684219060636,"identifier":"LibindyDid111111111111","operation":{"type":"7"},"protocolVersion":2}'
_indy_loop_callback <<<
build_get_acceptance_mechanisms_request: <<< res: '{"reqId":1621523684219060636,"identifier":"LibindyDid111111111111","operation":{"type":"7"},"protocolVersion":2}'
submit_request: >>> pool_handle: 4, request_json: '{"reqId":1621523684219060636,"identifier":"LibindyDid111111111111","operation":{"type":"7"},"protocolVersion":2}'
submit_request: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7f93f0890368>
do_call: >>> name: indy_submit_request, args: (c_int(4), c_char_p(140273414641520), <CFunctionType object at 0x7f93f0890368>)
do_call: Function indy_submit_request returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 11, err , args: (b'{"op":"REPLY","result":{"type":"7","data":null,"identifier":"LibindyDid111111111111","reqId":1621523684219060636,"seqNo":null,"txnTime":null,"state_proof":{"root_hash":"DfNLmH4DAHTKv63YPFJzuRdeEtVwF5RtVnvKYHd8iLEA","multi_signature":{"signature":"R27NL74ZFLmDN5eSf3BUAzwcF43fRwwM3Ndrug9XBmYUzww7ar5MCCcNTU6HmmcaBM1kWkoAmcazpS1mTBWvxQtt3ziQTkEX74XmtnkGXuCdE35GvxpqJMsecTxRCu66JyKp5NNKxdNewsdCNzzaEVQ8CdrcJ6tvueGFDjT7hfUSsH","participants":["Node2","Node3","Node4"],"value":{"ledger_id":2,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"DfNLmH4DAHTKv63YPFJzuRdeEtVwF5RtVnvKYHd8iLEA","timestamp":1621523478,"txn_root_hash":"GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn"}},"proof_nodes":"wYA="}}}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 11, err , args: (b'{"op":"REPLY","result":{"type":"7","data":null,"identifier":"LibindyDid111111111111","reqId":1621523684219060636,"seqNo":null,"txnTime":null,"state_proof":{"root_hash":"DfNLmH4DAHTKv63YPFJzuRdeEtVwF5RtVnvKYHd8iLEA","multi_signature":{"signature":"R27NL74ZFLmDN5eSf3BUAzwcF43fRwwM3Ndrug9XBmYUzww7ar5MCCcNTU6HmmcaBM1kWkoAmcazpS1mTBWvxQtt3ziQTkEX74XmtnkGXuCdE35GvxpqJMsecTxRCu66JyKp5NNKxdNewsdCNzzaEVQ8CdrcJ6tvueGFDjT7hfUSsH","participants":["Node2","Node3","Node4"],"value":{"ledger_id":2,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"DfNLmH4DAHTKv63YPFJzuRdeEtVwF5RtVnvKYHd8iLEA","timestamp":1621523478,"txn_root_hash":"GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn"}},"proof_nodes":"wYA="}}}',)
_indy_loop_callback: Function returned b'{"op":"REPLY","result":{"type":"7","data":null,"identifier":"LibindyDid111111111111","reqId":1621523684219060636,"seqNo":null,"txnTime":null,"state_proof":{"root_hash":"DfNLmH4DAHTKv63YPFJzuRdeEtVwF5RtVnvKYHd8iLEA","multi_signature":{"signature":"R27NL74ZFLmDN5eSf3BUAzwcF43fRwwM3Ndrug9XBmYUzww7ar5MCCcNTU6HmmcaBM1kWkoAmcazpS1mTBWvxQtt3ziQTkEX74XmtnkGXuCdE35GvxpqJMsecTxRCu66JyKp5NNKxdNewsdCNzzaEVQ8CdrcJ6tvueGFDjT7hfUSsH","participants":["Node2","Node3","Node4"],"value":{"ledger_id":2,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"DfNLmH4DAHTKv63YPFJzuRdeEtVwF5RtVnvKYHd8iLEA","timestamp":1621523478,"txn_root_hash":"GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn"}},"proof_nodes":"wYA="}}}'
_indy_loop_callback <<<
submit_request: <<< res: '{"op":"REPLY","result":{"type":"7","data":null,"identifier":"LibindyDid111111111111","reqId":1621523684219060636,"seqNo":null,"txnTime":null,"state_proof":{"root_hash":"DfNLmH4DAHTKv63YPFJzuRdeEtVwF5RtVnvKYHd8iLEA","multi_signature":{"signature":"R27NL74ZFLmDN5eSf3BUAzwcF43fRwwM3Ndrug9XBmYUzww7ar5MCCcNTU6HmmcaBM1kWkoAmcazpS1mTBWvxQtt3ziQTkEX74XmtnkGXuCdE35GvxpqJMsecTxRCu66JyKp5NNKxdNewsdCNzzaEVQ8CdrcJ6tvueGFDjT7hfUSsH","participants":["Node2","Node3","Node4"],"value":{"ledger_id":2,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"DfNLmH4DAHTKv63YPFJzuRdeEtVwF5RtVnvKYHd8iLEA","timestamp":1621523478,"txn_root_hash":"GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn"}},"proof_nodes":"wYA="}}}'
build_get_txn_author_agreement_request: >>> submitter_did: None, data: None
build_get_txn_author_agreement_request: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7f93f08904f8>
do_call: >>> name: indy_build_get_txn_author_agreement_request, args: (None, None, <CFunctionType object at 0x7f93f08904f8>)
do_call: Function indy_build_get_txn_author_agreement_request returned err: 0
	src/services/ledger/mod.rs:439 | build_get_txn_author_agreement_request() => Ok("{\"reqId\":1621523684235364560,\"identifier\":\"LibindyDid111111111111\",\"operation\":{\"type\":\"6\"},\"protocolVersion\":2}")
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 12, err , args: (b'{"reqId":1621523684235364560,"identifier":"LibindyDid111111111111","operation":{"type":"6"},"protocolVersion":2}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 12, err , args: (b'{"reqId":1621523684235364560,"identifier":"LibindyDid111111111111","operation":{"type":"6"},"protocolVersion":2}',)
_indy_loop_callback: Function returned b'{"reqId":1621523684235364560,"identifier":"LibindyDid111111111111","operation":{"type":"6"},"protocolVersion":2}'
_indy_loop_callback <<<
build_get_txn_author_agreement_request: <<< res: '{"reqId":1621523684235364560,"identifier":"LibindyDid111111111111","operation":{"type":"6"},"protocolVersion":2}'
submit_request: >>> pool_handle: 4, request_json: '{"reqId":1621523684235364560,"identifier":"LibindyDid111111111111","operation":{"type":"6"},"protocolVersion":2}'
do_call: >>> name: indy_submit_request, args: (c_int(4), c_char_p(140273414641824), <CFunctionType object at 0x7f93f0890368>)
do_call: Function indy_submit_request returned err: 0
do_call: <<< <Future pending>
_indy_callback: >>> command_handle: 13, err , args: (b'{"op":"REPLY","result":{"type":"6","data":null,"identifier":"LibindyDid111111111111","reqId":1621523684235364560,"seqNo":null,"txnTime":null,"state_proof":{"root_hash":"DfNLmH4DAHTKv63YPFJzuRdeEtVwF5RtVnvKYHd8iLEA","multi_signature":{"signature":"R27NL74ZFLmDN5eSf3BUAzwcF43fRwwM3Ndrug9XBmYUzww7ar5MCCcNTU6HmmcaBM1kWkoAmcazpS1mTBWvxQtt3ziQTkEX74XmtnkGXuCdE35GvxpqJMsecTxRCu66JyKp5NNKxdNewsdCNzzaEVQ8CdrcJ6tvueGFDjT7hfUSsH","participants":["Node3","Node2","Node4"],"value":{"ledger_id":2,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"DfNLmH4DAHTKv63YPFJzuRdeEtVwF5RtVnvKYHd8iLEA","timestamp":1621523478,"txn_root_hash":"GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn"}},"proof_nodes":"wYA="}}}',)
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 13, err , args: (b'{"op":"REPLY","result":{"type":"6","data":null,"identifier":"LibindyDid111111111111","reqId":1621523684235364560,"seqNo":null,"txnTime":null,"state_proof":{"root_hash":"DfNLmH4DAHTKv63YPFJzuRdeEtVwF5RtVnvKYHd8iLEA","multi_signature":{"signature":"R27NL74ZFLmDN5eSf3BUAzwcF43fRwwM3Ndrug9XBmYUzww7ar5MCCcNTU6HmmcaBM1kWkoAmcazpS1mTBWvxQtt3ziQTkEX74XmtnkGXuCdE35GvxpqJMsecTxRCu66JyKp5NNKxdNewsdCNzzaEVQ8CdrcJ6tvueGFDjT7hfUSsH","participants":["Node3","Node2","Node4"],"value":{"ledger_id":2,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"DfNLmH4DAHTKv63YPFJzuRdeEtVwF5RtVnvKYHd8iLEA","timestamp":1621523478,"txn_root_hash":"GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn"}},"proof_nodes":"wYA="}}}',)
_indy_loop_callback: Function returned b'{"op":"REPLY","result":{"type":"6","data":null,"identifier":"LibindyDid111111111111","reqId":1621523684235364560,"seqNo":null,"txnTime":null,"state_proof":{"root_hash":"DfNLmH4DAHTKv63YPFJzuRdeEtVwF5RtVnvKYHd8iLEA","multi_signature":{"signature":"R27NL74ZFLmDN5eSf3BUAzwcF43fRwwM3Ndrug9XBmYUzww7ar5MCCcNTU6HmmcaBM1kWkoAmcazpS1mTBWvxQtt3ziQTkEX74XmtnkGXuCdE35GvxpqJMsecTxRCu66JyKp5NNKxdNewsdCNzzaEVQ8CdrcJ6tvueGFDjT7hfUSsH","participants":["Node3","Node2","Node4"],"value":{"ledger_id":2,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"DfNLmH4DAHTKv63YPFJzuRdeEtVwF5RtVnvKYHd8iLEA","timestamp":1621523478,"txn_root_hash":"GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn"}},"proof_nodes":"wYA="}}}'
_indy_loop_callback <<<
submit_request: <<< res: '{"op":"REPLY","result":{"type":"6","data":null,"identifier":"LibindyDid111111111111","reqId":1621523684235364560,"seqNo":null,"txnTime":null,"state_proof":{"root_hash":"DfNLmH4DAHTKv63YPFJzuRdeEtVwF5RtVnvKYHd8iLEA","multi_signature":{"signature":"R27NL74ZFLmDN5eSf3BUAzwcF43fRwwM3Ndrug9XBmYUzww7ar5MCCcNTU6HmmcaBM1kWkoAmcazpS1mTBWvxQtt3ziQTkEX74XmtnkGXuCdE35GvxpqJMsecTxRCu66JyKp5NNKxdNewsdCNzzaEVQ8CdrcJ6tvueGFDjT7hfUSsH","participants":["Node3","Node2","Node4"],"value":{"ledger_id":2,"pool_state_root_hash":"8xwEHCkVcEA9qfBJaESpWKvtHVxUkvzJctAHfBiVhAAJ","state_root_hash":"DfNLmH4DAHTKv63YPFJzuRdeEtVwF5RtVnvKYHd8iLEA","timestamp":1621523478,"txn_root_hash":"GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn"}},"proof_nodes":"wYA="}}}'
Closing pool ledger after timeout
close_pool_ledger: >>> config_name: 4
close_pool_ledger: Creating callback
create_cb: >>> cb_type: <class 'ctypes.CFUNCTYPE.<locals>.CFunctionType'>
create_cb: <<< res: <CFunctionType object at 0x7f93e16bc8e0>
do_call: >>> name: indy_close_pool_ledger, args: (c_int(4), <CFunctionType object at 0x7f93e16bc8e0>)
do_call: Function indy_close_pool_ledger returned err: 0
	src/services/pool/pool.rs:749 | Drop started
do_call: <<< <Future pending>
	src/services/pool/pool.rs:757 | Drop wait worker
	src/services/pool/pool.rs:760 | Drop finished
_indy_callback: >>> command_handle: 14, err , args: ()
_indy_callback: <<<
_indy_loop_callback: >>> command_handle: 14, err , args: ()
_indy_loop_callback: Function returned None
_indy_loop_callback <<<
close_pool_ledger: <<< res: None
